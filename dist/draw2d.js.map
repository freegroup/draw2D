{"version":3,"file":"draw2d.js","mappings":"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","sources":["webpack://draw2d/webpack/universalModuleDefinition","webpack://draw2d/./src/lib/Class.exec.js","webpack://draw2d/./src/lib/pathfinding.exec.js","webpack://draw2d/./src/lib/raphael.exec.js","webpack://draw2d/./src/Canvas.js","webpack://draw2d/./src/Configuration.js","webpack://draw2d/./src/Connection.js","webpack://draw2d/./src/Figure.js","webpack://draw2d/./src/HeadlessCanvas.js","webpack://draw2d/./src/HybridPort.js","webpack://draw2d/./src/InputPort.js","webpack://draw2d/./src/OutputPort.js","webpack://draw2d/./src/Port.js","webpack://draw2d/./src/ResizeHandle.js","webpack://draw2d/./src/SVGFigure.js","webpack://draw2d/./src/Selection.js","webpack://draw2d/./src/SetFigure.js","webpack://draw2d/./src/VectorFigure.js","webpack://draw2d/./src/command/Command.js","webpack://draw2d/./src/command/CommandAdd.js","webpack://draw2d/./src/command/CommandAddVertex.js","webpack://draw2d/./src/command/CommandAssignFigure.js","webpack://draw2d/./src/command/CommandAttr.js","webpack://draw2d/./src/command/CommandBoundingBox.js","webpack://draw2d/./src/command/CommandCollection.js","webpack://draw2d/./src/command/CommandConnect.js","webpack://draw2d/./src/command/CommandDelete.js","webpack://draw2d/./src/command/CommandDeleteGroup.js","webpack://draw2d/./src/command/CommandGroup.js","webpack://draw2d/./src/command/CommandMove.js","webpack://draw2d/./src/command/CommandMoveConnection.js","webpack://draw2d/./src/command/CommandMoveLine.js","webpack://draw2d/./src/command/CommandMoveVertex.js","webpack://draw2d/./src/command/CommandMoveVertices.js","webpack://draw2d/./src/command/CommandReconnect.js","webpack://draw2d/./src/command/CommandRemoveVertex.js","webpack://draw2d/./src/command/CommandReplaceVertices.js","webpack://draw2d/./src/command/CommandResize.js","webpack://draw2d/./src/command/CommandRotate.js","webpack://draw2d/./src/command/CommandStack.js","webpack://draw2d/./src/command/CommandStackEvent.js","webpack://draw2d/./src/command/CommandStackEventListener.js","webpack://draw2d/./src/command/CommandType.js","webpack://draw2d/./src/command/CommandUngroup.js","webpack://draw2d/./src/decoration/connection/ArrowDecorator.js","webpack://draw2d/./src/decoration/connection/BarDecorator.js","webpack://draw2d/./src/decoration/connection/CircleDecorator.js","webpack://draw2d/./src/decoration/connection/Decorator.js","webpack://draw2d/./src/decoration/connection/DiamondDecorator.js","webpack://draw2d/./src/geo/Line.js","webpack://draw2d/./src/geo/Point.js","webpack://draw2d/./src/geo/PositionConstants.js","webpack://draw2d/./src/geo/Ray.js","webpack://draw2d/./src/geo/Rectangle.js","webpack://draw2d/./src/geo/Util.js","webpack://draw2d/./src/index.js","webpack://draw2d/./src/io/Reader.js","webpack://draw2d/./src/io/Writer.js","webpack://draw2d/./src/io/json/Reader.js","webpack://draw2d/./src/io/json/Writer.js","webpack://draw2d/./src/io/png/Writer.js","webpack://draw2d/./src/io/svg/Writer.js","webpack://draw2d/./src/layout/anchor/CenterEdgeConnectionAnchor.js","webpack://draw2d/./src/layout/anchor/ChopboxConnectionAnchor.js","webpack://draw2d/./src/layout/anchor/ConnectionAnchor.js","webpack://draw2d/./src/layout/anchor/FanConnectionAnchor.js","webpack://draw2d/./src/layout/anchor/ShortesPathConnectionAnchor.js","webpack://draw2d/./src/layout/connection/CircuitConnectionRouter.js","webpack://draw2d/./src/layout/connection/ConnectionRouter.js","webpack://draw2d/./src/layout/connection/DirectRouter.js","webpack://draw2d/./src/layout/connection/FanConnectionRouter.js","webpack://draw2d/./src/layout/connection/InteractiveManhattanConnectionRouter.js","webpack://draw2d/./src/layout/connection/ManhattanBridgedConnectionRouter.js","webpack://draw2d/./src/layout/connection/ManhattanConnectionRouter.js","webpack://draw2d/./src/layout/connection/MazeConnectionRouter.js","webpack://draw2d/./src/layout/connection/MuteableManhattanConnectionRouter.js","webpack://draw2d/./src/layout/connection/RubberbandRouter.js","webpack://draw2d/./src/layout/connection/SketchConnectionRouter.js","webpack://draw2d/./src/layout/connection/SplineConnectionRouter.js","webpack://draw2d/./src/layout/connection/VertexRouter.js","webpack://draw2d/./src/layout/locator/BottomLocator.js","webpack://draw2d/./src/layout/locator/CenterLocator.js","webpack://draw2d/./src/layout/locator/ConnectionLocator.js","webpack://draw2d/./src/layout/locator/DraggableLocator.js","webpack://draw2d/./src/layout/locator/InputPortLocator.js","webpack://draw2d/./src/layout/locator/LeftLocator.js","webpack://draw2d/./src/layout/locator/Locator.js","webpack://draw2d/./src/layout/locator/ManhattanMidpointLocator.js","webpack://draw2d/./src/layout/locator/OutputPortLocator.js","webpack://draw2d/./src/layout/locator/ParallelMidpointLocator.js","webpack://draw2d/./src/layout/locator/PolylineMidpointLocator.js","webpack://draw2d/./src/layout/locator/PortLocator.js","webpack://draw2d/./src/layout/locator/RightLocator.js","webpack://draw2d/./src/layout/locator/SmartDraggableLocator.js","webpack://draw2d/./src/layout/locator/TopLocator.js","webpack://draw2d/./src/layout/locator/XYAbsPortLocator.js","webpack://draw2d/./src/layout/locator/XYRelPortLocator.js","webpack://draw2d/./src/layout/mesh/ExplodeLayouter.js","webpack://draw2d/./src/layout/mesh/MeshLayouter.js","webpack://draw2d/./src/layout/mesh/ProposedMeshChange.js","webpack://draw2d/./src/lib/jquery.autoresize.js","webpack://draw2d/./src/lib/jquery.contextmenu.js","webpack://draw2d/./src/packages.js","webpack://draw2d/./src/policy/EditPolicy.js","webpack://draw2d/./src/policy/canvas/BoundingboxSelectionPolicy.js","webpack://draw2d/./src/policy/canvas/CanvasPolicy.js","webpack://draw2d/./src/policy/canvas/CoronaDecorationPolicy.js","webpack://draw2d/./src/policy/canvas/DecorationPolicy.js","webpack://draw2d/./src/policy/canvas/DefaultKeyboardPolicy.js","webpack://draw2d/./src/policy/canvas/DropInterceptorPolicy.js","webpack://draw2d/./src/policy/canvas/ExtendedKeyboardPolicy.js","webpack://draw2d/./src/policy/canvas/FadeoutDecorationPolicy.js","webpack://draw2d/./src/policy/canvas/GhostMoveSelectionPolicy.js","webpack://draw2d/./src/policy/canvas/KeyboardPolicy.js","webpack://draw2d/./src/policy/canvas/PanningSelectionPolicy.js","webpack://draw2d/./src/policy/canvas/ReadOnlySelectionPolicy.js","webpack://draw2d/./src/policy/canvas/SelectionPolicy.js","webpack://draw2d/./src/policy/canvas/ShowChessboardEditPolicy.js","webpack://draw2d/./src/policy/canvas/ShowDimetricGridEditPolicy.js","webpack://draw2d/./src/policy/canvas/ShowDotEditPolicy.js","webpack://draw2d/./src/policy/canvas/ShowGridEditPolicy.js","webpack://draw2d/./src/policy/canvas/SingleSelectionPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToCenterEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToDimetricGridEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToGeometryEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToGridEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToInBetweenEditPolicy.js","webpack://draw2d/./src/policy/canvas/SnapToVerticesEditPolicy.js","webpack://draw2d/./src/policy/canvas/WheelZoomPolicy.js","webpack://draw2d/./src/policy/canvas/ZoomPolicy.js","webpack://draw2d/./src/policy/connection/ClickConnectionCreatePolicy.js","webpack://draw2d/./src/policy/connection/ComposedConnectionCreatePolicy.js","webpack://draw2d/./src/policy/connection/ConnectionCreatePolicy.js","webpack://draw2d/./src/policy/connection/DragConnectionCreatePolicy.js","webpack://draw2d/./src/policy/connection/OrthogonalConnectionCreatePolicy.js","webpack://draw2d/./src/policy/figure/AntSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/BigRectangleSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/BusSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/DragDropEditPolicy.js","webpack://draw2d/./src/policy/figure/FigureEditPolicy.js","webpack://draw2d/./src/policy/figure/GlowSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/HBusSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/HorizontalEditPolicy.js","webpack://draw2d/./src/policy/figure/RaftSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/RectangleSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/RegionEditPolicy.js","webpack://draw2d/./src/policy/figure/ResizeSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/RoundRectangleSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/SelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/SelectionPolicy.js","webpack://draw2d/./src/policy/figure/SlimSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/VBusSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/VertexSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/figure/VerticalEditPolicy.js","webpack://draw2d/./src/policy/figure/WidthSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/line/LineSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/line/OrthogonalSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/line/VertexSelectionFeedbackPolicy.js","webpack://draw2d/./src/policy/port/ElasticStrapFeedbackPolicy.js","webpack://draw2d/./src/policy/port/IntrusivePortsFeedbackPolicy.js","webpack://draw2d/./src/policy/port/PortFeedbackPolicy.js","webpack://draw2d/./src/shape/analog/OpAmp.js","webpack://draw2d/./src/shape/analog/ResistorBridge.js","webpack://draw2d/./src/shape/analog/ResistorVertical.js","webpack://draw2d/./src/shape/analog/VoltageSupplyHorizontal.js","webpack://draw2d/./src/shape/analog/VoltageSupplyVertical.js","webpack://draw2d/./src/shape/arrow/CalligrapherArrowDownLeft.js","webpack://draw2d/./src/shape/arrow/CalligrapherArrowLeft.js","webpack://draw2d/./src/shape/basic/Arc.js","webpack://draw2d/./src/shape/basic/Circle.js","webpack://draw2d/./src/shape/basic/Diamond.js","webpack://draw2d/./src/shape/basic/GhostVertexResizeHandle.js","webpack://draw2d/./src/shape/basic/Image.js","webpack://draw2d/./src/shape/basic/Label.js","webpack://draw2d/./src/shape/basic/Line.js","webpack://draw2d/./src/shape/basic/LineEndResizeHandle.js","webpack://draw2d/./src/shape/basic/LineResizeHandle.js","webpack://draw2d/./src/shape/basic/LineStartResizeHandle.js","webpack://draw2d/./src/shape/basic/Oval.js","webpack://draw2d/./src/shape/basic/PolyLine.js","webpack://draw2d/./src/shape/basic/Polygon.js","webpack://draw2d/./src/shape/basic/Rectangle.js","webpack://draw2d/./src/shape/basic/Text.js","webpack://draw2d/./src/shape/basic/VertexResizeHandle.js","webpack://draw2d/./src/shape/composite/Composite.js","webpack://draw2d/./src/shape/composite/Group.js","webpack://draw2d/./src/shape/composite/Jailhouse.js","webpack://draw2d/./src/shape/composite/Raft.js","webpack://draw2d/./src/shape/composite/RaftResizeHandle.js","webpack://draw2d/./src/shape/composite/StrongComposite.js","webpack://draw2d/./src/shape/composite/WeakComposite.js","webpack://draw2d/./src/shape/diagram/Diagram.js","webpack://draw2d/./src/shape/diagram/Pie.js","webpack://draw2d/./src/shape/diagram/Sparkline.js","webpack://draw2d/./src/shape/dimetric/Rectangle.js","webpack://draw2d/./src/shape/flowchart/Document.js","webpack://draw2d/./src/shape/icon/Acw.js","webpack://draw2d/./src/shape/icon/Alarm.js","webpack://draw2d/./src/shape/icon/Anonymous.js","webpack://draw2d/./src/shape/icon/Apple.js","webpack://draw2d/./src/shape/icon/Apps.js","webpack://draw2d/./src/shape/icon/ArrowDown.js","webpack://draw2d/./src/shape/icon/ArrowLeft.js","webpack://draw2d/./src/shape/icon/ArrowLeft2.js","webpack://draw2d/./src/shape/icon/ArrowRight.js","webpack://draw2d/./src/shape/icon/ArrowRight2.js","webpack://draw2d/./src/shape/icon/ArrowUp.js","webpack://draw2d/./src/shape/icon/Aumade.js","webpack://draw2d/./src/shape/icon/BarChart.js","webpack://draw2d/./src/shape/icon/BioHazard.js","webpack://draw2d/./src/shape/icon/Book.js","webpack://draw2d/./src/shape/icon/Bookmark.js","webpack://draw2d/./src/shape/icon/Books.js","webpack://draw2d/./src/shape/icon/Bubble.js","webpack://draw2d/./src/shape/icon/Bug.js","webpack://draw2d/./src/shape/icon/Calendar.js","webpack://draw2d/./src/shape/icon/Cart.js","webpack://draw2d/./src/shape/icon/Ccw.js","webpack://draw2d/./src/shape/icon/Chat.js","webpack://draw2d/./src/shape/icon/Check.js","webpack://draw2d/./src/shape/icon/Chrome.js","webpack://draw2d/./src/shape/icon/Clip.js","webpack://draw2d/./src/shape/icon/Clock.js","webpack://draw2d/./src/shape/icon/Cloud.js","webpack://draw2d/./src/shape/icon/Cloud2.js","webpack://draw2d/./src/shape/icon/CloudDown.js","webpack://draw2d/./src/shape/icon/CloudUp.js","webpack://draw2d/./src/shape/icon/Cloudy.js","webpack://draw2d/./src/shape/icon/Code.js","webpack://draw2d/./src/shape/icon/CodeTalk.js","webpack://draw2d/./src/shape/icon/CommandLine.js","webpack://draw2d/./src/shape/icon/Connect.js","webpack://draw2d/./src/shape/icon/Contract.js","webpack://draw2d/./src/shape/icon/Crop.js","webpack://draw2d/./src/shape/icon/Cross.js","webpack://draw2d/./src/shape/icon/Cube.js","webpack://draw2d/./src/shape/icon/Customer.js","webpack://draw2d/./src/shape/icon/Db.js","webpack://draw2d/./src/shape/icon/Detour.js","webpack://draw2d/./src/shape/icon/Diagram.js","webpack://draw2d/./src/shape/icon/Disconnect.js","webpack://draw2d/./src/shape/icon/DockBottom.js","webpack://draw2d/./src/shape/icon/DockLeft.js","webpack://draw2d/./src/shape/icon/DockRight.js","webpack://draw2d/./src/shape/icon/DockTop.js","webpack://draw2d/./src/shape/icon/Download.js","webpack://draw2d/./src/shape/icon/Dry.js","webpack://draw2d/./src/shape/icon/Employee.js","webpack://draw2d/./src/shape/icon/End.js","webpack://draw2d/./src/shape/icon/Ethernet.js","webpack://draw2d/./src/shape/icon/Exchange.js","webpack://draw2d/./src/shape/icon/Expand.js","webpack://draw2d/./src/shape/icon/Export.js","webpack://draw2d/./src/shape/icon/Fave.js","webpack://draw2d/./src/shape/icon/Feed.js","webpack://draw2d/./src/shape/icon/Ff.js","webpack://draw2d/./src/shape/icon/Firefox.js","webpack://draw2d/./src/shape/icon/Flag.js","webpack://draw2d/./src/shape/icon/Flickr.js","webpack://draw2d/./src/shape/icon/Folder.js","webpack://draw2d/./src/shape/icon/Font.js","webpack://draw2d/./src/shape/icon/Fork.js","webpack://draw2d/./src/shape/icon/ForkAlt.js","webpack://draw2d/./src/shape/icon/FullCube.js","webpack://draw2d/./src/shape/icon/Future.js","webpack://draw2d/./src/shape/icon/GRaphael.js","webpack://draw2d/./src/shape/icon/Gear.js","webpack://draw2d/./src/shape/icon/Gear2.js","webpack://draw2d/./src/shape/icon/GitHub.js","webpack://draw2d/./src/shape/icon/GitHubAlt.js","webpack://draw2d/./src/shape/icon/Glasses.js","webpack://draw2d/./src/shape/icon/Globe.js","webpack://draw2d/./src/shape/icon/GlobeAlt.js","webpack://draw2d/./src/shape/icon/GlobeAlt2.js","webpack://draw2d/./src/shape/icon/Hail.js","webpack://draw2d/./src/shape/icon/Hammer.js","webpack://draw2d/./src/shape/icon/HammerAndScrewDriver.js","webpack://draw2d/./src/shape/icon/HangUp.js","webpack://draw2d/./src/shape/icon/Help.js","webpack://draw2d/./src/shape/icon/History.js","webpack://draw2d/./src/shape/icon/Home.js","webpack://draw2d/./src/shape/icon/IMac.js","webpack://draw2d/./src/shape/icon/Icon.js","webpack://draw2d/./src/shape/icon/Icons.js","webpack://draw2d/./src/shape/icon/Ie.js","webpack://draw2d/./src/shape/icon/Ie9.js","webpack://draw2d/./src/shape/icon/Import.js","webpack://draw2d/./src/shape/icon/InkScape.js","webpack://draw2d/./src/shape/icon/Ipad.js","webpack://draw2d/./src/shape/icon/Iphone.js","webpack://draw2d/./src/shape/icon/JQuery.js","webpack://draw2d/./src/shape/icon/Jigsaw.js","webpack://draw2d/./src/shape/icon/Key.js","webpack://draw2d/./src/shape/icon/Lab.js","webpack://draw2d/./src/shape/icon/Lamp.js","webpack://draw2d/./src/shape/icon/Lamp_alt.js","webpack://draw2d/./src/shape/icon/Landing.js","webpack://draw2d/./src/shape/icon/Landscape1.js","webpack://draw2d/./src/shape/icon/Landscape2.js","webpack://draw2d/./src/shape/icon/LineChart.js","webpack://draw2d/./src/shape/icon/Link.js","webpack://draw2d/./src/shape/icon/LinkedIn.js","webpack://draw2d/./src/shape/icon/Linux.js","webpack://draw2d/./src/shape/icon/List.js","webpack://draw2d/./src/shape/icon/Location.js","webpack://draw2d/./src/shape/icon/Lock.js","webpack://draw2d/./src/shape/icon/Locked.js","webpack://draw2d/./src/shape/icon/Magic.js","webpack://draw2d/./src/shape/icon/Magnet.js","webpack://draw2d/./src/shape/icon/Mail.js","webpack://draw2d/./src/shape/icon/Man.js","webpack://draw2d/./src/shape/icon/Merge.js","webpack://draw2d/./src/shape/icon/Mic.js","webpack://draw2d/./src/shape/icon/MicMute.js","webpack://draw2d/./src/shape/icon/Minus.js","webpack://draw2d/./src/shape/icon/NewWindow.js","webpack://draw2d/./src/shape/icon/No.js","webpack://draw2d/./src/shape/icon/NoMagnet.js","webpack://draw2d/./src/shape/icon/NodeJs.js","webpack://draw2d/./src/shape/icon/Notebook.js","webpack://draw2d/./src/shape/icon/Noview.js","webpack://draw2d/./src/shape/icon/Opera.js","webpack://draw2d/./src/shape/icon/Package.js","webpack://draw2d/./src/shape/icon/Page.js","webpack://draw2d/./src/shape/icon/Page2.js","webpack://draw2d/./src/shape/icon/Pallete.js","webpack://draw2d/./src/shape/icon/Palm.js","webpack://draw2d/./src/shape/icon/Paper.js","webpack://draw2d/./src/shape/icon/Parent.js","webpack://draw2d/./src/shape/icon/Pc.js","webpack://draw2d/./src/shape/icon/Pen.js","webpack://draw2d/./src/shape/icon/Pensil.js","webpack://draw2d/./src/shape/icon/People.js","webpack://draw2d/./src/shape/icon/Phone.js","webpack://draw2d/./src/shape/icon/Photo.js","webpack://draw2d/./src/shape/icon/Picker.js","webpack://draw2d/./src/shape/icon/Picture.js","webpack://draw2d/./src/shape/icon/PieChart.js","webpack://draw2d/./src/shape/icon/Plane.js","webpack://draw2d/./src/shape/icon/Plugin.js","webpack://draw2d/./src/shape/icon/Plus.js","webpack://draw2d/./src/shape/icon/Power.js","webpack://draw2d/./src/shape/icon/Ppt.js","webpack://draw2d/./src/shape/icon/Printer.js","webpack://draw2d/./src/shape/icon/Quote.js","webpack://draw2d/./src/shape/icon/Rain.js","webpack://draw2d/./src/shape/icon/Raphael.js","webpack://draw2d/./src/shape/icon/ReflectH.js","webpack://draw2d/./src/shape/icon/ReflectV.js","webpack://draw2d/./src/shape/icon/Refresh.js","webpack://draw2d/./src/shape/icon/Resize2.js","webpack://draw2d/./src/shape/icon/Rotate.js","webpack://draw2d/./src/shape/icon/Ruler.js","webpack://draw2d/./src/shape/icon/Run.js","webpack://draw2d/./src/shape/icon/Rw.js","webpack://draw2d/./src/shape/icon/Safari.js","webpack://draw2d/./src/shape/icon/ScrewDriver.js","webpack://draw2d/./src/shape/icon/Search.js","webpack://draw2d/./src/shape/icon/Sencha.js","webpack://draw2d/./src/shape/icon/Settings.js","webpack://draw2d/./src/shape/icon/SettingsAlt.js","webpack://draw2d/./src/shape/icon/Shuffle.js","webpack://draw2d/./src/shape/icon/Skull.js","webpack://draw2d/./src/shape/icon/Skype.js","webpack://draw2d/./src/shape/icon/SlideShare.js","webpack://draw2d/./src/shape/icon/Smile.js","webpack://draw2d/./src/shape/icon/Smile2.js","webpack://draw2d/./src/shape/icon/Snow.js","webpack://draw2d/./src/shape/icon/Split.js","webpack://draw2d/./src/shape/icon/Star.js","webpack://draw2d/./src/shape/icon/Star2.js","webpack://draw2d/./src/shape/icon/Star2Off.js","webpack://draw2d/./src/shape/icon/Star3.js","webpack://draw2d/./src/shape/icon/Star3Off.js","webpack://draw2d/./src/shape/icon/StarOff.js","webpack://draw2d/./src/shape/icon/Start.js","webpack://draw2d/./src/shape/icon/Sticker.js","webpack://draw2d/./src/shape/icon/Stop.js","webpack://draw2d/./src/shape/icon/StopWatch.js","webpack://draw2d/./src/shape/icon/Sun.js","webpack://draw2d/./src/shape/icon/Svg.js","webpack://draw2d/./src/shape/icon/TShirt.js","webpack://draw2d/./src/shape/icon/Tag.js","webpack://draw2d/./src/shape/icon/TakeOff.js","webpack://draw2d/./src/shape/icon/Talke.js","webpack://draw2d/./src/shape/icon/Talkq.js","webpack://draw2d/./src/shape/icon/Thunder.js","webpack://draw2d/./src/shape/icon/Trash.js","webpack://draw2d/./src/shape/icon/Twitter.js","webpack://draw2d/./src/shape/icon/TwitterBird.js","webpack://draw2d/./src/shape/icon/Umbrella.js","webpack://draw2d/./src/shape/icon/Undo.js","webpack://draw2d/./src/shape/icon/Unlock.js","webpack://draw2d/./src/shape/icon/Usb.js","webpack://draw2d/./src/shape/icon/User.js","webpack://draw2d/./src/shape/icon/Users.js","webpack://draw2d/./src/shape/icon/Video.js","webpack://draw2d/./src/shape/icon/View.js","webpack://draw2d/./src/shape/icon/Vim.js","webpack://draw2d/./src/shape/icon/Volume0.js","webpack://draw2d/./src/shape/icon/Volume1.js","webpack://draw2d/./src/shape/icon/Volume2.js","webpack://draw2d/./src/shape/icon/Volume3.js","webpack://draw2d/./src/shape/icon/Warning.js","webpack://draw2d/./src/shape/icon/WheelChair.js","webpack://draw2d/./src/shape/icon/Windows.js","webpack://draw2d/./src/shape/icon/Woman.js","webpack://draw2d/./src/shape/icon/Wrench.js","webpack://draw2d/./src/shape/icon/Wrench2.js","webpack://draw2d/./src/shape/icon/Wrench3.js","webpack://draw2d/./src/shape/icon/ZoomIn.js","webpack://draw2d/./src/shape/icon/ZoomOut.js","webpack://draw2d/./src/shape/layout/FlexGridLayout.js","webpack://draw2d/./src/shape/layout/HorizontalLayout.js","webpack://draw2d/./src/shape/layout/Layout.js","webpack://draw2d/./src/shape/layout/StackLayout.js","webpack://draw2d/./src/shape/layout/TableLayout.js","webpack://draw2d/./src/shape/layout/VerticalLayout.js","webpack://draw2d/./src/shape/node/Between.js","webpack://draw2d/./src/shape/node/End.js","webpack://draw2d/./src/shape/node/Fulcrum.js","webpack://draw2d/./src/shape/node/HorizontalBus.js","webpack://draw2d/./src/shape/node/Hub.js","webpack://draw2d/./src/shape/node/Node.js","webpack://draw2d/./src/shape/node/Start.js","webpack://draw2d/./src/shape/node/VerticalBus.js","webpack://draw2d/./src/shape/note/PostIt.js","webpack://draw2d/./src/shape/pert/Activity.js","webpack://draw2d/./src/shape/pert/Start.js","webpack://draw2d/./src/shape/state/Connection.js","webpack://draw2d/./src/shape/state/End.js","webpack://draw2d/./src/shape/state/Start.js","webpack://draw2d/./src/shape/state/State.js","webpack://draw2d/./src/shape/widget/Slider.js","webpack://draw2d/./src/shape/widget/Widget.js","webpack://draw2d/./src/ui/LabelEditor.js","webpack://draw2d/./src/ui/LabelInplaceEditor.js","webpack://draw2d/./src/util/ArrayList.js","webpack://draw2d/./src/util/Base64.js","webpack://draw2d/./src/util/Color.js","webpack://draw2d/./src/util/Debug.js","webpack://draw2d/./src/util/JSONUtil.js","webpack://draw2d/./src/util/Polyfill.js","webpack://draw2d/./src/util/SVGUtil.js","webpack://draw2d/./src/util/UUID.js","webpack://draw2d/./src/util/extend.js","webpack://draw2d/./src/util/raphael_ext.js","webpack://draw2d/./src/util/spline/BezierSpline.js","webpack://draw2d/./src/util/spline/CatmullRomSpline.js","webpack://draw2d/./src/util/spline/CubicSpline.js","webpack://draw2d/./src/util/spline/Spline.js","webpack://draw2d/./src/css/contextmenu.css","webpack://draw2d/./node_modules/css-loader/dist/runtime/api.js","webpack://draw2d/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://draw2d/./node_modules/performance-now/lib/performance-now.js","webpack://draw2d/./node_modules/raf/index.js","webpack://draw2d/./src/lib/Class.exec.js?f59a","webpack://draw2d/./src/lib/pathfinding.exec.js?a448","webpack://draw2d/./src/lib/raphael.exec.js?8a35","webpack://draw2d/./node_modules/rgbcolor/index.js","webpack://draw2d/./node_modules/script-loader/addScript.js","webpack://draw2d/./node_modules/shifty/dist/shifty.js","webpack://draw2d/./node_modules/stackblur-canvas/dist/stackblur-es.js","webpack://draw2d/./src/css/contextmenu.css?3c4d","webpack://draw2d/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://draw2d/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://draw2d/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://draw2d/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://draw2d/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://draw2d/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://draw2d/./node_modules/canvg/dist/index.cjs","webpack://draw2d/./node_modules/svg-pathdata/lib/SVGPathData.cjs","webpack://draw2d/webpack/bootstrap","webpack://draw2d/webpack/runtime/compat get default export","webpack://draw2d/webpack/runtime/define property getters","webpack://draw2d/webpack/runtime/global","webpack://draw2d/webpack/runtime/hasOwnProperty shorthand","webpack://draw2d/webpack/runtime/make namespace object","webpack://draw2d/webpack/runtime/nonce","webpack://draw2d/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"draw2d\"] = factory();\n\telse\n\t\troot[\"draw2d\"] = factory();\n})(self, () => {\nreturn ","require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\repos\\\\draw2d\\\\src\\\\lib\\\\Class.exec.js\"))","require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\repos\\\\draw2d\\\\src\\\\lib\\\\pathfinding.exec.js\"))","require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\script-loader\\\\addScript.js\")(require(\"!!C:\\\\repos\\\\draw2d\\\\node_modules\\\\raw-loader\\\\index.js!C:\\\\repos\\\\draw2d\\\\src\\\\lib\\\\raphael.exec.js\"))","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A scrolling Canvas that contains Figures. Call `add(draw2d.Figure)` to add shapes to the Viewport.\r\n *\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.Canvas = Class.extend(\r\n  /** @lends draw2d.Canvas.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.Canvas\",\r\n\r\n    /**\r\n     * Create a new canvas with the given HTML DOM references.\r\n     *\r\n     * @param {String} canvasId the id of the DOM element to use a parent container\r\n     */\r\n    init: function (canvasId, width, height) {\r\n      let _this = this\r\n\r\n\r\n      this.setScrollArea(document.body)\r\n      this.canvasId = canvasId\r\n      this.html = $(\"#\" + canvasId)\r\n      this.html.css({\"cursor\": \"default\"})\r\n      if (!isNaN(parseFloat(width)) && !isNaN(parseFloat(height))) {\r\n        this.initialWidth = parseInt(width)\r\n        this.initialHeight = parseInt(height)\r\n        this.html\r\n          .height(this.initialHeight)\r\n          .width(this.initialWidth)\r\n      } else {\r\n        this.initialWidth = this.getWidth()\r\n        this.initialHeight = this.getHeight()\r\n      }\r\n\r\n      // avoid the \"highlighting\" in iPad, iPhone if the user tab/touch on the canvas.\r\n      // .... I didn't like this.\r\n      this.html.css({\"-webkit-tap-highlight-color\": \"rgba(0,0,0,0)\"})\r\n\r\n      // Drag&Drop handling from foreign DIV into the Canvas\r\n      // Only available in combination with jQuery-UI\r\n      //\r\n      // Create the droppable area for the css class \"draw2d_droppable\"\r\n      // This can be done by a palette of toolbar or something else.\r\n      // For more information see : http://jqueryui.com/demos/droppable/\r\n      //\r\n      $(this.html).droppable({\r\n        accept: '.draw2d_droppable',\r\n        over: function (event, ui) {\r\n          _this.onDragEnter(ui.draggable)\r\n        },\r\n        out: function (event, ui) {\r\n          _this.onDragLeave(ui.draggable)\r\n        },\r\n        drop: function drop(event, ui) {\r\n          event = _this._getEvent(event);\r\n          let helperPos = $(ui.helper).position()\r\n          let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY);\r\n          _this.onDrop(ui.draggable,\r\n            pos.getX()- (event.clientX-helperPos.left)+5,\r\n            pos.getY()- (event.clientY-helperPos.top)+5, event.shiftKey, event.ctrlKey);\r\n        }\r\n      })\r\n\r\n\r\n      // Create the jQuery-Draggable for the palette -> canvas drag&drop interaction\r\n      //\r\n      $(\".draw2d_droppable\").draggable({\r\n        appendTo: \"body\",\r\n        stack: \"body\",\r\n        zIndex: 27000,\r\n        helper: \"clone\",\r\n        drag: function (event, ui) {\r\n          event = _this._getEvent(event)\r\n          let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n          _this.onDrag(ui.draggable, pos.getX(), pos.getY(), event.shiftKey, event.ctrlKey)\r\n        },\r\n        stop: function (e, ui) {\r\n        },\r\n        start: function (e, ui) {\r\n          $(ui.helper).addClass(\"shadow\")\r\n        }\r\n      })\r\n\r\n\r\n      // painting stuff\r\n      //\r\n      if (!isNaN(parseFloat(height))) {\r\n        this.paper = Raphael(canvasId, width, height)\r\n      } else {\r\n        this.paper = Raphael(canvasId, this.getWidth(), this.getHeight())\r\n      }\r\n      this.paper.canvas.style.position = \"absolute\"\r\n\r\n      // Status handling\r\n      //\r\n      this.zoomPolicy = null // default ZoomEditPolicy\r\n      this.zoomFactor = 1.0 // range [0.001..10]\r\n      this.selection = new draw2d.Selection()\r\n      this.currentDropTarget = null\r\n      this.currentHoverFigure = null\r\n\r\n      // installed to all added figures to avoid that a figure can be placed outside the canvas area\r\n      // during a drag&drop operation\r\n      this.regionDragDropConstraint = new draw2d.policy.figure.RegionEditPolicy(0, 0, this.getWidth(), this.getHeight())\r\n\r\n      // event handling since version 5.0.0\r\n      this.eventSubscriptions = {}\r\n\r\n      this.editPolicy = new draw2d.util.ArrayList()\r\n\r\n      // internal document with all figures, ports, ....\r\n      //\r\n      this.figures = new draw2d.util.ArrayList()\r\n      this.lines = new draw2d.util.ArrayList() // crap - why are connections not just figures. Design by accident\r\n      this.commonPorts = new draw2d.util.ArrayList()\r\n\r\n      // all visible resize handles which can be drag&drop around. Selection handles like AntRectangleSelectionFeedback\r\n      // are not part of this collection. Required for hitTest only\r\n      this.resizeHandles = new draw2d.util.ArrayList()\r\n\r\n      // The CommandStack for undo/redo operations\r\n      //\r\n      this.commandStack = new draw2d.command.CommandStack()\r\n\r\n      // INTERSECTION/CROSSING handling for connections and lines\r\n      //\r\n      this.linesToRepaintAfterDragDrop = new draw2d.util.ArrayList()\r\n      this.lineIntersections = new draw2d.util.ArrayList()\r\n\r\n      // alternative/legacy zoom implementation\r\n      // this.installEditPolicy( new draw2d.policy.canvas.ZoomPolicy());                  // Responsible for zooming\r\n      this.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy())                // Responsible for zooming with mouse wheel\r\n      this.installEditPolicy(new draw2d.policy.canvas.DefaultKeyboardPolicy())          // Handles the keyboard interaction\r\n      this.installEditPolicy(new draw2d.policy.canvas.BoundingboxSelectionPolicy())     // Responsible for selection handling\r\n      this.installEditPolicy(new draw2d.policy.canvas.DropInterceptorPolicy())          // Responsible for drop operations\r\n      this.installEditPolicy(new draw2d.policy.connection.ComposedConnectionCreatePolicy(// Responsible for connection creation....\r\n        [\r\n          new draw2d.policy.connection.DragConnectionCreatePolicy(),  // ....via drag/´drop\r\n          new draw2d.policy.connection.ClickConnectionCreatePolicy()  // or clicking on the ports and canvas.\r\n        ])\r\n      )\r\n\r\n      // Calculate all intersection between the different lines\r\n      //\r\n      this.commandStack.addEventListener(function (event) {\r\n        if (event.isPostChangeEvent() === true) {\r\n          _this.calculateConnectionIntersection()\r\n          _this.linesToRepaintAfterDragDrop.each((i, line) => {\r\n            line.svgPathString = null\r\n            line.repaint()\r\n          })\r\n          _this.linesToRepaintAfterDragDrop = new draw2d.util.ArrayList()\r\n        }\r\n      })\r\n\r\n      // DragDrop status handling\r\n      //\r\n      this.mouseDown = false\r\n      this.mouseDownX = 0\r\n      this.mouseDownY = 0\r\n      this.mouseDragDiffX = 0\r\n      this.mouseDragDiffY = 0\r\n\r\n      this.html.bind(\"mouseup touchend\", function (event) {\r\n        if (_this.mouseDown === false) {\r\n          return\r\n        }\r\n\r\n        event = _this._getEvent(event)\r\n        _this.calculateConnectionIntersection()\r\n\r\n        _this.mouseDown = false\r\n        let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n        _this.editPolicy.each(function (i, policy) {\r\n          policy.onMouseUp(_this, pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n        })\r\n\r\n        _this.mouseDragDiffX = 0\r\n        _this.mouseDragDiffY = 0\r\n      })\r\n\r\n      this.html.bind(\"mousemove touchmove\", function (event) {\r\n        event = _this._getEvent(event)\r\n        let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n        if (_this.mouseDown === false) {\r\n          // mouseEnter/mouseLeave events for Figures. Don't use the Raphael or DOM native functions.\r\n          // Raphael didn't work for Rectangle with transparent fill (events only fired for the border line)\r\n          // DOM didn't work well for lines. No eclipse area - you must hit the line exact to retrieve the event.\r\n          // In this case I implement my own stuff...again and again.\r\n          //\r\n          // don't break the main event loop if one element fires an error during enter/leave event.\r\n          try {\r\n            let hover = _this.getBestFigure(pos.x, pos.y)\r\n            if (hover !== _this.currentHoverFigure && _this.currentHoverFigure !== null) {\r\n              _this.currentHoverFigure.onMouseLeave() // deprecated\r\n              _this.currentHoverFigure.fireEvent(\"mouseleave\")\r\n              _this.fireEvent(\"mouseleave\", {figure: _this.currentHoverFigure})\r\n            }\r\n            if (hover !== _this.currentHoverFigure && hover !== null) {\r\n              hover.onMouseEnter()\r\n              hover.fireEvent(\"mouseenter\")\r\n              _this.fireEvent(\"mouseenter\", {figure: hover})\r\n            }\r\n            _this.currentHoverFigure = hover\r\n          } catch (exc) {\r\n            // just write it to the console\r\n            console.log(exc)\r\n          }\r\n\r\n          _this.editPolicy.each(function (i, policy) {\r\n            policy.onMouseMove(_this, pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n          })\r\n          _this.fireEvent(\"mousemove\", {\r\n            x: pos.x,\r\n            y: pos.y,\r\n            shiftKey: event.shiftKey,\r\n            ctrlKey: event.ctrlKey,\r\n            hoverFigure: _this.currentHoverFigure\r\n          })\r\n        } else {\r\n          let diffXAbs = (event.clientX - _this.mouseDownX) * _this.zoomFactor\r\n          let diffYAbs = (event.clientY - _this.mouseDownY) * _this.zoomFactor\r\n          _this.editPolicy.each(function (i, policy) {\r\n            policy.onMouseDrag(_this, diffXAbs, diffYAbs, diffXAbs - _this.mouseDragDiffX, diffYAbs - _this.mouseDragDiffY, event.shiftKey, event.ctrlKey)\r\n          })\r\n          _this.mouseDragDiffX = diffXAbs\r\n          _this.mouseDragDiffY = diffYAbs\r\n          _this.fireEvent(\"mousemove\", {\r\n            x: pos.x,\r\n            y: pos.y,\r\n            shiftKey: event.shiftKey,\r\n            ctrlKey: event.ctrlKey,\r\n            hoverFigure: _this.currentHoverFigure\r\n          })\r\n        }\r\n      })\r\n\r\n      this.html.bind(\"mousedown\", function (event) {\r\n        try {\r\n          let pos = null\r\n          switch (event.which) {\r\n            case 1: //touch pressed\r\n            case 0: //Left mouse button pressed\r\n              try {\r\n                event.preventDefault()\r\n                event = _this._getEvent(event)\r\n                _this.mouseDownX = event.clientX\r\n                _this.mouseDownY = event.clientY\r\n                _this.mouseDragDiffX = 0\r\n                _this.mouseDragDiffY = 0\r\n                pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n                _this.mouseDown = true\r\n                _this.editPolicy.each(function (i, policy) {\r\n                  policy.onMouseDown(_this, pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n                })\r\n              } catch (exc) {\r\n                console.log(exc)\r\n              }\r\n              break\r\n            case 3: //Right mouse button pressed\r\n              event.preventDefault()\r\n              if (typeof event.stopPropagation !== \"undefined\")\r\n                event.stopPropagation()\r\n              event = _this._getEvent(event)\r\n              pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n              _this.onRightMouseDown(pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n              return false\r\n            case 2:\r\n              //Middle mouse button pressed\r\n              break\r\n            default:\r\n            //You have a strange mouse\r\n          }\r\n        } catch (exc) {\r\n          console.log(exc)\r\n        }\r\n      })\r\n\r\n\r\n      // Catch the dblclick and route them to the Canvas hook.\r\n      //\r\n      this.html.on(\"dblclick\", function (event) {\r\n        event = _this._getEvent(event)\r\n\r\n        _this.mouseDownX = event.clientX\r\n        _this.mouseDownY = event.clientY\r\n        let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n        _this.onDoubleClick(pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n      })\r\n\r\n\r\n      // Catch the click event and route them to the canvas hook\r\n      //\r\n      this.html.on(\"click\", function (event) {\r\n        event = _this._getEvent(event)\r\n\r\n        // fire only the click event if we didn't move the mouse (drag&drop)\r\n        //\r\n        if (_this.mouseDownX === event.clientX || _this.mouseDownY === event.clientY) {\r\n          let pos = _this.fromDocumentToCanvasCoordinate(event.clientX, event.clientY)\r\n          _this.onClick(pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n        }\r\n      })\r\n\r\n      // Important: MozMousePixelScroll is required to prevent 1px scrolling\r\n      // in FF event if we call \"e.preventDefault()\"\r\n      this.html.on('MozMousePixelScroll DOMMouseScroll mousewheel', function (e) {\r\n        let event = _this._getEvent(e)\r\n        let pos = _this.fromDocumentToCanvasCoordinate(event.originalEvent.clientX, event.originalEvent.clientY)\r\n\r\n        let delta = 0\r\n        if (e.type === 'mousewheel') {\r\n          delta = (e.originalEvent.wheelDelta * -1)\r\n        } else if (e.type === 'DOMMouseScroll') {\r\n          delta = 40 * e.originalEvent.detail\r\n        }\r\n\r\n        let returnValue = _this.onMouseWheel(delta, pos.x, pos.y, event.shiftKey, event.ctrlKey)\r\n\r\n        if (returnValue === false) {\r\n          e.preventDefault()\r\n        }\r\n      })\r\n\r\n      // Catch the keyUp and CTRL-key and route them to the Canvas hook.\r\n      //\r\n      this.keyupCallback = function (event) {\r\n        // don't initiate the delete command if the event comes from an INPUT field. In this case the user want delete\r\n        // a character in the input field and not the related shape\r\n        let target = $(event.target)\r\n        if (!target.is(\"input\") && !target.is(\"textarea\")) {\r\n          _this.editPolicy.each(function (i, policy) {\r\n            if (policy instanceof draw2d.policy.canvas.KeyboardPolicy) {\r\n              policy.onKeyUp(_this, event.keyCode, event.shiftKey, event.ctrlKey)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      $(document).bind(\"keyup\", this.keyupCallback)\r\n\r\n      // Catch the keyDown and CTRL-key and route them to the Canvas hook.\r\n      //\r\n      this.keydownCallback = function (event) {\r\n        // don't initiate the delete command if the event comes from an INPUT field. In this case the user want delete\r\n        // a character in the input field and not the related shape\r\n        let target = $(event.target)\r\n        if (!target.is(\"input\") && !target.is(\"textarea\")) {\r\n          _this.editPolicy.each(function (i, policy) {\r\n            if (policy instanceof draw2d.policy.canvas.KeyboardPolicy) {\r\n              policy.onKeyDown(_this, event.keyCode, event.shiftKey, event.ctrlKey)\r\n            }\r\n          })\r\n        }\r\n      }\r\n      $(document).bind(\"keydown\", this.keydownCallback)\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Call this method if you didn't need the canvas anymore. The method unregister all even handlers\r\n     * and frees all resources. The canvas is unusable after this call\r\n     *\r\n     * @since. 4.7.4\r\n     */\r\n    destroy: function () {\r\n      this.clear()\r\n      $(document).unbind(\"keydown\", this.keydownCallback)\r\n      $(document).unbind(\"keyup\", this.keyupCallback)\r\n      // reset the event handlers of the canvas without any notice\r\n      //\r\n      this.eventSubscriptions = {}\r\n\r\n      try {\r\n        this.paper.remove()\r\n      } catch (exc) {\r\n        // breaks in some ie7 version....don't care about this because ie7/8 isn't a state of the art browser  ;-)\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Reset the canvas and delete all model elements.<br>\r\n     * You can now reload another model to the canvas with a {@link draw2d.io.Reader}\r\n     *\r\n     * @since 1.1.0\r\n     * @returns {this}\r\n     */\r\n    clear: function () {\r\n      // notice all listener that the canvas will be cleared\r\n      this.fireEvent(\"clear\")\r\n\r\n      let _this = this\r\n\r\n      this.lines.clone().each(function (i, e) {\r\n        _this.remove(e)\r\n      })\r\n\r\n      this.figures.clone().each(function (i, e) {\r\n        _this.remove(e)\r\n      })\r\n\r\n      this.zoomFactor = 1.0\r\n      this.selection.clear()\r\n      this.currentDropTarget = null\r\n\r\n      // internal document with all figures, ports, ....\r\n      //\r\n      this.figures = new draw2d.util.ArrayList()\r\n      this.lines = new draw2d.util.ArrayList()\r\n      this.commonPorts = new draw2d.util.ArrayList()\r\n\r\n      this.commandStack.markSaveLocation()\r\n\r\n      // INTERSECTION/CROSSING handling for connections and lines\r\n      //\r\n      this.linesToRepaintAfterDragDrop = new draw2d.util.ArrayList()\r\n      this.lineIntersections = new draw2d.util.ArrayList()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback for any kind of image export tools to trigger the canvas to hide all unwanted\r\n     * decorations. The method is called e.g. from the draw2d.io.png.Writer\r\n     *\r\n     * @since 4.0.0\r\n     * @@interface\r\n     */\r\n    hideDecoration: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * callback method for any image export writer to reactivate the decoration\r\n     * of the canvas. e.g. grids, rulers,...\r\n     *\r\n     *\r\n     * @since 4.0.0\r\n     * @template\r\n     */\r\n    showDecoration: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Calculate all connection intersection of the canvas.\r\n     * Required for \"bridging\" or \"crossing decoration\"\r\n     *\r\n     * @private\r\n     */\r\n    calculateConnectionIntersection: function () {\r\n\r\n      this.lineIntersections = new draw2d.util.ArrayList()\r\n      let lines = this.getLines().clone()\r\n      while (lines.getSize() > 0) {\r\n        let l1 = lines.removeElementAt(0)\r\n        lines.each((ii, l2) => {\r\n          let partInter = l1.intersection(l2)\r\n          if (partInter.getSize() > 0) {\r\n            this.lineIntersections.add({line: l1, other: l2, intersection: partInter})\r\n            this.lineIntersections.add({line: l2, other: l1, intersection: partInter})\r\n          }\r\n        })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Install a new selection and edit policy into the canvas\r\n     *\r\n     * @since 2.2.0\r\n     * @param {draw2d.policy.EditPolicy} policy\r\n     */\r\n    installEditPolicy: function (policy) {\r\n\r\n      // a canvas can handle only one selection policy\r\n      //\r\n      if (policy instanceof draw2d.policy.canvas.SelectionPolicy) {\r\n        // reset old selection before install new selection strategy\r\n        this.getSelection().getAll().each((i, figure) => {\r\n          figure.unselect()\r\n        })\r\n\r\n        // remove existing selection policy\r\n        this.editPolicy.grep((p) => {\r\n          let stay = !(p instanceof draw2d.policy.canvas.SelectionPolicy)\r\n          if (stay === false) {\r\n            p.onUninstall(this)\r\n          }\r\n          return stay\r\n        })\r\n      }\r\n      // only one zoom policy at once\r\n      //\r\n      else if (policy instanceof draw2d.policy.canvas.ZoomPolicy) {\r\n        // remove existing zoom policy\r\n        this.editPolicy.grep((p) => {\r\n          let stay = !(p instanceof draw2d.policy.canvas.ZoomPolicy)\r\n          if (stay === false) {\r\n            p.onUninstall(this)\r\n          }\r\n          return stay\r\n        })\r\n        // replace the short cut handle for faster access\r\n        this.zoomPolicy = policy\r\n      } else if (policy instanceof draw2d.policy.connection.ConnectionCreatePolicy) {\r\n        this.editPolicy.grep((p) => {\r\n          let stay = !(p instanceof draw2d.policy.connection.ConnectionCreatePolicy)\r\n          if (stay === false) {\r\n            p.onUninstall(this)\r\n          }\r\n          return stay\r\n        })\r\n      } else if (policy instanceof draw2d.policy.canvas.DropInterceptorPolicy) {\r\n        // think about if I allow to install only one drop policy\r\n      }\r\n\r\n      // remove doublicate edit policies\r\n      if(policy.NAME) {\r\n        this.uninstallEditPolicy(policy.NAME)\r\n      }\r\n\r\n      policy.onInstall(this)\r\n      this.editPolicy.add(policy)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * UnInstall the selection and edit policy from the canvas.\r\n     *\r\n     * @since 2.2.0\r\n     * @param {draw2d.policy.EditPolicy|String} policy\r\n     */\r\n    uninstallEditPolicy: function (policy) {\r\n      if (policy === null) {\r\n        return //silently\r\n      }\r\n\r\n      // either remove exact the policy instance...\r\n      //\r\n      let removed = this.editPolicy.remove(policy)\r\n      if (removed !== null) {\r\n        removed.onUninstall(this)\r\n        if (removed instanceof draw2d.policy.canvas.ZoomPolicy) {\r\n          this.zoomPolicy = null\r\n        }\r\n      } else {\r\n        // ..or all of the same class if the policy isn't installed before\r\n        // With this kind of behaviour it is possible to deinstall all policies with\r\n        // the same class at once\r\n        //\r\n        let _this = this\r\n        let name = (typeof policy === \"string\") ? policy : policy.NAME\r\n        this.editPolicy.grep(function (p) {\r\n          if (p.NAME === name) {\r\n            p.onUninstall(_this)\r\n            // remove short cut handle to the zoom policy\r\n            if (p instanceof draw2d.policy.canvas.ZoomPolicy) {\r\n              _this.zoomPolicy = null\r\n            }\r\n            return false\r\n          }\r\n          return true\r\n        })\r\n      }\r\n      return this\r\n    },\r\n\r\n    getDropInterceptorPolicies: function () {\r\n      return this.editPolicy.clone().grep(function (p) {\r\n        return (p instanceof draw2d.policy.canvas.DropInterceptorPolicy)\r\n      })\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the new zoom factor for the canvas. The value must be between [0.01..10]\r\n     *\r\n     *     // you can register an eventhandler if the zoom factor did change\r\n     *     canvas.on(\"zoom\", function(emitterFigure, zoomData){\r\n     *         alert(\"canvas zoomed to:\"+zoomData.value);\r\n     *     });\r\n     *\r\n     * @param {Number} zoomFactor new zoom factor. range [0.001..10]. 1.0 is no zoom.\r\n     * @param {Boolean} [animated] set it to true for smooth zoom in/out\r\n     */\r\n    setZoom: function (zoomFactor, animated) {\r\n      // redirect this legacy method to the new CanvasEditPolicy\r\n      //\r\n      if (this.zoomPolicy) {\r\n        this.zoomPolicy.setZoom(zoomFactor, animated)\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the current zoom factor of the canvas.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getZoom: function () {\r\n      return this.zoomFactor\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the dimension of the drawing area\r\n     *\r\n     * @since 4.4.0\r\n     * @returns {draw2d.geo.Rectangle}\r\n     */\r\n    getDimension: function () {\r\n      return new draw2d.geo.Rectangle(0, 0, this.initialWidth, this.initialHeight)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Tells the canvas to resize. If you do not specific any parameters\r\n     * the canvas will attempt to determine the height and width by the enclosing bounding box\r\n     * of all elements and set the dimension accordingly. If you would like to set the dimension\r\n     * explicitly pass in an draw2d.geo.Rectangle or an object with <b>height</b> and <b>width</b> properties.\r\n     *\r\n     * @since 4.4.0\r\n     * @param {draw2d.geo.Rectangle} [dim] the dimension to set or null for autodetect\r\n     * @param {Number} [height] the height of the canvas if the first argument is a number and not a Rectangle\r\n     */\r\n    setDimension: function (dim, height) {\r\n      if (typeof dim === \"undefined\") {\r\n        let widths = this.getFigures().clone().map(function (f) {\r\n          return f.getAbsoluteX() + f.getWidth()\r\n        })\r\n        let heights = this.getFigures().clone().map(function (f) {\r\n          return f.getAbsoluteY() + f.getHeight()\r\n        })\r\n        this.initialHeight = Math.max(...heights.asArray())\r\n        this.initialWidth = Math.max(...widths.asArray())\r\n      } else if (dim instanceof draw2d.geo.Rectangle) {\r\n        this.initialWidth = dim.w\r\n        this.initialHeight = dim.h\r\n      } else if (typeof dim.width === \"number\" && typeof dim.height === \"number\") {\r\n        this.initialWidth = dim.width\r\n        this.initialHeight = dim.height\r\n      } else if (typeof dim === \"number\" && typeof height === \"number\") {\r\n        this.initialWidth = dim\r\n        this.initialHeight = height\r\n      }\r\n      this.html.css({\"width\": this.initialWidth + \"px\", \"height\": this.initialHeight + \"px\"})\r\n      this.paper.setSize(this.initialWidth, this.initialHeight)\r\n      this.setZoom(this.zoomFactor, false)\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Transforms a document coordinate to canvas coordinate.\r\n     *\r\n     * @param {Number} x the x coordinate relative to the window\r\n     * @param {Number} y the y coordinate relative to the window\r\n     *\r\n     * @returns {draw2d.geo.Point} The coordinate in relation to the canvas [0,0] position\r\n     */\r\n    fromDocumentToCanvasCoordinate: function (x, y) {\r\n      return new draw2d.geo.Point(\r\n        (x - this.getAbsoluteX() + this.getScrollLeft()) * this.zoomFactor,\r\n        (y - this.getAbsoluteY() + this.getScrollTop()) * this.zoomFactor)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Transforms a canvas coordinate to document coordinate.\r\n     *\r\n     * @param {Number} x the x coordinate in the canvas\r\n     * @param {Number} y the y coordinate in the canvas\r\n     *\r\n     * @returns {draw2d.geo.Point} the coordinate in relation to the document [0,0] position\r\n     */\r\n    fromCanvasToDocumentCoordinate: function (x, y) {\r\n      return new draw2d.geo.Point(\r\n        ((x * (1 / this.zoomFactor)) + this.getAbsoluteX() - this.getScrollLeft()),\r\n        ((y * (1 / this.zoomFactor)) + this.getAbsoluteY() - this.getScrollTop()))\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The DOM host of the canvas\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    getHtmlContainer: function () {\r\n      return this.html\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return a common event object independed if we run on an iPad or desktop.\r\n     *\r\n     * @param event\r\n     * @returns {DOMEventObject}\r\n     * @private\r\n     */\r\n    _getEvent: function (event) {\r\n      // check for iPad, Android touch events\r\n      //\r\n      if (typeof event.originalEvent !== \"undefined\") {\r\n        if (event.originalEvent.touches && event.originalEvent.touches.length) {\r\n          return event.originalEvent.touches[0]\r\n        } else if (event.originalEvent.changedTouches && event.originalEvent.changedTouches.length) {\r\n          return event.originalEvent.changedTouches[0]\r\n        }\r\n      }\r\n      return event\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Set the area which are scrolling the canvas. This can be a jquery selector or\r\n     * a jQuery node.\r\n     *\r\n     * @param {String/HTMLElement} elementSelector\r\n     * @returns {this}\r\n     **/\r\n    setScrollArea: function (elementSelector) {\r\n      this.scrollArea = $(elementSelector)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * return the scrolling area of the canvas. This is jQuery object\r\n     *\r\n     * @returns {JQueryElement}\r\n     **/\r\n    getScrollArea: function () {\r\n      return this.scrollArea\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The left scroll position.\r\n     *\r\n     * @returns {Number} the left scroll offset of the canvas\r\n     **/\r\n    getScrollLeft: function () {\r\n      return this.getScrollArea().scrollLeft()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The top scroll position\r\n     *\r\n     * @returns {Number} the top scroll offset of the cnavas.\r\n     **/\r\n    getScrollTop: function () {\r\n      return this.getScrollArea().scrollTop()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set left scroll position.\r\n     *\r\n     * @param {Number} left the left scroll offset of the canvas\r\n     **/\r\n    setScrollLeft: function (left) {\r\n      this.getScrollArea().scrollLeft(left)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * set top scroll position\r\n     *\r\n     * @param {Number} top the top scroll offset of the canvas.\r\n     **/\r\n    setScrollTop: function (top) {\r\n      this.getScrollArea().scrollTop(top)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * set the new scroll position of the canvas\r\n     *\r\n     * @param {Number} top the top scroll offset of the canvas.\r\n     * @param {Number} left the left scroll offset of the canvas\r\n     * @since 5.8.0\r\n     **/\r\n    scrollTo: function (top, left) {\r\n      this.getScrollArea().scrollTop(top).scrollLeft(left)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The absolute document x offset.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getAbsoluteX: function () {\r\n      return this.html.offset().left\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The absolute document y offset.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getAbsoluteY: function () {\r\n      return this.html.offset().top\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the width of the canvas\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getWidth: function () {\r\n      return this.html.width()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the height of the canvas.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getHeight: function () {\r\n      return this.html.height()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Add a figure at the given x/y coordinate. This method fires an event.\r\n     *\r\n     * Example:\r\n     *\r\n     *     canvas.on(\"figure:add\", function(emitter, event){\r\n     *        alert(\"figure added:\");\r\n     *     });\r\n     *\r\n     *     // or more general if you want catch all figure related events\r\n     *     //\r\n     *     canvas.on(\"figure\", function(emitter, event){\r\n     *        // use event.figure.getCanvas()===null to determine if the\r\n     *        // figure part of the canvas\r\n     *\r\n     *        alert(\"figure added or removed:\");\r\n     *     });\r\n     *\r\n     * @param {draw2d.Figure} figure The figure to add.\r\n     * @param {Number/draw2d.geo.Point} [x] The new x coordinate of the figure or the x/y coordinate if it is an draw2d.geo.Point\r\n     * @param {Number} [y] The y position.\r\n     **/\r\n    add: function (figure, x, y) {\r\n      if (figure.getCanvas() === this) {\r\n        return\r\n      }\r\n\r\n      if (figure instanceof draw2d.shape.basic.Line) {\r\n        this.linesToRepaintAfterDragDrop = this.lines\r\n        this.lines.add(figure)\r\n      } else {\r\n        this.figures.add(figure)\r\n      }\r\n      \r\n      if (typeof x !== \"undefined\") {\r\n        figure.setPosition(x,y)\r\n      }\r\n\r\n      figure.setCanvas(this)\r\n\r\n      // to avoid drag&drop outside of this canvas\r\n      figure.installEditPolicy(this.regionDragDropConstraint)\r\n\r\n      // important initial call\r\n      figure.getShapeElement()\r\n\r\n      // init a repaint of the figure. This enforce that all properties\r\n      // ( color, dim, stroke,...) will be set and pushed to SVG node.\r\n      figure.repaint()\r\n\r\n      // fire the figure:add event before the \"move\" event and after the figure.repaint() call!\r\n      //   - the move event can only be fired if the figure part of the canvas.\r\n      //     and in this case the notification event should be fired to the listener before\r\n      this.fireEvent(\"figure:add\", {figure: figure, canvas: this})\r\n\r\n      // fire the event that the figure is part of the canvas\r\n      figure.fireEvent(\"added\", {figure: figure, canvas: this})\r\n\r\n      // ...now we can fire the initial move event\r\n      figure.fireEvent(\"move\", {figure: figure, x: figure.getX(), y: figure.getY(), dx: 0, dy: 0})\r\n\r\n      // this is only required if the used router requires the crossing information\r\n      // of the connections\r\n      if (figure instanceof draw2d.shape.basic.PolyLine) {\r\n        this.calculateConnectionIntersection()\r\n        this.linesToRepaintAfterDragDrop.each((i, line) => {\r\n          line.svgPathString = null\r\n          line.repaint()\r\n        })\r\n        this.linesToRepaintAfterDragDrop = new draw2d.util.ArrayList()\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Remove a figure or connection from the Canvas. This method fires an event\r\n     * which can be catched.\r\n     *\r\n     * Example:\r\n     *\r\n     *     canvas.on(\"figure:remove\", function(emitter, event){\r\n     *        alert(\"figure removed:\");\r\n     *     });\r\n     *\r\n     *     // or more general if you want catch all figure related events\r\n     *     //\r\n     *     canvas.on(\"figure\", function(emitter, event){\r\n     *        // use event.figure.getCanvas()===null to determine if the\r\n     *        // figure part of the canvas\r\n     *\r\n     *        alert(\"figure added or removed:\");\r\n     *     });\r\n     *\r\n     *\r\n     * @param {draw2d.Figure} figure The figure to remove\r\n     **/\r\n    remove: function (figure) {\r\n      // don't fire events of calll callbacks if the fire isn'T part of this canvas\r\n      //\r\n      if (figure.getCanvas() !== this) {\r\n        return this\r\n      }\r\n\r\n      // remove the figure from a selection handler as well and cleanup the\r\n      // selection feedback\r\n      if (this.getSelection().contains(figure)) {\r\n        this.editPolicy.each((i, policy) => {\r\n          if (typeof policy.unselect === \"function\") {\r\n            policy.unselect(this, figure)\r\n          }\r\n        })\r\n      }\r\n\r\n      if (figure instanceof draw2d.shape.basic.Line) {\r\n        this.lines.remove(figure)\r\n      } else {\r\n        this.figures.remove(figure)\r\n      }\r\n\r\n      figure.setCanvas(null)\r\n\r\n      if (figure instanceof draw2d.Connection) {\r\n        figure.disconnect()\r\n      }\r\n\r\n      this.fireEvent(\"figure:remove\", {figure: figure})\r\n\r\n      figure.fireEvent(\"removed\", {figure: figure, canvas: this})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns all lines/connections in this workflow/canvas.<br>\r\n     *\r\n     * @returns {draw2d.util.ArrayList}\r\n     **/\r\n    getLines: function () {\r\n      return this.lines\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the internal figures.<br>\r\n     *\r\n     * @returns {draw2d.util.ArrayList}\r\n     **/\r\n    getFigures: function () {\r\n      return this.figures\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the line or connection with the given id.\r\n     *\r\n     * @param {String} id The id of the line.\r\n     *\r\n     * @returns {draw2d.shape.basic.Line}\r\n     **/\r\n    getLine: function (id) {\r\n      let count = this.lines.getSize()\r\n      for (let i = 0; i < count; i++) {\r\n        let line = this.lines.get(i)\r\n        if (line.getId() === id) {\r\n          return line\r\n        }\r\n      }\r\n      return null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the figure with the given id.\r\n     *\r\n     * @param {String} id The id of the figure.\r\n     * @returns {draw2d.Figure}\r\n     **/\r\n    getFigure: function (id) {\r\n      let figure = null\r\n      this.figures.each((i, e) => {\r\n        if (e.id === id) {\r\n          figure = e\r\n          return false\r\n        }\r\n      })\r\n      return figure\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return all intersections draw2d.geo.Point between the given line and all other\r\n     * lines in the canvas.\r\n     *\r\n     * @param {draw2d.shape.basic.Line} line the line for the intersection test\r\n     * @returns {draw2d.util.ArrayList}\r\n     */\r\n    getIntersection: function (line) {\r\n      let result = new draw2d.util.ArrayList()\r\n\r\n      this.lineIntersections.each((i, entry) => {\r\n        if (entry.line === line) {\r\n          entry.intersection.each((j, p) => {\r\n            result.add({x: p.x, y: p.y, justTouching: p.justTouching, other: entry.other})\r\n          })\r\n        }\r\n      })\r\n\r\n      return result\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     *  Adjust the coordinate with the installed SnapToHelper.\r\n     *\r\n     * @param  {draw2d.Figure} figure The related figure\r\n     * @param  {draw2d.geo.Point} pos The position to adjust\r\n     *\r\n     * @returns {draw2d.geo.Point} the adjusted position\r\n     * @private\r\n     **/\r\n    snapToHelper: function (figure, pos) {\r\n      // disable snapToPos if we have select more than one element\r\n      // which are currently in Drag&Drop operation\r\n      //\r\n      if (this.getSelection().getSize() > 1) {\r\n        return pos\r\n      }\r\n\r\n      let orig = pos.clone()\r\n      this.editPolicy.each((i, policy) => {\r\n        if (policy instanceof draw2d.policy.canvas.SnapToEditPolicy) {\r\n          pos = policy.snap(this, figure, pos, orig)\r\n        }\r\n      })\r\n\r\n      return pos\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Register a port to the canvas. This is required for other ports to find a valid drop target.\r\n     *\r\n     * @param {draw2d.Port} port The new port which has been added to the Canvas.\r\n     **/\r\n    registerPort: function (port) {\r\n      // All elements have the same drop targets.\r\n      //\r\n      if (!this.commonPorts.contains(port)) {\r\n        this.commonPorts.add(port)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Remove a port from the internal cnavas registration. Now other ports can't find the\r\n     * port anymore as drop target. The port itself is still visible.\r\n     *\r\n     * @param {draw2d.Port} port The port to unregister as potential drop target\r\n     * @private\r\n     * @returns {this}\r\n     **/\r\n    unregisterPort: function (port) {\r\n      this.commonPorts.remove(port)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return all ports in the canvas\r\n     *\r\n     * @returns {draw2d.util.ArrayList} all ports from all figures\r\n     */\r\n    getAllPorts: function () {\r\n      return this.commonPorts\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the command stack for the Canvas. Required for undo/redo support.\r\n     *\r\n     * @returns {draw2d.command.CommandStack}\r\n     **/\r\n    getCommandStack: function () {\r\n      return this.commandStack\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the current selected figure in the Canvas.\r\n     *\r\n     * @returns {draw2d.Figure}\r\n     **/\r\n    getPrimarySelection: function () {\r\n      return this.selection.getPrimary()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the current selection.\r\n     *\r\n     * @returns {draw2d.Selection}\r\n     **/\r\n    getSelection: function () {\r\n      return this.selection\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the current selected figure or figures in the canvas.<br>\r\n     * <br>\r\n     * You can hand over a draw2d.util.ArrayList since version 4.8.0 for multiple selection.\r\n     *\r\n     * @param {draw2d.Figure| draw2d.util.ArrayList} object The figure or list of figures to select.\r\n     * @returns {this}\r\n     **/\r\n    setCurrentSelection: function (object) {\r\n      // deselect the current selected figures\r\n      //\r\n      // clone the array (getAll) before iterate and modify the initial array\r\n      this.selection.getAll().each((i, e) => {\r\n        this.editPolicy.each((i, policy) => {\r\n          if (typeof policy.unselect === \"function\") {\r\n            policy.unselect(this, e)\r\n          }\r\n        })\r\n      })\r\n      this.addSelection(object)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Add the current figure to the selection. If a single selection policy is installed in the\r\n     * canvas the selection before is reseted and the figure is the one and only selection.\r\n     *\r\n     * @param {draw2d.Figure | draw2d.util.ArrayList} object The figure(s) to add to the selection\r\n     * @since 4.6.0\r\n     * @returns {this}\r\n     **/\r\n    addSelection: function (object) {\r\n\r\n      let add = (i, figure) =>{\r\n        this.editPolicy.each( (i, policy) =>{\r\n          if (typeof policy.select === \"function\") {\r\n            policy.select(this, figure)\r\n          }\r\n        })\r\n      }\r\n\r\n      if (object instanceof draw2d.util.ArrayList || object instanceof draw2d.Selection) {\r\n        object.each(add)\r\n      } else {\r\n        add(0, object)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the best figure at the location [x,y]. It is a simple hit test. Keep in mind that only visible objects\r\n     * are returned.\r\n     *\r\n     *\r\n     * @param {Number} x The x position.\r\n     * @param {Number} y The y position.\r\n     * @param {draw2d.Figure|Array|Class} [blacklist] The figures or class which should be ignored.\r\n     * @param {draw2d.Figure|Array|Class} [whitelist] The figures or class should be considered.\r\n     *\r\n     * @returns {draw2d.Figure}\r\n     **/\r\n    getBestFigure: function (x, y, blacklist, whitelist) {\r\n      if (!Array.isArray(blacklist)) {\r\n        if (blacklist)\r\n          blacklist = [blacklist]\r\n        else\r\n          blacklist = []\r\n      }\r\n\r\n      if (!Array.isArray(whitelist)) {\r\n        if (whitelist)\r\n          whitelist = [whitelist]\r\n        else\r\n          whitelist = []\r\n      }\r\n\r\n      let result = null\r\n      let testFigure = null\r\n\r\n\r\n      let isInList = function (testFigure, list) {\r\n        for (let i = 0, len = list.length; i < len; i++) {\r\n          let considering = list[i]\r\n          if (typeof considering === \"function\") {\r\n            if (testFigure instanceof considering) {\r\n              return true\r\n            }\r\n          } else if ((considering === testFigure) || (considering.contains(testFigure))) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n      let isInBlacklist = function (item) {\r\n        return isInList(item, blacklist)\r\n      }\r\n      // empty whitelist means that every kind of object is allowed\r\n      let isInWhitelist = whitelist.length === 0 ? function () {\r\n        return true\r\n      } : function (item) {\r\n        return isInList(item, whitelist)\r\n      }\r\n\r\n\r\n      // tool method to check recursive a figure for hitTest\r\n      //\r\n      let checkRecursive = function (children) {\r\n        children.each(function (i, e) {\r\n          let c = e.figure\r\n          checkRecursive(c.children)\r\n          if (result === null && c.isVisible() && c.hitTest(x, y) && !isInBlacklist(c) && isInWhitelist(c)) {\r\n            result = c\r\n          }\r\n          return result === null // break the each-loop if we found an element\r\n        })\r\n      }\r\n\r\n\r\n      // ResizeHandles\r\n      //\r\n      for (let i = 0, len = this.resizeHandles.getSize(); i < len; i++) {\r\n        testFigure = this.resizeHandles.get(i)\r\n        if (testFigure.isVisible() && testFigure.hitTest(x, y) && !isInBlacklist(testFigure) && isInWhitelist(testFigure)) {\r\n          return testFigure\r\n        }\r\n      }\r\n\r\n      // Checking ports\r\n      //\r\n      for (let i = 0, len = this.commonPorts.getSize(); i < len; i++) {\r\n        let port = this.commonPorts.get(i)\r\n        // check first a children of the figure\r\n        //\r\n        checkRecursive(port.children)\r\n\r\n        if (result === null && port.isVisible() && port.hitTest(x, y) && !isInBlacklist(port) && isInWhitelist(port)) {\r\n          result = port\r\n        }\r\n\r\n        if (result !== null) {\r\n          return result\r\n        }\r\n      }\r\n\r\n\r\n      //  Check now the common objects.\r\n      //  run reverse to aware the z-oder of the figures\r\n      for (let i = (this.figures.getSize() - 1); i >= 0; i--) {\r\n        let figure = this.figures.get(i)\r\n        // check first a children of the figure\r\n        //\r\n        checkRecursive(figure.children)\r\n\r\n        // ...and the figure itself\r\n        //\r\n        if (result === null && figure.isVisible() && figure.hitTest(x, y) && !isInBlacklist(figure) && isInWhitelist(figure)) {\r\n          result = figure\r\n          break\r\n        }\r\n      }\r\n\r\n      let figureResult = result\r\n      let childResult = null\r\n      let lineResult = this.getBestLine(x, y, blacklist, whitelist)\r\n      result = null\r\n\r\n\r\n      // Check the children of the lines as well\r\n      // Not selectable/draggable. But should receive onClick/onDoubleClick events\r\n      // as well.\r\n      let count = this.lines.getSize()\r\n      for (let i = 0; i < count; i++) {\r\n        let line = this.lines.get(i)\r\n        // check first a children of the figure\r\n        //\r\n        checkRecursive(line.children)\r\n\r\n        if (result !== null) {\r\n          childResult = result\r\n          break\r\n        }\r\n      }\r\n\r\n      let figureIndex = figureResult !== null ? $(figureResult.shape.node).index() : -1\r\n      let childIndex = childResult !== null ? $(childResult.shape.node).index() : -1\r\n      let lineIndex = lineResult !== null ? $(lineResult.shape.node).index() : -1\r\n      let array = [\r\n        {i: figureIndex, f: figureResult},\r\n        {i: childIndex, f: childResult},\r\n        {i: lineIndex, f: lineResult}\r\n      ]\r\n      array = array.filter((e) => e.i !== -1);\r\n      array = array.sort((a, b) => b.i - a.i)\r\n\r\n\r\n      if (array.length > 0) {\r\n        result = array[0].f\r\n      }\r\n\r\n      return result\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the line which match the hands over coordinate\r\n     *\r\n     * @param {Number} x the x-coordinate for the hit test\r\n     * @param {Number} y the x-coordinate for the hit test\r\n     * @param {draw2d.shape.basic.Line} [lineToIgnore] a possible line which should be ignored for the hit test\r\n     *\r\n     * @private\r\n     * @returns {draw2d.shape.basic.Line}\r\n     **/\r\n    getBestLine: function (x, y, lineToIgnore) {\r\n      if (!Array.isArray(lineToIgnore)) {\r\n        if (lineToIgnore instanceof draw2d.Figure) {\r\n          lineToIgnore = [lineToIgnore]\r\n        } else {\r\n          lineToIgnore = []\r\n        }\r\n      }\r\n      let count = this.lines.getSize()\r\n\r\n      for (let i = 0; i < count; i++) {\r\n        let line = this.lines.get(i)\r\n        if (line.isVisible() === true && line.hitTest(x, y) === true && $.inArray(line, lineToIgnore) === -1) {\r\n          return line\r\n        }\r\n      }\r\n      return null\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag&drop operations.<br>\r\n     * Droppable can be setup with:\r\n     * <pre>\r\n     *    $(\".draw2d_droppable\").draggable({\r\n     *         appendTo:\"#container\",\r\n     *         stack:\"#container\",\r\n     *         zIndex: 27000,\r\n     *         helper:\"clone\",\r\n     *         start: function(e, ui){$(ui.helper).addClass(\"shadow\");}\r\n     *    });\r\n     * </pre>\r\n     * Draw2D use the jQuery draggable/droppable lib. Please inspect\r\n     * http://jqueryui.com/demos/droppable/ for further information.\r\n     *\r\n     * @param {HTMLElement} draggedDomNode The DOM element which is currently dragging\r\n     *\r\n     * @template\r\n     **/\r\n    onDragEnter: function (draggedDomNode) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the DragDrop object is moving around.<br>\r\n     * <br>\r\n     * Draw2D use the jQuery draggable/droppable lib. Please inspect\r\n     * http://jqueryui.com/demos/droppable/ for further information.\r\n     *\r\n     * @param {HTMLElement} draggedDomNode The dragged DOM element.\r\n     * @param {Number} x the x coordinate of the drag\r\n     * @param {Number} y the y coordinate of the drag\r\n     *\r\n     * @template\r\n     **/\r\n    onDrag: function (draggedDomNode, x, y) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the DragDrop object leaving the current hover figure.<br>\r\n     * <br>\r\n     * Graphiti use the jQuery draggable/droppable lib. Please inspect\r\n     * http://jqueryui.com/demos/droppable/ for further information.\r\n     *\r\n     * @param {HTMLElement} draggedDomNode The figure which is currently dragging\r\n     *\r\n     * @template\r\n     **/\r\n    onDragLeave: function (draggedDomNode) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the user drop the droppedDomNode onto the canvas.<br>\r\n     * <br>\r\n     * Draw2D use the jQuery draggable/droppable lib. Please inspect\r\n     * http://jqueryui.com/demos/droppable/ for further information.\r\n     *\r\n     * @param {HTMLElement} droppedDomNode The dropped DOM element.\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @template\r\n     **/\r\n    onDrop: function (droppedDomNode, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Callback method for the double click event. The x/y coordinates are relative to the top left\r\n     * corner of the canvas.\r\n     *\r\n     * @private\r\n     **/\r\n    onDoubleClick: function (x, y, shiftKey, ctrlKey) {\r\n      // check if a line has been hit\r\n      //\r\n      let figure = this.getBestFigure(x, y)\r\n\r\n      // or a line/connection. May we should test the line before a figure..?\r\n      // (since 4.0.0)\r\n      if (figure === null) {\r\n        figure = this.getBestLine(x, y)\r\n      }\r\n\r\n      this.fireEvent(\"dblclick\", {figure: figure, x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n      // forward the event to all install policies as well.\r\n      // (since 4.0.0)\r\n      this.editPolicy.each(function (i, policy) {\r\n        policy.onDoubleClick(figure, x, y, shiftKey, ctrlKey)\r\n      })\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {Number} x the x coordinate of the event\r\n     * @param {Number} y the y coordinate of the event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @private\r\n     **/\r\n    onClick: function (x, y, shiftKey, ctrlKey) {\r\n      // check if a figure has been hit\r\n      //\r\n      let figure = this.getBestFigure(x, y)\r\n\r\n      this.fireEvent(\"click\", {\r\n        figure: figure,\r\n        x: x,\r\n        y: y,\r\n        relX: figure !== null ? x - figure.getAbsoluteX() : 0,\r\n        relY: figure !== null ? y - figure.getAbsoluteY() : 0,\r\n        shiftKey: shiftKey,\r\n        ctrlKey: ctrlKey\r\n      })\r\n\r\n      // forward the event to all install policies as well.\r\n      // (since 3.0.0)\r\n      this.editPolicy.each(function (i, policy) {\r\n        policy.onClick(figure, x, y, shiftKey, ctrlKey)\r\n      })\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The user has triggered a right click. Redirect them to a responsible figure.\r\n     *\r\n     * @param {Number} x The x-coordinate of the click\r\n     * @param {Number} y The y-coordinate of the click\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @private\r\n     * @since 1.1.0\r\n     **/\r\n    onRightMouseDown: function (x, y, shiftKey, ctrlKey) {\r\n      let figure = this.getBestFigure(x, y)\r\n      this.fireEvent(\"contextmenu\", {figure: figure, x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n      if (figure !== null) {\r\n        figure.fireEvent(\"contextmenu\", {figure: figure, x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n        // @deprecated legacy call\r\n        figure.onContextMenu(x, y)\r\n\r\n        // forward the event to all installed policies of the figure\r\n        // soft migration from onHookXYZ to Policies.\r\n        // since 4.4.0\r\n        figure.editPolicy.each(function (i, policy) {\r\n          policy.onRightMouseDown(figure, x, y, shiftKey, ctrlKey)\r\n        })\r\n      }\r\n\r\n      // forward the event to all install policies as well.\r\n      // (since 4.4.0)\r\n      this.editPolicy.each(function (i, policy) {\r\n        policy.onRightMouseDown(figure, x, y, shiftKey, ctrlKey)\r\n      })\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {Number} wheelDelta the delata of the wheel rotation\r\n     * @param {Number} x the x coordinate of the event\r\n     * @param {Number} y the y coordinate of the event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @private\r\n     **/\r\n    onMouseWheel: function (wheelDelta, x, y, shiftKey, ctrlKey) {\r\n      let returnValue = true\r\n      this.fireEvent(\"wheel\", {wheelDelta: wheelDelta, x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n      // forward the event to all install policies as well.\r\n      // (since 3.0.0)\r\n      this.editPolicy.each(function (i, policy) {\r\n        returnValue = policy.onMouseWheel(wheelDelta, x, y, shiftKey, ctrlKey) && returnValue\r\n      })\r\n\r\n      return returnValue\r\n    },\r\n\r\n\r\n    // NEW EVENT HANDLING SINCE VERSION 5.0.0\r\n    /**\r\n     *\r\n     * Execute all handlers and behaviors attached to the canvas for the given event type.\r\n     *\r\n     *\r\n     * @param {String} event the event to trigger\r\n     * @param {Object} [args] optional parameters for the triggered event callback\r\n     * @private\r\n     * @since 5.0.0\r\n     */\r\n    fireEvent: function (event, args) {\r\n      if (typeof this.eventSubscriptions[event] === 'undefined') {\r\n        return\r\n      }\r\n\r\n      let subscribers = this.eventSubscriptions[event]\r\n      for (let i = 0; i < subscribers.length; i++) {\r\n        try {\r\n          subscribers[i](this, args)\r\n        } catch (exc) {\r\n          console.log(exc)\r\n          console.log(subscribers[i])\r\n          debugger\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Attach an event handler function for one or more events to the canvas.\r\n     * To remove events bound with .on(), see {@link #off}.\r\n     *\r\n     * possible events are:<br>\r\n     * <ul>\r\n     *   <li>reset</li>\r\n     *   <li>select</li>\r\n     * </ul>\r\n     *\r\n     * Example:\r\n     *\r\n     *     canvas.on(\"clear\", function(emitter, event){\r\n     *        alert(\"canvas.clear() called.\");\r\n     *     });\r\n     *\r\n     *     canvas.on(\"select\", function(emitter,event){\r\n     *        alert(\"figure selected\");\r\n     *     });\r\n     *\r\n     *     canvas.on(\"unselect\", function(emitter,event){\r\n     *        alert(\"figure unselected\");\r\n     *     });\r\n     * \r\n     * @param {String}   event One or more space-separated event types\r\n     * @param {Function} callback A function to execute when the event is triggered.\r\n     * @param {draw2d.Canvas} callback.emitter the emitter of the event\r\n     * @param {Object} [callback.obj] optional event related data\r\n     *\r\n     * @since 5.0.0\r\n     */\r\n    on: function (event, callback) {\r\n      let events = event.split(\" \")\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (typeof this.eventSubscriptions[events[i]] === 'undefined') {\r\n          this.eventSubscriptions[events[i]] = []\r\n        }\r\n        this.eventSubscriptions[events[i]].push(callback)\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The `off()` method removes event handlers that were attached with {@link #on}.<br>\r\n     * Calling .off() with no arguments removes all handlers attached to the canvas.<br>\r\n     * <br>\r\n     * If a simple event name such as \"reset\" is provided, all events of that type are removed from the canvas.\r\n     *\r\n     *\r\n     * @param {String|Function} eventOrFunction the event name of the registerd function\r\n     * @since 5.0.0\r\n     */\r\n    off: function (eventOrFunction) {\r\n      if (typeof eventOrFunction === \"undefined\") {\r\n        this.eventSubscriptions = {}\r\n      } else if (typeof eventOrFunction === 'string') {\r\n        this.eventSubscriptions[eventOrFunction] = []\r\n      } else {\r\n        for (let event in this.eventSubscriptions) {\r\n          this.eventSubscriptions[event] = this.eventSubscriptions[event].filter(function (callback) {\r\n            return callback !== eventOrFunction\r\n          })\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n  })\r\n","import draw2d from 'packages'\r\n\r\ndraw2d.Configuration = {\r\n    version : \"@VERSION@\",\r\n    i18n : {\r\n        command : {\r\n            move : \"Move Shape\",\r\n            assignShape : \"Add Shapes to Composite\",\r\n            groupShapes : \"Group Shapes\",\r\n            ungroupShapes : \"Ungroup Shapes\",\r\n            deleteShape : \"Delete Shape\",\r\n            moveShape : \"Move Shape\",\r\n            moveLine : \"Move Line\",\r\n            addShape : \"Add Shape\",\r\n            moveVertex : \"Move Vertex\",\r\n            moveVertices : \"Move Vertices\",\r\n            deleteVertex : \"Delete Vertex\",\r\n            resizeShape : \"Resize Shape\",\r\n            rotateShape : \"Rotate Shape\",\r\n            collection : \"Execute Commands\",\r\n            addVertex : \"Add Vertex\",\r\n            changeAttributes:\"Change Attributes\",\r\n            connectPorts : \"Connect Ports\"\r\n        },\r\n        menu : {\r\n            deleteSegment : \"Delete Segment\",\r\n            addSegment : \"Add Segment\"\r\n        },\r\n        dialog : {\r\n            filenamePrompt : \"Enter Filename:\"\r\n        }\r\n    },\r\n\r\n    factory:{\r\n    \t// all selection policies calles this method to create a ResizeHandle.\r\n    \t// It is possible to replace this method with a custom implementation\r\n    \t// @since 5.2.0\r\n    \tcreateResizeHandle: function(owner, type, width, height){\r\n            // create a custom SelectionPolicy instead\r\n            console.log(\"deprecated call factory.createResizeHandle\");\r\n    \t\treturn new draw2d.ResizeHandle({ owner, type, width, height });\r\n    \t},\r\n    \t// The commands an canvas calles this method to create a new connection.\r\n    \t// all parameters are optional.\r\n    \t// @since 5.3.0\r\n        // @deprecated\r\n    \tcreateConnection: function(sourcePort, targetPort, callback, dropTarget){\r\n            console.log(\"deprecated call factory.createConnection\");\r\n            debugger;\r\n    \t    return new draw2d.Connection();\r\n    \t},\r\n        // @since 5.3.0\r\n    \tcreateInputPort: function(relatedFigure){\r\n    \t    return new draw2d.InputPort();\r\n    \t},\r\n        // @since 5.3.0\r\n        createOutputPort: function(relatedFigure){\r\n            return new draw2d.OutputPort();\r\n        },\r\n        // @since 5.3.0\r\n        createHybridPort: function(relatedFigure){\r\n            return new draw2d.HybridPort();\r\n        }\r\n    }\r\n};\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Connections figures are used to display a line between two points. The Connection interface extends\r\n * {@link draw2d.shape.basic.PolyLine PolyLine}.<br>\r\n * The source and target endpoints of a connection are each defined using a {@link draw2d.layout.anchor.ConnectionAnchor ConnectionAnchor}.\r\n * These endpoints, along with any other points on the connection, are set by the connection's  {@link draw2d.layout.connection.ConnectionRouter ConnectionRouter}.\r\n * <br>\r\n * Usually every connection in a drawing has the same router instance. Connections with\r\n * common endpoints can share anchor instances as well.\r\n *\r\n * <h2>Connection Usage</h2>\r\n *\r\n * Connections are created and added just like any other figure. Unlike normal figures, you must not set the\r\n * bounds of a connection. Instead, you must provide the source and target port and let the connection router\r\n * calculate the connection's points. The connection then determines its own bounding box.<br>\r\n * <br>\r\n * A connection has a simple router by default - one that can connect the source and target anchors. But additional routers\r\n * are available and can be set on the connection. Some routers can handle constraints for the connection. Note that when\r\n * setting a routing constraint on a connection, you must first set the router which will use that constraint.<br>\r\n * <br>\r\n *\r\n * <b>TODO:<br></b>\r\n * <i>\r\n * A convenient way to share the router with all connections and to place connections above the drawing is to use a\r\n * ConnectionLayer. The layer has a connection router property which it shares with every child that's a connection.\r\n * You can update this property and easily change every connection's router at once.\r\n * </i>\r\n * <br>\r\n * <br>\r\n * <h2>Routing and Anchors</h2>\r\n * A connection always has a router and it must set at least two ports on the connection: the source and target\r\n * endpoints. By default, or when set to null, the connection's routing will be performed by an internal default router.\r\n * The ends are placed with the help of {@link draw2d.layout.anchor.ConnectionAnchor anchors}. An\r\n * {@link draw2d.layout.anchor.ConnectionAnchor anchors} is a fixed or calculated location, usually associated with some\r\n * figure. For example, the {@link draw2d.layout.anchor.ChopboxConnectionAnchor ChopboxAnchor} finds the point at which a\r\n * line going to the reference point intersects a box, such as the bounds of a figure. The reference point is either\r\n * the anchor at the opposite end, or a bendpoint or some other point nearest to the anchor.\r\n * <br>\r\n * {@img jsdoc_chopbox.gif ChopboxAnchor}\r\n * <br>\r\n * The router calculates the endpoints and any other points in the middle of the connection. It then sets the points on the\r\n * connection by calling {@link draw2d.shape.basic.PolyLine#addPoint Polyline.addPoint}. The connection's existing point list\r\n * can be reused to reduce garbage, but the points must be set on the connection anyway so that it knows about any changes made.\r\n * <br>\r\n * <h2>Adding Decorations and Children to Connections</h2>\r\n * Like most figures, Connection supports the addition of children. The children might be a label that\r\n * decorate the connection. The placement of each type of decoration can vary, so a {@link draw2d.layout.locator.ConnectionLocator ConnectionLocator}\r\n * is used to delegate to each child's constraint object, a Locator. <br>\r\n * <br>\r\n * {@link draw2d.decoration.connection.Decorator Decorator} can be used to create and render a rotatable shape at\r\n * the end or start of a connection like arrows or boxes. Examples are {@link draw2d.decoration.connection.ArrowDecorator ArrowDecorator}, {@link draw2d.decoration.connection.BarDecorator BarDecorator} or {@link draw2d.decoration.connection.CircleDecorator CircleDecorator}\r\n * <br>\r\n * <h2>Connection Layout</h2>\r\n * Connections extend the process of validation and layout to include routing. Since layout is the process of positioning children, routing must\r\n * come first. This allows a child's locator to operate on the connection's newly-routed points.<br>\r\n * Check out [Class System Guide](#!/guide/class_system) for additional reading.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.PolyLine\r\n */\r\n\r\ndraw2d.Connection = draw2d.shape.basic.PolyLine.extend(\r\n  /** @lends draw2d.Connection.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.Connection\",\r\n\r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.sourcePort = null\r\n      this.targetPort = null\r\n\r\n      this.oldPoint = null\r\n\r\n      this.sourceDecorator = null\r\n      /*:draw2d.ConnectionDecorator*/\r\n      this.targetDecorator = null\r\n      /*:draw2d.ConnectionDecorator*/\r\n\r\n      // decoration of the polyline\r\n      //\r\n      this.sourceDecoratorNode = null\r\n      this.targetDecoratorNode = null\r\n\r\n      // helper let to restore the initial visual representation if the user drag&drop\r\n      // the port outside of the browser window. In this case some events get lost and\r\n      // I can restore the initial state of the connection if the mouse comes in the browser window\r\n      // again.\r\n      this.isMoving = false\r\n\r\n      this.moveListener = (figure) => {\r\n        if (figure === this.sourcePort) {\r\n          this.setStartPoint(this.sourcePort.getAbsoluteX(), this.sourcePort.getAbsoluteY())\r\n        } else {\r\n          this.setEndPoint(this.targetPort.getAbsoluteX(), this.targetPort.getAbsoluteY())\r\n        }\r\n      }\r\n\r\n      this._super(\r\n        {\r\n          color: \"#129CE4\",\r\n          stroke: 2,\r\n          //    outlineStroke:1,\r\n          //    outlineColor:\"#ffffff\",\r\n          radius: 3,\r\n          ...attr},\r\n        {\r\n          sourceDecorator: this.setSourceDecorator,\r\n          targetDecorator: this.setTargetDecorator,\r\n          source: this.setSource,\r\n          target: this.setTarget,\r\n          ...setter\r\n       },\r\n        {\r\n          sourceDecorator: this.getSourceDecorator,\r\n          targetDecorator: this.getTargetDecorator,\r\n          source: this.getSource,\r\n          target: this.getTarget,\r\n          ...getter\r\n      })\r\n    },\r\n\r\n\r\n    /**\r\n     * @private\r\n     **/\r\n    disconnect: function () {\r\n      if (this.sourcePort !== null) {\r\n        this.sourcePort.off(this.moveListener)\r\n        this.sourcePort.connections.remove(this)\r\n\r\n        // fire the events to all listener\r\n        this.sourcePort.fireEvent(\"disconnect\", {port: this.sourcePort, connection: this})\r\n        this.canvas?.fireEvent(\"disconnect\", {port: this.sourcePort, connection: this})\r\n        this.sourcePort.onDisconnect(this)\r\n\r\n        this.fireSourcePortRouteEvent()\r\n      }\r\n\r\n      if (this.targetPort !== null) {\r\n        this.targetPort.off(this.moveListener)\r\n        this.targetPort.connections.remove(this)\r\n\r\n        // fire the events to all listener\r\n        this.targetPort.fireEvent(\"disconnect\", {port: this.targetPort, connection: this})\r\n        this.canvas?.fireEvent(\"disconnect\", {port: this.targetPort, connection: this})\r\n        this.targetPort.onDisconnect(this)\r\n\r\n        this.fireTargetPortRouteEvent()\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * @private\r\n     **/\r\n    reconnect: function () {\r\n      if (this.sourcePort !== null) {\r\n        this.sourcePort.on(\"move\", this.moveListener)\r\n        this.sourcePort.connections.add(this)\r\n\r\n        // fire the events to all listener\r\n        this.sourcePort.fireEvent(\"connect\", {port: this.sourcePort, connection: this})\r\n        this.canvas?.fireEvent(\"connect\", {port: this.sourcePort, connection: this})\r\n        this.sourcePort.onConnect(this)\r\n\r\n        this.fireSourcePortRouteEvent()\r\n      }\r\n\r\n      if (this.targetPort !== null) {\r\n        this.targetPort.on(\"move\", this.moveListener)\r\n        this.targetPort.connections.add(this)\r\n\r\n        // fire the events to all listener\r\n        this.targetPort.fireEvent(\"connect\", {port: this.targetPort, connection: this})\r\n        this.canvas?.fireEvent(\"connect\", {port: this.targetPort, connection: this})\r\n        this.targetPort.onConnect(this)\r\n\r\n        this.fireTargetPortRouteEvent()\r\n      }\r\n      this.routingRequired = true\r\n      this.repaint()\r\n    },\r\n\r\n\r\n    /**\r\n     * You can't drag&drop the resize handles of a connector.\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    isResizeable: function () {\r\n      return this.isDraggable()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Add a child figure to the Connection. The hands over figure doesn't support drag&drop\r\n     * operations. It's only a decorator for the connection.<br>\r\n     * Mainly for labels or other fancy decorations :-)\r\n     *\r\n     * @param {draw2d.Figure} child the figure to add as decoration to the connection.\r\n     * @param {draw2d.layout.locator.ConnectionLocator} locator the locator for the child.\r\n     * @param {Number} [index] optional index where to insert the figure\r\n     * @returns {this}\r\n     **/\r\n    add: function (child, locator, index) {\r\n      // just to ensure the right interface for the locator.\r\n      // The base class needs only 'draw2d.layout.locator.Locator'.\r\n      if (!(locator instanceof draw2d.layout.locator.ConnectionLocator)) {\r\n        throw \"Locator must implement the class draw2d.layout.locator.ConnectionLocator\"\r\n      }\r\n\r\n      this._super(child, locator, index)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the ConnectionDecorator for this object.\r\n     *\r\n     * @param {draw2d.decoration.connection.Decorator} decorator the new source decorator for the connection\r\n     * @returns {this}\r\n     **/\r\n    setSourceDecorator: function (decorator) {\r\n\r\n      this.sourceDecorator?.setParent(null)\r\n\r\n      this.sourceDecorator = decorator\r\n      this.routingRequired = true\r\n      this.sourceDecorator.setParent(this)\r\n\r\n      this.sourceDecoratorNode?.remove()\r\n      this.sourceDecoratorNode = null\r\n\r\n      this.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the current source ConnectionDecorator for this object.\r\n     *\r\n     * @returns draw2d.decoration.connection.Decorator\r\n     **/\r\n    getSourceDecorator: function () {\r\n      return this.sourceDecorator\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the ConnectionDecorator for this object.\r\n     *\r\n     * @param {draw2d.decoration.connection.Decorator} decorator the new target decorator for the connection\r\n     * @returns {this}\r\n     **/\r\n    setTargetDecorator: function (decorator) {\r\n      this.targetDecorator?.setParent(null)\r\n\r\n      this.targetDecorator = decorator\r\n      this.routingRequired = true\r\n      this.targetDecorator.setParent(this)\r\n\r\n      this.targetDecoratorNode?.remove()\r\n      this.targetDecoratorNode = null\r\n\r\n      this.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the current target ConnectionDecorator for this object.\r\n     *\r\n     * @returns draw2d.decoration.connection.Decorator\r\n     **/\r\n    getTargetDecorator: function () {\r\n      return this.targetDecorator\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Calculate the path of the polyline.\r\n     *\r\n     * @param {Object} routingHints some helper attributes for the router\r\n     * @param {Boolean} routingHints.startMoved is true if just the start location has moved\r\n     * @param {Boolean} routingHints.destMoved is true if the destination location has changed\r\n     * @private\r\n     */\r\n    calculatePath: function (routingHints) {\r\n\r\n      if (this.sourcePort === null || this.targetPort === null) {\r\n        return this\r\n      }\r\n\r\n      this._super(routingHints)\r\n\r\n      if (this.shape !== null) {\r\n        let z1 = this.sourcePort.getZOrder()\r\n        let z2 = this.targetPort.getZOrder()\r\n        this.toBack(z1 < z2 ? this.sourcePort:this.targetPort)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     **/\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || \r\n          this.shape          === null || \r\n          this.sourcePort     === null || \r\n          this.targetPort     === null) {\r\n        return\r\n      }\r\n\r\n\r\n      this._super(attributes)\r\n\r\n      // paint the decorator if any exists\r\n      //\r\n      if (this.targetDecorator !== null && this.targetDecoratorNode === null) {\r\n        this.targetDecoratorNode = this.targetDecorator.paint(this.getCanvas().paper)\r\n      }\r\n\r\n      if (this.sourceDecorator !== null && this.sourceDecoratorNode === null) {\r\n        this.sourceDecoratorNode = this.sourceDecorator.paint(this.getCanvas().paper)\r\n      }\r\n\r\n      // translate/transform the decorations to the end/start of the connection\r\n      // and rotate them as well\r\n      //\r\n      if (this.sourceDecoratorNode !== null) {\r\n        let start = this.getVertices().first()\r\n        this.sourceDecoratorNode.transform(\"r\" + this.getStartAngle() + \",\" + start.x + \",\" + start.y + \" t\" + start.x + \",\" + start.y)\r\n        // propagate the color and the opacity to the decoration as well\r\n        this.sourceDecoratorNode.attr({opacity: this.alpha})\r\n        // apply the color of the connection if the decoration doesn't have any\r\n        if (this.sourceDecorator.getColor() === null) {\r\n          this.sourceDecoratorNode.attr({\"stroke\": \"#\" + this.lineColor.hex()})\r\n        } else {\r\n          this.sourceDecoratorNode.attr({\"stroke\": \"#\" + this.sourceDecorator.getColor().hex()})\r\n        }\r\n        this.sourceDecoratorNode.forEach(shape => {\r\n          shape.node.setAttribute(\"class\", this.cssClass !== null ? this.cssClass : \"\")\r\n        })\r\n      }\r\n\r\n      if (this.targetDecoratorNode !== null) {\r\n        let end = this.getVertices().last()\r\n        this.targetDecoratorNode.transform(\"r\" + this.getEndAngle() + \",\" + end.x + \",\" + end.y + \" t\" + end.x + \",\" + end.y)\r\n        this.targetDecoratorNode.attr({opacity: this.alpha})\r\n        // apply the color of the connection if the decoration doesn't have any\r\n        if (this.targetDecorator.getColor() === null) {\r\n          this.targetDecoratorNode.attr({stroke: this.lineColor.hash()})\r\n        } else {\r\n          this.targetDecoratorNode.attr({stroke: this.targetDecorator.getColor().hash()})\r\n        }\r\n        this.targetDecoratorNode.forEach(shape => {\r\n          shape.node.setAttribute(\"class\", this.cssClass !== null ? this.cssClass : \"\")\r\n        })\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The x-offset related to the canvas.\r\n     * Didn't provided by a connection. Return always '0'. This is required\r\n     * for children position calculation. (e.g. Label decoration)\r\n     *\r\n     * @returns {Number} the x-offset to the parent figure\r\n     **/\r\n    getAbsoluteX: function () {\r\n      return 0\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The y-offset related to the canvas.\r\n     * Didn't provided by a connection. Return always '0'. This is required\r\n     * for children position calculation. (e.g. Label decoration)\r\n     *\r\n     * @returns {Number} The y-offset to the parent figure.\r\n     **/\r\n    getAbsoluteY: function () {\r\n      return 0\r\n    },\r\n\r\n\r\n    postProcess: function (postProcessCache) {\r\n      this.router.postProcess(this, this.getCanvas(), postProcessCache)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Don't call them manually. This will be done by the framework.<br>\r\n     * Will be called if the object are moved via drag and drop.\r\n     * Sub classes can override this method to implement additional stuff. Don't forget to call\r\n     * the super implementation via <code>this._super(dx, dy, dx2, dy2);</code>\r\n     * @private\r\n     * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n     * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     **/\r\n    onDrag: function (dx, dy, dx2, dy2) {\r\n      if (this.command === null) {\r\n        return\r\n      }\r\n\r\n      // Delegate the drag&drop operation to the router. The router has\r\n      // all the meta information how to update start/end vertices\r\n      //\r\n      this.router.onDrag(this, dx, dy, dx2, dy2)\r\n\r\n      this.command.updateVertices(this.getVertices().clone())\r\n\r\n      // notify all installed policies\r\n      //\r\n      this.editPolicy.each( (i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.onDrag(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      this.svgPathString = null\r\n      this.repaint()\r\n\r\n      // Update the resize handles if the user change the position of the\r\n      // element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      this.fireEvent(\"move\", {figure: this, dx: dx, dy: dx})\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements. Additional\r\n     * the internal model changed as well.\r\n     *\r\n     * Optional: Inserts current object in front of the given one.\r\n     *\r\n     * @param {draw2d.Figure} [figure] move current object in front of the given one.\r\n     * @since 3.0.0\r\n     */\r\n    toFront: function (figure) {\r\n      this._super(figure)\r\n\r\n      // ensure that the decoration is always in front of the connection\r\n      //\r\n      if (this.shape !== null) {\r\n        this.targetDecoratorNode?.insertAfter(this.shape)\r\n        this.sourceDecoratorNode?.insertAfter(this.shape)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Moves the element to the background. Additional\r\n     * the internal model changed as well.\r\n     *\r\n     * @param {draw2d.Figure} [figure] move this object behind of the 'figure'.\r\n     * @since 4.7.2\r\n     */\r\n    toBack: function (figure) {\r\n      this._super(figure)\r\n\r\n      if (this.shape !== null) {\r\n        this.targetDecoratorNode?.insertAfter(this.shape)\r\n        this.sourceDecoratorNode?.insertAfter(this.shape)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the recalculated position of the start point with the usage of\r\n     * the installed connection anchor locator.\r\n     *\r\n     * @returns {draw2d.geo.Point}\r\n     * @deprecated\r\n     **/\r\n    getStartPoint: function (refPoint) {\r\n      return this.getStartPosition(refPoint)\r\n    },\r\n\r\n    getStartPosition: function (refPoint) {\r\n      if (this.isMoving === false) {\r\n        if (refPoint) {\r\n          return this.sourcePort.getConnectionAnchorLocation(refPoint, this)\r\n        }\r\n        return this.sourcePort.getConnectionAnchorLocation(this.targetPort.getConnectionAnchorReferencePoint(this), this)\r\n      }\r\n\r\n      return this._super()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the recalculated position of the start point with the usage of\r\n     * the installed connection anchor locator.\r\n     *\r\n     * @returns {draw2d.geo.Point}\r\n     * @deprecated\r\n     **/\r\n    getEndPoint: function (refPoint) {\r\n      return this.getEndPosition(refPoint)\r\n    },\r\n\r\n    getEndPosition: function (refPoint) {\r\n      if (this.isMoving === false) {\r\n        if (refPoint) {\r\n          return this.targetPort.getConnectionAnchorLocation(refPoint, this)\r\n        }\r\n        return this.targetPort.getConnectionAnchorLocation(this.sourcePort.getConnectionAnchorReferencePoint(this), this)\r\n      }\r\n\r\n      return this._super()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the new source port of this connection. This enforce a repaint of the connection.\r\n     *\r\n     * @param {draw2d.Port} port The new source port of this connection.\r\n     *\r\n     **/\r\n    setSource: function (port) {\r\n      if (this.sourcePort !== null) {\r\n        this.sourcePort.off(this.moveListener)\r\n        this.sourcePort.connections.remove(this)\r\n        this.sourcePort.fireEvent(\"disconnect\", {port: this.sourcePort, connection: this})\r\n        // it is possible that a connection has already a port but is not assigned to\r\n        // a canvas. In this case we must check if the canvas set correct before we fire this event\r\n        this.canvas?.fireEvent(\"disconnect\", {port: this.sourcePort, connection: this})\r\n\r\n        this.sourcePort.onDisconnect(this)\r\n      }\r\n\r\n      this.sourcePort = port\r\n      if (this.sourcePort === null) {\r\n        return\r\n      }\r\n\r\n      this.routingRequired = true\r\n      this.fireSourcePortRouteEvent()\r\n      this.sourcePort.connections.add(this)\r\n      this.sourcePort.on(\"move\", this.moveListener)\r\n\r\n      this.canvas?.fireEvent(\"connect\", {port: this.sourcePort, connection: this})\r\n\r\n      this.sourcePort.fireEvent(\"connect\", {port: this.sourcePort, connection: this})\r\n      this.sourcePort.onConnect(this)\r\n\r\n      this.setStartPoint(port.getAbsoluteX(), port.getAbsoluteY())\r\n      this.fireEvent(\"connect\", {port: this.sourcePort, connection: this})\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the source port of this connection.\r\n     *\r\n     * @returns {draw2d.Port}\r\n     **/\r\n    getSource: function () {\r\n      return this.sourcePort\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the target port of this connection. This enforce a repaint of the connection.\r\n     *\r\n     * @param {draw2d.Port} port The new target port of this connection\r\n     **/\r\n    setTarget: function (port) {\r\n      if (this.targetPort !== null) {\r\n        this.targetPort.off(this.moveListener)\r\n        this.targetPort.connections.remove(this)\r\n        this.targetPort.fireEvent(\"disconnect\", {port: this.targetPort, connection: this})\r\n        // it is possible that a connection has already a port but is not assigned to\r\n        // a canvas. In this case we must check if the canvas set correct before we fire this event\r\n        this.canvas?.fireEvent(\"disconnect\", {port: this.targetPort, connection: this})\r\n\r\n        this.targetPort.onDisconnect(this)\r\n      }\r\n\r\n      this.targetPort = port\r\n      if (this.targetPort === null) {\r\n        return\r\n      }\r\n\r\n      this.routingRequired = true\r\n      this.fireTargetPortRouteEvent()\r\n      this.targetPort.connections.add(this)\r\n      this.targetPort.on(\"move\", this.moveListener)\r\n      this.canvas?.fireEvent(\"connect\", {port: this.targetPort, connection: this})\r\n      this.targetPort.fireEvent(\"connect\", {port: this.targetPort, connection: this})\r\n      this.targetPort.onConnect(this)\r\n\r\n      this.setEndPoint(port.getAbsoluteX(), port.getAbsoluteY())\r\n      this.fireEvent(\"connect\", {port: this.targetPort, connection: this})\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the target port of this connection.\r\n     *\r\n     * @returns {draw2d.Port}\r\n     **/\r\n    getTarget: function () {\r\n      return this.targetPort\r\n    },\r\n\r\n    /**\r\n     * Returns the peer port of the connection for a given port or nulll if `port` not part of this connection\r\n     * @param {draw2d.Port} port \r\n     * @returns  {draw2d.Port}\r\n     */\r\n    getPeerPort: function(port) {\r\n      if(port === this.sourcePort){\r\n        return this.targetPort\r\n      }\r\n      if(port === this.targetPort){\r\n        return this.sourcePort\r\n      }\r\n      return null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Method returns true if the connection has at least one common draw2d.Port with the given connection.\r\n     *\r\n     * @param {draw2d.Connection} other\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    sharingPorts: function (other) {\r\n      return this.sourcePort == other.sourcePort ||\r\n             this.sourcePort == other.targetPort ||\r\n             this.targetPort == other.sourcePort ||\r\n             this.targetPort == other.targetPort\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the canvas element of this figures.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the new parent of the figure or null\r\n     */\r\n    setCanvas: function (canvas) {\r\n      if (this.canvas === canvas) {\r\n        return // nothing to do\r\n      }\r\n\r\n      let notiCanvas = this.canvas === null ? canvas : this.canvas\r\n\r\n      this._super(canvas)\r\n\r\n      this.sourceDecoratorNode?.remove()\r\n      this.sourceDecoratorNode = null\r\n\r\n      this.targetDecoratorNode?.remove()\r\n      this.targetDecoratorNode = null\r\n\r\n      if (this.canvas === null) {\r\n        if (this.sourcePort !== null) {\r\n          this.sourcePort.off(this.moveListener)\r\n          notiCanvas.fireEvent(\"disconnect\", { port: this.sourcePort, connection: this})\r\n          this.sourcePort.onDisconnect(this)\r\n        }\r\n        if (this.targetPort !== null) {\r\n          this.targetPort.off(this.moveListener)\r\n          notiCanvas.fireEvent(\"disconnect\", { port: this.targetPort, connection: this})\r\n          this.targetPort.onDisconnect(this)\r\n        }\r\n      } else {\r\n\r\n        if (this.sourcePort !== null) {\r\n          this.sourcePort.on(\"move\", this.moveListener)\r\n          this.canvas.fireEvent(\"connect\", { port: this.sourcePort, connection: this})\r\n          this.sourcePort.onConnect(this)\r\n        }\r\n        if (this.targetPort !== null) {\r\n          this.targetPort.on(\"move\", this.moveListener)\r\n          this.canvas.fireEvent(\"connect\", { port: this.targetPort, connection: this})\r\n          this.targetPort.onConnect(this)\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Returns the angle of the connection at the output port (source)\r\n     *\r\n     **/\r\n    getStartAngle: function () {\r\n      // return a good default value if the connection is not routed at the\r\n      //  moment\r\n      if (this.lineSegments.getSize() === 0) {\r\n        return 0\r\n      }\r\n\r\n      let p1 = this.lineSegments.get(0).start\r\n      let p2 = this.lineSegments.get(0).end\r\n      // Since the points are too close to each other in a spline routing, an \r\n      // angle is obtained which does not correspond to the optical impression. \r\n      // In this case, a point is taken which is a little further away \r\n      // from the port....if ppossible\r\n      if (this.router instanceof draw2d.layout.connection.SplineConnectionRouter) {\r\n        p2 = this.lineSegments.get(5)?.end ?? p2\r\n      }\r\n\r\n      let length = Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\r\n      let angle = -(180 / Math.PI) * Math.asin((p1.y - p2.y) / length)\r\n\r\n      if (angle < 0) {\r\n        if (p2.x < p1.x) {\r\n          angle = Math.abs(angle) + 180\r\n        } else {\r\n          angle = 360 - Math.abs(angle)\r\n        }\r\n      } else {\r\n        if (p2.x < p1.x) {\r\n          angle = 180 - angle\r\n        }\r\n      }\r\n      return angle\r\n    },\r\n\r\n    getEndAngle: function () {\r\n      // return a good default value if the connection is not routed at the\r\n      //  moment\r\n      if (this.lineSegments.getSize() === 0) {\r\n        return 90\r\n      }\r\n\r\n      let p1 = this.lineSegments.get(this.lineSegments.getSize() - 1).end\r\n      let p2 = this.lineSegments.get(this.lineSegments.getSize() - 1).start\r\n\r\n      // Since the points are too close to each other in a spline routing, an \r\n      // angle is obtained which does not correspond to the optical impression. \r\n      // In this case, a point is taken which is a little further away \r\n      // from the port....if ppossible\r\n      if (this.router instanceof draw2d.layout.connection.SplineConnectionRouter) {\r\n        p2 = this.lineSegments.get(this.lineSegments.getSize() - 5)?.end ?? p2\r\n      }\r\n\r\n      let length = Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\r\n      let angle = -(180 / Math.PI) * Math.asin((p1.y - p2.y) / length)\r\n\r\n      if (angle < 0) {\r\n        if (p2.x < p1.x) {\r\n          angle = Math.abs(angle) + 180\r\n        } else {\r\n          angle = 360 - Math.abs(angle)\r\n        }\r\n      } else {\r\n        if (p2.x < p1.x) {\r\n          angle = 180 - angle\r\n        }\r\n      }\r\n      return angle\r\n    },\r\n\r\n\r\n    /**\r\n     * @private\r\n     **/\r\n    fireSourcePortRouteEvent: function () {\r\n      this.sourcePort.getConnections().each((i, conn) => {\r\n        conn.routingRequired = true\r\n        conn.repaint()\r\n      })\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     **/\r\n    fireTargetPortRouteEvent: function () {\r\n      // enforce a repaint of all connections which are related to this port\r\n      // this is required for a \"FanConnectionRouter\" or \"ShortesPathConnectionRouter\"\r\n      //\r\n      this.targetPort.getConnections().each((i, conn) => {\r\n        conn.routingRequired = true\r\n        conn.repaint()\r\n      })\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the Command to perform the specified Request or null.\r\n     *\r\n     * @param {draw2d.command.CommandType} request describes the Command being requested\r\n     *\r\n     * @returns {draw2d.command.Command} null or a Command\r\n     **/\r\n    createCommand: function (request) {\r\n      if (request.getPolicy() === draw2d.command.CommandType.MOVE) {\r\n        if (this.isDraggable()) {\r\n          return new draw2d.command.CommandMoveVertices(this)\r\n        }\r\n      }\r\n\r\n      if (request.getPolicy() === draw2d.command.CommandType.MOVE_BASEPOINT) {\r\n        // DragDrop of a connection doesn't create a undo command at this point. This will be done in\r\n        // the onDrop method\r\n        return new draw2d.command.CommandReconnect(this)\r\n      }\r\n\r\n      return this._super(request)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return an objects with all important attributes for XML or JSON serialization\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n\r\n      let parentNode = this.getSource().getParent()\r\n      while (parentNode.getParent() !== null) {\r\n        parentNode = parentNode.getParent()\r\n      }\r\n      memento.source = {\r\n        node: parentNode.getId(),\r\n        port: this.getSource().getName()\r\n      }\r\n\r\n      parentNode = this.getTarget().getParent()\r\n      while (parentNode.getParent() !== null) {\r\n        parentNode = parentNode.getParent()\r\n      }\r\n      memento.target = {\r\n        node: parentNode.getId(),\r\n        port: this.getTarget().getName()\r\n      }\r\n\r\n      if (this.sourceDecorator !== null) {\r\n        memento.source.decoration = this.sourceDecorator.NAME\r\n      }\r\n\r\n      if (this.targetDecorator !== null) {\r\n        memento.target.decoration = this.targetDecorator.NAME\r\n      }\r\n\r\n      return memento\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read all attributes from the serialized properties and transfer them into the shape.\r\n     *\r\n     * @param {Object} memento\r\n     * @returns {this}\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this._super(memento)\r\n\r\n      // nothing to to for the connection creation. This will be done in the draw2d.io.Reader\r\n      // implementation\r\n      //\r\n      // restore your custom attributes here\r\n      if (typeof memento.target.decoration !== \"undefined\" && memento.target.decoration != null) {\r\n        this.setTargetDecorator(Function(`return new ${memento.target.decoration}()`)())\r\n      }\r\n\r\n      if (typeof memento.source.decoration !== \"undefined\" && memento.source.decoration != null) {\r\n        this.setSourceDecorator(Function(`return new ${memento.source.decoration}()`)())\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n  })\r\n","import draw2d from 'packages'\r\nimport jsonUtil from 'util/JSONUtil'\r\nimport UUID from 'util/UUID'\r\nimport extend from 'util/extend'\r\n\r\n/**\r\n * @class\r\n * Base class for all draw2d shapes-\r\n *\r\n */\r\ndraw2d.Figure = Class.extend(\r\n  /**  @lends draw2d.Figure.prototype */\r\n  {\r\n    NAME: \"draw2d.Figure\",\r\n    MIN_TIMER_INTERVAL: 50, // minimum timer interval in milliseconds\r\n\r\n    /**\r\n     * Creates a new Figure object\r\n     *\r\n     * @param attr\r\n     * @param setter\r\n     * @param getter\r\n     */\r\n    init: function (attr, setter, getter) {\r\n\r\n      // @private\r\n      this.setterWhitelist = {\r\n        //  id the unique id of the figure\r\n        id: this.setId,\r\n        //  x the x offset of the figure in relation to the parent figure or canvas\r\n        x: this.setX,\r\n        //  y the y offset of the figure in relation to the parent figure or canvas\r\n        y: this.setY,\r\n        //  width the new width of the figure. Considering the minWidth of the shape\r\n        width: this.setWidth,\r\n        //  height the new height of the figure. Considering the minHeight of the shape\r\n        height: this.setHeight,\r\n        //  boundingBox set the new bounding box of the shape\r\n        boundingBox: this.setBoundingBox,\r\n        //   minWidth the new min width of the figure.\r\n        minWidth: this.setMinWidth,\r\n        // minHeight the new min height of the figure.\r\n        minHeight: this.setMinHeight,\r\n        //  cssClass the css class of the shape. can be used to style the shape via CSS3 (SVG only)\r\n        cssClass: this.setCssClass,\r\n        //  userData additional custom data which can be stored by the shape\r\n        userData: this.setUserData,\r\n        // draggable drives the dragging behaviour of the shape\r\n        draggable: this.setDraggable,\r\n        //  resizeable drives the resizeable behaviour of the shape\r\n        resizeable: this.setResizeable,\r\n        //  selectable drives the selectable behaviour of the shape\r\n        selectable: this.setSelectable,\r\n        //  angle the rotation angle of the shape. At the moment only 90 degree increments are possible\r\n        angle: this.setRotationAngle,\r\n        //  alpha the the alpha/opacity of the shape. value must be between [0..1]\r\n        alpha: this.setAlpha,\r\n        //  opacity the the alpha/opacity of the shape. value must be between [0..1]\r\n        opacity: this.setAlpha,\r\n        //  glow the glow flag for the shape. The representation of the \"glow\" depends on the shape\r\n        glow: this.setGlow,\r\n        //  visible set the visibility flag of the shape\r\n        visible: this.setVisible,\r\n        //  keepAspectRatio indicate if the shape should keep the aspect ratio during resize\r\n        keepAspectRatio: this.setKeepAspectRatio,\r\n        ...setter\r\n      }\r\n\r\n      this.getterWhitelist = {\r\n        id: this.getId,\r\n        visible: this.isVisible,\r\n        angle: this.getRotationAngle,\r\n        x: this.getX,\r\n        y: this.getY,\r\n        userData: this.getUserData,\r\n        width: this.getWidth,\r\n        height: this.getHeight,\r\n        draggable: this.isDraggable,\r\n        resizeable: this.isResizeable,\r\n        selectable: this.isSelectable,\r\n        alpha: this.getAlpha,\r\n        opacity: this.getAlpha,\r\n        ...getter\r\n      }\r\n\r\n      // all figures has an unique id. Required for figure get and persistence storage\r\n      this.id = UUID.create()\r\n\r\n      this.cachedZOrder = -1\r\n\r\n      // required for the SelectionEditPolicy to indicate the type of figure\r\n      // which the user clicks\r\n      this.isResizeHandle = false\r\n\r\n      // for undo/redo operation. It holds the command during a drag/drop operation\r\n      // and execute it on the CommandStack if the user drop the figure.\r\n      this.command = null\r\n\r\n      // the assigned canvas\r\n      this.canvas = null\r\n\r\n      // the RaphaelJS element reference\r\n      this.shape = null\r\n\r\n      // possible decorations ( e.g. a Label) of the Connection\r\n      // children are fixed bounded the figure. Most of the events of the child will bee\r\n      // routed to the parent\r\n      this.children = new draw2d.util.ArrayList()\r\n\r\n      // behavior flags\r\n      //\r\n      this.selectable = true\r\n      this.deleteable = true\r\n      this.resizeable = true\r\n      this.draggable = true\r\n      this.visible = true\r\n      // since 4.1.0.\r\n      this.keepAspectRatio = false\r\n\r\n\r\n      this.canSnapToHelper = true\r\n      this.snapToGridAnchor = new draw2d.geo.Point(0, 0)    // hot spot for snap to grid\r\n      this.editPolicy = new draw2d.util.ArrayList()\r\n\r\n\r\n      // timer for animation or automatic update\r\n      //\r\n      this.timerId = -1\r\n      this.timerInterval = 0\r\n\r\n      // possible parent of the figure.\r\n      // @see: this.children\r\n      this.parent = null\r\n\r\n      // a figure can be part of a StrongComposite like a group, ...\r\n      //\r\n      this.composite = null\r\n\r\n      // generic handle for the JSON read/write of user defined data\r\n      this.userData = null\r\n\r\n      // appearance, position and dim properties\r\n      //\r\n      this.x = 0\r\n      this.y = 0\r\n      this.minHeight = 5\r\n      this.minWidth = 5\r\n      this.rotationAngle = 0\r\n      // add the name of the class to the css attribute\r\n      this.cssClass = this.NAME.replace(new RegExp(\"[.]\", \"g\"), \"_\")\r\n\r\n      this.width = this.getMinWidth()\r\n      this.height = this.getMinHeight()\r\n\r\n      this.alpha = 1.0\r\n\r\n      // internal status flags for the Drag&Drop operation handling and other stuff\r\n      //\r\n      this.isInDragDrop = false\r\n\r\n      this.ox = 0\r\n      this.oy = 0\r\n      this.repaintBlocked = false\r\n      this.lastAppliedAttributes = {}\r\n      this.selectionHandles = new draw2d.util.ArrayList()\r\n      this.panningDelegate = null\r\n\r\n      // even handling since version 5.0.0\r\n      this.eventSubscriptions = {}\r\n\r\n      this.relocateChildrenEventCallback = () => {\r\n        this.children.each((i, e) => {\r\n          e.locator.relocate(i, e.figure)\r\n        })\r\n      }\r\n\r\n      // new approach to delegate selection requests.\r\n      //\r\n      this.defaultSelectionAdapter = this.selectionAdapter = () => this\r\n\r\n      // install default selection handler. Can be overridden or replaced\r\n      this.installEditPolicy(new draw2d.policy.figure.RectangleSelectionFeedbackPolicy())\r\n\r\n\r\n      // the new style attr call with object attributes\r\n      this.attr(attr)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read or set shape attributes.<br>\r\n     * When no value is given, reads specified attribute from the element.<br>\r\n     * When value is given, sets the attribute to that value.\r\n     * Multiple attributes can be set by passing an object with name-value pairs.\r\n     *\r\n     *    let figure = new draw2d.shape.basic.Rectangle();\r\n     *    figure.attr('x');      //=> read value\r\n     *    figure.attr('x', 30);  //=> set value\r\n     *\r\n     *    // multiple attributes:\r\n     *    figure.attr({\r\n     *      x: 30,\r\n     *      y: 40,\r\n     *      width : 200,\r\n     *      height: 50,\r\n     *      cssClass: \"red_border_figure\"\r\n     *    });\r\n     *\r\n     *    // it is possible to override any method of the figure as well\r\n     *    // Instead of inheritance you can just override the callback methods\r\n     *    // like\r\n     *    //\r\n     *    figure.attr({\r\n     *       onClick : function(){\r\n     *           alert(\"click\");\r\n     *       }\r\n     *    });\r\n     *\r\n     *    // or you can pass the attr values in the constructor\r\n     *    //\r\n     *    let clickFigure = new draw2d.shape.basic.Rectangle({\r\n     *       onClick : function(){\r\n     *           alert(\"click\");\r\n     *       }\r\n     *    });\r\n     *\r\n     *\r\n     * Additional you can set the user defined values (userData) with this method\r\n     * using the dot-notation. User defined values are always part of the exported\r\n     * JSON data.\r\n     *\r\n     *    // setting multiple attributes:\r\n     *    figure.attr({\r\n     *      \"userData.my.property.x\": 30,\r\n     *      \"userData.my.property.y\": 40\r\n     *    });\r\n     *\r\n     * Also set using array notation is possible for the userData:\r\n     *\r\n     *    // dot notation and array brackets:\r\n     *    figure.attr({\r\n     *      \"userData.my.names[0]\": \"John\",\r\n     *      \"userData.my.names[1]\": \"Doe\"\r\n     *    });\r\n     *\r\n     *\r\n     * The Object returned should be the equivalent structured object:\r\n     *\r\n     *    let obj = figure.getUserData();\r\n     *\r\n     * That is, where obj is equivalent to:\r\n     *\r\n     *    let obj = {\r\n     *        my:{\r\n     *            property:{\r\n     *                x: 30,\r\n     *                y: 40\r\n     *           },\r\n     *           names:  [\"John\", \"Doe\"]\r\n     *       }\r\n     *    };\r\n     *\r\n     *\r\n     *\r\n     * @param {String/Object} name\r\n     * @param {Object} [value]\r\n     * @since 5.0.1\r\n     * @experimental\r\n     * @returns {Object} either the requested attribute if this method used as getter or `this` if the method uses as setter\r\n     **/\r\n    attr: function (name, value) {\r\n      let orig = this.repaintBlocked\r\n\r\n      try {\r\n        // call of attr as setter method with {name1:val1, name2:val2 }  argument list\r\n        //\r\n        if ($.isPlainObject(name)) {\r\n          for (let key in name) {\r\n            // user can set the \"userData\" with path notation. In this case we\r\n            // expand the path to a real JSON object and set the data.\r\n            // index/brackets are allowed too.\r\n            //\r\n            if (key.substring(0, 9) === \"userData.\") {\r\n              this.userData ??= {}\r\n\r\n              jsonUtil.set({userData: this.userData}, key, name[key])\r\n              this.fireEvent(\"change:\" + key, {value: name[key]})\r\n            } else {\r\n              let func = this.setterWhitelist[key]\r\n              let param = name[key]\r\n              if (func && param !== undefined) {\r\n                func.call(this, param)\r\n              }\r\n              // maybe the user adds a function as property to the attr call\r\n              // e.g.:\r\n              // {\r\n              //     doIt: function(){}\r\n              // }\r\n              //\r\n              // in this case we assign the method to this object and wrap it with \"this\" as context\r\n              // a very, very simple method to replace default implemenations of the object\r\n              else if (typeof name[key] === \"function\") {\r\n                this[key] = param.bind(this)\r\n              }\r\n            }\r\n          }\r\n        } else if (typeof name === \"string\") {\r\n          // call attr as getter\r\n          //\r\n          if (typeof value === \"undefined\") {\r\n            let getter = this.getterWhitelist[name]\r\n            if (typeof getter === \"function\") {\r\n              return getter.call(this)\r\n            }\r\n            // or it is a userData path notation like \"userData.any.path.value\"\r\n            else if (name.substring(0, 9) === \"userData.\") {\r\n              let data = {userData: this.userData}\r\n              return jsonUtil.get(data, name)\r\n            }\r\n            return // undefined\r\n          }\r\n          // call attr as simple setter with (key , value)\r\n          //\r\n\r\n          // the value can be a function. In this case we must call the value().\r\n          if (typeof value === \"function\") {\r\n            value = value()\r\n          }\r\n          if (name.substring(0, 9) === \"userData.\") {\r\n            this.userData ??= {}\r\n            jsonUtil.set({userData: this.userData}, name, value)\r\n            this.fireEvent(\"change:\" + name, {value: value})\r\n          } else {\r\n            let setter = this.setterWhitelist[name]\r\n            setter?.call(this, value)\r\n          }\r\n        }\r\n        // may it is a array of attributes used for the getter\r\n        //\r\n        else if (Array.isArray(name)) {\r\n          return Object.assign({}, ...Object.keys(name).map(k => ({[k]: this.attr(k)})))\r\n        }\r\n        // generic getter of all registered attributes\r\n        else if (typeof name === \"undefined\") {\r\n          let result = {}\r\n          for (let key in this.getterWhitelist) {\r\n            result[key] = this.getterWhitelist[key].call(this)\r\n          }\r\n          return result\r\n        }\r\n      } finally {\r\n        this.repaintBlocked = orig\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Return a copy of the object, filtered to only have values for the whitelisted keys.\r\n     * @deprecated\r\n     */\r\n    pick: function (obj, var_keys) {\r\n      let keys = typeof arguments[1] !== 'string' ? arguments[1] : Array.prototype.slice.call(arguments, 1)\r\n      let out = {}, key\r\n      for (key in keys) {\r\n        if (typeof obj[key] !== \"undefined\")\r\n          out[key] = obj[key]\r\n      }\r\n      return out\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Add the figure to the current selection and propagate this to all edit policies.\r\n     *\r\n     * @param {Boolean} [asPrimarySelection] true if the element should be the primary selection\r\n     * @private\r\n     */\r\n    select: function (asPrimarySelection) {\r\n      if (typeof asPrimarySelection === \"undefined\") {\r\n        asPrimarySelection = true\r\n      }\r\n\r\n      // apply all EditPolicy for select Operations\r\n      //\r\n      this.editPolicy.each( (i, e) => {\r\n        if (e instanceof draw2d.policy.figure.SelectionPolicy) {\r\n          e.onSelect(this.canvas, this, asPrimarySelection)\r\n        }\r\n      })\r\n\r\n      this.canvas?.getSelection().add(this)\r\n\r\n      this.fireEvent(\"select\", {figure: this})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Unselect the figure and propagete this event to all edit policies.\r\n     *\r\n     * @private\r\n     **/\r\n    unselect: function () {\r\n      // apply all EditPolicy for select Operations\r\n      //\r\n      this.editPolicy.each((i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.SelectionPolicy) {\r\n          e.onUnselect(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      this.canvas?.getSelection().remove(this)\r\n\r\n      this.fireEvent(\"unselect\", {figure: this})\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns a function which returns the the figure which must handle the selection handling.\r\n     *\r\n     * @param {Function} [adapter] function which returns the figure which handles the selection handling\r\n     */\r\n    setSelectionAdapter: function (adapter) {\r\n      this.selectionAdapter = adapter ?? this.defaultSelectionAdapter\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @returns {Function}\r\n     */\r\n    getSelectionAdapter: function () {\r\n      return this.selectionAdapter\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns true if the figure part of the current canvas selection.\r\n     *\r\n     * @since 5.5.6\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isSelected: function () {\r\n        return this.canvas?.getSelection().contains(this)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Allows a user to attach (or remove) data to an element, without needing to create a custom figure or shape.\r\n     * The data must be a valid JSON object.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       userData: object\r\n     *     });\r\n     *\r\n     * @since 2.7.2\r\n     * @param {Object} object\r\n     */\r\n    setUserData: function (object) {\r\n      this.userData = object\r\n      this.fireEvent(\"change:userData\", {value: object})\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns any user data set previously on the given figure by setUserData.\r\n     *\r\n     * @since 2.7.2\r\n     * @returns {Object}\r\n     */\r\n    getUserData: function () {\r\n      return this.userData\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the UUID of this element.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getId: function () {\r\n      return this.id\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the id of this element.\r\n     *\r\n     *    // Alternatively you can use the attr method:\r\n     *    figure.attr({\r\n     *      id: newId\r\n     *    });\r\n     *\r\n     * @param {String} newId the new id for this figure\r\n     */\r\n    setId: function (newId) {\r\n      this.id = newId\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the css styling class name of the element.\r\n     *\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getCssClass: function () {\r\n      return this.cssClass\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the css class of the node.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       \"cssClass\": \"red_border_figure\"\r\n     *     });\r\n     *\r\n     * @param {String} cssClass the new css class name of the node\r\n     * @since 2.9.0\r\n     */\r\n    setCssClass: function (cssClass) {\r\n      this.cssClass = cssClass === null ? null : cssClass.trim()\r\n\r\n      if (this.shape === null) {\r\n        return this\r\n      }\r\n\r\n      if (this.cssClass === null) {\r\n        this.shape.node.removeAttribute(\"class\")\r\n      } else {\r\n        this.shape.node.setAttribute(\"class\", this.cssClass)\r\n      }\r\n      this.fireEvent(\"change:cssClass\", {value: this.cssClass})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The method will return true if the class is assigned to the element, even if other classes also are.\r\n     *\r\n     * @param {String} className the class name to check\r\n     * @since 2.9.0\r\n     */\r\n    hasCssClass: function (className) {\r\n      if (this.cssClass === null) {\r\n        return false\r\n      }\r\n\r\n      return new RegExp(' ' + className.trim() + ' ').test(' ' + this.cssClass + ' ')\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Add a CSS class to the figure.<br>\r\n     * It's important to note that this method does not replace a class. It simply adds the class,\r\n     * appending it to any which may already be assigned to the elements.\r\n     *\r\n     * @param {String} className\r\n     * @since 2.9.0\r\n     */\r\n    addCssClass: function (className) {\r\n      className = className.trim()\r\n      if (!this.hasCssClass(className)) {\r\n        if (this.cssClass === null) {\r\n          this.setCssClass(className)\r\n        } else {\r\n          this.setCssClass(this.cssClass + ' ' + className)\r\n        }\r\n        this.fireEvent(\"change:cssClass\", {value: this.cssClass})\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Remove the given css class name from the figure\r\n     *\r\n     * @param {String} className the css class name to add\r\n     */\r\n    removeCssClass: function (className) {\r\n      className = className.trim()\r\n      let newClass = ' ' + this.cssClass.replace(/[\\t\\r\\n]/g, ' ') + ' '\r\n      if (this.hasCssClass(className)) {\r\n        while (newClass.indexOf(' ' + className + ' ') >= 0) {\r\n          newClass = newClass.replace(' ' + className + ' ', ' ')\r\n        }\r\n        this.setCssClass(newClass.replace(/^\\s+|\\s+$/g, ''))\r\n        this.fireEvent(\"change:cssClass\", {value: this.cssClass})\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Add or remove the given css class name from the figure\r\n     *\r\n     * @param {String} className the class name to toggle\r\n     */\r\n    toggleCssClass: function (className) {\r\n      className = className.trim()\r\n      let newClass = ' ' + this.cssClass.replace(/[\\t\\r\\n]/g, ' ') + ' '\r\n      if (this.hasCssClass(className)) {\r\n        while (newClass.indexOf(' ' + className + ' ') >= 0) {\r\n          newClass = newClass.replace(' ' + className + ' ', ' ')\r\n        }\r\n        this.setCssClass(newClass.replace(/^\\s+|\\s+$/g, ''))\r\n      } else {\r\n        this.setCssClass(this.cssClass + ' ' + className)\r\n      }\r\n      this.fireEvent(\"change:cssClass\", {value: this.cssClass})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the canvas element of this figures. This can be used to determine whenever an element\r\n     * is added or removed to the canvas.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the new parent of the figure or null\r\n     */\r\n    setCanvas: function (canvas) {\r\n      // remove the shape if we reset the canvas and the element\r\n      // was already drawn\r\n      if (canvas === null && this.shape !== null) {\r\n        if (this.isSelected()) {\r\n          this.unselect()\r\n        }\r\n        this.shape.remove()\r\n        this.shape = null\r\n      }\r\n\r\n      this.canvas = canvas\r\n\r\n      if (this.canvas !== null) {\r\n        this.getShapeElement()\r\n      }\r\n\r\n      // reset the attribute cache. We must start by paint all attributes\r\n      //\r\n      this.lastAppliedAttributes = {}\r\n\r\n\r\n      if (canvas === null) {\r\n        this.stopTimer()\r\n      } else {\r\n        if (this.timerInterval >= this.MIN_TIMER_INTERVAL) {\r\n          this.startTimer(this.timerInterval)\r\n        }\r\n      }\r\n\r\n      this.children.each( (i, e) => { e.figure.setCanvas(canvas)})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the current assigned canvas container.\r\n     *\r\n     * @returns {draw2d.Canvas}\r\n     */\r\n    getCanvas: function () {\r\n      return this.canvas\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Start a timer which calls the onTimer method in the given interval.\r\n     *\r\n     * @param {Number} milliSeconds\r\n     */\r\n    startTimer: function (milliSeconds) {\r\n      this.stopTimer()\r\n      this.timerInterval = Math.max(this.MIN_TIMER_INTERVAL, milliSeconds)\r\n\r\n      if (this.canvas !== null) {\r\n        this.timerId = window.setInterval(() => {\r\n          this.onTimer()\r\n          this.fireEvent(\"timer\")\r\n        }, this.timerInterval)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Stop the internal timer.\r\n     *\r\n     */\r\n    stopTimer: function () {\r\n      if (this.timerId >= 0) {\r\n        window.clearInterval(this.timerId)\r\n        this.timerId = -1\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback method for the internal timer handling<br>\r\n     * Inherit classes must override this method if they want use the timer feature.\r\n     *\r\n     *     // Alternatively you can register for this event with\r\n     *     figure.on(\"timer\", function(emitter){\r\n     *         alert(\"timer fired\");\r\n     *     });\r\n     *\r\n     * @template\r\n     */\r\n    onTimer: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements. Additional\r\n     * the internal model changed as well.\r\n     *\r\n     * Optional: Inserts current object in front of the given one.\r\n     *\r\n     * @param {draw2d.Figure} [figure] move current object in front of the given one.\r\n     * @since 3.0.0\r\n     */\r\n    toFront: function (figure) {\r\n      // ensure that the z-oder is still correct if the figure is assigned\r\n      // to a StrongComposite\r\n      //\r\n      if (this.composite instanceof draw2d.shape.composite.StrongComposite && (typeof figure !== \"undefined\")) {\r\n        let indexFigure = figure.getZOrder()\r\n        let indexComposite = this.composite.getZOrder()\r\n        if (indexFigure < indexComposite) {\r\n          figure = this.composite\r\n        }\r\n      }\r\n\r\n      if (typeof figure === \"undefined\") {\r\n        this.getShapeElement().toFront()\r\n\r\n        if (this.canvas !== null) {\r\n          let figures = this.canvas.getFigures()\r\n          let lines = this.canvas.getLines()\r\n          if (figures.remove(this) !== null) {\r\n            figures.add(this)\r\n          } else if (lines.remove(this) !== null) {\r\n            lines.add(this)\r\n          }\r\n        }\r\n      } else {\r\n        this.getShapeElement().insertAfter(figure.getTopLevelShapeElement())\r\n\r\n        if (this.canvas !== null) {\r\n          let figures = this.canvas.getFigures()\r\n          let lines = this.canvas.getLines()\r\n          if (figures.remove(this) !== null) {\r\n            let index = figures.indexOf(figure)\r\n            figures.insertElementAt(this, index + 1)\r\n          } else if (lines.remove(this) !== null) {\r\n            lines.add(this)\r\n          }\r\n        }\r\n      }\r\n\r\n      // bring all children in front of the parent\r\n      this.children.each( (i, child) =>child.figure.toFront(this))\r\n\r\n      // and last but not least, the ResizeHandles if any present\r\n      //\r\n      this.selectionHandles.each( (i, handle) => handle.toFront())\r\n\r\n      this.cachedZOrder = -1\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Moves the element to the background. Additional\r\n     * the internal model changed as well.\r\n     *\r\n     * @since 4.7.2\r\n     */\r\n    toBack: function (figure) {\r\n      // it is not allowed that a figure is behind an assigned composite\r\n      //\r\n      if (this.composite instanceof draw2d.shape.composite.StrongComposite) {\r\n        this.toFront(this.composite)\r\n        return\r\n      }\r\n\r\n      if (this.canvas !== null) {\r\n        let figures = this.canvas.getFigures()\r\n        let lines = this.canvas.getLines()\r\n        if (figures.remove(this) !== null) {\r\n          figures.insertElementAt(this, 0)\r\n        } else if (lines.remove(this) !== null) {\r\n          lines.insertElementAt(this, 0)\r\n        }\r\n        if (typeof figure !== \"undefined\") {\r\n          this.getShapeElement().insertBefore(figure.getShapeElement())\r\n        } else {\r\n          this.getShapeElement().toBack()\r\n        }\r\n      }\r\n\r\n      // Bring all children in front of \"this\" figure\r\n      //\r\n      this.children.each((i, child) => {\r\n        child.figure.toFront(this)\r\n      }, true)\r\n\r\n      this.cachedZOrder = -1\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Install a new edit policy to the figure. Each editpolicy is able to focus on a single editing\r\n     * task or group of related tasks. This also allows editing behavior to be selectively reused across\r\n     * different figure implementations. Also, behavior can change dynamically, such as when the layouts\r\n     * or routing methods change.\r\n     *\r\n     * Example for limited DragDrop behavior can be a draw2d.layout.constraint.RegionConstriantPolicy.\r\n     *\r\n     * @param {draw2d.policy.EditPolicy} policy\r\n     */\r\n    installEditPolicy: function (policy) {\r\n      // it is only possible to install one SelectionFeedbackPolicy at once\r\n      //\r\n      if (policy instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n        this.editPolicy.grep((p) => {\r\n          let stay = !(p instanceof draw2d.policy.figure.SelectionFeedbackPolicy)\r\n          if (!stay) {\r\n            p.onUninstall(this)\r\n          }\r\n          return stay\r\n        })\r\n      }\r\n\r\n      // It is only allowed to install a policy of the same type once\r\n      //\r\n      this.editPolicy.grep((p) => {\r\n        let stay = p.__proto__ !== policy.__proto__\r\n        if (!stay) {\r\n          p.onUninstall(this)\r\n        }\r\n        return stay\r\n      })\r\n\r\n\r\n      policy.onInstall(this)\r\n      this.editPolicy.add(policy)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * UnInstall the edit policy from the figure. Either the instance itself if found\r\n     * or all kind of the given edit policies.\r\n     *\r\n     *\r\n     * @param {draw2d.policy.EditPolicy} policy\r\n     * @since 4.81\r\n     */\r\n    uninstallEditPolicy: function (policy) {\r\n      let removedPolicy = this.editPolicy.remove(policy)\r\n\r\n      // we found the policy and we are happy\r\n      //\r\n      if (removedPolicy !== null) {\r\n        removedPolicy.onUninstall(this)\r\n        return\r\n      }\r\n\r\n      // The policy isn't part of the figure. In this case we \"think\" the user want\r\n      // deinstall all instances of the policy\r\n      //\r\n      let name = (typeof policy === \"string\") ? policy : policy.NAME\r\n      this.editPolicy.grep((p) =>{\r\n        if (p.NAME === name) {\r\n          p.onUninstall(this)\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    },\r\n\r\n    /**\r\n     * Add a child figure to the figure. The hands over figure doesn't support drag&drop\r\n     * operations. It's only a decorator for the connection.<br>\r\n     * Mainly for labels or other decorations\r\n     *\r\n     *\r\n     *    let start = new draw2d.shape.node.Start({x:80, y:150});\r\n     *    start.add(new draw2d.shape.basic.Label({text:\"Test Label\"}), new draw2d.layout.locator.TopLocator());\r\n     *\r\n     *    canvas.add( start);\r\n     *\r\n     *\r\n     * @param {draw2d.Figure} child the figure to add as decoration to the connection.\r\n     * @param {draw2d.layout.locator.Locator} locator the locator for the child.\r\n     * @param {Number} [index] optional index where to insert the figure\r\n     * @returns {this}\r\n     **/\r\n    add: function (child, locator, index) {\r\n      if (typeof locator === \"undefined\" || locator === null) {\r\n        throw \"Second parameter 'locator' is required for method 'Figure#add'\"\r\n      }\r\n\r\n      // the child is now a slave of the parent\r\n      //\r\n      child.setParent(this)\r\n\r\n      // inform the locator that a new child is bounded to the parent\r\n      // The call must happen after parent assignment. Reason: the locator\r\n      // can override some behaviours which are propagated from the parent.\r\n      //\r\n      locator.bind(this, child)\r\n\r\n      child.on(\"resize\", this.relocateChildrenEventCallback)\r\n\r\n      if (!isNaN(parseInt(index))) {\r\n        this.children.insertElementAt({figure: child, locator: locator}, index)\r\n      } else {\r\n        this.children.add({figure: child, locator: locator})\r\n      }\r\n\r\n      if (this.canvas !== null) {\r\n        child.setCanvas(this.canvas)\r\n      }\r\n\r\n      this.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Remove the child figure from this figure and the canvas\r\n     *\r\n     * @param {draw2d.Figure} child the figure to remove.\r\n     *\r\n     * @returns {Object} the removed tupple of figure/locator or null if the child isn't found\r\n     * @returns {draw2d.Figure} return.figure The removed figure\r\n     * @returns {draw2d.shape.layout.Layout} return.locator The used locator of the figure\r\n     *\r\n     * @since 5.0.0\r\n     **/\r\n    remove: function (child) {\r\n      if (typeof child === \"undefined\" || child === null) {\r\n        debug.warn(\"The parameter child is required for Figure.remove\")\r\n        return null\r\n      }\r\n\r\n      let removed = null\r\n      this.children.grep(function (e) {\r\n        let stay = e.figure !== child\r\n        if (!stay) {\r\n          removed = e\r\n        }\r\n        return stay\r\n      })\r\n\r\n      if (removed !== null) {\r\n        child.setParent(null)\r\n        child.setCanvas(null)\r\n        removed.locator.unbind(this, child)\r\n        child.off(this.relocateChildrenEventCallback)\r\n\r\n        this.repaint()\r\n        return removed\r\n      }\r\n\r\n      return null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return all children/decorations of this shape which has been added with\r\n     * draw2d.Figure.add\r\n     *\r\n     * @returns {draw2d.util.ArrayList}\r\n     */\r\n    getChildren: function () {\r\n      return this.children.clone().map( e => e.figure)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Remove all children/decorations of this shape\r\n     *\r\n     */\r\n    resetChildren: function () {\r\n      this.children.each((i, e) => { e.figure.setCanvas(null)})\r\n      this.children = new draw2d.util.ArrayList()\r\n      this.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * return the current SVG shape element or create it on demand.\r\n     *\r\n     * @protected\r\n     */\r\n    getShapeElement: function () {\r\n      if (this.shape !== null) {\r\n        return this.shape\r\n      }\r\n\r\n      this.shape = this.createShapeElement()\r\n      if (!this.isVisible()) {\r\n        this.shape.hide()\r\n      }\r\n\r\n      // add CSS class to enable styling of the element with CSS rules/files\r\n      //\r\n      if (this.cssClass !== null) {\r\n        this.shape.node.setAttribute(\"class\", this.cssClass)\r\n      }\r\n\r\n      return this.shape\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the top level shape element. May the figure has a set of SVG elements. In this case this\r\n     * method must return the top level node.<br>\r\n     * This method is used for the toFront/toBack method to order the nodes in the correct way.\r\n     *\r\n     * @since 5.0.0\r\n     * @private\r\n     */\r\n    getTopLevelShapeElement: function () {\r\n      return this.getShapeElement()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Inherited classes must override this method to implement it's own draw functionality.\r\n     *\r\n     * @template\r\n     * @abstract\r\n     */\r\n    createShapeElement: function () {\r\n      throw \"Inherited class [\" + this.NAME + \"] must override the abstract method createShapeElement\"\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * propagate all attributes like color, stroke,... to the shape element\r\n     *\r\n     * @param {Object} [attributes] the style attributes for the SVG shape\r\n     * @private\r\n     **/\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null) {\r\n        return this\r\n      }\r\n\r\n      attributes ??= {}\r\n\r\n      if (this.visible === true) {\r\n        if (this.shape.isVisible() === false) {\r\n          if (!isNaN(parseFloat(attributes.visibleDuration))) {\r\n            $(this.shape.node).fadeIn(attributes.visibleDuration, () =>  this.shape.show())\r\n          } else {\r\n            this.shape.show()\r\n          }\r\n        }\r\n      } else {\r\n        if (this.shape.isVisible() === true) {\r\n          if (!isNaN(parseFloat(attributes.visibleDuration))) {\r\n            $(this.shape.node).fadeOut(attributes.visibleDuration, () => this.shape.hide())\r\n          } else {\r\n            this.shape.hide()\r\n          }\r\n        }\r\n        return this\r\n      }\r\n\r\n      // enrich with common properties\r\n      attributes.opacity = this.alpha\r\n\r\n      // performance improvement\r\n      // Only apply attributes which has changed. This ends in a big performance improvement\r\n      // because the raphael shape isn't redraw at all.\r\n      //\r\n      attributes = jsonUtil.flatDiff(attributes, this.lastAppliedAttributes)\r\n\r\n      if (Object.getOwnPropertyNames(attributes).length > 0) {\r\n        this.shape.attr(attributes)\r\n      }\r\n      this.lastAppliedAttributes = attributes\r\n\r\n\r\n      this.applyTransformation()\r\n\r\n      // Relocate all children of the figure if the dimension or location of the\r\n      // shape has changed\r\n      //\r\n      if(\"x\" in attributes || \"width\" in attributes || \"cx\" in attributes || \"path\" in attributes) {\r\n        this.children.each((i, e) => { e.locator.relocate(i, e.figure) })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * apply a transformation to the shape like rotation, translate,..\r\n     *\r\n     * @private\r\n     * @template\r\n     */\r\n    applyTransformation: function () {\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Highlight the element or remove the highlighting\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       glow: flag\r\n     *     });\r\n     *\r\n     * @param {Boolean} flag indicates glow/noGlow\r\n     * @template\r\n     */\r\n    setGlow: function (flag) {\r\n      // do nothing in the base class.\r\n      // Subclasses must implement this method.\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Allow dragging only when the cursor is over a specific part of the figure.\r\n     * <br>\r\n     * Override this method to specify the bounding box of an element or a draw2d.util.ArrayList\r\n     * of draw2d.geo.Rectangle of bounding boxes used to drag the figure. The returned coordinates\r\n     * are absolute coordinates to the canvas.\r\n     * <br>\r\n     * <br>\r\n     * Default implementation returns <b>null</b> to indicate to use the complete figures as\r\n     * drag handle.\r\n     *\r\n     * @since 5.6.0\r\n     * @returns {draw2d.geo.Rectangle|draw2d.util.ArrayList}\r\n     */\r\n    getHandleBBox: function () {\r\n      return null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called if the drag and drop action begins. You can return [false] if you\r\n     * want avoid that the figure can be move.\r\n     *\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @returns {Boolean} true if the figure accepts dragging\r\n     **/\r\n    onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n      this.isInDragDrop = false\r\n\r\n      // Check whenever the figures has a drag-handle. Allow drag&drop\r\n      // operation only if the x/y is inside this area.\r\n      //\r\n      // @since 5.6.0\r\n      let bbox = this.getHandleBBox()\r\n      if (bbox !== null && bbox.translate(this.getAbsolutePosition().scale(-1)).hitTest(x, y) === false) {\r\n        // design failure: we must catch the figure below the mouse to forward\r\n        // the panning event to this figure. Special handling to provide sliders\r\n        // and other UI elements which requires the panning event. Hack.\r\n        this.panningDelegate = this.getBestChild(this.getX() + x, this.getY() + y)\r\n        if (this.panningDelegate !== null) {\r\n          // transform x/y relative to the panning figure and request the dragStart event\r\n          this.panningDelegate.onDragStart(x - this.panningDelegate.x, y - this.panningDelegate.y, shiftKey, ctrlKey)\r\n        }\r\n        return false\r\n      }\r\n\r\n\r\n      this.command = this.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE))\r\n\r\n      if (this.command !== null) {\r\n        this.ox = this.getX()\r\n        this.oy = this.getY()\r\n        this.isInDragDrop = true\r\n\r\n        // notify all installed policies\r\n        //\r\n        let _this = this\r\n        let canStartDrag = true\r\n\r\n        this.editPolicy.each(function (i, e) {\r\n          if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n            canStartDrag = canStartDrag && e.onDragStart(_this.canvas, _this, x, y, shiftKey, ctrlKey)\r\n          }\r\n        })\r\n\r\n        if (canStartDrag) {\r\n          // fire an event\r\n          // @since 5.3.3\r\n          this.fireEvent(\"dragstart\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n        }\r\n        return canStartDrag\r\n      }\r\n\r\n      return false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Don't call them manually. This will be done by the framework.<br>\r\n     * Will be called if the object are moved via drag and drop.\r\n     * Sub classes can override this method to implement additional stuff. Don't forget to call\r\n     * the super implementation via <code>this._super(dx, dy, dx2, dy2);</code>\r\n     *\r\n     * @private\r\n     * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n     * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     **/\r\n    onDrag: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n      // apply all EditPolicy for DragDrop Operations. This is something like\r\n      // an policy that forces that an object can only move vertical, horizontal or in a given\r\n      // rectangle.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          let newPos = e.adjustPosition(this, this.ox + dx, this.oy + dy)\r\n          if (newPos) {\r\n            dx = newPos.x - this.ox\r\n            dy = newPos.y - this.oy\r\n          }\r\n        }\r\n      })\r\n      let newPos = new draw2d.geo.Point(this.ox + dx, this.oy + dy)\r\n\r\n      // Adjust the new location if the object can snap to a helper\r\n      // like grid, geometry, ruler,...\r\n      //\r\n      if (this.getCanSnapToHelper()) {\r\n        newPos = this.getCanvas().snapToHelper(this, newPos)\r\n      }\r\n\r\n\r\n      this.setPosition(newPos)\r\n\r\n      // notify all installed policies that the object has moved.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.onDrag(this.canvas, this)\r\n        }\r\n      })\r\n\r\n\r\n      // notify all installed listener that th object has moved\r\n      // @since 5.3.3\r\n      this.fireEvent(\"drag\", {dx: dx, dy: dy, dx2: dx2, dy2: dy2, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the figure returns false for the drag operation. In this\r\n     * case we send a \"panning\" event - mouseDown + mouseMove. This is very useful for\r\n     * UI-Widget like slider, spinner,...\r\n     *\r\n     *     // You can alternatively register an event handler with:\r\n     *     figure.on(\"panning\", function(emitter, eventData){\r\n     *         alert(\"panning of the figure called\");\r\n     *     });\r\n     *\r\n     * @param {Number} dx the x difference between the mouse down operation and now\r\n     * @param {Number} dy the y difference between the mouse down operation and now\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     */\r\n    onPanning: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the panning event of the figures ends. This happens\r\n     * after the mous up event if the panning is active.\r\n     *\r\n     *     // You can alternatively register an event handler with:\r\n     *     figure.on(\"panningEnd\", function(emitter){\r\n     *         alert(\"panning of the figure called\");\r\n     *     });\r\n     *\r\n     */\r\n    onPanningEnd: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Will be called after a drag and drop action.<br>\r\n     * Sub classes can override this method to implement additional stuff. Don't forget to call\r\n     * the super implementation via <code>this._super();</code>\r\n     *\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     **/\r\n    onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n      // Element ist zwar schon an seine Position, das Command muss aber trotzdem\r\n      // in dem CommandStack gelegt werden damit das Undo funktioniert.\r\n      //\r\n      if (this.command !== null) {\r\n        this.command.setPosition(this.x, this.y)\r\n        this.canvas.getCommandStack().execute(this.command)\r\n        this.command = null\r\n      }\r\n      this.isInDragDrop = false\r\n      this.panningDelegate = null\r\n\r\n      // notify all installed policies\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.onDragEnd(this.canvas, this, x, y, shiftKey, ctrlKey)\r\n        }\r\n      })\r\n\r\n      this.fireEvent(\"move\",     { x: this.getX(), y: this.getY(), dx: 0, dy: 0})\r\n      this.fireEvent(\"change:x\", { x: this.getX(), dx: 0})\r\n      this.fireEvent(\"change:y\", { y: this.getY(), dy: 0})\r\n\r\n      // fire an event\r\n      // @since 5.3.3\r\n      this.fireEvent(\"dragend\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag&drop operations if the user drag a figure over this figure\r\n     *\r\n     * @param {draw2d.Figure} draggedFigure The figure which is currently dragging\r\n     *\r\n     * @returns {draw2d.Figure} the figure which should receive the drop event or null if the element didn't want a drop event\r\n     * @since 6.1.0\r\n     * @private\r\n     **/\r\n    delegateTarget: function (draggedFigure) {\r\n\r\n      let delegate = draggedFigure\r\n      this.getCanvas().getDropInterceptorPolicies().each((i, policy) => {\r\n        delegate = policy.delegateTarget(draggedFigure, this)\r\n        if (delegate !== null) {\r\n          return false // break the loop\r\n        }\r\n      })\r\n\r\n      return delegate\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag&drop operations if the user drag a figure over this figure\r\n     *\r\n     * @param {draw2d.Figure} draggedFigure The figure which is currently dragging\r\n     *\r\n     * @template\r\n     **/\r\n    onDragEnter: function (draggedFigure) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called if the DragDrop object leaving the current hover figure.\r\n     *\r\n     * @param {draw2d.Figure} draggedFigure The figure which is currently dragging\r\n     * @template\r\n     **/\r\n    onDragLeave: function (draggedFigure) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the user drop this element onto the dropTarget. This event is ONLY fired if the\r\n     * shape return \"this\" in the {@link draw2d.Figure#onDragEnter} method.\r\n     *\r\n     *\r\n     * @param {draw2d.Figure} dropTarget The drop target.\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     **/\r\n    onDrop: function (dropTarget, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called if the user dropped an figure onto this element. This event is ONLY fired if the\r\n     * in the canvas installed {@link draw2d.policy.canvas.DropInterceptorPolicy} allow this.\r\n     *\r\n     *\r\n     * @param {draw2d.Figure} droppedFigure The dropped figure.\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     * @since 4.8.0\r\n     **/\r\n    onCatch: function (droppedFigure, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Callback method for the mouse enter event. Usefull for mouse hover-effects.\r\n     * Override this method for your own effects. Don't call them manually.\r\n     *\r\n     * @template\r\n     **/\r\n    onMouseEnter: function () {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Callback method for the mouse leave event. Useful for mouse hover-effects.\r\n     *\r\n     * @template\r\n     **/\r\n    onMouseLeave: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called when a user dbl clicks on the element\r\n     *\r\n     *     // Alternatively you can register an event with:\r\n     *     //\r\n     *     figure.on(\"dblclick\", function(emitter, event){\r\n     *         alert(\"user dbl click on the figure\");\r\n     *     });\r\n     *\r\n     * @template\r\n     */\r\n    onDoubleClick: function () {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called when a user clicks on the element.\r\n     *\r\n     *     // You can alternatively register an event handler with:\r\n     *     figure.on(\"click\", function(emitter, event){\r\n     *         alert(\"user click on the figure\");\r\n     *     });\r\n     *\r\n     * @template\r\n     * @deprecated\r\n     */\r\n    onClick: function () {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * called by the framework if the figure should show the context menu.<br>\r\n     * The strategy to show the context menu depends on the platform. Either looong press or\r\n     * right click with the mouse.\r\n     *\r\n     *     // Alternatively you register for this event with:\r\n     *     figure.on(\"contextmenu\", function(emitter, event){\r\n     *         alert(\"user press the right mouse button for a context menu\");\r\n     *     });\r\n     *\r\n     * @param {Number} x the x-coordinate to show the menu\r\n     * @param {Number} y the y-coordinate to show the menu\r\n     * @since 1.1.0\r\n     * @template\r\n     */\r\n    onContextMenu: function (x, y) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the alpha blending of this figure.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       \"alpha\": percent\r\n     *     });\r\n     *\r\n     *     // ...or:\r\n     *     figure.attr({\r\n     *       \"opacity\": percent\r\n     *     });\r\n     *\r\n     * @param {Number} percent value between [0..1].\r\n     **/\r\n    setAlpha: function (percent) {\r\n      percent = Math.min(1, Math.max(0, parseFloat(percent)))\r\n      if (percent === this.alpha) {\r\n        return\r\n      }\r\n\r\n      this.alpha = percent\r\n      this.repaint()\r\n      this.fireEvent(\"change:opacity\", {value: this.alpha})\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the alpha blending of the figure\r\n     *\r\n     * @returns {Number} the current alpha blending\r\n     */\r\n    getAlpha: function () {\r\n      return this.alpha\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the rotation angle in degree [0..356]<br>\r\n     * <b>Only steps of 90 degree is working well</b>\r\n     * <br>\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       angle: angle\r\n     *     });\r\n     *\r\n     * @param {Number} angle the rotation angle in degree\r\n     */\r\n    setRotationAngle: function (angle) {\r\n      this.rotationAngle = angle\r\n\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      this.fireEvent(\"change:angle\", {value: this.rotationAngle})\r\n      this.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return the rotation angle of the figure in degree of [0..356].\r\n     *\r\n     * <br>\r\n     * <b>NOTE: this method is pre alpha and not for production. Only steps of 90 degree is working well</b>\r\n     * <br>\r\n     * @returns {Number}\r\n     */\r\n    getRotationAngle: function () {\r\n      return this.rotationAngle\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Show/hide the element. The element didn't receive any mouse events (click, dblclick) if you hide the\r\n     * figure.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       visible: flag\r\n     *     });\r\n     *\r\n     * @param {Boolean} flag\r\n     * @param {Number} [duration] the optional number for the fadeIn /fadeOut of the figure\r\n     * @since 1.1.0\r\n     */\r\n    setVisible: function (flag, duration) {\r\n      flag = !!flag\r\n      if (flag === this.visible) {\r\n        return\r\n      }\r\n      this.visible = flag\r\n\r\n      this.repaint({visibleDuration: duration})\r\n\r\n      this.fireEvent(this.visible?\"show\":\"hide\")\r\n      this.fireEvent(\"change:visibility\", {value: this.visible})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return true if the figure visible.\r\n     *\r\n     * @returns {Boolean}\r\n     * @since 1.1.0\r\n     */\r\n    isVisible: function () {\r\n      return this.visible && this.shape !== null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Guarantee, that the figure width/height will not be distorted. Applicable before calling setDimension().\r\n     * It is false by default.\r\n     *\r\n     * @since 4.1.0\r\n     * @param {Boolean} flag boolean flag if the figure should respect the aspect ratio\r\n     */\r\n    setKeepAspectRatio: function (flag) {\r\n      this.keepAspectRatio = flag\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the flag if the shape keep the aspect ratio.\r\n     *\r\n     * @since 4.1.0\r\n     */\r\n    getKeepAspectRatio: function () {\r\n      return this.keepAspectRatio\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the current z-index of the element. Currently this is an expensive method. The index will be calculated\r\n     * all the time. Caching is not implemented at the moment.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getZOrder: function () {\r\n      let child = this.shape?.node\r\n      if(!child || this.cachedZOrder>=0){\r\n        return this.cachedZOrder\r\n      }\r\n      this.cachedZOrder = Array.from(child.parentNode.children).indexOf(child)\r\n      \r\n      return this.cachedZOrder\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the flag if this object can snap to grid or geometry.\r\n     * A window of dialog should set this flag to false.\r\n     *\r\n     * @param {Boolean} flag The snap to grid/geometry enable flag.\r\n     *\r\n     **/\r\n    setCanSnapToHelper: function (flag) {\r\n      this.canSnapToHelper = !!flag\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns true if the figure can snap to any helper like a grid, guide, geometrie\r\n     * or something else.\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    getCanSnapToHelper: function () {\r\n      return this.canSnapToHelper\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {draw2d.geo.Point}\r\n     **/\r\n    getSnapToGridAnchor: function () {\r\n      return this.snapToGridAnchor\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the hot spot for all snapTo### operations.\r\n     *\r\n     * @param {draw2d.geo.Point} point\r\n     **/\r\n    setSnapToGridAnchor: function (point) {\r\n      this.snapToGridAnchor = point\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the width of the figure and consider the minWidth attribute\r\n     *\r\n     * @param {Number} width the new width of the figure\r\n     * @since 5.1.0\r\n     */\r\n    setWidth: function (width) {\r\n      this.setDimension(parseFloat(width), this.getHeight())\r\n      this.fireEvent(\"change:width\", {value: this.width})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The current width of the figure.\r\n     *\r\n     * @type {Number}\r\n     **/\r\n    getWidth: function () {\r\n      return this.width\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the heigth of the figure and consider the minWidth attribute\r\n     *\r\n     * @param {Number} height the new height of the figure\r\n     * @since 5.1.0\r\n     */\r\n    setHeight: function (height) {\r\n      this.setDimension(this.getWidth(), parseFloat(height))\r\n      this.fireEvent(\"change:height\", {value: this.height})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The current height of the figure.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getHeight: function () {\r\n      return this.height\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * This value is relevant for the interactive resize of the figure.\r\n     *\r\n     * @returns {Number} Returns the min. width of this object.\r\n     */\r\n    getMinWidth: function () {\r\n      return this.minWidth\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the minimum width of this figure\r\n     *\r\n     * @param {Number} w\r\n     */\r\n    setMinWidth: function (w) {\r\n      this.minWidth = parseFloat(w)\r\n      this.fireEvent(\"change:minWidth\", {value: this.minWidth})\r\n\r\n      // fit the width with the new constraint\r\n      this.setWidth(this.getWidth())\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * This value is relevant for the interactive resize of the figure.\r\n     *\r\n     * @returns {Number} Returns the min. height of this object.\r\n     */\r\n    getMinHeight: function () {\r\n      return this.minHeight\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the minimum height of the figure.\r\n     *\r\n     * @param {Number} h\r\n     */\r\n    setMinHeight: function (h) {\r\n      this.minHeight = parseFloat(h)\r\n      this.fireEvent(\"change:minHeight\", {value: this.minHeight})\r\n\r\n      // fit the height with the new constraint\r\n      this.setHeight(this.getHeight())\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * the the x-offset related to the parent figure or canvas\r\n     *\r\n     * @param {Number} x the new x offset of the figure\r\n     * @since 5.0.8\r\n     */\r\n    setX: function (x) {\r\n      this.setPosition(parseFloat(x), this.y)\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The x-offset related to the parent figure or canvas.\r\n     *\r\n     * @returns {Number} the x-offset to the parent figure\r\n     **/\r\n    getX: function () {\r\n      return this.x\r\n    },\r\n\r\n    /**\r\n     *\r\n     * the the y-offset related to the parent figure or canvas\r\n     *\r\n     * @param {Number} y the new x offset of the figure\r\n     * @since 5.0.8\r\n     */\r\n    setY: function (y) {\r\n      this.setPosition(this.x, parseFloat(y))\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The y-offset related to the parent figure or canvas.\r\n     *\r\n     * @returns {Number} The y-offset to the parent figure.\r\n     **/\r\n    getY: function () {\r\n      return this.y\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The x-offset related to the canvas.\r\n     *\r\n     * @returns {Number} the x-offset to the canvas\r\n     **/\r\n    getAbsoluteX: function () {\r\n      if (!this.parent) {\r\n        return this.getX()\r\n      }\r\n\r\n      return this.getX() + this.parent.getAbsoluteX()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The y-offset related to the canvas.\r\n     *\r\n     * @returns {Number} The y-offset to the canvas.\r\n     **/\r\n    getAbsoluteY: function () {\r\n      if (!this.parent) {\r\n        return this.getY()\r\n      }\r\n      return this.getY() + this.parent.getAbsoluteY()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the absolute y-position of the port.\r\n     *\r\n     * @type {draw2d.geo.Point}\r\n     **/\r\n    getAbsolutePosition: function () {\r\n      return new draw2d.geo.Point(this.getAbsoluteX(), this.getAbsoluteY())\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the absolute y-position of the port.\r\n     *\r\n     * @returns {draw2d.geo.Rectangle}\r\n     **/\r\n    getAbsoluteBounds: function () {\r\n      return new draw2d.geo.Rectangle(this.getAbsoluteX(), this.getAbsoluteY(), this.getWidth(), this.getHeight())\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the position of the object.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       x: x,\r\n     *       y: y\r\n     *     });\r\n     *\r\n     * @param {Number|draw2d.geo.Point} x The new x coordinate of the figure or the x/y coordinate if it is an draw2d.geo.Point\r\n     * @param {Number} [y] The new y coordinate of the figure\r\n     **/\r\n    setPosition: function (x, y) {\r\n      if (typeof x === \"undefined\") {\r\n        debugger\r\n      }\r\n\r\n      let oldPos = {x: this.x, y: this.y}\r\n\r\n      if (x instanceof draw2d.geo.Point) {\r\n        this.x = x.x\r\n        this.y = x.y\r\n      } else {\r\n        this.x = x\r\n        this.y = y\r\n      }\r\n\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          let newPos = e.adjustPosition(this, this.x, this.y)\r\n          this.x = newPos.x\r\n          this.y = newPos.y\r\n        }\r\n      })\r\n\r\n      this.repaint()\r\n\r\n\r\n      // Update the resize handles if the user change the position of the\r\n      // element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n\r\n      let event = {\r\n        x: this.x,\r\n        y: this.y,\r\n        dx: this.x - oldPos.x,\r\n        dy: this.y - oldPos.y\r\n      }\r\n      this.fireEvent(\"move\", event)\r\n      this.fireEvent(\"change:x\", event)\r\n      this.fireEvent(\"change:y\", event)\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Get the current position of the figure\r\n     *\r\n     * @returns {draw2d.geo.Point}\r\n     * @since 2.0.0\r\n     */\r\n    getPosition: function () {\r\n      return new draw2d.geo.Point(this.getX(), this.getY())\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Translate the figure with the given x/y offset.\r\n     *\r\n     * @param {Number} dx The x offset to translate\r\n     * @param {Number} dy The y offset to translate\r\n     **/\r\n    translate: function (dx, dy) {\r\n      this.setPosition(this.getX() + dx, this.getY() + dy)\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the new width and height of the figure.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *        width:  w,\r\n     *        height: h\r\n     *     });\r\n     *\r\n     * @param {Number} w The new width of the figure\r\n     * @param {Number} h The new height of the figure\r\n     **/\r\n    setDimension: function (w, h) {\r\n      let old = {width: this.width, height: this.height}\r\n\r\n      w = Math.max(this.getMinWidth(), w)\r\n      h = Math.max(this.getMinHeight(), h)\r\n\r\n      if (this.width === w && this.height === h) {\r\n        // required if an inherit figure changed the w/h to a given constraint.\r\n        // In this case the Resize handles must be informed that the shape didn't resized.\r\n        // because the minWidth/minHeight did have a higher prio.\r\n        this.editPolicy.each((i, e) => {\r\n          if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n            e.moved(this.canvas, this)\r\n          }\r\n        })\r\n        return this\r\n      }\r\n\r\n\r\n      // apply all EditPolicy to adjust/modify the new dimension\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          let newDim = e.adjustDimension(this, w, h)\r\n          w = newDim.w\r\n          h = newDim.h\r\n        }\r\n      })\r\n\r\n      // respect the aspect ratio if required\r\n      //\r\n      if (this.keepAspectRatio === true) {\r\n        if (w >= this.getMinWidth()) {\r\n          // scale the height to the given ratio\r\n          h = this.getHeight() * (w / this.getWidth())\r\n          // and apply the new dimension only if the values are in range of the given constraints\r\n          if (h >= this.getMinHeight()) {\r\n            this.width = w\r\n            this.height = h\r\n          }\r\n        }\r\n      } else {\r\n        this.width = Math.max(this.getMinWidth(), w)\r\n        this.height = Math.max(this.getMinHeight(), h)\r\n      }\r\n\r\n\r\n      this.repaint()\r\n\r\n      this.fireEvent(\"resize\")\r\n      this.fireEvent(\"change:dimension\", { height: this.height, width: this.width, old: old})\r\n\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the bounding box of the figure\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       width: w,\r\n     *       height: h,\r\n     *       x: x,\r\n     *       y: y\r\n     *     });\r\n     *\r\n     *     // or\r\n     *     figure.attr({\r\n     *       boundingBox: {x:1, y:100, width:30, height:30}\r\n     *     });\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect\r\n     * @since 4.8.0\r\n     */\r\n    setBoundingBox: function (rect) {\r\n      rect = new draw2d.geo.Rectangle(rect)\r\n\r\n      let orig = this.repaintBlocked\r\n      this.repaintBlocked = true\r\n      this.setPosition(rect.x, rect.y)\r\n      this.repaintBlocked = orig\r\n      this.setDimension(rect.w, rect.h)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the bounding box of the figure in absolute position to the canvas.\r\n     *\r\n     * @returns {draw2d.geo.Rectangle}\r\n     **/\r\n    getBoundingBox: function () {\r\n      return new draw2d.geo.Rectangle(this.getAbsoluteX(), this.getAbsoluteY(), this.getWidth(), this.getHeight())\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the bounding box of the figure in absolute position to the canvas. All child shapes included.\r\n     * The result BoundingBox spans the parent figured plus all children.\r\n     *\r\n     * @returns {draw2d.geo.Rectangle}\r\n     **/\r\n    getOuterBoundingBox: function () {\r\n      let parentBB =  new draw2d.geo.Rectangle(this.getAbsoluteX(), this.getAbsoluteY(), this.getWidth(), this.getHeight())\r\n      this.getChildren().each( (i, child)=>{\r\n        let childBB = child.getOuterBoundingBox()\r\n        parentBB.merge(childBB)\r\n      })\r\n      return parentBB\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Detect whenever the hands over coordinate is inside the figure.\r\n     * The default implementation is a simple bounding box test.\r\n     *\r\n     * @param {Number} iX\r\n     * @param {Number} iY\r\n     * @param {Number} [corona]\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    hitTest: function (iX, iY, corona) {\r\n      if (typeof corona === \"number\") {\r\n        return this.getBoundingBox().scale(corona, corona).hitTest(iX, iY)\r\n      }\r\n      return this.getBoundingBox().hitTest(iX, iY)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Switch on/off the drag drop behaviour of this object\r\n     *\r\n     * @param {Boolean} flag The new drag drop indicator\r\n     **/\r\n    setDraggable: function (flag) {\r\n      this.draggable = !!flag\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the Drag drop enable flag\r\n     *\r\n     * @returns {Boolean} The new drag drop indicator\r\n     **/\r\n    isDraggable: function () {\r\n      // delegate to the composite if given\r\n      if (this.composite !== null) {\r\n        return this.composite.isMemberDraggable(this, this.draggable)\r\n      }\r\n\r\n      return this.draggable\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the true if the figure can be resized.\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    isResizeable: function () {\r\n      return this.resizeable\r\n    },\r\n\r\n    /**\r\n     *\r\n     * You can change the resizeable behaviour of this object. Hands over [false] and\r\n     * the figure has no resizehandles if you select them with the mouse.<br>\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       resizeable: flag\r\n     *     });\r\n     *\r\n     * @param {Boolean} flag The resizeable flag.\r\n     **/\r\n    setResizeable: function (flag) {\r\n      this.resizeable = !!flag\r\n      this.fireEvent(\"change:resizeable\", {value: this.resizeable})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Indicates whenever the element is selectable by user interaction or API.\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    isSelectable: function () {\r\n      // delegate to the composite if given\r\n      if (this.composite !== null) {\r\n        return this.composite.isMemberSelectable(this, this.selectable)\r\n      }\r\n\r\n      return this.selectable\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * You can change the selectable behavior of this object. Hands over [false] and\r\n     * the figure has no selection handles if you try to select them with the mouse.<br>\r\n     *\r\n     * @param {Boolean} flag The selectable flag.\r\n     **/\r\n    setSelectable: function (flag) {\r\n      this.selectable = !!flag\r\n      this.fireEvent(\"change:selectable\", {value: this.selectable})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return true if the object doesn't care about the aspect ratio.\r\n     * You can change the height and width independent.<br>\r\n     *\r\n     * Replaced with \"getKeepAspectRatio\"\r\n     * @returns {Boolean}\r\n     * @deprecated\r\n     */\r\n    isStrechable: function () {\r\n      return !this.getKeepAspectRatio()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return false if you avoid that the user can delete your figure.\r\n     * Sub class can override this method.\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    isDeleteable: function () {\r\n      return this.deleteable\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the flag if the shape is deleteable.\r\n     *\r\n     * @param {Boolean} flag enable or disable flag for the delete operation\r\n     **/\r\n    setDeleteable: function (flag) {\r\n      this.deleteable = !!flag\r\n      this.fireEvent(\"change:deleteable\", {value: this.deleteable})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the parent of this figure.\r\n     * Don't call them manually.\r\n     *\r\n     * @param {draw2d.Figure} parent The new parent of this figure\r\n     * @private\r\n     **/\r\n    setParent: function (parent) {\r\n      this.parent = parent\r\n\r\n      if (parent !== null) {\r\n        // inherit the selection handling impl from the parent\r\n        this.setSelectionAdapter(parent.getSelectionAdapter())\r\n      } else {\r\n        // use default\r\n        this.setSelectionAdapter(null)\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the parent of this figure.\r\n     *\r\n     * @returns {draw2d.Figure}\r\n     **/\r\n    getParent: function () {\r\n      return this.parent\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Check to see if a figure is a descendant of another figure.\r\n     * <br>\r\n     * The contains() method returns true if the figure provided by the argument is a descendant of this figure,\r\n     * whether it is a direct child or nested more deeply. Otherwise, it returns false.\r\n     *\r\n     * @param {draw2d.Figure} containedFigure The figure that may be contained by (a descendant of) this figure.\r\n     * @since 5.5.4\r\n     */\r\n    contains: function (containedFigure) {\r\n      if (containedFigure.getParent() === this) {\r\n        return true\r\n      }\r\n\r\n      for (let i = 0, len = this.children.getSize(); i < len; i++) {\r\n        let child = this.children.get(i).figure\r\n        if (child.contains(containedFigure)) {\r\n          return true\r\n        }\r\n      }\r\n      return false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the top most parent of this figure. This can be an layout figure or parent container\r\n     *\r\n     * @returns {draw2d.Figure}\r\n     * @since 5.0.6\r\n     **/\r\n    getRoot: function () {\r\n      let root = this.parent\r\n      while (root !== null && root.parent !== null) {\r\n        root = root.parent\r\n      }\r\n      return root\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the assigned composite of this figure.\r\n     *\r\n     * @param {draw2d.shape.composite.StrongComposite} composite The assigned composite of this figure\r\n     * @since 4.8.0\r\n     **/\r\n    setComposite: function (composite) {\r\n      if (composite !== null && !(composite instanceof draw2d.shape.composite.StrongComposite)) {\r\n        throw \"'composite must inherit from 'draw2d.shape.composite.StrongComposite'\"\r\n      }\r\n\r\n      this.composite = composite\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the assigned composite of this figure.\r\n     *\r\n     * @returns {draw2d.shape.composite.StrongComposite}\r\n     * @since 4.8.0\r\n     **/\r\n    getComposite: function () {\r\n      return this.composite\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Execute all handlers and behaviors attached to the figure for the given event type.\r\n     *\r\n     *\r\n     * @param {String} event the event to trigger\r\n     * @param {Object} [args] optional parameters for the triggered event callback\r\n     *\r\n     * @since 5.0.0\r\n     */\r\n    fireEvent: function (event, args) {\r\n      try {\r\n        if (typeof this.eventSubscriptions[event] === 'undefined') {\r\n          return\r\n        }\r\n\r\n        // avoid recursion\r\n        if (this._inEvent === true) {\r\n          return\r\n        }\r\n        this._inEvent = true\r\n        let subscribers = this.eventSubscriptions[event]\r\n        for (let i = 0; i < subscribers.length; i++) {\r\n          subscribers[i](this, args)\r\n        }\r\n      } catch (exc) {\r\n        console.log(exc)\r\n        throw exc\r\n      } finally {\r\n        this._inEvent = false\r\n\r\n        // fire a generic change event if an attribute has changed\r\n        // required for some DataBinding frameworks or for the Backbone.Model compatibility\r\n        // the event \"change\" with the corresponding attribute name as additional parameter\r\n        if (event.substring(0, 7) === \"change:\") {\r\n          this.fireEvent(\"change\", event.substring(7))\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Attach an event handler function for one or more events to the figure.\r\n     * To remove events bound with .on(), see {@link #off}.\r\n     *\r\n     * possible events are:<br>\r\n     * <ul>\r\n     *   <li>click</li>\r\n     *   <li>dblclick</li>\r\n     *   <li>move</li>\r\n     *   <li>resize</li>\r\n     *   <li>timer</li>\r\n     *   <li>contextmenu</li>\r\n     *   <li>show</li>\r\n     *   <li>hide</li>\r\n     *   <li>added</li>\r\n     *   <li>removed</li>\r\n     *   <li>change:[attr]</li>\r\n     * </ul>\r\n     *\r\n     * @param {String}   event One or more space-separated event types\r\n     * @param {Function} callback A function to execute when the event is triggered.\r\n     * @param {draw2d.Figure} callback.emitter the emitter of the event\r\n     * @param {Object} [callback.obj] optional event related data\r\n     * @param {Object} [context] optional context of the function callback.\r\n     * @since 5.0.0\r\n     */\r\n    on: function (event, callback, context) {\r\n      let events = event.split(\" \")\r\n      if (typeof callback === \"undefined\") {\r\n        debugger\r\n      }\r\n      // the \"context\" param is add to be compatible with Backbone.Model.\r\n      // The project \"backbone.ModelBinder\" requires this signature and we want to be nice.\r\n      //\r\n      if (context) {\r\n        callback = callback.bind(context)\r\n        callback.___originalCallback = callback\r\n      }\r\n\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (typeof this.eventSubscriptions[events[i]] === 'undefined') {\r\n          this.eventSubscriptions[events[i]] = []\r\n        }\r\n        // avoid duplicate registration for the same event with the same callback method\r\n        if (-1 !== $.inArray(callback, this.eventSubscriptions[events[i]])) {\r\n          //   debugger\r\n        } else {\r\n          this.eventSubscriptions[events[i]].push(callback)\r\n        }\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The .off() method removes event handlers that were attached with {@link #on}.<br>\r\n     * Calling .off() with no arguments removes all handlers attached to the elements.<br>\r\n     * <br>\r\n     * If a simple event name such as \"move\" is provided, all events of that type are removed from the figure.\r\n     *\r\n     *\r\n     * @param {String|Function} eventOrFunction the event name of the registerd function or the function itself\r\n     * @since 5.0.0\r\n     */\r\n    off: function (eventOrFunction) {\r\n      if (typeof eventOrFunction === \"undefined\") {\r\n        this.eventSubscriptions = {}\r\n      } else if (typeof eventOrFunction === 'string') {\r\n        this.eventSubscriptions[eventOrFunction] = []\r\n      } else {\r\n        for (let event in this.eventSubscriptions) {\r\n          this.eventSubscriptions[event] = this.eventSubscriptions[event].filter(callback => {\r\n            if (typeof callback.___originalCallback !== \"undefined\") {\r\n              return callback.___originalCallback !== eventOrFunction\r\n            }\r\n            return callback !== eventOrFunction\r\n          })\r\n        }\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the best figure at the location [x,y]. It is a simple hit test. Keep in mind that only visible objects\r\n     * are returned.\r\n     *\r\n     * @param {Number} x The x position.\r\n     * @param {Number} y The y position.\r\n     * @param {draw2d.Figure|Array} [figureToIgnore] The figures which should be ignored.\r\n     **/\r\n    getBestChild: function (x, y, figureToIgnore) {\r\n      if (!Array.isArray(figureToIgnore)) {\r\n        if (figureToIgnore instanceof draw2d.Figure) {\r\n          figureToIgnore = [figureToIgnore]\r\n        } else {\r\n          figureToIgnore = []\r\n        }\r\n      }\r\n\r\n      let result = null\r\n\r\n      // tool method to check recursive a figure for hitTest\r\n      //\r\n      let checkRecursive = function (children) {\r\n        children.each(function (i, e) {\r\n          let c = e.figure\r\n          checkRecursive(c.children)\r\n          if (result === null && c.isVisible() === true && c.hitTest(x, y) === true && $.inArray(c, figureToIgnore) === -1) {\r\n            result = c\r\n          }\r\n          return result === null // break the each-loop if we found an element\r\n        })\r\n      }\r\n\r\n      checkRecursive(this.children)\r\n\r\n      return result\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the Command to perform the specified Request or null.\r\n     *\r\n     * @param {draw2d.command.CommandType} request describes the Command being requested\r\n     * @returns {draw2d.command.Command} null or a Command\r\n     * @private\r\n     **/\r\n    createCommand: function (request) {\r\n      if (request === null) {\r\n        return null\r\n      }\r\n\r\n      if (request.getPolicy() === draw2d.command.CommandType.MOVE) {\r\n        if (!this.isDraggable()) {\r\n          return null\r\n        }\r\n        return new draw2d.command.CommandMove(this)\r\n      }\r\n\r\n      if (request.getPolicy() === draw2d.command.CommandType.DELETE) {\r\n        if (!this.isDeleteable()) {\r\n          return null\r\n        }\r\n        return new draw2d.command.CommandDelete(this)\r\n      }\r\n\r\n      if (request.getPolicy() === draw2d.command.CommandType.RESIZE) {\r\n        if (!this.isResizeable()) {\r\n          return null\r\n        }\r\n        return new draw2d.command.CommandResize(this)\r\n      }\r\n\r\n      return null\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Clone the figure. <br>\r\n     * You must override and implement the methods <b>getPersistentAttributes</b> and <b>setPersistentAttributes</b> for your custom\r\n     * figures if the have special attributes.\r\n     *\r\n     * The clone() method performs a deep copy of the object, meaning that it copies the children, ports and decorations\r\n     * per default. You can control the clone procedure with the 'cloneMetaData'.\r\n     *\r\n     *\r\n     * @param {Object} [cloneMetaData] controls the clone procedure\r\n     * @param {Boolean} [cloneMetaData.excludeChildren] set it to true if you want exclude the children.\r\n     *\r\n     * @since 4.1.0\r\n     * @experimental\r\n     */\r\n    clone: function (cloneMetaData) {\r\n      cloneMetaData = {excludeChildren: false, ...cloneMetaData}\r\n\r\n      let clone = Function(`return new ${this.NAME}()`)()\r\n      let initialId = clone.id\r\n\r\n      clone.setPersistentAttributes(this.getPersistentAttributes())\r\n\r\n      clone.id = initialId\r\n\r\n      // add all decorations to the memento\r\n      //\r\n      if (cloneMetaData.excludeChildren === false) {\r\n        clone.resetChildren()\r\n        this.children.each((i, entry) => {\r\n          let child = entry.figure.clone()\r\n          // we can ignore the locator if this didn't provide a \"correct\" name, this can happen in some\r\n          // Layout shapes like VerticalLayout or Horziontal Layout. This figures injects it own kind\r\n          // of layouter...so didn'T care about this.\r\n\r\n          let locator = entry.locator.NAME ? Function(`return new ${entry.locator.NAME}()`)() : null\r\n          clone.add(child, locator)\r\n        })\r\n      }\r\n\r\n      return clone\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return an objects with all important attributes for XML or JSON serialization\r\n     *\r\n     * @return {Object} all attributes of the figure required for the persistency\r\n     */\r\n    getPersistentAttributes: function () {\r\n      // force deep copy of userData to avoid side effects in the clone method.\r\n      //\r\n      let memento = {\r\n        type: this.NAME,\r\n        id: this.id,\r\n        x: this.getX(),\r\n        y: this.getY(),\r\n        width: this.width,\r\n        height: this.height,\r\n        alpha: this.alpha,\r\n        selectable: this.selectable,\r\n        draggable: this.draggable,\r\n        angle: this.rotationAngle,\r\n        userData: extend(true, {}, this.userData)\r\n      }\r\n\r\n\r\n      if (this.cssClass !== null) {\r\n        memento.cssClass = this.cssClass\r\n      }\r\n\r\n      if (this.composite !== null) {\r\n        memento.composite = this.composite.getId()\r\n      }\r\n\r\n      return memento\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read all attributes from the serialized properties and transfer them into the shape.\r\n     *\r\n     * @param {Object} memento\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this.id = memento.id\r\n      // in some cases, e.g. a Connection, the x/y attribute is not set.\r\n      //\r\n      if(memento.x && memento.y){\r\n        this.setPosition(parseFloat(memento.x), parseFloat(memento.y))\r\n      }\r\n\r\n      // width and height are optional parameter for the JSON stuff.\r\n      // We use the defaults if the attributes not present\r\n      if (typeof memento.width !== \"undefined\") {\r\n        this.width = parseFloat(memento.width)\r\n      }\r\n\r\n      if (typeof memento.height !== \"undefined\") {\r\n        this.height = parseFloat(memento.height)\r\n      }\r\n\r\n      if (typeof memento.userData !== \"undefined\") {\r\n        this.userData = memento.userData\r\n      }\r\n\r\n      if (typeof memento.selectable !== \"undefined\") {\r\n        this.selectable = memento.selectable\r\n      }\r\n\r\n      if (typeof memento.draggable !== \"undefined\") {\r\n        this.draggable = memento.draggable\r\n      }\r\n\r\n      if (typeof memento.cssClass !== \"undefined\") {\r\n        this.setCssClass(memento.cssClass)\r\n      }\r\n\r\n      if (typeof memento.alpha !== \"undefined\") {\r\n        this.setAlpha(parseFloat(memento.alpha))\r\n      }\r\n\r\n      if (typeof memento.angle !== \"undefined\") {\r\n        this.rotationAngle = parseFloat(memento.angle)\r\n      }\r\n\r\n      return this\r\n    }\r\n  })\r\n\r\n\r\n","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Required for Node.js draw2d model read/write operations.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n */\r\n\r\ndraw2d.HeadlessCanvas = Class.extend(\r\n  /** @lends draw2d.HeadlessCanvas.prototype */\r\n\r\n    /** @lends draw2d.HeadlessCanvas.prototype */\r\n    {\r\n\r\n    NAME: \"draw2d.HeadlessCanvas\",\r\n\r\n    /**\r\n     * Create a new canvas with the given HTML DOM references.\r\n     *\r\n     * @param {String} canvasId the id of the DOM element to use a parent container\r\n     */\r\n    init: function()\r\n    {\r\n        // internal document with all figures, ports, ....\r\n        //\r\n        this.figures     = new draw2d.util.ArrayList();\r\n        this.lines       = new draw2d.util.ArrayList(); // crap - why are connections not just figures. Design by accident\r\n        this.commonPorts = new draw2d.util.ArrayList();\r\n\r\n        this.eventSubscriptions = {};\r\n\r\n        // The CommandStack for undo/redo operations\r\n        //\r\n        this.commandStack = new draw2d.command.CommandStack();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Reset the canvas and delete all model elements.<br>\r\n     * You can now reload another model to the canvas with a {@link draw2d.io.Reader}\r\n     *\r\n     * @since 1.1.0\r\n     */\r\n    clear: function()\r\n    {\r\n        // internal document with all figures, ports, ....\r\n        //\r\n        this.figures     = new draw2d.util.ArrayList();\r\n        this.lines       = new draw2d.util.ArrayList();\r\n        this.commonPorts = new draw2d.util.ArrayList();\r\n\r\n        this.commandStack.markSaveLocation();\r\n\r\n        return this;\r\n    },\r\n\r\n    calculateConnectionIntersection:function()\r\n    {\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Callback for any kind of image export tools to trigger the canvas to hide all unwanted\r\n     * decorations. The method is called e.g. from the draw2d.io.png.Writer\r\n     *\r\n     * @since 4.0.0\r\n     * @template\r\n     */\r\n    hideDecoration: function()\r\n    {\r\n    },\r\n\r\n    /**\r\n     * \r\n     * callback method for any image export writer to reactivate the decoration\r\n     * of the canvas. e.g. grids, rulers,...\r\n     *\r\n     *\r\n     * @since 4.0.0\r\n     * @template\r\n     */\r\n    showDecoration: function()\r\n    {\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Add a figure at the given x/y coordinate. This method fires an event.\r\n     *\r\n     * Example:\r\n     *\r\n     *     canvas.on(\"figure:add\", function(emitter, event){\r\n     *        alert(\"figure added:\");\r\n     *     });\r\n     *\r\n     *     // or more general if you want catch all figure related events\r\n     *     //\r\n     *     canvas.on(\"figure\", function(emitter, event){\r\n     *        // use event.figure.getCanvas()===null to determine if the\r\n     *        // figure part of the canvas\r\n     *\r\n     *        alert(\"figure added or removed:\");\r\n     *     });\r\n     *\r\n     * @param {draw2d.Figure} figure The figure to add.\r\n     * @param {Number/draw2d.geo.Point} [x] The new x coordinate of the figure or the x/y coordinate if it is an draw2d.geo.Point\r\n     * @param {Number} [y] The y position.\r\n     **/\r\n    add: function( figure , x,  y)\r\n    {\r\n        if(figure.getCanvas()===this){\r\n            return;\r\n        }\r\n\r\n        if(figure instanceof draw2d.shape.basic.Line){\r\n         this.lines.add(figure);\r\n        }\r\n        else{\r\n         this.figures.add(figure);\r\n        }\r\n        figure.canvas=this;\r\n\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns all lines/connections in this workflow/canvas.<br>\r\n     *\r\n     * @protected\r\n     * @returns {draw2d.util.ArrayList}\r\n     **/\r\n    getLines: function()\r\n    {\r\n      return this.lines;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns the internal figures.<br>\r\n     *\r\n     * @protected\r\n     * @returns {draw2d.util.ArrayList}\r\n     **/\r\n    getFigures: function()\r\n    {\r\n      return this.figures;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns the line or connection with the given id.\r\n     *\r\n     * @param {String} id The id of the line.\r\n     *\r\n     * @returns {draw2d.shape.basic.Line}\r\n     **/\r\n    getLine: function( id)\r\n    {\r\n      var count = this.lines.getSize();\r\n      for(var i=0; i<count;i++)\r\n      {\r\n         var line = this.lines.get(i);\r\n         if(line.getId()===id){\r\n            return line;\r\n         }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns the figure with the given id.\r\n     *\r\n     * @param {String} id The id of the figure.\r\n     * @returns {draw2d.Figure}\r\n     **/\r\n    getFigure: function( id)\r\n    {\r\n      var figure = null;\r\n      this.figures.each(function(i,e){\r\n          if(e.id===id){\r\n              figure=e;\r\n              return false;\r\n           }\r\n      });\r\n      return figure;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Register a port to the canvas. This is required for other ports to find a valid drop target.\r\n     *\r\n     * @param {draw2d.Port} port The new port which has been added to the Canvas.\r\n     **/\r\n    registerPort: function(port )\r\n    {\r\n      // All elements have the same drop targets.\r\n      //\r\n      if(!this.commonPorts.contains(port)){\r\n          this.commonPorts.add(port);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Return all ports in the canvas\r\n     *\r\n     */\r\n    getAllPorts: function()\r\n    {\r\n        return this.commonPorts;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns the command stack for the Canvas. Required for undo/redo support.\r\n     *\r\n     * @returns {draw2d.command.CommandStack}\r\n     **/\r\n    getCommandStack: function()\r\n    {\r\n      return this.commandStack;\r\n    },\r\n\r\n\r\n    // NEW EVENT HANDLING SINCE VERSION 5.0.0\r\n    /**\r\n     * \r\n     * Execute all handlers and behaviors attached to the canvas for the given event type.\r\n     *\r\n     *\r\n     * @param {String} event the event to trigger\r\n     * @param {Object} [args] optional parameters for the triggered event callback\r\n     *\r\n     * @since 5.0.0\r\n     */\r\n    fireEvent: function(event, args)\r\n    {\r\n        if (typeof this.eventSubscriptions[event] === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var subscribers = this.eventSubscriptions[event];\r\n        for (var i=0; i<subscribers.length; i++) {\r\n            try{\r\n                subscribers[i](this, args);\r\n            }\r\n            catch(exc){\r\n                console.log(exc);\r\n                console.log(subscribers[i]);\r\n                debugger;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Attach an event handler function for one or more events to the canvas.\r\n     * To remove events bound with .on(), see {@link #off}.\r\n     *\r\n     * possible events are:<br>\r\n     * <ul>\r\n     *   <li>reset</li>\r\n     *   <li>select</li>\r\n     * </ul>\r\n     *\r\n     * Example:\r\n     *\r\n     *     canvas.on(\"clear\", function(emitter, event){\r\n     *        alert(\"canvas.clear() called.\");\r\n     *     });\r\n     *\r\n     *     canvas.on(\"select\", function(emitter,event){\r\n     *         if(event.figure!==null){\r\n     *             alert(\"figure selected\");\r\n     *         }\r\n     *         else{\r\n     *             alert(\"selection cleared\");\r\n     *         }\r\n     *     });\r\n     *\r\n     * @param {String}   event One or more space-separated event types\r\n     * @param {Function} callback A function to execute when the event is triggered.\r\n     * @param {draw2d.Canvas} callback.emitter the emitter of the event\r\n     * @param {Object} [callback.obj] optional event related data\r\n     *\r\n     * @since 5.0.0\r\n     */\r\n    on: function(event, callback)\r\n    {\r\n        var events = event.split(\" \");\r\n        for(var i=0; i<events.length; i++){\r\n            if (typeof this.eventSubscriptions[events[i]] === 'undefined') {\r\n                this.eventSubscriptions[events[i]] = [];\r\n            }\r\n            this.eventSubscriptions[events[i]].push(callback);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * The .off() method removes event handlers that were attached with {@link #on}.<br>\r\n     * Calling .off() with no arguments removes all handlers attached to the canvas.<br>\r\n     * <br>\r\n     * If a simple event name such as \"reset\" is provided, all events of that type are removed from the canvas.\r\n     *\r\n     *\r\n     * @param {String|Function} eventOrFunction the event name of the registerd function\r\n     * @since 5.0.0\r\n     */\r\n    off: function( eventOrFunction)\r\n    {\r\n        if(typeof eventOrFunction ===\"undefined\"){\r\n            this.eventSubscriptions = {};\r\n        }\r\n        else if( typeof eventOrFunction === 'string'){\r\n            this.eventSubscriptions[eventOrFunction] = [];\r\n        }\r\n        else{\r\n            for(var event in this.eventSubscriptions ){\r\n                this.eventSubscriptions[event] =this.eventSubscriptions[event].filter( callback => { return callback !== eventOrFunction; });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n});\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n * A HybridPort can work as Input and as Output port in the same way for a {@link draw2d.Connection}.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.Port\r\n */\r\ndraw2d.HybridPort = draw2d.Port.extend(\r\n    /** @lends draw2d.HybridPort.prototype */\r\n    {\r\n    NAME: \"draw2d.HybridPort\",\r\n\r\n    /**\r\n     * Create a new HybridPort element\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super(attr, setter, getter);\r\n\r\n        // responsive for the arrangement of the port\r\n        // calculates the x/y coordinates in relation to the parent node\r\n        this.locator=new draw2d.layout.locator.InputPortLocator();\r\n\r\n        // a Hybrid port has fanIn and fanOut connections. All of them can be handeled \r\n        // differently. \r\n        this.maxFanIn = Number.MAX_SAFE_INTEGER\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * set the maximal possible count of incomming connections for this port.<br>\r\n     * A \"incomming\" connection has always either a hybrid or output source port.\r\n     * \r\n     * This method didn't delete any connection if you reduce the number and a bunch of\r\n     * connection are bounded already.\r\n     *\r\n     * @param {Number} count the maximal number of connection related to this port\r\n     * @returns {this}\r\n     */\r\n    setMaxFanIn: function (count) {\r\n      this.maxFanIn = Math.max(1, count)\r\n      this.fireEvent(\"change:maxFanIn\", {value: this.maxFanIn})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return the maximal possible connections (in+out) for this port.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getMaxFanIn: function () \r\n    {\r\n      return this.maxFanIn\r\n    },\r\n\r\n    /**\r\n     * @param {draw2d.command.CommandType} request The requested operation to perform on the object\r\n     * @returns {draw2d.command.Command} The matching command to the requested operation.\r\n     */\r\n    createCommand: function(request)\r\n    {\r\n       // Connect request between two ports\r\n       //\r\n       if(request.getPolicy() === draw2d.command.CommandType.CONNECT) {\r\n\r\n         if(request.source.getParent().getId() === request.target.getParent().getId()){\r\n            return null;\r\n         }\r\n\r\n         if (request.source instanceof draw2d.InputPort) {\r\n            // This is the difference to the InputPort implementation of createCommand.\r\n            return new draw2d.command.CommandConnect(request.target, request.source, request.source);\r\n         }\r\n         else if (request.source instanceof draw2d.OutputPort) {\r\n            // This is the different to the OutputPort implementation of createCommand\r\n            return new draw2d.command.CommandConnect(request.source, request.target, request.source);\r\n         }\r\n         else if (request.source instanceof draw2d.HybridPort) {\r\n            // This is the different to the OutputPort implementation of createCommand\r\n            return new draw2d.command.CommandConnect(request.target,request.source, request.source);\r\n         }\r\n\r\n         return null;\r\n       }\r\n\r\n       // ...else call the base class\r\n       return this._super(request);\r\n    }\r\n});\r\n","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A InputPort is the start anchor for a {@link draw2d.Connection}.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.Port\r\n */\r\ndraw2d.InputPort = draw2d.Port.extend(\r\n  /** @lends draw2d.InputPort.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.InputPort\",\r\n\r\n  /**\r\n   * Create a new InputPort element\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    // responsive for the arrangement of the port\r\n    // calculates the x/y coordinates in relation to the parent node\r\n    this.locator = new draw2d.layout.locator.InputPortLocator()\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createCommand: function (request) {\r\n    // Connect request between two ports\r\n    //\r\n    if (request.getPolicy() === draw2d.command.CommandType.CONNECT) {\r\n      return new draw2d.command.CommandConnect(request.source, request.target, request.source)\r\n    }\r\n\r\n    // ...else call the base class\r\n    return this._super(request)\r\n  }\r\n})\r\n","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A OutputPort is the start anchor for a {@link draw2d.Connection}.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.Port\r\n */\r\ndraw2d.OutputPort = draw2d.Port.extend(\r\n  /** @lends draw2d.OutputPort.prototype */\r\n    {\r\n\r\n    NAME: \"draw2d.OutputPort\",\r\n\r\n    /**\r\n     * Create a new OutputPort element\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super(attr, setter, getter);\r\n\r\n        // responsive for the arrangement of the port\r\n        // calculates the x/y coordinates in relation to the parent node\r\n        this.locator=new draw2d.layout.locator.OutputPortLocator();\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    createCommand: function(request)\r\n    {\r\n       // Connect request between two ports\r\n       //\r\n       if(request.getPolicy() === draw2d.command.CommandType.CONNECT){\r\n           // source and target are changed.\r\n           return new draw2d.command.CommandConnect(request.target, request.source, request.source);\r\n       }\r\n\r\n       // ...else call the base class\r\n       return this._super(request);\r\n    }\r\n});\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n *  A port is an object that is used to establish a connection between a node and a {@link draw2d.Connection}. The port can\r\n * be placed anywhere within a node ( see {@link draw2d.layout.locator.PortLocator} for details)\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @param {Object} [attr] the configuration of the shape\r\n * @extends draw2d.shape.basic.Circle\r\n */\r\n\r\ndraw2d.Port = draw2d.shape.basic.Circle.extend(\r\n  /** @lends draw2d.Port.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.Port\",\r\n\r\n    DEFAULT_BORDER_COLOR: new draw2d.util.Color(\"#1B1B1B\"),\r\n\r\n    init: function (attr, setter, getter) {\r\n      this.locator = null\r\n      this.lighterBgColor = null\r\n      this.name = null\r\n      this.coronaWidth = 5 // the corona width for the hitTest method. Useful during drag&drop of ports. Better SnapTo behavior.\r\n\r\n      this._super({\r\n          bgColor: \"#4f6870\",\r\n          stroke: 1,\r\n          diameter: 10,\r\n          color: \"#1B1B1B\",\r\n          selectable: false\r\n          , ...attr},\r\n        {\r\n          coronaWidth: this.setCoronaWidth,\r\n          semanticGroup: this.setSemanticGroup,\r\n          ...setter},\r\n        {\r\n          coronaWidth: this.getCoronaWidth,\r\n          semanticGroup: this.getSemanticGroup,\r\n          ...getter})\r\n\r\n\r\n      // status vars for user interaction\r\n      //\r\n      this.ox = this.x\r\n      this.oy = this.y\r\n      this.corona = null // draw2d.shape.basic.Circle\r\n      this.useGradient = true\r\n\r\n      this.preferredConnectionDirection = null\r\n\r\n      // current attached connections\r\n      this.connections = new draw2d.util.ArrayList()\r\n\r\n\r\n      this.moveListener = (emitter, event) => {\r\n        this.repaint()\r\n        // Falls sich der parent bewegt hat, dann muss der Port dies seinen\r\n        // Connections mitteilen\r\n        this.fireEvent(\"move\", {figure: this, dx: 0, dy: 0})\r\n      }\r\n\r\n      this.connectionAnchor = new draw2d.layout.anchor.ConnectionAnchor(this)\r\n\r\n      // for dynamic diagrams. A Port can have a value which is set by a connector\r\n      //\r\n      this.value = null\r\n      this.maxFanOut = Number.MAX_SAFE_INTEGER\r\n\r\n      // semantic group. Only ports in the same semantic group can be connected\r\n      //\r\n      this.semanticGroup = \"global\"\r\n\r\n      this.setCanSnapToHelper(false)\r\n\r\n      // uninstall all default selection policies. This is not required for Ports\r\n      this.editPolicy.each((i, policy) => this.uninstallEditPolicy(policy))\r\n\r\n      this.installEditPolicy(new draw2d.policy.port.IntrusivePortsFeedbackPolicy())\r\n      // this.installEditPolicy(new draw2d.policy.port.ElasticStrapFeedbackPolicy());\r\n\r\n      // a port handles the selection handling always by its own, regardless if\r\n      // the port is part of an composite, node, group or whatever.\r\n      this.portSelectionAdapter = () => this\r\n    },\r\n\r\n    getSelectionAdapter: function () {\r\n      return this.portSelectionAdapter\r\n    },\r\n\r\n    /**\r\n     *\r\n     * set the maximal possible count of connections for this port.<br>\r\n     * This method didn't delete any connection if you reduce the number and a bunch of\r\n     * connection are bounded already.\r\n     *\r\n     * @param {Number} count the maximal number of connection related to this port\r\n     * @returns {this}\r\n     */\r\n    setMaxFanOut: function (count) {\r\n      this.maxFanOut = Math.max(1, count)\r\n      this.fireEvent(\"change:maxFanOut\", {value: this.maxFanOut})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return the maximal possible connections (in+out) for this port.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getMaxFanOut: function () {\r\n      return this.maxFanOut\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the semantic group of this port. Only ports in the same semantic group\r\n     * can be connected.\r\n     *\r\n     * The default for all ports is \"global\"\r\n     *\r\n     * @param {String} group the semantic group of this port\r\n     * @returns {this}\r\n     */\r\n    setSemanticGroup: function (group) {\r\n      this.semanticGroup = group\r\n      this.fireEvent(\"change:semanticGroup\", {value: this.semanticGroup})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the semantic group of this port. Only ports in the same semantic group\r\n     * can be connected.\r\n     *\r\n     * The default for all ports is \"global\"\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getSemanticGroup: function () {\r\n      return this.semanticGroup\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the Anchor for this object. An anchor is responsible for the endpoint calculation\r\n     * of an connection. just visible representation.\r\n     *\r\n     * @param {draw2d.layout.anchor.ConnectionAnchor} [anchor] the new source anchor for the connection or \"null\" to use the default anchor.\r\n     * @returns {this}\r\n     **/\r\n    setConnectionAnchor: function (anchor) {\r\n      // set some good defaults.\r\n      this.connectionAnchor = anchor ?? new draw2d.layout.anchor.ConnectionAnchor()\r\n      this.connectionAnchor.setOwner(this)\r\n\r\n      // the anchor has changed. In this case all connections needs an change event to recalculate\r\n      // the anchor and the routing itself\r\n      this.fireEvent(\"move\", {figure: this, dx: 0, dy: 0})\r\n\r\n      return this\r\n    },\r\n\r\n    getConnectionAnchorLocation: function (referencePoint, inquiringConnection) {\r\n      return this.connectionAnchor.getLocation(referencePoint, inquiringConnection)\r\n    },\r\n\r\n    getConnectionAnchorReferencePoint: function (inquiringConnection) {\r\n      return this.connectionAnchor.getReferencePoint(inquiringConnection)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the **direction** for the connection in relation to the given port and it's parent.\r\n     *\r\n     * <p>\r\n     * Possible values:\r\n     * <ul>\r\n     *   <li>draw2d.geo.Rectangle.DIRECTION_UP</li>\r\n     *   <li>draw2d.geo.Rectangle.DIRECTION_RIGHT</li>\r\n     *   <li>draw2d.geo.Rectangle.DIRECTION_DOWN</li>\r\n     *   <li>draw2d.geo.Rectangle.DIRECTION_LEFT</li>\r\n     * </ul>\r\n     * <p>\r\n     *\r\n     * @param {draw2d.Port} peerPort the counterpart port\r\n     *\r\n     * @returns {Number} the direction.\r\n     */\r\n    getConnectionDirection: function (peerPort) {\r\n      // return the calculated connection direction if the port didn't have set any\r\n      //\r\n      if (typeof this.preferredConnectionDirection === \"undefined\" || this.preferredConnectionDirection === null) {\r\n        return this.getParent().getBoundingBox().getDirection(this.getAbsolutePosition())\r\n      }\r\n\r\n      return this.preferredConnectionDirection\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the **direction** for the connection in relation to the given port and it's parent.\r\n     *\r\n     * <p>\r\n     * Possible values:\r\n     * <ul>\r\n     *   <li>up -&gt; 0</li>\r\n     *   <li>right -&gt; 1</li>\r\n     *   <li>down -&gt; 2</li>\r\n     *   <li>left -&gt; 3</li>\r\n     *   <li>calculated -&gt; null</li>\r\n     * </ul>\r\n     * <p>\r\n     *\r\n     * @since 5.2.1\r\n     * @param {Number} direction the preferred connection direction.\r\n     * @returns {this}\r\n     */\r\n    setConnectionDirection: function (direction) {\r\n      this.preferredConnectionDirection = direction\r\n\r\n      // needs an change event to recalculate the route\r\n      this.fireEvent(\"move\", {figure: this, dx: 0, dy: 0})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the locator/layouter of the port. A locator is responsive for the x/y arrangement of the\r\n     * port in relation to the parent node.\r\n     *\r\n     * @param {draw2d.layout.locator.Locator} locator\r\n     * @returns {this}\r\n     */\r\n    setLocator: function (locator) {\r\n      this.locator = locator\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the locator/layouter of the port. A locator is responsive for the x/y arrangement of the\r\n     * port in relation to the parent node.\r\n     *\r\n     * @since 4.2.0\r\n     */\r\n    getLocator: function () {\r\n      return this.locator\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the new background color of the figure. It is possible to hands over\r\n     * <code>null</code> to set the background transparent.\r\n     *\r\n     * @param {draw2d.util.Color|String} color The new background color of the figure\r\n     * @returns {this}\r\n     **/\r\n    setBackgroundColor: function (color) {\r\n      this.lighterBgColor = new draw2d.util.Color(color).lighter(0.3).hash()\r\n      this._super(color)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set a value for the port. This is useful for interactive/dynamic diagrams like circuits, simulator,...\r\n     *\r\n     * @param {Object} value the new value for the port. Can be \"undefined\" or \"null\"\r\n     * @returns {this}\r\n     */\r\n    setValue: function (value) {\r\n\r\n      if (value === this.value) {\r\n        return this\r\n      }\r\n      let old = this.value\r\n      this.value = value\r\n\r\n      this.getParent()?.onPortValueChanged(this)\r\n      \r\n      this.fireEvent(\"change:value\", {value: this.value, old: old})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the user defined value of the port.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getValue: function () {\r\n      return this.value\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null) {\r\n        return\r\n      }\r\n\r\n      attributes ??= {}\r\n\r\n      // a port did have the 0/0 coordinate in the center and not in the top/left corner\r\n      //\r\n      attributes.cx = this.getAbsoluteX()\r\n      attributes.cy = this.getAbsoluteY()\r\n      attributes.rx = this.width / 2\r\n      attributes.ry = attributes.rx\r\n      attributes.cursor = \"move\"\r\n\r\n      if (this.getAlpha() < 0.9 || this.useGradient === false) {\r\n        attributes.fill = this.bgColor.rgba()\r\n      } else {\r\n        attributes.fill = [\"90\", this.bgColor.hash(), this.lighterBgColor].join(\"-\")\r\n      }\r\n\r\n      this._super(attributes)\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     **/\r\n    onMouseEnter: function () {\r\n      this._oldstroke = this.getStroke()\r\n      this.setStroke(2)\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     **/\r\n    onMouseLeave: function () {\r\n      this.setStroke(this._oldstroke)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns a {@link draw2d.util.ArrayList} of {@link draw2d.Connection}s of all related connections to this port.\r\n     *\r\n     * @returns {draw2d.util.ArrayList}\r\n     **/\r\n    getConnections: function () {\r\n      return this.connections\r\n    },\r\n\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    setParent: function (parent) {\r\n      this.parent?.off(this.moveListener)\r\n\r\n      this._super(parent)\r\n\r\n      this.parent?.on(\"move\", this.moveListener)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the corona width of the Port. The corona width will be used during the\r\n     * drag&drop of a port.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getCoronaWidth: function () {\r\n      return this.coronaWidth\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the corona width of the Port. The corona width will be used during the\r\n     * drag&drop of a port. You can drop a port in the corona of this port to create\r\n     * a connection. It is not necessary to drop exactly on the port.\r\n     *\r\n     * @param {Number} width The new corona width of the port\r\n     * @returns {this}\r\n     **/\r\n    setCoronaWidth: function (width) {\r\n      this.coronaWidth = width\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @returns {Boolean}\r\n     * @private\r\n     **/\r\n    onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n      // just allow the DragOperation if the port didn't have reached the max fanOut\r\n      // limit.\r\n      if (this.getConnections().getSize() >= this.maxFanOut) {\r\n        return false\r\n      }\r\n\r\n//        this.getShapeElement().insertAfter(this.parent.getShapeElement());\r\n      // don't call the super method. This creates a command and this is not necessary for a port\r\n      this.ox = this.x\r\n      this.oy = this.y\r\n\r\n      let canStartDrag = true\r\n\r\n      // notify all installed policies\r\n      //\r\n      this.editPolicy.each( (i, e)=>  {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          // DragStart operation can send a veto for the dragStart\r\n          // @since 6.1.0\r\n          canStartDrag = canStartDrag && e.onDragStart(this.canvas, this, x, y, shiftKey, ctrlKey)\r\n        }\r\n      })\r\n\r\n      return canStartDrag\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n     * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     *\r\n     * @private\r\n     **/\r\n    onDrag: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n      // TODO: warum wurde diese methode überschrieben?!\r\n      this._super(dx, dy)\r\n    },\r\n\r\n\r\n    /**\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @private\r\n     **/\r\n    onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n      // Don't call the parent implementation. This will create an CommandMove object\r\n      // and store them o the CommandStack for the undo operation. This makes no sense for a\r\n      // port.\r\n      // draw2d.shape.basic.Rectangle.prototype.onDragEnd.call(this); DON'T call the super implementation!!!\r\n\r\n      this.setAlpha(1.0)\r\n\r\n      // 1.) Restore the old Position of the node\r\n      //\r\n      this.setPosition(this.ox, this.oy)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the user drop this element onto the dropTarget\r\n     *\r\n     * @param {draw2d.Figure} dropTarget The drop target.\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @@private\r\n     **/\r\n    onDrop: function (dropTarget, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Callback method if a new connection has created with this port\r\n     *\r\n     *     // Alternatively you register for this event with:\r\n     *     port.on(\"connect\", function(emitterPort, connection){\r\n     *         alert(\"port connected\");\r\n     *     });\r\n     *\r\n     * @param {draw2d.Connection} connection The connection which has been created\r\n     * @since 2.5.1\r\n     *\r\n     * @template\r\n     **/\r\n    onConnect: function (connection) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback method if a new connection has created with this port\r\n     *\r\n     *     // Alternatively you register for this event with:\r\n     *     port.on(\"connect\", function(emitterPort, connection){\r\n     *         alert(\"port disconnected\");\r\n     *     });\r\n     *\r\n     * @param {draw2d.Connection} connection The connection which has been deleted\r\n     * @since 2.5.1\r\n     *\r\n     * @template\r\n     **/\r\n    onDisconnect: function (connection) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the name of this port.\r\n     *\r\n     * @returns {String}\r\n     **/\r\n    getName: function () {\r\n      return this.name\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the name of this port. The name of the port can be referenced by the lookup of\r\n     * ports in the node.\r\n     *\r\n     *\r\n     * @param {String} name The new name of this port.\r\n     * @returns {this}\r\n     **/\r\n    setName: function (name) {\r\n      this.name = name\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Hit test for ports. This method respect the corona diameter of the port for the hit test.\r\n     * The corona width can be set with {@link draw2d.Port#setCoronaWidth}\r\n     *\r\n     * @param {Number} iX\r\n     * @param {Number} iY\r\n     * @param {Number} [corona]\r\n     * @returns {Boolean}\r\n     */\r\n    hitTest: function (iX, iY, corona) {\r\n      let x = this.getAbsoluteX() - this.coronaWidth - this.getWidth() / 2\r\n      let y = this.getAbsoluteY() - this.coronaWidth - this.getHeight() / 2\r\n      let iX2 = x + this.getWidth() + (this.coronaWidth * 2)\r\n      let iY2 = y + this.getHeight() + (this.coronaWidth * 2)\r\n\r\n      return (iX >= x && iX <= iX2 && iY >= y && iY <= iY2)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Highlight this port\r\n     *\r\n     * @param {Boolean} flag indicator if the figure should glow.\r\n     * @returns {this}\r\n     */\r\n    setGlow: function (flag) {\r\n      if (flag === true && this.corona === null) {\r\n        this.corona = new draw2d.Corona()\r\n        this.corona.setDimension(this.getWidth() + (this.getCoronaWidth() * 2), this.getWidth() + (this.getCoronaWidth() * 2))\r\n        this.corona.setPosition(this.getAbsoluteX() - this.getCoronaWidth() - this.getWidth() / 2, this.getAbsoluteY() - this.getCoronaWidth() - this.getHeight() / 2)\r\n\r\n        this.corona.setCanvas(this.getCanvas())\r\n\r\n        // important inital\r\n        this.corona.getShapeElement()\r\n        this.corona.repaint()\r\n      } else if (flag === false && this.corona !== null) {\r\n        this.corona.setCanvas(null)\r\n        this.corona = null\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the diameter of the port. The center of the circle will be retained.\r\n     *\r\n     * @param {Number} d The new diameter of the circle.\r\n     * @since 4.0.0\r\n     * @returns {this}\r\n     **/\r\n    setDiameter: function (d) {\r\n      //let center = this.getCenter()\r\n      this.setDimension(d, d)\r\n      // the port has its center in the middle. In this case there is no need to shift the center of the circle\r\n      // like it is done in the base implementation.\r\n      //this.setCenter(center)\r\n      this.fireEvent(\"change:diameter\", {value: d})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    createCommand: function (request) {\r\n      // the port has its own implementation of the CommandMove\r\n      //\r\n      if (request.getPolicy() === draw2d.command.CommandType.MOVE) {\r\n        if (!this.isDraggable()) {\r\n          return null\r\n        }\r\n        return new draw2d.command.CommandMovePort(this)\r\n      }\r\n\r\n      return null\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called from the figure itself when any position changes happens. All listener\r\n     * will be informed.\r\n     * <br>\r\n     * DON'T fire this event if the Port is during a Drag&Drop operation. This can happen\r\n     * if we try to connect two ports\r\n     *\r\n     * @private\r\n     **/\r\n    fireEvent: function (event, args) {\r\n      if (this.isInDragDrop === true && event !== \"drag\") {\r\n        return\r\n      }\r\n\r\n      this._super(event, args)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return an objects with all important attributes for XML or JSON serialization\r\n     *\r\n     * @return {Object} all attributes required for the persistency\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n\r\n      memento.maxFanOut = this.maxFanOut\r\n      memento.name = this.name\r\n      memento.semanticGroup = this.semanticGroup\r\n\r\n      // defined by the locator. Don't persist\r\n      //\r\n      delete memento.x\r\n      delete memento.y\r\n\r\n      // ports didn't have children ports. In this case we\r\n      // delete this attribute as well to avoid confusions.\r\n      //\r\n      delete memento.ports\r\n\r\n      return memento\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read all attributes from the serialized properties and transfer them into the shape.\r\n     *\r\n     * @param {Object} memento\r\n     * @returns {this}\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this._super(memento)\r\n\r\n      if (typeof memento.maxFanOut !== \"undefined\") {\r\n        // Big bug in the past.\r\n        // I used Number.MAX_VALUE as maxFanOut which is 1.7976931348623157e+308\r\n        // parseInt creates \"1\" during the reading of the JSON - which is crap.\r\n        // BIG BIG BUG!!! my fault.\r\n        // Now check if the memento.maxFanOut is a number and take this without crappy parsing.\r\n        if (typeof memento.maxFanOut === \"number\") {\r\n          this.maxFanOut = memento.maxFanOut\r\n        } else {\r\n          this.maxFanOut = Math.max(1, parseInt(memento.maxFanOut))\r\n        }\r\n      }\r\n\r\n      if (typeof memento.name !== \"undefined\") {\r\n        this.setName(memento.name)\r\n      }\r\n\r\n      if (typeof memento.semanticGroup !== \"undefined\") {\r\n        this.setSemanticGroup(memento.semanticGroup)\r\n      }\r\n\r\n      return this\r\n    }\r\n  })\r\n\r\n\r\n/**\r\n * @class\r\n * Glow effect for ports. Just for internal use.\r\n *\r\n * @private\r\n * @extend draw2d.shape.basic.Circle\r\n */\r\ndraw2d.Corona = draw2d.shape.basic.Circle.extend(\r\n  /** @lends draw2d.shape.basic.Circle.prototype */\r\n  {\r\n\r\n    init: function () {\r\n      this._super()\r\n      this.setAlpha(0.3)\r\n      this.setBackgroundColor(new draw2d.util.Color(178, 225, 255))\r\n      this.setColor(new draw2d.util.Color(102, 182, 252))\r\n    },\r\n\r\n    /**\r\n     *\r\n     * the the opacity of the element.\r\n     *\r\n     * @param {Number} percent\r\n     */\r\n    setAlpha: function (percent) {\r\n      this._super(Math.min(0.3, percent))\r\n      this.setDeleteable(false)\r\n      this.setDraggable(false)\r\n      this.setResizeable(false)\r\n      this.setSelectable(false)\r\n\r\n      return this\r\n    }\r\n  })\r\n","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n * The Resizehandles for Figures.\r\n\r\n * <pre>\r\n * Possible Type:\r\n *\r\n *   1             2               3\r\n *    O-----------O-------------O\r\n *    |                         |\r\n *    |                         |\r\n *   8 O           + 9           O 4\r\n *    |                         |\r\n *    |                         |\r\n *    O-----------O-------------O\r\n *   7             6               5\r\n * </pre>\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.ResizeHandle = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.ResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.ResizeHandle\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {draw2d.Figure} the owner if the resize handle\r\n   * @param {Number} type the type of the ResizeHandle.\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this.zoomCallback = ()=> {\r\n      this.attr({\r\n          width:  this.origWidth*this.getCanvas().getZoom(),\r\n          height: this.origHeight*this.getCanvas().getZoom(),\r\n          radius: this.origRadius*this.getCanvas().getZoom(),\r\n          stroke: this.origStroke*this.getCanvas().getZoom()\r\n      })\r\n\r\n      // size of the ResizeHandle has changed. Force a reposition of handle\r\n      //\r\n      if(!this.blockEvent)\r\n        this.owner.fireEvent(\"move\",{})\r\n    }\r\n\r\n    this._super(\r\n      {\r\n        // set some good defaults\r\n        bgColor: \"#FDFDFD\",\r\n        stroke: 0.5,\r\n        width:10,\r\n        height:10,\r\n        minWidth:0.3,\r\n        minHeight:0.3,\r\n        color: \"#a0a0a0\",\r\n        radius: 1,\r\n        selectable:false\r\n        // and allow to override them\r\n      , ...attr},\r\n      {\r\n        owner : this.setOwner,\r\n        type : this.setType,\r\n        ...setter},\r\n      {\r\n        owner : this.getOwner,\r\n        type : this.getType,\r\n        ...getter})\r\n\r\n    // required in the SelectionEditPolicy to indicate the type of figure\r\n    // which the user clicks\r\n    this.isResizeHandle = true\r\n\r\n    this.command = null\r\n    this.commandMove = null\r\n    this.commandResize = null\r\n    this.useGradient = true\r\n\r\n\r\n    this.origRadius = this.radius\r\n    this.origWidth = this.width\r\n    this.origHeight = this.height\r\n    this.origStroke = this.stroke\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * The edge of the rectangle for the snapTo mechanism.\r\n   *\r\n   * @return {draw2d.SnapToHelper} enum of the direction (NORTH, NORTH_WEST, EAST,...)\r\n   */\r\n  getSnapToDirection: function () {\r\n    switch (this.type) {\r\n      case 1:\r\n        return draw2d.SnapToHelper.NORTH_WEST\r\n      case 2:\r\n        return draw2d.SnapToHelper.NORTH\r\n      case 3:\r\n        return draw2d.SnapToHelper.NORTH_EAST\r\n      case 4:\r\n        return draw2d.SnapToHelper.EAST\r\n      case 5:\r\n        return draw2d.SnapToHelper.SOUTH_EAST\r\n      case 6:\r\n        return draw2d.SnapToHelper.SOUTH\r\n      case 7:\r\n        return draw2d.SnapToHelper.SOUTH_WEST\r\n      case 8:\r\n        return draw2d.SnapToHelper.WEST\r\n      case 9:\r\n        return draw2d.SnapToHelper.NSEW\r\n      default:\r\n        return draw2d.SnapToHelper.EAST\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    this.shape = this._super()\r\n\r\n    this.shape.node.setAttribute(\"type\", this.type)\r\n    this.updateCursor(this.shape)\r\n\r\n    return this.shape\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns the current used SVG as string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  getOwner: function()\r\n  {\r\n    return this.owner;\r\n  },\r\n\r\n  setOwner: function( owner){\r\n    this.owner = owner\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns the current used SVG as string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  getType: function()\r\n  {\r\n    return this.type;\r\n  },\r\n\r\n  setType: function( type){\r\n    this.type = type\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * calculate and set the cursor of the reize handle\r\n   * @private\r\n   */\r\n  updateCursor: function (shape) {\r\n    if (shape === null) {\r\n      return this\r\n    }\r\n\r\n    if (this.isDraggable() === false) {\r\n      shape.attr({\"cursor\": \"default\"})\r\n      return this\r\n    }\r\n\r\n    /*\r\n    *   1             2               3\r\n    *    O-----------O-------------O\r\n    *    |                         |\r\n    *    |                         |\r\n    *   8 O           + 9           O 4\r\n    *    |                         |\r\n    *    |                         |\r\n    *    O-----------O-------------O\r\n    *   7             6               5\r\n    */\r\n    switch (this.type) {\r\n      case 1:\r\n        shape.attr({\"cursor\": \"nw-resize\"})\r\n        break\r\n      case 2:\r\n        shape.attr({\"cursor\": \"n-resize\"})\r\n        break\r\n      case 3:\r\n        shape.attr({\"cursor\": \"ne-resize\"})\r\n        break\r\n      case 4:\r\n        shape.attr({\"cursor\": \"e-resize\"})\r\n        break\r\n      case 5:\r\n        shape.attr({\"cursor\": \"se-resize\"})\r\n        break\r\n      case 6:\r\n        shape.attr({\"cursor\": \"s-resize\"})\r\n        break\r\n      case 7:\r\n        shape.attr({\"cursor\": \"sw-resize\"})\r\n        break\r\n      case 8:\r\n        shape.attr({\"cursor\": \"w-resize\"})\r\n        break\r\n      default:\r\n        shape.attr({\"cursor\": \"move\"})\r\n        break\r\n    }\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Adjust the draggable flag of the resize handle and update the cursor of the shape in relation\r\n   * to the type of resize handle. north, south,west,..\r\n   *\r\n   * @param flag\r\n   * @returns {this}\r\n   */\r\n  setDraggable: function (flag) {\r\n    this._super(flag)\r\n    this.updateCursor(this.shape)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Will be called if the drag and drop action beginns. You can return [false] if you\r\n   * want avoid that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean} true whenever the drag drop operation is allowed.\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n    // This happens if the selected figure has set the \"nonResizeable\" flag\r\n    // In this case the ResizeHandle can't be dragged. => no resize\r\n    //\r\n    if (!this.isDraggable()) {\r\n      return false\r\n    }\r\n\r\n    this.ox = this.getAbsoluteX()\r\n    this.oy = this.getAbsoluteY()\r\n\r\n    this.commandMove = this.owner.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE))\r\n    this.commandResize = this.owner.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.RESIZE))\r\n\r\n    return true\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework if the figure is moved by user interaction.\r\n   *\r\n   * @param {Number} dx the move x offset\r\n   * @param {Number} dy the move y offset\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   */\r\n  onDrag: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    if (this.isDraggable() === false) {\r\n      return\r\n    }\r\n\r\n    let oldX = this.getAbsoluteX()\r\n    let oldY = this.getAbsoluteY()\r\n\r\n    // call the super.drag method with all snapTo### handler and adjustments\r\n    this._super(dx, dy, dx2, dy2)\r\n\r\n    let diffX = this.getAbsoluteX() - oldX\r\n    let diffY = this.getAbsoluteY() - oldY\r\n\r\n    let obj = this.owner\r\n    let objPosX = obj.getAbsoluteX()\r\n    let objPosY = obj.getAbsoluteY()\r\n    let objWidth = obj.getWidth()\r\n    let objHeight = obj.getHeight()\r\n\r\n    let newX = null\r\n    let newY = null\r\n    let corrPos = null\r\n    /*\r\n    *   1             2               3\r\n    *    O-----------O-------------O\r\n    *    |                         |\r\n    *    |                         |\r\n    *   8 O           + 9           O 4\r\n    *    |                         |\r\n    *    |                         |\r\n    *    O-----------O-------------O\r\n    *   7             6               5\r\n    */\r\n    switch (this.type) {\r\n      case 1:\r\n        obj.setDimension(objWidth - diffX, objHeight - diffY)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY)\r\n        break\r\n      case 2:\r\n        obj.setDimension(objWidth, objHeight - diffY)\r\n        newX = objPosX\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY)\r\n        break\r\n      case 3:\r\n        obj.setDimension(objWidth + diffX, objHeight - diffY)\r\n        newX = objPosX\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY)\r\n        break\r\n      case 4:\r\n        obj.setDimension(objWidth + diffX, objHeight)\r\n        break\r\n      case 5:\r\n        obj.setDimension(objWidth + diffX, objHeight + diffY)\r\n        break\r\n      case 6:\r\n        obj.setDimension(objWidth, objHeight + diffY)\r\n        break\r\n      case 7:\r\n        obj.setDimension(objWidth - diffX, objHeight + diffY)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY\r\n        obj.setPosition(newX, newY)\r\n        break\r\n      case 8:\r\n        obj.setDimension(objWidth - diffX, objHeight)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY\r\n        obj.setPosition(newX, newY)\r\n        break\r\n    }\r\n\r\n    if (newX !== null) {\r\n      // may the setPosition has changed regarding any constraint or edit policies. In this case\r\n      // we must adjust the dimension with the related correction\r\n      //\r\n      corrPos = obj.getPosition()\r\n      if (corrPos.x !== newX || corrPos.y !== newY) {\r\n        obj.setDimension(obj.getWidth() - (corrPos.x - newX), obj.getHeight() - (corrPos.y - newY))\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Will be called after a drag and drop action.<br>\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n    if (!this.isDraggable()) {\r\n      return\r\n    }\r\n\r\n    // An non draggable resizeHandle doesn't create a move/resize command.\r\n    // This happens if the selected figure has set the \"nonResizeable\" flag.\r\n    //\r\n    if (this.commandMove !== null) {\r\n      this.commandMove.setPosition(this.owner.getX(), this.owner.getY())\r\n      this.canvas.getCommandStack().execute(this.commandMove)\r\n      this.commandMove = null\r\n    }\r\n\r\n    if (this.commandResize !== null) {\r\n      this.commandResize.setDimension(this.owner.getWidth(), this.owner.getHeight())\r\n      this.canvas.getCommandStack().execute(this.commandResize)\r\n      this.commandResize = null\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Set the position of the object.<br>\r\n   * The ResizeHandle overrides the Figure.setPosition method. The base\r\n   * class updates the resize handles during the update of the Dimension/Position. This\r\n   * is not neccessary for the ResizeHandles. Performance issue.\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x The new x coordinate of the figure\r\n   * @param {Number} y The new y coordinate of the figure\r\n   **/\r\n  setPosition: function (x, y) {\r\n    // don't call base implementation. Base implementation will show\r\n    // ResizeHandles...but I'm the ResizeHandle\r\n    if (x instanceof draw2d.geo.Point) {\r\n      this.x = x.x\r\n      this.y = x.y\r\n    }\r\n    else {\r\n      this.x = x\r\n      this.y = y\r\n    }\r\n\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n\r\n    // performance improvement by setting the coordinates direct.\r\n    this.shape.attr({x: this.x, y: this.y})\r\n\r\n    this.applyTransformation()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the new dimension of the the ResizeHandle. If you didn't pass any width/height the best default for the\r\n   * platform will be used.\r\n   *\r\n   * Additional the \"snapTo\" anchor is re-calculated in relation to the type of ResizeHandle\r\n   *\r\n   * @param {Number} [width] new width of the resize handle\r\n   * @param {Number} [height] new width of the resize handle\r\n   */\r\n  setDimension: function (width, height) {\r\n\r\n    if (typeof height !== \"undefined\") {\r\n      this._super(width, height)\r\n    }\r\n    else {\r\n      if (draw2d.isTouchDevice) {\r\n        this._super(15, 15)\r\n      }\r\n      else {\r\n        this._super(8, 8)\r\n      }\r\n    }\r\n\r\n\r\n    let offset = this.getWidth()\r\n    let offset2 = offset / 2\r\n\r\n    switch (this.type) {\r\n      case 1:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset, offset))\r\n        break\r\n      case 2:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset2, offset))\r\n        break\r\n      case 3:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(0, offset))\r\n        break\r\n      case 4:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(0, offset2))\r\n        break\r\n      case 5:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(0, 0))\r\n        break\r\n      case 6:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset2, 0))\r\n        break\r\n      case 7:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset, 0))\r\n        break\r\n      case 8:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset, offset2))\r\n        break\r\n      case 9:\r\n        this.setSnapToGridAnchor(new draw2d.geo.Point(offset2, offset2))\r\n        break\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Show the ResizeHandle and add it to the canvas.<br>\r\n   * Additional bring it in to the front of other figures if we didn't use\r\n   * an overlayCanvas.\r\n   *\r\n   * If the ResizeHandle is place inside an overlayCanvas it is automatically on top.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the canvas to use\r\n   **/\r\n  show: function (canvas) {\r\n    // don't call the parent function. The parent functions delete this object\r\n    // and a resize handle can't be deleted.\r\n    this.setCanvas(canvas)\r\n\r\n    this.canvas.resizeHandles.add(this)\r\n    this.shape.insertAfter(this.owner.getShapeElement())\r\n\r\n    try{\r\n      this.blockEvent=true\r\n      this.zoomCallback()\r\n    }\r\n    finally{\r\n      this.blockEvent=false\r\n    }\r\n    this.repaint()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Hide the resize handle and remove it from the canvas.\r\n   *\r\n   **/\r\n  hide: function () {\r\n    // don't call the parent function. The parent functions delete this object\r\n    // and a resize handle shouldn't be deleted.\r\n    if (this.shape === null) {\r\n      return\r\n    }\r\n\r\n    this.canvas.resizeHandles.remove(this)\r\n    this.setCanvas(null)\r\n\r\n    return this\r\n  },\r\n\r\n  setCanvas: function (canvas) {\r\n\r\n    if(this.canvas!==null){\r\n      this.canvas.off(this.zoomCallback);\r\n    }\r\n\r\n    this._super(canvas)\r\n\r\n    if(this.canvas!==null){\r\n      this.canvas.on(\"zoom\", this.zoomCallback);\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the new background color of the figure. It is possible to hands over\r\n   * <code>null</code> to set the background transparent.\r\n   *\r\n   * @param {draw2d.util.Color} color The new background color of the figure\r\n   **/\r\n  setBackgroundColor: function (color) {\r\n    color = new draw2d.util.Color(color)\r\n\r\n    this.bgGradient = \"90-\" + color.darker(0.2).hash() + \"-\" + color.hash()\r\n    this._super(color)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    if (this.bgColor.hash() === \"none\") {\r\n      attributes.fill = \"none\"\r\n    }\r\n    else if (this.getAlpha() < 0.9 || this.useGradient === false) {\r\n      attributes.fill = this.bgColor.rgba()\r\n    }\r\n    else {\r\n      attributes.fill = this.bgGradient\r\n    }\r\n\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * return true if the element can be used in combination with the\r\n   * SnapToHelper feature.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  supportsSnapToHelper: function () {\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Override this method and redirect them to the cavas. A ResizeHandle didn't support\r\n   * Keyboard interaction at the moment.\r\n   *\r\n   * @param {Number} keyCode the id of the pressed key\r\n   * @param {Boolean} ctrl true if the user has pressed the CTRL/STRG key as well.\r\n   **/\r\n  onKeyDown: function (keyCode, ctrl) {\r\n    // don't call the parent function. The parent functions delete this object\r\n    // and a resize handle can't be deleted.\r\n    this.canvas.onKeyDown(keyCode, ctrl)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  fireEvent: function (event, args) {\r\n    // A resizeHandle doesn't fire this event.\r\n    // Normally this set the document dirty. This is not necessary for a ResizeHandle.\r\n  }\r\n})\r\n\r\n","\r\nimport draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n * Abstract class which can handle plain SVG content.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.SetFigure\r\n */\r\ndraw2d.SVGFigure = draw2d.SetFigure.extend(\r\n    /** @lends draw2d.SVGFigure.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.SVGFigure\",\r\n\r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this.svg = null\r\n        this._super(\r\n            attr,\r\n            {\r\n                svg : this.setSVG,\r\n                ...setter},\r\n            {\r\n                svg : this.getSVG,\r\n                ...getter}\r\n        )\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    createSet: function()\r\n    {\r\n        // legacy behaviour. Legacy code of Draw2D didn't have the \"svg\" attribute.\r\n        // in this case we must call the overridden method \"getSVG\" to retrieve the SVG from inherit\r\n        // the inherit class.\r\n        //\r\n        this.svg ??= this.getSVG()\r\n\t\treturn this.importSVG(this.canvas, this.svg)\r\n\t},\r\n\r\n    /**\r\n     * \r\n     * Returns the current used SVG as string\r\n     * @returns {String}\r\n     */\r\n    getSVG: function()\r\n    {\r\n        return this.svg\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Set the SVG of this shape\r\n     *\r\n     * @param {String} svg The new SVG to render as String\r\n     * @param {Number} [duration] the optional duration for the change of the SVG of the figure\r\n     *\r\n     * @returns {draw2d.SVGFigure}\r\n     */\r\n    setSVG: function(svg, duration)\r\n    {\r\n        this.svg = svg\r\n\r\n        // SVG has changed. Update the rendering\r\n        //\r\n        if(this.canvas !==null && this.svgNodes !==null){\r\n            let newSVGNodes = this.createSet();\r\n            if(!isNaN(parseFloat(duration))) {\r\n                newSVGNodes.hide();\r\n                newSVGNodes.insertAfter(this.svgNodes);\r\n                let oldSVG = this.svgNodes;\r\n                this.svgNodes = newSVGNodes;\r\n                this.applyTransformation();\r\n                oldSVG.forEach(function ( shape) {\r\n                    $(shape.node).fadeOut(duration, function () {\r\n                        shape.remove();\r\n                    });\r\n                });\r\n                newSVGNodes.forEach(function (shape) {\r\n                    $(shape.node).fadeIn(duration);\r\n                });\r\n            }\r\n            else {\r\n                newSVGNodes.insertAfter(this.svgNodes);\r\n                this.svgNodes.remove();\r\n                this.svgNodes = newSVGNodes;\r\n                this.applyTransformation();\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Helper method to transform the SVG string into a raphaelJS set.\r\n     *\r\n     * @private\r\n     */\r\n    importSVG : function (canvas, rawSVG)\r\n    {\r\n      let set = canvas.paper.set()\r\n\r\n      try {\r\n        if (typeof rawSVG === 'undefined'){\r\n          throw 'No data was provided.';\r\n        }\r\n\r\n        // Override the dimension from the JSON if the SVG contains any\r\n        //\r\n        let svgDOM= $(rawSVG)\r\n\r\n        // set the dimension of the element if the JSON import didn't provide\r\n        // a dimension already\r\n        //\r\n        if(typeof this._dimensionReadFromJSON ===\"undefined\"){\r\n            if(svgDOM.attr(\"width\") && svgDOM.attr(\"height\")){\r\n                this.setDimension(parseFloat(svgDOM.attr(\"width\")), parseFloat(svgDOM.attr(\"height\")));\r\n            }\r\n            delete this._dimensionReadFromJSON\r\n        }\r\n\r\n        let findStyle = new RegExp('([a-z0-9\\-]+) ?: ?([^ ;]+)[ ;]?','gi');\r\n\r\n        svgDOM.children().each(function(i,element){\r\n          //element = $(element);\r\n          let shape=null;\r\n          let style=null;\r\n          let attr = { };\r\n          let node = element.tagName;\r\n\r\n          // remove the namespace of the node if existing. This can happen in IE8\r\n          //\r\n          let index = node.indexOf(\":\");\r\n          if(index != -1)\r\n              node = node.substr(index+1);\r\n\r\n          // map some element to Raphael specifix attributes or ignore some unknown attributes\r\n          //\r\n          $(element.attributes).each(function() {\r\n            switch(this.nodeName) {\r\n              case 'stroke-dasharray':\r\n                attr[this.nodeName] = '- ';\r\n              break;\r\n              case 'style':\r\n                style = this.nodeValue;\r\n              break;\r\n              case 'id':\r\n              case 'xml:space':\r\n                  // just to ignore\r\n                  break;\r\n              default:\r\n                if(this.value){\r\n                    attr[this.nodeName] = this.value;\r\n                }\r\n                else{\r\n                    // @deprecated\r\n                    attr[this.nodeName] = this.nodeValue;\r\n                }\r\n              break;\r\n            }\r\n          });\r\n\r\n\r\n          if ( style !== null){\r\n            while(findStyle.exec(style)){\r\n              attr[RegExp.$1] = RegExp.$2;\r\n            }\r\n          }\r\n\r\n          // set some good defaults if the element didn't provide a stroke-width but has a \"stroke\" attribute\r\n          //\r\n          if (typeof attr['stroke-width'] === 'undefined'){\r\n              attr['stroke-width'] = (typeof attr.stroke === 'undefined' ? 0 : 1.2);\r\n          }\r\n\r\n          switch(node) {\r\n            case 'rect':\r\n              shape = canvas.paper.rect();\r\n\r\n              // transfer rx-SVG attribute to the \"r\" attribute of raphael\r\n              if(typeof attr[\"rx\"]!==\"undefined\") {\r\n                  attr.r = parseInt(attr.rx);\r\n                  delete attr.rx;\r\n              }\r\n              break;\r\n            case 'circle':\r\n              shape = canvas.paper.circle();\r\n              break;\r\n            case 'ellipse':\r\n              shape = canvas.paper.ellipse();\r\n              break;\r\n            case 'path':\r\n              attr.fill =\"none\";\r\n              shape = canvas.paper.path(attr.d);\r\n              break;\r\n            case 'line':\r\n              attr.d= \"M \"+attr.x1+\" \"+attr.y1+\"L\"+attr.x2+\" \"+attr.y2;\r\n              attr.fill =\"none\";\r\n              shape = canvas.paper.path(attr.d);\r\n             break;\r\n            case 'polyline':\r\n              let path = attr.points;\r\n              attr.d = \"M \"+path.replace(\" \",\" L\");\r\n              shape = canvas.paper.path(attr.d);\r\n              break;\r\n            case 'polygon':\r\n              shape = canvas.paper.polygon(attr.points);\r\n              break;\r\n            case 'image':\r\n              shape = canvas.paper.image();\r\n              break;\r\n            case 'tspan':\r\n            case 'text':\r\n                if(element.childNodes.length>0){\r\n                    let child = element.firstChild;\r\n                    do {\r\n                       switch(child.nodeType){\r\n                            case 2://ATTRIBUTE_NODE\r\n                            case 4://CDATA_SECTION_NODE\r\n                            case 5://ENTITY_REFERENCE_NODE\r\n                            case 6://ENTITY_NODE\r\n                            case 7://PROCESSING_INSTRUCTION_NODE\r\n                            case 8://COMMENT_NODE\r\n                            case 9://DOCUMENT_NODE\r\n                            case 10://DOCUMENT_TYPE_NODE\r\n                            case 11://DOCUMENT_FRAGMENT_NODE\r\n                            case 12://NOTATION_NODE\r\n                                return;\r\n                            case 3://TEXT_NODE\r\n                            \t // redirect to the parent node if we found a simple TEXT without any attributes\r\n                            \tchild = element;\r\n                            \tbreak;\r\n                            case 1://ELEMENT_NODE\r\n                        }\r\n                        let subShape = canvas.paper.text(0,0,$(child).text());\r\n                        let subAttr ={\"x\":parseFloat(child.attributes.x.value), \"y\":parseFloat(child.attributes.y.value)};\r\n                        subAttr[\"text-anchor\"] = \"start\";\r\n                        if(typeof child.attributes[\"text-anchor\"]!==\"undefined\"){\r\n                            subAttr[\"text-anchor\"] = child.attributes[\"text-anchor\"].value;\r\n                        }\r\n                        else if(typeof attr[\"text-anchor\"]!==\"undefined\"){\r\n                            subAttr[\"text-anchor\"] = attr[\"text-anchor\"];\r\n                        }\r\n\r\n                        if(typeof child.attributes[\"font-size\"]!==\"undefined\"){\r\n                            subAttr[\"font-size\"] = parseInt(child.attributes[\"font-size\"].value);\r\n                        }\r\n                        else if(typeof attr[\"font-size\"]!==\"undefined\"){\r\n                            // inherit the font size from the parent node\r\n                            subAttr[\"font-size\"] = parseInt(attr[\"font-size\"]);\r\n                        }\r\n\r\n                        if(typeof child.attributes[\"font-family\"]!==\"undefined\"){\r\n                            subAttr[\"font-family\"] = child.attributes[\"font-family\"].value;\r\n                        }\r\n                        else if(typeof attr[\"font-family\"]!==\"undefined\"){\r\n                            // inherit the font size from the parent node\r\n                            subAttr[\"font-family\"] = attr[\"font-family\"];\r\n                        }\r\n\r\n                        subAttr[\"fill\"] = \"#000000\";\r\n                        if(typeof child.attributes[\"fill\"]!==\"undefined\"){\r\n                            subAttr[\"fill\"] = child.attributes[\"fill\"].value;\r\n                        }\r\n                        else if(typeof attr[\"fill\"]!==\"undefined\"){\r\n                            // inherit the font size from the parent node\r\n                            subAttr[\"fill\"] = attr[\"fill\"];\r\n                        }\r\n\r\n                        subAttr.y= subAttr.y+subShape.getBBox().height/2;\r\n\r\n                        subShape.attr(subAttr);\r\n                        set.push(subShape);\r\n                        child = child.nextSibling;\r\n\r\n                    }while(child && child.nodeType === 3); // 3= TEXT_NODE\r\n                }\r\n                else{\r\n                  shape = canvas.paper.text(0,0,$(element).html());\r\n                  if(typeof attr[\"fill\"]===\"undefined\")\r\n                      attr[\"fill\"] = \"#000000\";\r\n                  if(typeof attr[\"text-anchor\"]===\"undefined\")\r\n                      attr[\"text-anchor\"] = \"start\";\r\n                  if(typeof attr[\"font-size\"]!==\"undefined\")\r\n                      attr[\"font-size\"] = parseInt(attr[\"font-size\"]);\r\n                  if(typeof attr[\"font-family\"]!==\"undefined\")\r\n                      attr[\"font-family\"] = parseInt(attr[\"font-family\"]);\r\n                  attr.y= parseFloat(attr.y)+shape.getBBox().height/2;\r\n                }\r\n              break;\r\n          }\r\n          if(shape!==null){\r\n              shape.attr(attr);\r\n              set.push(shape);\r\n          }\r\n        });\r\n      } catch (error) {\r\n        alert('The SVG data you entered was invalid! (' + error + ')');\r\n      }\r\n\r\n\r\n      return set;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Read all attributes from the serialized properties and transfer them into the shape.\r\n     *\r\n     * @param {Object} memento\r\n     */\r\n    setPersistentAttributes: function(memento)\r\n    {\r\n        this._super(memento);\r\n\r\n        // keep a temp flag to indicate the we have read the dimension of the\r\n        // element from the JSON struct. In this case we didn't care about the dimension\r\n        // from the SVG data\r\n        //\r\n        if(typeof memento.width !== \"undefined\"){\r\n            this._dimensionReadFromJSON=true;\r\n        }\r\n        else if(typeof memento.height !== \"undefined\"){\r\n            this._dimensionReadFromJSON=true;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n});\r\n","import draw2d from 'packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Represents the current selection in the canvas. The selection element is a pure passive element which\r\n * manage/store the selection.\r\n *\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.Selection = Class.extend(\r\n  /** @lends draw2d.Selection.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.Selection\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   */\r\n  init: function () {\r\n    this.primary = null;\r\n    this.all = new draw2d.util.ArrayList();\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Reset the current selection\r\n   *\r\n   */\r\n  clear: function () {\r\n    this.primary = null;\r\n    this.all = new draw2d.util.ArrayList();\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the primary selection. This can only one figure at once.\r\n   *\r\n   * @returns {draw2d.Figure} the primary selected figure\r\n   */\r\n  getPrimary: function () {\r\n    return this.primary;\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the primary selection.\r\n   *\r\n   * @param {draw2d.Figure} figure The new primary selection\r\n   */\r\n  setPrimary: function (figure) {\r\n    this.primary = figure;\r\n    this.add(figure);\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Remove the given figure from the selection (primary,all)\r\n   *\r\n   * @param {draw2d.Figure} figure\r\n   */\r\n  remove: function (figure) {\r\n    this.all.remove(figure);\r\n    if (this.primary === figure) {\r\n      this.primary = null;\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Add a figure to the selection. No events are fired or update the selection handle. This method just\r\n   * add the figure to the internal management data structure.\r\n   *\r\n   * @param figure\r\n   * @private\r\n   */\r\n  add: function (figure) {\r\n    if (figure !== null && !this.all.contains(figure)) {\r\n      this.all.add(figure);\r\n    }\r\n\r\n    return this;\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * return true if the given figure part of the selection.\r\n   *\r\n   * @param {draw2d.Figure} figure The figure to check\r\n   * @param {Boolean} [checkDescendant] Check if the figure provided by the argument is a descendant of the selection whether it is a direct child or nested more deeply.\r\n   *\r\n   * @since 2.2.0\r\n   * @returns {Boolean}\r\n   */\r\n  contains: function (figure, checkDescendant) {\r\n    if (checkDescendant) {\r\n      for (let i = 0; i < this.all.getSize(); i++) {\r\n        let figureToCheck = this.all.get(i);\r\n        if (figureToCheck === figure || figureToCheck.contains(figure)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    return this.all.contains(figure);\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return if the selection is empty\r\n   *\r\n   * @since 4.8.0\r\n   */\r\n  isEmpty: function () {\r\n    return this.all.isEmpty();\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the size of the selection\r\n   *\r\n   * @since 4.8.0\r\n   */\r\n  getSize: function () {\r\n    return this.all.getSize();\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the complete selection - including the primary selection.\r\n   *\r\n   * @param {Boolean} [expand] expand all StrongComposite and WeakComposite to get all figures. Didn't expand any SetFigures or LayoutFigures\r\n   * @returns {draw2d.util.ArrayList}\r\n   *\r\n   */\r\n  getAll: function (expand) {\r\n    if (expand === true) {\r\n      let result = new draw2d.util.ArrayList();\r\n      let addRecursive = (figures) => {\r\n        result.addAll(figures, true);\r\n        figures.each((index, figure) => {\r\n          if (figure instanceof draw2d.shape.composite.StrongComposite) {\r\n            addRecursive(figure.getAssignedFigures());\r\n          }\r\n        });\r\n      };\r\n      addRecursive(this.all);\r\n\r\n      return result;\r\n    }\r\n\r\n    return this.all.clone();\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Iterates over the current selection with <b>func</b> as callback handler.\r\n   *\r\n   * @param {Function} func the callback function to call for each element\r\n   * @param {Number} func.i index of the element in iteration\r\n   * @param {Object} func.value value of the element in iteration.\r\n   * @param {Boolean} [reverse] optional parameter. Iterate the collection reverse if it set to <b>true</b>\r\n   */\r\n  each: function (func, reverse) {\r\n    this.all.each(func, reverse);\r\n\r\n    return this;\r\n  }\r\n});\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * A SetFigure is a composition of different SVG elements.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.SetFigure = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.SetFigure.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.SetFigure\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // collection of SVG DOM nodes\r\n    this.svgNodes = null\r\n\r\n    this.originalWidth = null\r\n    this.originalHeight = null\r\n\r\n    this.scaleX = 1\r\n    this.scaleY = 1\r\n\r\n    this.strokeScale = true // scale the stroke width of the children nodes if the parent resize\r\n\r\n    this._super({stroke: 0, bgColor: null, ...attr}, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set/Reset the canvas for the element.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the canvas to use\r\n   */\r\n  setCanvas: function (canvas) {\r\n    // remove the shape if we reset the canvas and the element\r\n    // was already drawn\r\n    if (canvas === null && this.svgNodes !== null) {\r\n      this.svgNodes.remove()\r\n      this.svgNodes = null\r\n    }\r\n\r\n    this._super(canvas)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the css class if the node.\r\n   *\r\n   * @param {String} cssClass the new css class name of the node\r\n   * @since 2.9.0\r\n   */\r\n  setCssClass: function (cssClass) {\r\n    this._super(cssClass)\r\n\r\n    if (this.svgNodes === null) {\r\n      return this\r\n    }\r\n\r\n    if (this.cssClass === null) {\r\n      this.svgNodes.forEach( (e) => {\r\n        e.node.removeAttribute(\"class\")\r\n      })\r\n    }\r\n    else {\r\n      this.svgNodes.forEach( (e) => {\r\n        e.node.setAttribute(\"class\", cssClass)\r\n      })\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * propagate all attributes like color, stroke,... to the shape element and\r\n   * repaint them.\r\n   *\r\n   * @protected\r\n   **/\r\n  repaint: function (attributes) {\r\n    // repaint can be blocked during deserialization and if the shape\r\n    // not part of any canvas.\r\n    //\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    if (this.originalWidth !== null) {\r\n      this.scaleX = this.width / this.originalWidth\r\n      this.scaleY = this.height / this.originalHeight\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    this.applyAlpha()\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setVisible: function (flag, duration) {\r\n    this._super(flag, duration)\r\n\r\n    if (this.svgNodes !== null) {\r\n      if (duration) {\r\n        if (this.visible === true) {\r\n          this.svgNodes.forEach( (shape) =>{\r\n            $(shape.node).fadeIn(duration, ()=>shape.show())\r\n          })\r\n        }\r\n        else {\r\n          this.svgNodes.forEach( (shape) =>{\r\n            $(shape.node).fadeOut(duration, () => shape.hide())\r\n          })\r\n        }\r\n      }\r\n      else {\r\n        if (this.visible === true) {\r\n          this.svgNodes.show()\r\n        }\r\n        else {\r\n          this.svgNodes.hide()\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Apply the opacity to all child set elements. Override this if you want to avoid opacity changes.\r\n   * @private\r\n   *\r\n   */\r\n  applyAlpha: function () {\r\n    this.svgNodes.attr({opacity: this.alpha})\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  applyTransformation: function () {\r\n    let s =\r\n      \"S\" + this.scaleX + \",\" + this.scaleY + \",0,0 \" +\r\n      \"R\" + this.rotationAngle + \",\" + ((this.getWidth() / 2) | 0) + \",\" + ((this.getHeight() / 2) | 0) +\r\n      \"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY() +\r\n      \"\"\r\n    this.svgNodes.transform(s)\r\n    if (this.rotationAngle === 90 || this.rotationAngle === 270) {\r\n      let before = this.svgNodes.getBBox(true)\r\n      let ratio = before.height / before.width\r\n      let reverseRatio = before.width / before.height\r\n      let rs = \"...S\" + ratio + \",\" + reverseRatio + \",\" + (this.getAbsoluteX() + this.getWidth() / 2) + \",\" + (this.getAbsoluteY() + this.getHeight() / 2)\r\n      this.svgNodes.transform(rs)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Moves the element so it is the closest to the viewer’s eyes, on top of other elements. Additional\r\n   * the internal model changed as well.\r\n   *\r\n   * Optional: Inserts current object in front of the given one.\r\n   *\r\n   * @param {draw2d.Figure} [figure] move current object in front of the given one.\r\n   * @since 3.0.0\r\n   */\r\n  toFront: function (figure) {\r\n    ////////////////////////////////////////////////////////////////////\r\n    // NOTE: the code has a complete different order of draw2d.Figure.\r\n    //       we must respect the svgNodes here\r\n    ////////////////////////////////////////////////////////////////////\r\n\r\n    // ensure that the z-oder is still correct if the figure is assigned\r\n    // to a StrongComposite\r\n    //\r\n    if (this.composite instanceof draw2d.shape.composite.StrongComposite && (typeof figure !== \"undefined\")) {\r\n      let indexFigure = figure.getZOrder()\r\n      let indexComposite = this.composite.getZOrder()\r\n      if (indexFigure < indexComposite) {\r\n        figure = this.composite\r\n      }\r\n    }\r\n\r\n    if (typeof figure === \"undefined\") {\r\n      // bring the outer frame in front...\r\n      this.getShapeElement().toFront()\r\n\r\n      // and all inner children\r\n      //\r\n      this.svgNodes?.toFront()\r\n\r\n      if (this.canvas !== null) {\r\n        let figures = this.canvas.getFigures()\r\n        let lines = this.canvas.getLines()\r\n        if (figures.remove(this) !== null) {\r\n          figures.add(this)\r\n        } else if (lines.remove(this) !== null) {\r\n          lines.add(this)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      // Bring the SVG shapes between the \"figure\" and the container of this shape\r\n      //\r\n      if (this.svgNodes !== null) {\r\n        this.svgNodes.insertAfter(figure.getTopLevelShapeElement())\r\n      }\r\n      this.getShapeElement().insertAfter(figure.getTopLevelShapeElement())\r\n\r\n      if (this.canvas !== null) {\r\n        let figures = this.canvas.getFigures()\r\n        let lines = this.canvas.getLines()\r\n        if (figures.remove(this) !== null) {\r\n          let index = figures.indexOf(figure)\r\n          figures.insertElementAt(this, index + 1)\r\n        } else if (lines.remove(this) !== null) {\r\n          lines.add(this)\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    // bring all children in front of the parent\r\n    //\r\n    this.children.each(function (i, child) {\r\n      child.figure.toFront(figure)\r\n    })\r\n\r\n    // the ports are always on top\r\n    //\r\n    let _this = this\r\n    this.getPorts().each(function (i, port) {\r\n      port.getConnections().each(function (i, connection) {\r\n        connection.toFront(figure)\r\n      })\r\n      // a port should always be in front of the shape doesn't matter what the\r\n      // \"figure\" parameter says.\r\n      //\r\n      port.toFront(_this)\r\n    })\r\n\r\n    // and last but not lease the ResizeHandles if any present\r\n    //\r\n    this.selectionHandles.each(function (i, handle) {\r\n      handle.toFront()\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Moves the element to the background. Additional\r\n   * the internal model changed as well.\r\n   *\r\n   * Optional: Inserts current object in front of the given one.\r\n   *\r\n   * @param {draw2d.Figure} [figure] move current object in front of the given one.\r\n   * @since 4.7.2\r\n   */\r\n  toBack: function (figure) {\r\n    // it is not allowed that a figure is behind the assigned composite\r\n    //\r\n    if (this.composite instanceof draw2d.shape.composite.StrongComposite) {\r\n      this.toFront(this.composite)\r\n      return\r\n    }\r\n\r\n    // sort the JSON Doc\r\n    //\r\n    if (this.canvas !== null) {\r\n      let figures = this.canvas.getFigures()\r\n      let lines = this.canvas.getLines()\r\n      if (figures.remove(this) !== null) {\r\n        figures.insertElementAt(this, 0)\r\n      }\r\n      else if (lines.remove(this) !== null) {\r\n        lines.insertElementAt(this, 0)\r\n      }\r\n    }\r\n\r\n    // bring all children figures in front of the parent\r\n    // run reverse to the collection to care about the z-order of the children)\r\n    this.children.each( (i, child) => {\r\n      child.figure.toBack(figure)\r\n    }, true)\r\n\r\n    if (this.svgNodes !== null) {\r\n      if (typeof figure !== \"undefined\") {\r\n        this.svgNodes.insertBefore(figure.getShapeElement())\r\n      }\r\n      else {\r\n        this.svgNodes.toBack()\r\n      }\r\n    }\r\n\r\n\r\n    if (this.canvas !== null) {\r\n      if (typeof figure !== \"undefined\") {\r\n        this.getShapeElement().insertBefore(figure.getShapeElement())\r\n      }\r\n      else {\r\n        this.getShapeElement().toBack()\r\n      }\r\n    }\r\n\r\n    // and last but not least - the ports are always on top\r\n    //\r\n    this.getPorts().each((i, port) => {\r\n      port.getConnections().each((i, connection) =>  {\r\n        connection.toFront(this)\r\n      })\r\n      // a port should always be in front of the shape doesn't matter what the\r\n      // \"figure\" parameter says.\r\n      //\r\n      port.toFront(this)\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getTopLevelShapeElement: function () {\r\n    if (this.svgNodes.length === 0) {\r\n      return this.shape\r\n    }\r\n    return this.svgNodes\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  createShapeElement: function () {\r\n    // NOTE: don't change the order of the two calls. This defines the z-oder in the canvas.\r\n    // The \"set\" must always be on top.\r\n    let shape = this.canvas.paper.rect(this.getX(), this.getY(), this.getWidth(), this.getHeight())\r\n    this.svgNodes = this.createSet()\r\n\r\n    // check if the element is a \"set\" or a simple raphael shape. otherwise we wrap them into a set\r\n    //\r\n    if (typeof this.svgNodes.forEach === \"undefined\") {\r\n      let set = this.canvas.paper.set()\r\n      set.push(this.svgNodes)\r\n      this.svgNodes = set\r\n    }\r\n\r\n    this.svgNodes.attr({\"stroke-scale\": this.strokeScale})\r\n\r\n    // update the visibility of the children\r\n    this.setVisible(this.visible)\r\n\r\n    // propagate the CSS style to all set elements\r\n    this.setCssClass(this.cssClass)\r\n\r\n    let bb = this.svgNodes.getBBox()\r\n    this.originalWidth = bb.width\r\n    this.originalHeight = bb.height\r\n\r\n    return shape\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Override this method to add your own SVG elements. See {@link draw2d.shape.basic.Label} as example.\r\n   *\r\n   * @template\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.set() // return empty set as default;\r\n  }\r\n\r\n})\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n * The base class for all vector based figures like {@link draw2d.shape.basic.Rectangle}  or {@link draw2d.shape.basic.Oval}\r\n * inside a canvas.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.node.Node\r\n */\r\ndraw2d.VectorFigure = draw2d.shape.node.Node.extend(\r\n    /** @lends draw2d.VectorFigure.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.VectorFigure\",\r\n    \r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function( attr, setter, getter)\r\n    {\r\n        this.stroke = 1;\r\n        this.radius = 0;\r\n        this.bgColor= new draw2d.util.Color(\"#ffffff\");\r\n        this.color  = new draw2d.util.Color(\"#303030\");\r\n        this.dasharray = null;\r\n\r\n        // memento for the stroke if we reset the glow effect of this shape\r\n        //\r\n        this.strokeBeforeGlow = this.stroke;\r\n        this.glowIsActive = false;\r\n\r\n        this._super( attr,\r\n            {\r\n                // @attr {String} dasharray the line pattern see {@link draw2d.shape.basic.Line#setDashArray} for more information*/\r\n                dasharray : this.setDashArray,\r\n                // @attr {Number} radius the radius to render the line edges */\r\n                radius : this.setRadius,\r\n                // @attr {String|draw2d.util.Color} bgColor the background color of the shape */\r\n                bgColor: this.setBackgroundColor,\r\n                // @attr {String|draw2d.util.Color} color the main color of the shape */\r\n                color  : this.setColor,\r\n                // @attr {Number} stroke the stroke width */\r\n                stroke : this.setStroke,\r\n                ...setter},\r\n            {\r\n               dasharray: this.getDashArray,\r\n               radius :   this.getRadius,\r\n               bgColor:   this.getBackgroundColor,\r\n               color  :   this.getColor,\r\n               stroke :   this.getStroke,\r\n               ...getter}\r\n        )\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Sets the corner radius or the edges.\r\n     *\r\n     * @param {Number} radius\r\n     * @since 4.2.1\r\n     */\r\n     setRadius: function(radius)\r\n     {\r\n        this.radius = radius;\r\n        this.repaint();\r\n        this.fireEvent(\"change:radius\",{value:this.radius});\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Get the corner radius of the edges.\r\n     *\r\n     * @returns {Number}\r\n     * @since 4.2.1\r\n     */\r\n    getRadius: function()\r\n    {\r\n        return this.radius;\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     * Set the line style for this object.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n    *       dash: dashPattern\r\n    *     });\r\n     *\r\n     * @param {String} dash can be one of this [\"\", \"-\", \".\", \"-.\", \"-..\", \". \", \"- \", \"--\", \"- .\", \"--.\", \"--..\"]\r\n     */\r\n    setDashArray: function(dashPattern)\r\n    {\r\n        this.dasharray = dashPattern;\r\n        this.repaint();\r\n\r\n        this.fireEvent(\"change:dashArray\",{value:this.dasharray});\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Get the line style for this object.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr(\"dash\");\r\n     *\r\n     * @since 5.1.0\r\n     */\r\n    getDashArray: function()\r\n    {\r\n        return this.dasharray;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Highlight the element or remove the highlighting\r\n     *\r\n     * @param {Boolean} flag indicates glow/noGlow\r\n     */\r\n    setGlow: function(flag)\r\n    {\r\n\r\n        if(flag === this.glowIsActive) {\r\n            return this;\r\n        }\r\n\r\n        this.glowIsActive = flag;\r\n        if(flag===true){\r\n            this.strokeBeforeGlow = this.getStroke();\r\n            this.setStroke(this.strokeBeforeGlow*1.5);\r\n        }\r\n        else {\r\n            this.setStroke(this.strokeBeforeGlow);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    repaint: function(attributes)\r\n    {\r\n        if (this.repaintBlocked===true || this.shape === null){\r\n            return;\r\n        }\r\n\r\n        attributes??={};\r\n\r\n        attributes.x = this.getAbsoluteX();\r\n        attributes.y = this.getAbsoluteY();\r\n\r\n        if(typeof attributes.stroke===\"undefined\"){\r\n            if(this.color === null || this.stroke ===0){\r\n                attributes.stroke = \"none\";\r\n            }\r\n            else {\r\n                attributes.stroke = this.color.rgba();\r\n            }\r\n        }\r\n\r\n        attributes[\"stroke-width\"] ??= this.stroke\r\n        attributes[\"fill\"] ??=this.bgColor.rgba()\r\n        attributes[\"dasharray\"] ??= this.dasharray\r\n        attributes[\"stroke-dasharray\"] ??= this.dasharray\r\n\r\n        this._super(attributes);\r\n\r\n        return this;\r\n    },\r\n\r\n\r\n   /**\r\n    * \r\n    * Set the new background color of the figure. It is possible to hands over\r\n    * <code>null</code> to set the background transparent.\r\n    *\r\n    *     // Alternatively you can use the attr method:\r\n    *     figure.attr({\r\n    *       \"bgColor\": \"#f0f0f0\"\r\n    *     });\r\n    *\r\n    * @param {String|draw2d.util.Color} color The new background color of the figure\r\n    **/\r\n    setBackgroundColor: function(color)\r\n    {\r\n        this.bgColor = new draw2d.util.Color(color);\r\n\r\n        this.repaint();\r\n        this.fireEvent(\"change:bgColor\",{value:this.bgColor});\r\n\r\n        return this;\r\n    },\r\n\r\n   /**\r\n    * \r\n    * The current used background color.\r\n    *\r\n    *     // Alternatively you can use the attr method:\r\n    *     var color =figure.attr(\"bgColor\");\r\n    *\r\n    * @returns {draw2d.util.Color}\r\n    */\r\n   getBackgroundColor: function()\r\n   {\r\n     return this.bgColor;\r\n   },\r\n\r\n   /**\r\n    * \r\n    * Set the stroke to use.\r\n    *\r\n    *     // Alternatively you can use the attr method:\r\n    *     figure.attr({\r\n    *       \"stroke\": 2\r\n    *     });\r\n    *\r\n    * @param {Number} w The new line width of the figure\r\n    **/\r\n   setStroke: function( w )\r\n   {\r\n     this.stroke=w;\r\n     this.repaint();\r\n     this.fireEvent(\"change:stroke\",{value:this.stroke});\r\n\r\n     return this;\r\n   },\r\n\r\n   /**\r\n    * \r\n    * The used line width.\r\n    *\r\n    * @returns {Number}\r\n    **/\r\n   getStroke: function( )\r\n   {\r\n     return this.stroke;\r\n   },\r\n\r\n   /**\r\n    * \r\n    * Set the foreground color of the figure.\r\n    * This method fires a <i>document dirty</i> event.\r\n    *\r\n    *     // Alternatively you can use the attr method:\r\n    *     figure.attr({\r\n    *       \"color\": \"#f3f3f3\"\r\n    *     });\r\n    *\r\n    * @param {String|draw2d.util.Color} color The new color of the line.\r\n    **/\r\n   setColor: function( color)\r\n   {\r\n     this.color = new draw2d.util.Color(color);\r\n     this.repaint();\r\n     this.fireEvent(\"change:color\",{value:this.color});\r\n\r\n     return this;\r\n   },\r\n\r\n   /**\r\n    * \r\n    * Get the current used foreground color\r\n    *\r\n    *\r\n    * @returns {draw2d.util.Color}\r\n    */\r\n   getColor: function()\r\n   {\r\n     return this.color;\r\n   },\r\n\r\n\r\n   /**\r\n    * @inheritdoc\r\n    */\r\n   getPersistentAttributes: function()\r\n   {\r\n       return  {...this._super(), \r\n           bgColor : this.bgColor.rgba(),\r\n           color   : this.color.rgba(),\r\n           stroke  : this.stroke,\r\n           radius  : this.radius,\r\n           dasharray : this.dasharray\r\n       }\r\n   },\r\n\r\n   /**\r\n    * @inheritdoc\r\n    */\r\n   setPersistentAttributes: function(memento)\r\n   {\r\n       this._super(memento);\r\n\r\n       if(typeof memento.radius !==\"undefined\"){\r\n           this.setRadius(memento.radius);\r\n        }\r\n\r\n       if(typeof memento.bgColor !== \"undefined\"){\r\n           this.setBackgroundColor(memento.bgColor);\r\n       }\r\n\r\n       if(typeof memento.color !== \"undefined\"){\r\n           this.setColor(memento.color);\r\n       }\r\n\r\n       if(typeof memento.stroke !== \"undefined\" ){\r\n           this.setStroke(memento.stroke===null?0:parseFloat(memento.stroke));\r\n       }\r\n\r\n       if(typeof memento.dasharray ===\"string\"){\r\n           this.dasharray = memento.dasharray;\r\n       }\r\n\r\n\r\n       return this;\r\n   }\r\n\r\n\r\n});\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Commands are passed around throughout editing. They are used to encapsulate and combine\r\n * changes to the application's model. An application has a single command stack. Commands must\r\n * be executed using the command stack rather than directly calling execute.\r\n * <br>\r\n * This is required for a generic support for the undo/redo concept within draw2d.<br>\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n */\r\ndraw2d.command.Command = Class.extend(\r\n  /** @lends draw2d.command.Command.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.command.Command\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {String} label\r\n   */\r\n  init: function (label) {\r\n    this.label = label\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns a label of the Command. e.g. `move figure`.\r\n   *\r\n   * @returns {String} the label for this command\r\n   **/\r\n  getLabel: function () {\r\n    return this.label\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time.\r\n   * Sup-classes must implement this method.\r\n   *\r\n   * @template\r\n   **/\r\n  execute: function () {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Will be called if the user cancel the operation.\r\n   *\r\n   * @template\r\n   **/\r\n  cancel: function () {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command.\r\n   * Sup-classes must implement this method.\r\n   *\r\n   * @template\r\n   **/\r\n  undo: function () {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Redo the command after the user has undo this command.\r\n   * Sup-classes must implement this method.\r\n   *\r\n   * @template\r\n   **/\r\n  redo: function () {\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command to add a figure with CommandStack support.\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandAdd = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandAdd.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.command.CommandAdd\",\r\n\r\n  /**\r\n   * Create a add command for the given figure.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the canvas to use\r\n   * @param {draw2d.Figure} figure the figure to add\r\n   * @param {Number|draw2d.geo.Point} x the x-coordinate or a complete point where to place the figure\r\n   * @param {Number} [y] the y-coordinate if x is a number and not a complete point\r\n   */\r\n  init: function (canvas, figure, x, y) {\r\n    this._super(draw2d.Configuration.i18n.command.addShape)\r\n    this.figure = figure\r\n    this.canvas = canvas\r\n    this.pos = new draw2d.geo.Point(x, y)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    // we can only add the figure once to the canvas\r\n    return this.figure.getCanvas() === null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.canvas.add(this.figure, this.pos.x, this.pos.y)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.execute()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.canvas.remove(this.figure)\r\n  }\r\n\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Add a vertex to a polyline or polygon\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandAddVertex = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandAddVertex.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandAddVertex\",\r\n\r\n  /**\r\n   * Create a new Command objects which add a vertex to a PolyLine / Polygon.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} line the related line\r\n   * @param {Number} index the index where to add\r\n   * @param {Number} x the x coordinate for the new vertex\r\n   * @param {Number} y the y coordinate for the new vertex\r\n   */\r\n  init: function (line, index, x, y) {\r\n    this._super(draw2d.Configuration.i18n.command.addVertex)\r\n\r\n    this.line = line\r\n    this.index = index\r\n    this.newPoint = new draw2d.geo.Point(x, y)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.line.removeVertexAt(this.index)\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.line.insertVertexAt(this.index, this.newPoint.x, this.newPoint.y)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Assign a figure to a compiste\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n * @since 4.9.0\r\n */\r\ndraw2d.command.CommandAssignFigure = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandAssignFigure.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandAssignFigure\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to assign\r\n   * @param {draw2d.Figure} composite the composite where the figure should assign\r\n   */\r\n  init: function (figure, composite) {\r\n    this._super(draw2d.Configuration.i18n.command.assignShape)\r\n\r\n    this.figure = figure\r\n    this.composite = composite\r\n    this.assignedConnections = new draw2d.util.ArrayList()\r\n    this.isNode = this.figure instanceof draw2d.shape.node.Node\r\n    this.oldBoundingBox = composite.getBoundingBox()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.composite.assignFigure(this.figure)\r\n\r\n    // get all connections of the shape and check if source/target node\r\n    // part of the composite. In this case the connection will be part of\r\n    // the composite as well\r\n    if (this.isNode === true) {\r\n      let connections = this.figure.getConnections()\r\n      let _this = this\r\n      connections.each(function (i, connection) {\r\n        if (connection.getSource().getParent().getComposite() === _this.composite && connection.getTarget().getParent().getComposite() === _this.composite) {\r\n          if (connection.getComposite() !== _this.composite) {\r\n            _this.assignedConnections.add({oldComposite: connection.getComposite(), connection: connection})\r\n            _this.composite.assignFigure(connection)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.composite.unassignFigure(this.figure)\r\n    this.assignedConnections.each( (i, entry) =>{\r\n      if (entry.oldComposite !== null) {\r\n        entry.oldComposite.assignFigure(entry.connection)\r\n      }\r\n      else {\r\n        entry.connection.getComposite().unassignFigure(entry.connection)\r\n      }\r\n    })\r\n    this.composite.stickFigures = true\r\n    this.composite.setBoundingBox(this.oldBoundingBox)\r\n    this.composite.stickFigures = false\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.composite.setBoundingBox(this.oldBoundingBox)\r\n    this.composite.assignFigure(this.figure)\r\n    this.assignedConnections.each( (i, entry) => this.composite.assignFigure(entry.connection))\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *Command to change attributes of a shape with undo/redo support\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandAttr = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandAttr.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandAttr\",\r\n\r\n  /**\r\n   * Create a new Command objects which provides undo/redo for attributes.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to handle\r\n   * @param {Object} attributes new attributes to set\r\n   */\r\n  init: function (figure, newAttributes) {\r\n    this._super(draw2d.Configuration.i18n.command.changeAttributes)\r\n\r\n    this.figure = figure\r\n    this.newAttributes = newAttributes\r\n    this.oldAttributes = {}\r\n    // Get the current attributes from the shape before we modify them.\r\n    // Required for undo/redo\r\n    Object.keys(newAttributes).forEach( (key) => {\r\n      this.oldAttributes[key] = figure.attr(key)\r\n    })\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.figure.attr(this.oldAttributes)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.figure.attr(this.newAttributes)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Set the bounding box of a figure with undo/redo support\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandBoundingBox = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandResize.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandResize\",\r\n\r\n  /**\r\n   * Create a new resize Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to resize\r\n   * @param {draw2d.geo.Rectangle} boundingBox the new bounding box of the figure\r\n   */\r\n  init: function (figure, boundingBox) {\r\n    this._super(draw2d.Configuration.i18n.command.resizeShape)\r\n    this.figure = figure\r\n    this.oldBoundingBox = this.figure.getBoundingBox()\r\n    this.newBoundingBox = boundingBox\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return !this.oldBoundingBox.equals(this.newBoundingBox)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.figure.setBoundingBox(this.oldBoundingBox)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.figure.setBoundingBox(this.newBoundingBox)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A CommandCollection works as a single command. You can add more than one\r\n * Command to this CommandCollection and execute/undo them onto the CommandStack as a\r\n * single Command.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandCollection = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandCollection.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandCollection\",\r\n\r\n  /**\r\n   * Create a new CommandConnect objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {String} [commandLabel] the label to show on the command stack for the undo/redo operation\r\n   */\r\n  init: function (commandLabel) {\r\n    this._super((typeof commandLabel === 'undefined') ? draw2d.Configuration.i18n.command.collection : commandLabel)\r\n\r\n    this.commands = new draw2d.util.ArrayList()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns a label of the Command. e.g. \"move figure\".\r\n   *\r\n   * @returns {String} the label for this command\r\n   **/\r\n  getLabel: function () {\r\n    //return the label of the one and only command\r\n    //\r\n    if (this.commands.getSize() === 1) {\r\n      return this.commands.first().getLabel()\r\n    }\r\n\r\n    // return a common label if all commands have the same label.\r\n    //\r\n    if (this.commands.getSize() > 1) {\r\n      let labels = this.commands.clone().map(function (e) {\r\n        return e.getLabel()\r\n      })\r\n      labels.unique()\r\n      if (labels.getSize() === 1) {\r\n        return labels.first()\r\n      }\r\n    }\r\n\r\n    // return the all purpose label.\r\n    return this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Add a command to the collection.\r\n   *\r\n   * @param {draw2d.command.Command} command\r\n   */\r\n  add: function (command) {\r\n    this.commands.add(command)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // We ask all cmd's if they make any changes.\r\n    // Keep in mind: the command will be execute if at least ONE command return [true]!!!!\r\n    // doesn't matter if the other commands return [false].\r\n    // The method should be renamed into: modifiesTheModel()....design flaw.\r\n    let canExec = false\r\n    this.commands.each(function (i, cmd) {\r\n      canExec = canExec || cmd.canExecute()\r\n    })\r\n    return canExec\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.commands.each(function (i, cmd) {\r\n      cmd.execute()\r\n    })\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command.\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.commands.each(function (i, cmd) {\r\n      cmd.redo()\r\n    })\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command.\r\n   *\r\n   **/\r\n  undo: function () {\r\n    // execute the undo operation in reverse direction.\r\n\r\n    this.commands.reverse()\r\n    this.commands.each(function (i, cmd) {\r\n      cmd.undo()\r\n    })\r\n    this.commands.reverse()\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Connects two ports with a connection.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandConnect = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandConnect.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandConnect\",\r\n\r\n  /**\r\n   * Create a new CommandConnect objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Port} source the source port for the connection to create\r\n   * @param {draw2d.Port} target the target port for the connection to create\r\n   * @param {draw2d.Port} [dropTarget] the port who has initiate the connection creation. mainly the drop target\r\n   */\r\n  init: function (source, target, dropTarget) {\r\n    this._super(draw2d.Configuration.i18n.command.connectPorts)\r\n    this.canvas = target.getCanvas()\r\n    this.source = source\r\n    this.target = target\r\n    this.connection = null\r\n    this.dropTarget = dropTarget // optional\r\n  },\r\n\r\n  /**\r\n   *\r\n   * set the connection to use. called by the ConnectionCreatePolicy\r\n   */\r\n  setConnection: function (connection) {\r\n    this.connection = connection\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns the fresh created connection if available. Used in the\r\n   * ClickConnectionCreatePolicy to customize the router and vertices.\r\n   *\r\n   * @returns {null|draw2d.Connection}\r\n   * @since 6.1.0\r\n   */\r\n  getConnection: function () {\r\n    return this.connection\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    let optionalCallback = conn => {\r\n      this.connection = conn\r\n      this.connection.setSource(this.source)\r\n      this.connection.setTarget(this.target)\r\n      this.canvas.add(this.connection)\r\n    }\r\n\r\n    // the createConnection must return either a connection or \"undefined\". If the method return \"undefined\"\r\n    // the asynch callback must be called. Usefull if the createConnection shows a selection dialog\r\n    //\r\n    if (this.connection === null) {\r\n      // deprecated call!!!!\r\n      //\r\n      let result = draw2d.Configuration.factory.createConnection(this.source, this.target, optionalCallback, this.dropTarget)\r\n      debugger\r\n      // will be handled by the optional callback\r\n      if (typeof result === \"undefined\") {\r\n        return\r\n      }\r\n\r\n      this.connection = result\r\n    }\r\n\r\n    optionalCallback(this.connection)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command.\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.canvas.add(this.connection)\r\n    this.connection.reconnect()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command.\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.canvas.remove(this.connection)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Command to remove a figure with CommandStack support.\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandDelete = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandDelete.prototype */\r\n  {\r\n  NAME: \"draw2d.command.CommandDelete\",\r\n\r\n  /**\r\n   * Create a delete command for the given figure.\r\n   *\r\n   * @param {draw2d.Figure} figure\r\n   */\r\n  init: function (figure) {\r\n    this._super(draw2d.Configuration.i18n.command.deleteShape)\r\n\r\n    this.parent = figure.getParent()\r\n    this.figure = figure\r\n    this.canvas = figure.getCanvas()\r\n    this.connections = null\r\n    this.removedParentEntry = null // can be null if the figure didn't have any parent shape assigned\r\n    this.indexOfChild = -1\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    // we can only delete the figure if its part of the canvas.\r\n    return this.figure.getCanvas() !== null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    if (this.parent !== null) {\r\n      this.parent.add(this.removedParentEntry.figure, this.removedParentEntry.locator, this.indexOfChild)\r\n      this.canvas.setCurrentSelection(this.parent)\r\n    }\r\n    else {\r\n      this.canvas.add(this.figure)\r\n      this.canvas.setCurrentSelection(this.figure)\r\n    }\r\n\r\n    if (this.figure instanceof draw2d.Connection) {\r\n      this.figure.reconnect()\r\n    }\r\n\r\n\r\n    for (let i = 0; i < this.connections.getSize(); ++i) {\r\n      this.canvas.add(this.connections.get(i))\r\n      this.connections.get(i).reconnect()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.canvas.setCurrentSelection(null)\r\n\r\n    // Collect all connections that are bounded to the figure to delete. This connections\r\n    // must be deleted too.\r\n    //\r\n    if (this.connections === null) {\r\n      if (this.figure instanceof draw2d.shape.node.Node) {\r\n        this.connections = this.figure.getConnections()\r\n      }\r\n      else {\r\n        this.connections = new draw2d.util.ArrayList()\r\n      }\r\n    }\r\n\r\n    // already done in the canvas.remove(..) method\r\n    //    if(this.figure instanceof draw2d.Connection){\r\n    //        this.figure.disconnect();\r\n    //    }\r\n\r\n\r\n    // remove all connections\r\n    //\r\n    for (let i = 0; i < this.connections.getSize(); ++i) {\r\n      this.canvas.remove(this.connections.get(i))\r\n    }\r\n\r\n    // remove this figure from the parent\r\n    //\r\n    if (this.parent !== null) {\r\n      // determine the index of the child before remove\r\n      this.indexOfChild = this.parent.getChildren().indexOf(this.figure)\r\n      this.removedParentEntry = this.parent.remove(this.figure)\r\n    }\r\n    // or from the canvas\r\n    else {\r\n      this.canvas.remove(this.figure)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command to remove a group with all related children.\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandDeleteGroup = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandDeleteGroup.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandDeleteGroup\",\r\n\r\n  /**\r\n   * Create a delete command for the given figure.\r\n   *\r\n   * @param {draw2d.shape.composite.Group} group\r\n   */\r\n  init: function (group) {\r\n    this._super(draw2d.Configuration.i18n.command.deleteShape)\r\n\r\n    this.parent = group.getParent()\r\n    this.group = group\r\n    this.canvas = group.getCanvas()\r\n    this.batchDelete = null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    // we can only delete the shape if a children can be deleted\r\n    //\r\n    let children = this.group.getAssignedFigures()\r\n    for (let i = 0; i < children.getSize(); i++) {\r\n      if (children.get(i).isDeleteable() === false) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    // we can only delete the figure if its part of the canvas.\r\n    return this.group.getCanvas() !== null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.batchDelete.undo()\r\n    this.canvas.setCurrentSelection(this.group)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    if (this.batchDelete === null) {\r\n      this.batchDelete = new draw2d.command.CommandCollection()\r\n\r\n      // remove the assignment of the children to the group before we delete the group\r\n      //\r\n      this.batchDelete.add(new draw2d.command.CommandUngroup(this.canvas, this.group))\r\n\r\n      // add the delete command of the children to the batch\r\n      //\r\n      let children = this.group.getAssignedFigures()\r\n      for (let i = 0; i < children.getSize(); i++) {\r\n        let child = children.get(i)\r\n        // request a delete Command from the child instead of create one by my own. May the child\r\n        // provides its own implementation\r\n        let cmd = child.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.DELETE))\r\n        this.batchDelete.add(cmd)\r\n      }\r\n\r\n    }\r\n\r\n\r\n    this.batchDelete.execute()\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Command to group a given set of figures\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandGroup = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandGroup.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.command.CommandGroup\",\r\n\r\n  /**\r\n   * Create a group command for the given figure.\r\n   *\r\n   * @param {draw2d.util.ArrayList} figures the figures to group\r\n   */\r\n  init: function (canvas, figures) {\r\n    this._super(draw2d.Configuration.i18n.command.groupShapes)\r\n    if (figures instanceof draw2d.Selection) {\r\n      this.figures = figures.getAll()\r\n    }\r\n    else {\r\n      this.figures = figures\r\n    }\r\n\r\n    // figures which already part of an non \"Group\" composite will be removed from the set.\r\n    // It is not possible to assign a figure to two different composites.\r\n    //\r\n    this.figures.grep(function (figure) {\r\n      return figure.getComposite() === null\r\n    })\r\n\r\n    this.canvas = canvas\r\n    this.group = new draw2d.shape.composite.Group()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    return !this.figures.isEmpty()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    let _this = this\r\n    this.figures.each(function (i, figure) {\r\n      _this.group.unassignFigure(figure)\r\n    })\r\n\r\n    this.canvas.remove(this.group)\r\n    this.canvas.setCurrentSelection(this.figures)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    let _this = this\r\n    this.figures.each(function (i, figure) {\r\n      _this.group.assignFigure(figure)\r\n    })\r\n\r\n    this.canvas.add(this.group)\r\n    this.canvas.setCurrentSelection(this.group)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command for the movement of figures.\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandMove = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandMove.prototype */\r\n  {\r\n  NAME: \"draw2d.command.CommandMove\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to move\r\n   * @param {Number} [x] the current x position\r\n   * @param {Number} [y] the current y position\r\n   */\r\n  init: function (figure, x, y) {\r\n    this._super(draw2d.Configuration.i18n.command.moveShape)\r\n    this.figure = figure\r\n    if (typeof x === \"undefined\") {\r\n      this.oldX = figure.getX()\r\n      this.oldY = figure.getY()\r\n    }\r\n    else {\r\n      this.oldX = x\r\n      this.oldY = y\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the initial position of the element\r\n   *\r\n   * @param {Number} x the new initial x position\r\n   * @param {Number} y the new initial y position\r\n   **/\r\n  setStartPosition: function (x, y) {\r\n    this.oldX = x\r\n    this.oldY = y\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the target/final position of the figure move command.\r\n   *\r\n   * @param {Number} x the new x position\r\n   * @param {Number} y the new y position\r\n   **/\r\n  setPosition: function (x, y) {\r\n    this.newX = x\r\n    this.newY = y\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.newX !== this.oldX || this.newY !== this.oldY\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.figure.setPosition(this.oldX, this.oldY)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.figure.setPosition(this.newX, this.newY)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command for the movement of figures.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandMoveConnection = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandMoveConnection.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.command.CommandMoveConnection\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Connection} figure the connection to move\r\n   */\r\n  init: function (figure) {\r\n    this._super(draw2d.Configuration.i18n.command.moveLine)\r\n    this.line = figure\r\n    this.dx = 0\r\n    this.dy = 0\r\n  },\r\n\r\n  /**\r\n   * \r\n   * set the offset of the line translation\r\n   *\r\n   * @param {Number} dx\r\n   * @param {Number} dy\r\n   */\r\n  setTranslation: function (dx, dy) {\r\n    this.dx = dx\r\n    this.dy = dy\r\n  },\r\n\r\n  /**\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.dx !== 0 && this.dy !== 0\r\n  },\r\n\r\n  /**\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    let _this = this\r\n    this.line.getVertices().each(function (i, e) {\r\n      e.translate(-_this.dx, -_this.dy)\r\n    })\r\n    this.line.svgPathString = null\r\n    // required to update resize handles and the painting of the line\r\n    this.line.setPosition(this.line.getStartPosition())\r\n  },\r\n\r\n  /**\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    let _this = this\r\n    this.line.getVertices().each(function (i, e) {\r\n      e.translate(_this.dx, _this.dy)\r\n    })\r\n    this.line.svgPathString = null\r\n\r\n    // required to update resize handles and the painting of the line\r\n    this.line.setPosition(this.line.getStartPosition())\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command for the movement of figures.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandMoveLine = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandMoveLine.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandMoveLine\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} figure the line to move\r\n   */\r\n  init: function (figure) {\r\n    this._super(draw2d.Configuration.i18n.command.moveLine)\r\n    this.line = figure\r\n    this.dx = 0\r\n    this.dy = 0\r\n  },\r\n\r\n  /**\r\n   *\r\n   * set the offset of the line translation\r\n   *\r\n   * @param {Number} dx\r\n   * @param {Number} dy\r\n   */\r\n  setTranslation: function (dx, dy) {\r\n    this.dx = dx\r\n    this.dy = dy\r\n  },\r\n\r\n  /**\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.dx !== 0 && this.dy !== 0\r\n  },\r\n\r\n  /**\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    let _this = this\r\n    this.line.getVertices().each(function (i, e) {\r\n      e.translate(-_this.dx, -_this.dy)\r\n    })\r\n    this.line.svgPathString = null\r\n    // required to update resize handles and the painting of the line\r\n    this.line.setPosition(this.line.getStartPosition())\r\n  },\r\n\r\n  /**\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    let _this = this\r\n    this.line.getVertices().each(function (i, e) {\r\n      e.translate(_this.dx, _this.dy)\r\n    })\r\n    this.line.svgPathString = null\r\n\r\n    // required to update resize handles and the painting of the line\r\n    this.line.setPosition(this.line.getStartPosition())\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command for the vertex movement of a polyline/polygon.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandMoveVertex = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandMoveVertex.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandMoveVertex\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} line the related line\r\n   */\r\n  init: function (line) {\r\n    this._super(draw2d.Configuration.i18n.command.moveVertex)\r\n\r\n    this.line = line\r\n    this.index = -1\r\n    this.newPoint = null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the index of the vertex of the polyline/polygon to modify.\r\n   *\r\n   * @param {Number} index the related index of the vertex\r\n   **/\r\n  setIndex: function (index) {\r\n    this.index = index\r\n    this.origPoint = this.line.getVertices().get(this.index).clone()\r\n  },\r\n\r\n  updatePosition: function (x, y) {\r\n    this.newPoint = new draw2d.geo.Point(x, y)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.index !== -1 && this.newPoint !== null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.line.setVertex(this.index, this.origPoint.x, this.origPoint.y)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.line.setVertex(this.index, this.newPoint.x, this.newPoint.y)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Command for the vertices movement of a polyline/polygon.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandMoveVertices = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandMoveVertices.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandMoveVertices\",\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} line the related line\r\n   */\r\n  init: function (line) {\r\n    this._super(draw2d.Configuration.i18n.command.moveVertices)\r\n\r\n    this.line = line\r\n    this.oldVertices = line.getVertices().clone(true)\r\n    this.newVertices = null\r\n  },\r\n\r\n\r\n  updateVertices: function (newVertices) {\r\n    this.newVertices = newVertices\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.newVertices !== null\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.line.setVertices(this.oldVertices)\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.line.setVertices(this.newVertices)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Reconnects two ports. This command is used during the DragDrop operation of a draw2d.Connection.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandReconnect = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandReconnect.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandReconnect\",\r\n\r\n\r\n  /**\r\n   * Create a new Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Connection} conn the related Connection which is currently in the drag&drop operation\r\n   */\r\n  init: function (conn) {\r\n    this._super(draw2d.Configuration.i18n.command.connectPorts)\r\n    this.con = conn\r\n    this.oldSourcePort = conn.getSource()\r\n    this.oldTargetPort = conn.getTarget()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * The new ports to use during the execute of this command.\r\n   *\r\n   * @param {draw2d.Port} source\r\n   * @param {draw2d.Port} target\r\n   */\r\n  setNewPorts: function (source, target) {\r\n    this.newSourcePort = source\r\n    this.newTargetPort = target\r\n  },\r\n\r\n\r\n  setIndex: function (index) {\r\n    // do nothing....but method is required for LineResizeHandle\r\n    // With this common interface the ResizeHandle can handle Lines and Connections\r\n    // with the same code\r\n  },\r\n\r\n  /**\r\n   * compatibily method to the CommandMoveVertex to handle Line and Connections\r\n   * transparent in the ResizeHandles\r\n   *\r\n   * @param x\r\n   * @param y\r\n   */\r\n  updatePosition: function (x, y) {\r\n    // do nothing....but method is required for LineResizeHandle\r\n    // With this common interface the ResizeHandle can handle Lines and Connections\r\n    // with the same code\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  cancel: function () {\r\n    this.con.setSource(this.oldSourcePort)\r\n    this.con.setTarget(this.oldTargetPort)\r\n\r\n    // force a routing of the connection and DON'T set the old reouter again because this reset all manual added\r\n    // vertices\r\n    this.con.routingRequired = true\r\n    this.con.repaint()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.con.setSource(this.oldSourcePort)\r\n    this.con.setTarget(this.oldTargetPort)\r\n    // force a routing of the connection and DON'T set the old reouter again because this reset all manual added\r\n    // vertices\r\n    this.con.routingRequired = true\r\n    this.con.repaint()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.con.setSource(this.newSourcePort)\r\n    this.con.setTarget(this.newTargetPort)\r\n    // force a routing of the connection and DON'T set the old reouter again because this reset all manual added\r\n    // vertices\r\n    this.con.routingRequired = true\r\n    this.con.repaint()\r\n  }\r\n\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Remove a vertex from a polyline or polygon\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandRemoveVertex = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandRemoveVertex.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandRemoveVertex\",\r\n\r\n  /**\r\n   * Create a new Command objects which add a vertex to a PloyLine.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} line the related line\r\n   * @param {Number} index the index where to add\r\n   */\r\n  init: function (line, index) {\r\n    this._super(draw2d.Configuration.i18n.command.deleteVertex)\r\n\r\n    this.line = line\r\n    this.index = index\r\n    this.oldPoint = line.getVertices().get(index).clone()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.line.insertVertexAt(this.index, this.oldPoint.x, this.oldPoint.y)\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.line.removeVertexAt(this.index)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Replace the vertices of a polyline.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandReplaceVertices = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandReplaceVertices.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.command.CommandReplaceVertices\",\r\n\r\n  /**\r\n   * Create a new Command objects which add a segment to a PolyLine / Polygon.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} line the related line\r\n   * @param {draw2d.util.ArrayList} originalVertices the original vertices of the polyline\r\n   * @param {draw2d.util.ArrayList} newVertices the new vertices of the polyline\r\n   */\r\n  init: function (line, originalVertices, newVertices) {\r\n    this._super(draw2d.Configuration.i18n.command.addSegment)\r\n\r\n    this.line = line\r\n    this.originalVertices = originalVertices\r\n    this.newVertices = newVertices\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Undo the move command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.line.setVertices(this.originalVertices)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Redo the move command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.line.setVertices(this.newVertices)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Resize command for figures. Can be execute/undo/redo via a CommandStack.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandResize = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandResize.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandResize\",\r\n\r\n  /**\r\n   * Create a new resize Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to resize\r\n   * @param {Number} [width] the current width\r\n   * @param {Number} [height] the current height\r\n   */\r\n  init: function (figure, width, height) {\r\n    this._super(draw2d.Configuration.i18n.command.resizeShape)\r\n    this.figure = figure\r\n\r\n    if (typeof width === \"undefined\") {\r\n      this.oldWidth = figure.getWidth()\r\n      this.oldHeight = figure.getHeight()\r\n    }\r\n    else {\r\n      this.oldWidth = width\r\n      this.oldHeight = height\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the new dimension of the element.\r\n   *\r\n   * @param {Number} width the new width.\r\n   * @param {Number} height the new height of the element.\r\n   **/\r\n  setDimension: function (width, height) {\r\n    this.newWidth = width | 0\r\n    this.newHeight = height | 0\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.newWidth !== this.oldWidth || this.newHeight !== this.oldHeight\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.figure.setDimension(this.oldWidth, this.oldHeight)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.figure.setDimension(this.newWidth, this.newHeight)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Set the rotation angle of the given figure\r\n *\r\n * @since 4.4.1\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.command.Command\r\n */\r\ndraw2d.command.CommandRotate = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandRotate.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandRotate\",\r\n\r\n  /**\r\n   * Create a new resize Command objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to resize\r\n   * @param {Number} angle the angle to rotate\r\n   */\r\n  init: function (figure, angle) {\r\n    this._super(draw2d.Configuration.i18n.command.rotateShape)\r\n    this.figure = figure\r\n\r\n    this.oldAngle = figure.getRotationAngle()\r\n    this.newAngle = angle\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modify the model. A CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. <br>\r\n   * the execution of the Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean}\r\n   **/\r\n  canExecute: function () {\r\n    // return false if we doesn't modify the model => NOP Command\r\n    return this.oldAngle !== this.newAngle\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    this.rotate(this.oldAngle)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    this.rotate(this.newAngle)\r\n  },\r\n\r\n  rotate: function (angle) {\r\n    let w = this.figure.getWidth()\r\n    let h = this.figure.getHeight()\r\n\r\n    this.figure.setRotationAngle(angle)\r\n\r\n    this.figure.setDimension(h, w)\r\n\r\n    this.figure.portRelayoutRequired = true\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * An implementation of a command stack. A stack manages the executing, undoing, and redoing of Commands. Executed\r\n * commands are pushed onto a a stack for undoing later. Commands which are undone are pushed onto a redo stack.\r\n * Whenever a new command is executed, the redo stack is flushed.\r\n *\r\n * You can retrieve the current used CommandStack just by calling <code>canvas.getCommandStack()</code>\r\n *\r\n */\r\ndraw2d.command.CommandStack = Class.extend(\r\n  /** @lends draw2d.command.CommandStack.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandStack\",\r\n\r\n\r\n  /**\r\n   * Create a new CommandStack objects which can be execute via the CommandStack.\r\n   *\r\n   */\r\n  init: function () {\r\n    this.undostack = []\r\n    this.redostack = []\r\n    this.maxundo = 50\r\n    this.transactionCommand = null\r\n    this.eventListeners = new draw2d.util.ArrayList()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Set the maximal undo stack size. Entries will be remove if the max. stack\r\n   * size has been reached.\r\n   *\r\n   * @param {Number} count The maximal undo stack size.\r\n   * @returns {this}\r\n   **/\r\n  setUndoLimit: function (count) {\r\n    this.maxundo = count\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Remove the undo / redo history. This is useful if the user has been save the\r\n   * document.\r\n   *\r\n   * @returns {this}\r\n   **/\r\n  markSaveLocation: function () {\r\n    this.undostack = []\r\n    this.redostack = []\r\n\r\n    // fire an empty command to inform all listener that the stack has been changed\r\n    this.notifyListeners(new draw2d.command.Command(), draw2d.command.CommandStack.POST_EXECUTE)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Executes the specified Command if possible. Prior to executing the command, a\r\n   * draw2d.command.CommandStackEvent for {@link #PRE_EXECUTE} will be fired to event listeners.\r\n   * Similarly, after attempting to execute the command, an event for {@link #POST_EXECUTE}\r\n   * will be fired.\r\n   *\r\n   * @param {draw2d.command.Command} command The command to execute.\r\n   * @returns {this}\r\n   **/\r\n  execute: function (command) {\r\n    if (typeof command === \"undefined\")\r\n      throw \"Missing parameter [command] for method call CommandStack.execute\"\r\n\r\n    // nothing to do\r\n    if (command === null)\r\n      return this//silently\r\n\r\n    // return if the command can't execute or it doesn't change the model\r\n    // => Empty command\r\n    if (command.canExecute() === false)\r\n      return this\r\n\r\n    // A command stack transaction is open.\r\n    // The execution will be postpone until the transaction will commit\r\n    //\r\n    if (this.transactionCommand !== null) {\r\n      this.transactionCommand.add(command)\r\n      return this\r\n    }\r\n\r\n    this.notifyListeners(command, draw2d.command.CommandStack.PRE_EXECUTE, \"PRE_EXECUTE\")\r\n\r\n    this.undostack.push(command)\r\n    command.execute()\r\n\r\n    // cleanup the redo stack if the user execute a new command.\r\n    // I think this will create a \"clean\" behaviour of the unde/redo mechanism.\r\n    //\r\n    this.redostack = []\r\n\r\n    // monitor only the max. undo stack size\r\n    //\r\n    if (this.undostack.length > this.maxundo) {\r\n      this.undostack = this.undostack.slice(this.undostack.length - this.maxundo)\r\n    }\r\n    this.notifyListeners(command, draw2d.command.CommandStack.POST_EXECUTE, \"POST_EXECUTE\")\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Opens a transaction for further multiple commands. If you execute a command all\r\n   * {@ #execute} calls will be ignored until you commit the current transaction.\r\n   *\r\n   * @param {String} [commandLabel] the label to show for the undo/redo operation\r\n   * @returns {this}\r\n   * @since 4.0.0\r\n   */\r\n  startTransaction: function (commandLabel) {\r\n    if (this.transactionCommand !== null) {\r\n      debugger\r\n      throw \"CommandStack is already within transactional mode. Don't call 'startTransaction\"\r\n    }\r\n\r\n    this.transactionCommand = new draw2d.command.CommandCollection(commandLabel)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns true if the Command Stack has an open transaction.\r\n   * You can start or stop a transaction with `startTransaction`and `commitTransaction`.\r\n   *\r\n   * A transaction is one undo/redo operation.\r\n   *\r\n   * @returns {Boolean}\r\n   */\r\n  isInTransaction: function () {\r\n    return this.transactionCommand !== null\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Commit the running transaction. All commands between the start/end of a transaction\r\n   * can be undo/redo in a single step.\r\n   *\r\n   * @since 4.0.0\r\n   * @returns {this}\r\n   */\r\n  commitTransaction: function () {\r\n    if (this.transactionCommand === null) {\r\n      return this//silently\r\n    }\r\n\r\n    let cmd = this.transactionCommand\r\n    this.transactionCommand = null\r\n    // we can drop the CommandCollection if the collection contains only one command.\r\n    if (cmd.commands.getSize() === 1) {\r\n      this.execute(cmd.commands.first())\r\n    }\r\n    else {\r\n      this.execute(cmd)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo on command from the stack and store them on the redo command stack.\r\n   * @returns {this}\r\n   **/\r\n  undo: function () {\r\n    let command = this.undostack.pop()\r\n    if (command) {\r\n      this.notifyListeners(command, draw2d.command.CommandStack.PRE_UNDO)\r\n      this.redostack.push(command)\r\n      command.undo()\r\n      this.notifyListeners(command, draw2d.command.CommandStack.POST_UNDO)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo a command after the user has undo a command\r\n   *\r\n   * @returns {this}\r\n   **/\r\n  redo: function () {\r\n    let command = this.redostack.pop()\r\n\r\n    if (command) {\r\n      this.notifyListeners(command, draw2d.command.CommandStack.PRE_REDO)\r\n      this.undostack.push(command)\r\n      command.redo()\r\n      this.notifyListeners(command, draw2d.command.CommandStack.POST_REDO)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the label of the next REDO command.\r\n   *\r\n   * @returns {String}\r\n   **/\r\n  getRedoLabel: function () {\r\n    if (this.redostack.length === 0)\r\n      return \"\"\r\n\r\n    let command = this.redostack[this.redostack.length - 1]\r\n\r\n    if (command) {\r\n      return command.getLabel()\r\n    }\r\n    return \"\"\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the label of the next UNDO command.\r\n   *\r\n   * @returns {String}\r\n   **/\r\n  getUndoLabel: function () {\r\n    if (this.undostack.length === 0)\r\n      return \"\"\r\n\r\n    let command = this.undostack[this.undostack.length - 1]\r\n\r\n    if (command) {\r\n      return command.getLabel()\r\n    }\r\n    return \"\"\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Indicates whenever a REDO is possible.\r\n   *\r\n   * @returns {Boolean} <code>true</code> if it is appropriate to call {@link #redo()}.\r\n   */\r\n  canRedo: function () {\r\n    return this.redostack.length > 0\r\n  },\r\n\r\n  /**\r\n   *\r\n   * indicator whenever a undo is possible.\r\n   *\r\n   * @returns {Boolean} <code>true</code> if {@link #undo()} can be called\r\n   **/\r\n  canUndo: function () {\r\n    return this.undostack.length > 0\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Adds a listener to the command stack, which will be notified whenever a command has been processed on the stack.\r\n   * @deprecated use on/off to register events\r\n   * @param {draw2d.command.CommandStackEventListener|Function} listener the listener to add.\r\n   * @returns {this}\r\n   */\r\n  addEventListener: function (listener) {\r\n    return this.on(\"change\", listener)\r\n  },\r\n  /**\r\n   * Adds a listener to the command stack, which will be notified whenever a command has been processed on the stack.\r\n   *\r\n   * @param event\r\n   * @param func\r\n   * @returns {this}\r\n   */\r\n  on: function (event, listener) {\r\n    if (event !== \"change\")\r\n      throw \"only event of kind 'change' is supported\"\r\n\r\n    if (listener instanceof draw2d.command.CommandStackEventListener) {\r\n      this.eventListeners.add(listener)\r\n    }\r\n    else if (typeof listener.stackChanged === \"function\") {\r\n      this.eventListeners.add(listener)\r\n    }\r\n    else if (typeof listener === \"function\") {\r\n      this.eventListeners.add({stackChanged: listener})\r\n    }\r\n    else {\r\n      throw \"Object doesn't implement required callback interface [draw2d.command.CommandStackListener]\"\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Removes a listener from the command stack.\r\n   *\r\n   * @deprecated use on/off to register events\r\n   * @param {draw2d.command.CommandStackEventListener} listener the listener to remove.\r\n   * @returns {this}\r\n   */\r\n  removeEventListener: function (listener) {\r\n    this.off(listener)\r\n\r\n    return this\r\n  },\r\n\r\n    /**\r\n     *\r\n      * @param listener\r\n     * @returns {this}\r\n     */\r\n  off: function (listener) {\r\n    this.eventListeners.grep(entry => (entry === listener || entry.stackChanged === listener))\r\n    /*\r\n    let size = this.eventListeners.getSize()\r\n    for (let i = 0; i < size; i++) {\r\n      let entry = this.eventListeners.get(i)\r\n      if (entry === listener || entry.stackChanged === listener) {\r\n        this.eventListeners.remove(entry)\r\n        return\r\n      }\r\n    }\r\n    */\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Notifies command stack event listeners that the command stack has changed to the\r\n   * specified state.\r\n   *\r\n   * @param {draw2d.command.Command} command the command\r\n   * @param {Number} state the current stack state\r\n   * @private\r\n   **/\r\n  notifyListeners: function (command, state, action) {\r\n    let event = new draw2d.command.CommandStackEvent(this, command, state, action)\r\n    let size = this.eventListeners.getSize()\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      this.eventListeners.get(i).stackChanged(event)\r\n    }\r\n  }\r\n})\r\n\r\n\r\n//  Constant indicating notification prior to executing a command (value is 1).\r\ndraw2d.command.CommandStack.PRE_EXECUTE = 1\r\n//  Constant indicating notification prior to redoing a command (value is 2).\r\ndraw2d.command.CommandStack.PRE_REDO = 2\r\n//  Constant indicating notification prior to undoing a command (value is 4).\r\ndraw2d.command.CommandStack.PRE_UNDO = 4\r\n//   Constant indicating notification after a command has been executed (value is 8).\r\ndraw2d.command.CommandStack.POST_EXECUTE = 8\r\n//  Constant indicating notification after a command has been redone (value is 16).\r\ndraw2d.command.CommandStack.POST_REDO = 16\r\n//  Constant indicating notification after a command has been undone (value is 32).\r\ndraw2d.command.CommandStack.POST_UNDO = 32\r\n//  Constant indicating notification after the stack has been (re)init (value is 64).\r\ndraw2d.command.CommandStack.POST_INIT = 64\r\n\r\ndraw2d.command.CommandStack.POST_MASK = draw2d.command.CommandStack.POST_EXECUTE | draw2d.command.CommandStack.POST_UNDO | draw2d.command.CommandStack.POST_REDO\r\ndraw2d.command.CommandStack.PRE_MASK = draw2d.command.CommandStack.PRE_EXECUTE | draw2d.command.CommandStack.PRE_UNDO | draw2d.command.CommandStack.PRE_REDO\r\n\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Event class which will be fired for every CommandStack operation. Required for CommandStackListener.\r\n */\r\ndraw2d.command.CommandStackEvent = Class.extend(\r\n  /** @lends draw2d.command.CommandStackEvent.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandStackEvent\",\r\n\r\n  /**\r\n   * Create a new CommandStack objects which can be execute via the CommandStack.\r\n   *\r\n   * @param {draw2d.command.Command} command the related command\r\n   * @param {Number} details the current state of the command execution\r\n   *\r\n   */\r\n  init: function (stack, command, details, action) {\r\n    this.stack = stack\r\n    this.command = command\r\n    this.details = details // deprecated\r\n    this.action = action\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the corresponding stack of the event.\r\n   *\r\n   * @returns {draw2d.command.CommandStack}\r\n   **/\r\n  getStack: function () {\r\n    return this.stack\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns null or a Command if a command is relevant to the current event.\r\n   *\r\n   * @returns {draw2d.command.Command}\r\n   **/\r\n  getCommand: function () {\r\n    return this.command\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns an integer identifying the type of event which has occurred.\r\n   * Defined by {@link draw2d.command.CommandStack}.\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getDetails: function () {\r\n    return this.details\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns true if this event is fired after the stack having changed.\r\n   *\r\n   * @returns {Boolean} true if post-change event\r\n   **/\r\n  isPostChangeEvent: function () {\r\n    return 0 !== (this.getDetails() & draw2d.command.CommandStack.POST_MASK)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns true if this event is fired prior to the stack changing.\r\n   *\r\n   * @returns {Boolean} true if pre-change event\r\n   **/\r\n  isPreChangeEvent: function () {\r\n    return 0 !== (this.getDetails() & draw2d.command.CommandStack.PRE_MASK)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Event class which will be fired for every CommandStack operation. Required for CommandStackListener.\r\n * @author Andreas Herz\r\n */\r\n\r\ndraw2d.command.CommandStackEventListener = Class.extend(\r\n  /** @lends draw2d.command.CommandStackEventListener.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandStackEventListener\",\r\n\r\n  /**\r\n   * Creates a new Listener Object\r\n   *\r\n   */\r\n  init: function () {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Sent when an event occurs on the command stack. draw2d.command.CommandStackEvent.getDetail()\r\n   * can be used to identify the type of event which has occurred.\r\n   *\r\n   * @template\r\n   *\r\n   * @param {draw2d.command.CommandStackEvent} event\r\n   **/\r\n  stackChanged: function (event) {\r\n  }\r\n\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * EditPolicies should determine an Figures editing capabilities.\r\n * It is possible to implement an Figure such that it handles all editing\r\n * responsibility.<br>\r\n * However, it is much more flexible and object-oriented to use\r\n * EditPolicies. Using policies, you can pick and choose the editing behavior for\r\n * an Figure without being bound to its class hierarchy. Code reuse is increased,\r\n * and code management is easier.\r\n *\r\n * @author Andreas Herz\r\n */\r\n\r\ndraw2d.command.CommandType = Class.extend(\r\n  /** @lends draw2d.command.CommandType.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandType\",\r\n\r\n  /**\r\n   * Create a new edit policy object\r\n   *\r\n   * @param {String} policy\r\n   */\r\n  init: function (policy) {\r\n    this.policy = policy\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the String representation of the policy\r\n   *\r\n   * @returns {String}\r\n   **/\r\n  getPolicy: function () {\r\n    return this.policy\r\n  }\r\n})\r\n\r\ndraw2d.command.CommandType.DELETE = \"DELETE\"\r\ndraw2d.command.CommandType.MOVE = \"MOVE\"\r\ndraw2d.command.CommandType.CONNECT = \"CONNECT\"\r\ndraw2d.command.CommandType.MOVE_BASEPOINT = \"MOVE_BASEPOINT\"\r\ndraw2d.command.CommandType.MOVE_VERTEX = \"MOVE_VERTEX\"\r\ndraw2d.command.CommandType.MOVE_VERTICES = \"MOVE_VERTICES\"\r\ndraw2d.command.CommandType.MOVE_GHOST_VERTEX = \"MOVE_GHOST_VERTEX\"\r\ndraw2d.command.CommandType.RESIZE = \"RESIZE\"\r\ndraw2d.command.CommandType.RESET = \"RESET\"\r\ndraw2d.command.CommandType.ROTATE = \"ROTATE\"\r\n\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Command to ungroup a given group figures\r\n *\r\n * @extends draw2d.command.Command\r\n */\r\n\r\ndraw2d.command.CommandUngroup = draw2d.command.Command.extend(\r\n  /** @lends draw2d.command.CommandUngroup.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.command.CommandUngroup\",\r\n\r\n  /**\r\n   * Create a group command for the given figure.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the responsible canvas\r\n   * @param {draw2d.util.ArrayList|draw2d.Selection} group the figures to group\r\n   */\r\n  init: function (canvas, group) {\r\n    this._super(draw2d.Configuration.i18n.command.ungroupShapes)\r\n    if (group instanceof draw2d.Selection) {\r\n      this.group = group.getAll().first()\r\n    }\r\n    else {\r\n      this.group = group\r\n    }\r\n\r\n    this.canvas = canvas\r\n    this.figures = this.group.getAssignedFigures().clone()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns [true] if the command can be execute and the execution of the\r\n   * command modifies the model. e.g.: a CommandMove with [startX,startX] == [endX,endY] should\r\n   * return false. The execution of this Command doesn't modify the model.\r\n   *\r\n   * @returns {Boolean} return try if the command modify the model or make any relevant changes\r\n   **/\r\n  canExecute: function () {\r\n    return !this.figures.isEmpty()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Execute the command the first time\r\n   *\r\n   **/\r\n  execute: function () {\r\n    this.redo()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Undo the command\r\n   *\r\n   **/\r\n  undo: function () {\r\n    let _this = this\r\n    this.figures.each(function (i, figure) {\r\n      _this.group.assignFigure(figure)\r\n    })\r\n    this.canvas.add(this.group)\r\n    this.canvas.setCurrentSelection(this.group)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Redo the command after the user has undo this command\r\n   *\r\n   **/\r\n  redo: function () {\r\n    let _this = this\r\n    this.figures.each(function (i, figure) {\r\n      _this.group.unassignFigure(figure)\r\n    })\r\n\r\n    this.canvas.setCurrentSelection(this.figures)\r\n    this.canvas.remove(this.group)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start();\r\n *    var end   = new draw2d.shape.node.End();\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    var c = new draw2d.Connection();\r\n *\r\n *    // toggle from ManhattenRouter to DirectRouter to show the rotation of decorations\r\n *    c.setRouter(new draw2d.layout.connection.DirectRouter());\r\n *\r\n *    // Set the endpoint decorations for the connection\r\n *    //\r\n *    c.setSourceDecorator(new draw2d.decoration.connection.ArrowDecorator());\r\n *    c.setTargetDecorator(new draw2d.decoration.connection.ArrowDecorator());\r\n *\r\n *    // Connect the endpoints with the start and end port\r\n *    //\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @param {Number} [width] the width of the arrow\r\n * @param {Number} [height] the height of the arrow\r\n * @extend draw2d.decoration.connection.Decorator\r\n */\r\ndraw2d.decoration.connection.ArrowDecorator = draw2d.decoration.connection.Decorator.extend(\r\n  /** @lends draw2d.decoration.connection.ArrowDecorator */\r\n  {\r\n    NAME: \"draw2d.decoration.connection.ArrowDecorator\",\r\n\r\n    init: function (width, height) {\r\n      this._super(width, height)\r\n    },\r\n\r\n    /**\r\n     * Draws a filled arrow decoration.\r\n     *\r\n     *\r\n     * ```\r\n     *                       ---+ [length , width/2]\r\n     *                -------   |\r\n     * [0,0]  --------          |\r\n     *    +---                  |==========================\r\n     *        --------          |\r\n     *                -------   |\r\n     *                       ---+ [length ,-width/2]\r\n     *\r\n     * ```\r\n     *\r\n     * @param {RaphaelPaper} paper the raphael paper object for the paint operation\r\n     * @returns {RaphaelPath}\r\n     * @private\r\n     **/\r\n    paint: function (paper) {\r\n      let st = paper.set()\r\n\r\n      st.push(paper.path([\"M0 0\",\r\n        \"L\", this.width, \" \", -this.height / 2,\r\n        \"L\", this.width, \" \", this.height / 2,\r\n        \"L0 0\"].join(\"\")))\r\n\r\n      st.attr({fill: this.backgroundColor.rgba()})\r\n\r\n      return st\r\n    }\r\n  })\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start();\r\n *    var end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    var c = new draw2d.Connection();\r\n *\r\n *    // toggle from ManhattenRouter to DirectRouter to show the rotation of decorations\r\n *    c.setRouter(new draw2d.layout.connection.DirectRouter());\r\n *\r\n *    // Set the endpoint decorations for the connection\r\n *    //\r\n *    c.setSourceDecorator(new draw2d.decoration.connection.BarDecorator());\r\n *    c.setTargetDecorator(new draw2d.decoration.connection.BarDecorator());\r\n *    // Connect the endpoints with the start and end port\r\n *    //\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n * @author Andreas Herz\r\n * @param {Number} [width] the width of the bar\r\n * @param {Number} [height] the height of the bar\r\n * @extend draw2d.decoration.connection.Decorator\r\n */\r\ndraw2d.decoration.connection.BarDecorator = draw2d.decoration.connection.Decorator.extend(\r\n  /** @lends draw2d.decoration.connection.BarDecorator */\r\n  {\r\n\r\n    NAME: \"draw2d.decoration.connection.BarDecorator\",\r\n\r\n    init: function (width, height) {\r\n      this._super(width, height)\r\n    },\r\n\r\n    /**\r\n     * Draw a bar decoration.\r\n     *\r\n     * ```\r\n     *\r\n     *               | [length , width/2]\r\n     *               |\r\n     * [0,0]         |                          (Connection)\r\n     *    +==========|==========================\r\n     *               |\r\n     *               |\r\n     *               | [length ,-width/2]\r\n     *\r\n     * ```\r\n     *\r\n     * @param {RaphaelPaper} paper the raphael paper object for the paint operation\r\n     * @returns {RaphaelPath}\r\n     * @private\r\n     **/\r\n    paint: function (paper) {\r\n      let st = paper.set();\r\n      let path = [\"M\", this.width / 2, \" \", -this.height / 2]  // Go to the top center..\r\n      path.push(\"L\", this.width / 2, \" \", this.height / 2)   // ...bottom center...\r\n\r\n      st.push(paper.path(path.join(\"\")))\r\n      st.attr({fill: this.backgroundColor.rgba()})\r\n      return st\r\n    }\r\n  })\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start();\r\n *    var end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    var c = new draw2d.Connection();\r\n *\r\n *    // toggle from ManhattenRouter to DirectRouter to show the rotation of decorations\r\n *    c.setRouter(new draw2d.layout.connection.DirectRouter());\r\n *\r\n *    // Set the endpoint decorations for the connection\r\n *    //\r\n *    c.setSourceDecorator(new draw2d.decoration.connection.CircleDecorator());\r\n *    c.setTargetDecorator(new draw2d.decoration.connection.CircleDecorator());\r\n *    // Connect the endpoints with the start and end port\r\n *    //\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n * @author Andreas Herz\r\n * @param {Number} [width] the width of the arrow\r\n * @param {Number} [height] the height of the arrow\r\n * @extend draw2d.decoration.connection.Decorator\r\n */\r\ndraw2d.decoration.connection.CircleDecorator = draw2d.decoration.connection.Decorator.extend(\r\n  /** @lends draw2d.decoration.connection.CircleDecorator */\r\n  {\r\n\r\n    NAME: \"draw2d.decoration.connection.CircleDecorator\",\r\n\r\n    init: function (width, height) {\r\n      this._super(width, height)\r\n    },\r\n\r\n    /**\r\n     * Draw a filled circle decoration.\r\n     *\r\n     * @param {RaphaelPaper} paper the raphael paper object for the paint operation\r\n     * @returns {RaphaelPath}\r\n     * @private\r\n     **/\r\n    paint: function (paper) {\r\n      let st = paper.set()\r\n\r\n      st.push(paper.circle(0, 0, this.width / 2))\r\n      st.attr({fill: this.backgroundColor.rgba()})\r\n\r\n      return st\r\n    }\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\nimport Color from '../../util/Color'\r\n\r\n/**\r\n * @class\r\n * Base class for any kind of Connection end/start decorations like arrows, bullets, circles, bars,...\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.decoration.connection.Decorator = Class.extend(\r\n  /** @lends draw2d.decoration.connection.Decorator */\r\n  {\r\n\r\n    NAME: \"draw2d.decoration.connection.Decorator\",\r\n\r\n    init: function (width, height) {\r\n\r\n      if (typeof width === \"undefined\" || width < 1) {\r\n        this.width = 20\r\n      } else {\r\n        this.width = width\r\n      }\r\n\r\n      if (typeof height === \"undefined\" || height < 1) {\r\n        this.height = 15\r\n      } else {\r\n        this.height = height\r\n      }\r\n      this.parent = null\r\n      this.color = null // null => use the color of the connection\r\n      this.backgroundColor = new Color(250, 250, 250)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Paint the decoration for a connector. The Connector starts always in\r\n     * [0,0] and ends in [x,0].\r\n     * It is not necessary to consider any rotation of the connection. This will be done by the\r\n     * framework.\r\n     *\r\n     * <pre>\r\n     *               | -Y\r\n     *               |\r\n     *               |\r\n     *  --------------+-----------------------------&gt; +X\r\n     *               |\r\n     *               |\r\n     *               |\r\n     *               V +Y\r\n     *\r\n     *\r\n     * </pre>\r\n     *\r\n     * See in ArrowConnectionDecorator for example implementation.\r\n     * @param {RaphaelPaper} paper\r\n     * @private\r\n     */\r\n    paint: function (paper) {\r\n      // do nothing per default\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {draw2d.Connection} parent\r\n     * @private\r\n     */\r\n    setParent: function(parent){\r\n      this.parent = parent\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the stroke color for the decoration\r\n     *\r\n     * @param {draw2d.util.Color|String} c\r\n     * @returns {this}\r\n     */\r\n    setColor: function (c) {\r\n      this.color = new Color(c);\r\n\r\n      this.parent?.repaint()\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Get the line color of the decoration\r\n     *\r\n     * @returns {drawd.util.Color} the current line color of null if the Decoration should use the color of the host connection\r\n     */\r\n    getColor: function(){\r\n      return this.color\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the background color for the decoration\r\n     *\r\n     * @param {draw2d.util.Color|String} c\r\n     * @returns {this}\r\n     */\r\n    setBackgroundColor: function (c) {\r\n      this.backgroundColor = new Color(c)\r\n      \r\n      this.parent?.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Returns the fill color\r\n     *\r\n     * @returns {draw2d.util.Color}\r\n     */\r\n    getBackgroundColor: function(){\r\n      return this.backgroundColor\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Change the dimension of the decoration shape\r\n     *\r\n     * @param {Number} width  The new width of the decoration\r\n     * @param {Number} height The new height of the decoration\r\n     * @returns {this}\r\n     **/\r\n    setDimension: function (width, height) {\r\n      this.width = width\r\n      this.height = height\r\n\r\n      return this\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start();\r\n *    var end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    var c = new draw2d.Connection();\r\n *\r\n *    // toggle from ManhattenRouter to DirectRouter to show the rotation of decorations\r\n *    c.setRouter(new draw2d.layout.connection.DirectRouter());\r\n *\r\n *    // Set the endpoint decorations for the connection\r\n *    //\r\n *    c.setSourceDecorator(new draw2d.decoration.connection.DiamondDecorator());\r\n *    c.setTargetDecorator(new draw2d.decoration.connection.DiamondDecorator());\r\n *    // Connect the endpoints with the start and end port\r\n *    //\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @param {Number} [width] the width of the arrow\r\n * @param {Number} [height] the height of the arrow\r\n * @extend draw2d.decoration.connection.Decorator\r\n */\r\n\r\ndraw2d.decoration.connection.DiamondDecorator = draw2d.decoration.connection.Decorator.extend(\r\n  /** @lends draw2d.decoration.connection.DiamondDecorator */\r\n  {\r\n\r\n    NAME: \"draw2d.decoration.connection.DiamondDecorator\",\r\n\r\n    init: function (width, height) {\r\n      this._super(width, height)\r\n    },\r\n\r\n    /**\r\n     * Draw a filled diamond decoration.\r\n     *\r\n     * It's not your work to rotate the arrow. The draw2d do this job for you.\r\n     *\r\n     * @param {RaphaelPaper} paper the raphael paper object for the paint operation\r\n     * @returns {RaphaelPath}\r\n     * @private\r\n     **/\r\n    paint: function (paper) {\r\n      let st = paper.set()\r\n\r\n      st.push(\r\n        paper.path([\"M\", this.width / 2, \" \", -this.height / 2,  // Go to the top center..\r\n          \"L\", this.width, \" \", 0,               // ...draw line to the right middle\r\n          \"L\", this.width / 2, \" \", this.height / 2,   // ...bottom center...\r\n          \"L\", 0, \" \", 0,               // ...left middle...\r\n          \"L\", this.width / 2, \" \", -this.height / 2,  // and close the path\r\n          \"Z\"].join(\"\"))\r\n      )\r\n\r\n      st.attr({fill: this.backgroundColor.rgba()})\r\n      return st\r\n    }\r\n  });\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * Static util function to determine the minimal distance of point(px,py) on the line(x1,y1,x2,y2)\r\n *\r\n *\r\n * @returns {Number}\r\n * @static\r\n * @private\r\n * @param {Number} X1 x coordinate of the start point of the line\r\n * @param {Number} Y1 y coordinate of the start point of the line\r\n * @param {Number} X2 x coordinate of the end point of the line\r\n * @param {Number} Y2 y coordinate of the end point of the line\r\n * @param {Number} px x coordinate of the point to test\r\n * @param {Number} py y coordinate of the point to test\r\n **/\r\ndraw2d.geo.Line = {\r\n\r\n  /**\r\n   * Returns the relative position of the point on the line between [0..1]\r\n   * The point \"p\" must be part of the line!!\r\n   *\r\n   * 0 => given point is on the start location\r\n   * ..=> given point is in between\r\n   * 1 => given point is at the end\r\n   *\r\n   * @returns {Number}\r\n   */\r\n  inverseLerp: function (X1, Y1, X2, Y2, px, py) {\r\n    let nenner = Math.abs(X2 - X1)\r\n    let zaehler = Math.abs(X2 - px)\r\n    if (nenner === 0) {\r\n      nenner = Math.abs(Y2 - Y1)\r\n      zaehler = Math.abs(Y2 - py)\r\n      if (nenner === 0) {\r\n        return 1\r\n      }\r\n    }\r\n\r\n    return zaehler / nenner\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns the projection of the point onto the line.\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  pointProjection: function (X1, Y1, X2, Y2, px, py) {\r\n    let r = new draw2d.geo.Point(0, 0)\r\n    if (X1 === X2 && Y1 === Y2) X1 -= 0.00001\r\n\r\n    let U = ((px - X1) * (X2 - X1)) + ((py - Y1) * (Y2 - Y1))\r\n\r\n    let Udenom = Math.pow(X2 - X1, 2) + Math.pow(Y2 - Y1, 2)\r\n\r\n    U /= Udenom\r\n\r\n    r.x = X1 + (U * (X2 - X1))\r\n    r.y = Y1 + (U * (Y2 - Y1))\r\n\r\n    let minx, maxx, miny, maxy\r\n\r\n    minx = Math.min(X1, X2)\r\n    maxx = Math.max(X1, X2)\r\n\r\n    miny = Math.min(Y1, Y2)\r\n    maxy = Math.max(Y1, Y2)\r\n\r\n    let isValid = (r.x >= minx && r.x <= maxx) && (r.y >= miny && r.y <= maxy)\r\n\r\n    return isValid ? r : null\r\n  },\r\n\r\n  distance: function (X1, Y1, X2, Y2, px, py) {\r\n    // Adjust vectors relative to X1,Y1\r\n    // X2,Y2 becomes relative vector from X1,Y1 to end of segment\r\n    X2 -= X1\r\n    Y2 -= Y1\r\n    // px,py becomes relative vector from X1,Y1 to test point\r\n    px -= X1\r\n    py -= Y1\r\n    let dotprod = px * X2 + py * Y2\r\n    let projlenSq\r\n    if (dotprod <= 0.0) {\r\n      // px,py is on the side of X1,Y1 away from X2,Y2\r\n      // distance to segment is length of px,py vector\r\n      // \"length of its (clipped) projection\" is now 0.0\r\n      projlenSq = 0.0\r\n    } else {\r\n      // switch to backwards vectors relative to X2,Y2\r\n      // X2,Y2 are already the negative of X1,Y1=>X2,Y2\r\n      // to get px,py to be the negative of px,py=>X2,Y2\r\n      // the dot product of two negated vectors is the same\r\n      // as the dot product of the two normal vectors\r\n      px = X2 - px\r\n      py = Y2 - py\r\n      dotprod = px * X2 + py * Y2\r\n      if (dotprod <= 0.0) {\r\n        // px,py is on the side of X2,Y2 away from X1,Y1\r\n        // distance to segment is length of (backwards) px,py vector\r\n        // \"length of its (clipped) projection\" is now 0.0\r\n        projlenSq = 0.0\r\n      } else {\r\n        // px,py is between X1,Y1 and X2,Y2\r\n        // dotprod is the length of the px,py vector\r\n        // projected on the X2,Y2=>X1,Y1 vector times the\r\n        // length of the X2,Y2=>X1,Y1 vector\r\n        projlenSq = dotprod * dotprod / (X2 * X2 + Y2 * Y2)\r\n      }\r\n    }\r\n    // Distance to line is now the length of the relative point\r\n    // vector minus the length of its projection onto the line\r\n    // (which is zero if the projection falls outside the range\r\n    //  of the line segment).\r\n    let lenSq = px * px + py * py - projlenSq\r\n    if (lenSq < 0) {\r\n      lenSq = 0\r\n    }\r\n    return Math.sqrt(lenSq)\r\n  }\r\n}\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * Represents a point (x, y) in 2-dimensional space.\r\n *\r\n * @class\r\n */\r\n\r\ndraw2d.geo.Point = Class.extend(\r\n  /** @lends draw2d.geo.Point.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.geo.Point\",\r\n\r\n  /**\r\n   * Creates a new Point object with the hands over coordinates.\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x\r\n   * @param {Number} y\r\n   */\r\n  init: function (x, y) {\r\n    if (x instanceof draw2d.geo.Point) {\r\n      this.x = x.x\r\n      this.y = x.y\r\n    }\r\n    else if (!isNaN(parseFloat(x.x)) && !isNaN(parseFloat(x.y))) {\r\n      this.x = x.x\r\n      this.y = x.y\r\n    }\r\n    else {\r\n      this.x = x\r\n      this.y = y\r\n    }\r\n\r\n\r\n    // limit for the maxi/minimum boundary of this rectangle\r\n    // It is not possible that the rect leave the boundary if set.\r\n    this.bx = null\r\n    this.by = null\r\n    this.bw = null\r\n    this.bh = null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Ensure the boundary of the rectangle. If set, the rectangle keeps always inside\r\n   * the boundary. It is like a virtual fence.\r\n   *\r\n   * @returns {this}\r\n   */\r\n  setBoundary: function (bx, by, bw, bh) {\r\n    if (bx instanceof draw2d.geo.Rectangle) {\r\n      this.bx = bx.x\r\n      this.by = bx.y\r\n      this.bw = bx.w\r\n      this.bh = bx.h\r\n    } else {\r\n      this.bx = bx\r\n      this.by = by\r\n      this.bw = bw\r\n      this.bh = bh\r\n    }\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * @private\r\n   * @returns {this}\r\n   */\r\n  adjustBoundary: function () {\r\n    if (this.bx === null) {\r\n      return this\r\n    }\r\n    this.x = Math.min(Math.max(this.bx, this.x), this.bw)\r\n    this.y = Math.min(Math.max(this.by, this.y), this.bh)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Moves this Rectangle horizontally by dx and vertically by dy, then returns\r\n   * this Rectangle for convenience.<br>\r\n   * <br>\r\n   * The method return the object itself. This allows you to do command chaining, where\r\n   * you can perform multiple methods on the same elements.\r\n   *\r\n   * @param {Number} dx  Shift along X axis\r\n   * @param {Number} dy  Shift along Y axis\r\n   * @returns {this}\r\n   **/\r\n  translate: function (dx, dy) {\r\n    this.x += dx\r\n    this.y += dy\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * The X value of the point\r\n   *\r\n   * @since 0.1\r\n   * @returns {Number} The x coordinate of the top left corner\r\n   */\r\n  getX: function () {\r\n    return this.x\r\n  },\r\n\r\n  /**\r\n   * \r\n   * The y value of the point\r\n   *\r\n   * @returns {Number} The y coordinate of the top left corner\r\n   */\r\n  getY: function () {\r\n    return this.y\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the new X value of the point\r\n   *\r\n   * @param {Number} x the new x coordinate of the rect\r\n   * @returns {this}\r\n   */\r\n  setX: function (x) {\r\n    this.x = x\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the new Y value of the point\r\n   *\r\n   * @param {Number} y the new y coordinate of the rect\r\n   * @returns {this}\r\n   */\r\n  setY: function (y) {\r\n    this.y = y\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the new x/y coordinates of this point\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x\r\n   * @param {Number} [y]\r\n   * @returns {this}\r\n   */\r\n  setPosition: function (x, y) {\r\n    if (x instanceof draw2d.geo.Point) {\r\n      this.x = x.x\r\n      this.y = x.y\r\n    }\r\n    else {\r\n      this.x = x\r\n      this.y = y\r\n    }\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Calculates the relative position of the specified Point to this Point.\r\n   *\r\n   * @param {draw2d.geo.Point} p The reference Point\r\n   * @returns {Number} NORTH, SOUTH, EAST, or WEST, as defined in {@link draw2d.geo.PositionConstants}\r\n   */\r\n  getPosition: function (p) {\r\n    let dx = p.x - this.x\r\n    let dy = p.y - this.y\r\n    if (Math.abs(dx) > Math.abs(dy)) {\r\n      if (dx < 0)\r\n        return draw2d.geo.PositionConstants.WEST\r\n      return draw2d.geo.PositionConstants.EAST\r\n    }\r\n    if (dy < 0) {\r\n      return draw2d.geo.PositionConstants.NORTH\r\n    }\r\n    return draw2d.geo.PositionConstants.SOUTH\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Compares two points and return [true] if x and y are equals.\r\n   *\r\n   * @param {draw2d.geo.Point} p the point to compare with\r\n   *\r\n   * @returns {Boolean} True if the given p[x,y] has an exact match with the point\r\n   */\r\n  equals: function (p) {\r\n    return this.x === p.x && this.y === p.y\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the distance between this point and the hands over.\r\n   *\r\n   * @param {draw2d.geo.Point} other the point to use\r\n   * @returns {Number} The distance to the given point\r\n   */\r\n  distance: function (other) {\r\n    return Math.sqrt((this.x - other.x) * (this.x - other.x) + (this.y - other.y) * (this.y - other.y))\r\n  },\r\n  /* @deprecated */\r\n  getDistance: function (other) {\r\n    return this.distance(other)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the length of the vector measured from [0,0]\r\n   *\r\n   * @returns {Number} The length of the vector [0,0][x,y]\r\n   * @since 2.10.0\r\n   */\r\n  length: function () {\r\n    return Math.sqrt(this.x * this.x + this.y * this.y)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return a new Point translated with the x/y values of the hands over point.\r\n   *\r\n   * @param {draw2d.geo.Point|Number} x the x translation or the complete point to translate\r\n   * @param {Number} [y] the y translation. Required if x is a simple number instead of a draw2d.geo.Point\r\n   * @returns {draw2d.geo.Point} A instance of a translated point.\r\n   */\r\n  translated: function (x, y) {\r\n    let other = new draw2d.geo.Point(x, y)\r\n    return new draw2d.geo.Point(this.x + other.x, this.y + other.y)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Scales this point with the handover factor\r\n   *\r\n   * @param {Number} factor the factor to scaled the point.\r\n   * @returns {this}\r\n   */\r\n  scale: function (factor) {\r\n    this.x *= factor\r\n    this.y *= factor\r\n    this.adjustBoundary()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return a **new** Point scaled with the givben factor\r\n   *\r\n   * @param {Number} factor the factor to scaled the new point.\r\n   * @returns {draw2d.geo.Point} The new translated point.\r\n   */\r\n  scaled: function (factor) {\r\n    return new draw2d.geo.Point(this.x * factor, this.y * factor)\r\n  },\r\n\r\n  /* @deprecated */\r\n  getScaled: function (factor) {\r\n    return this.scaled(factor)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return an objects with all important attributes for XML or JSON serialization\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function () {\r\n    return {\r\n      x: this.x,\r\n      y: this.y\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Read all attributes from the serialized properties and transfer them into the shape.\r\n   *\r\n   * @param {Object} memento\r\n   * @returns {this}\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this.x = memento.x\r\n    this.y = memento.y\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * substract the given point and return the **new** point.\r\n   *\r\n   * @param that\r\n   * @returns {draw2d.geo.Point}\r\n   */\r\n  subtract: function (that) {\r\n    return new draw2d.geo.Point(this.x - that.x, this.y - that.y)\r\n  },\r\n\r\n\r\n  dot: function (that) {\r\n    return this.x * that.x + this.y * that.y\r\n  },\r\n\r\n  cross: function (that) {\r\n    return this.x * that.y - this.y * that.x\r\n  },\r\n\r\n\r\n  lerp: function (that, t) {\r\n    return new draw2d.geo.Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return a cloned point\r\n   *\r\n   * @returns {draw2d.geo.Point}\r\n   */\r\n  clone: function () {\r\n    return new draw2d.geo.Point(this.x, this.y)\r\n  }\r\n\r\n})\r\n","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n * Static values for point orientation.\r\n * \r\n */\r\ndraw2d.geo.PositionConstants = {\r\n  /**\r\n   *\r\n   */\r\n  NORTH:  1,\r\n  SOUTH:  4,\r\n  WEST:  8,\r\n  EAST: 16\r\n}\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Represents a vector within 2-dimensional Euclidean space.\r\n * \r\n * @inheritable\r\n * @extends draw2d.geo.Point\r\n * @author Andreas Herz\r\n */\r\ndraw2d.geo.Ray = draw2d.geo.Point.extend(\r\n    /** @lends draw2d.geo.Ray.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.geo.Ray\",\r\n    \r\n    /**\r\n     * Creates a ray object.\r\n     *\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     */\r\n    init: function( x, y)\r\n    {\r\n        this._super(x,y);\r\n    },\r\n    \r\n    \r\n    isHorizontal: function()\r\n    {\r\n       return this.x != 0;\r\n    },\r\n    \r\n    similarity: function( otherRay)\r\n    {\r\n       return Math.abs(this.dot(otherRay));\r\n    },\r\n    \r\n    getAveraged: function( otherRay)\r\n    {\r\n        return new draw2d.geo.Ray((this.x + otherRay.x) / 2, (this.y + otherRay.y) / 2);\r\n    }\r\n\r\n});\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Represents a Rectangle(x, y, width, height).\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.geo.Point\r\n */\r\ndraw2d.geo.Rectangle = draw2d.geo.Point.extend(\r\n  /** @lends draw2d.geo.Rectangle.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.geo.Rectangle\",\r\n\r\n    /**\r\n     * Creates a new Point object with the hands over coordinates.\r\n     * <br>\r\n     * The constructor consumes almost any kind of rectangel definitions\r\n     * like:\r\n     *      let rect0 = new draw2d.geo.Rectangle({x:0,y:0,width:20,height:20});\r\n     *      let rect1 = new draw2d.geo.Rectangle({x:0,y:0,w:20,h:20});\r\n     *      let rect2 = new draw2d.geo.Rectangle($(\"#divid\")[0].getBoundingClientRect());\r\n     *      let rect3 = new draw2d.geo.Rectangle(rect1);\r\n     *\r\n     * The rectangle class is usefull for any kind of intersection, hitTest, contains,...calculation\r\n     * or to set the bounding box of any shape.\r\n     *\r\n     * @param {Number|draw2d.geo.Rectangle} x\r\n     * @param {Number} y\r\n     * @param {Number} w\r\n     * @param {Number} h\r\n     */\r\n    init: function (x, y, w, h) {\r\n      // try to consume any kind rectangle definitions\r\n      //\r\n      if (x instanceof draw2d.geo.Rectangle) {\r\n        y = x.y;\r\n        w = x.w;\r\n        h = x.h;\r\n        x = x.x;\r\n      } else if (typeof x.x === \"number\" && typeof x.y === \"number\") {\r\n        y = x.y;\r\n        w = x.w | x.width;\r\n        h = x.h | x.height;\r\n        x = x.x;\r\n      } else if (typeof x.top === \"number\" && typeof x.left === \"number\") {\r\n        y = x.top;\r\n        w = x.w | x.width;\r\n        h = x.h | x.height;\r\n        x = x.left;\r\n      }\r\n      this._super(x, y);\r\n      this.w = w;\r\n      this.h = h;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    adjustBoundary: function () {\r\n      if (this.bx === null) {\r\n        return;\r\n      }\r\n      this.x = Math.min(Math.max(this.bx, this.x), this.bw - this.w);\r\n      this.y = Math.min(Math.max(this.by, this.y), this.bh - this.h);\r\n      this.w = Math.min(this.w, this.bw);\r\n      this.h = Math.min(this.h, this.bh);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Resizes this Rectangle by the values supplied as input and returns this for\r\n     * convenience. This Rectangle's width will become this.width + dw. This\r\n     * Rectangle's height will become this.height + dh.\r\n     * <br>\r\n     * The method return the object itself. This allows you to do command chaining, where\r\n     * you can perform multiple methods on the same elements.\r\n     *\r\n     *\r\n     * @param {Number} dw  Amount by which width is to be resized\r\n     * @param {Number} dh  Amount by which height is to be resized\r\n     * @returns  {this}\r\n     **/\r\n    resize: function (dw, dh) {\r\n      this.w += dw;\r\n      this.h += dh;\r\n      this.adjustBoundary();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Adds the specified padding to the rectangle's bounds. This Rectangle's width\r\n     * will become this.width + dw. The Rectangle's height will become this.height + dh.\r\n     * The top left corner moves -dw/2, -dh/2\r\n     *\r\n     * @param {Number} dw  Amount by which width is to be resized\r\n     * @param {Number} dh  Amount by which height is to be resized\r\n     * @returns  {this}\r\n     **/\r\n    scale: function (dw, dh) {\r\n      this.w += (dw);\r\n      this.h += (dh);\r\n      this.x -= (dw / 2);\r\n      this.y -= (dh / 2);\r\n      this.adjustBoundary();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Translate the rectangle with the given x/y coordiante.\r\n     *\r\n     * @param {draw2d.geo.Point|Number} x the x translation or the complete point to translate\r\n     * @param {Number} [y] the y translation. Required if x is a simple number instead of a draw2d.geo.Point\r\n     *\r\n     *\r\n     * @since 5.6.0\r\n     * @returns  {this}\r\n     */\r\n    translate: function (x, y) {\r\n      let other = new draw2d.geo.Point(x, y);\r\n      this.x += other.x;\r\n      this.y += other.y;\r\n      this.adjustBoundary();\r\n\r\n      return this;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns a copy of the translated rectangle\r\n     *\r\n     * @param {draw2d.geo.Point|Number} x the x translation or the complete point to translate\r\n     * @param {Number} [y] the y translation. Required if x is a simple number instead of a draw2d.geo.Point\r\n     *\r\n     * @returns {draw2d.geo.Rectangle} The new translated rectangle.\r\n     * @since 5.6.0\r\n     */\r\n    translated: function (x, y) {\r\n      let other = new draw2d.geo.Point(x, y);\r\n      return new draw2d.geo.Rectangle(this.x + other.x, this.y + other.y, this.w, this.h);\r\n    },\r\n\r\n\r\n    /**\r\n     * Sets the parameters of this Rectangle from the Rectangle passed in and\r\n     * returns this for convenience.<br>\r\n     * <br>\r\n     * The method return the object itself. This allows you to do command chaining, where\r\n     * you can perform multiple methods on the same elements.\r\n     *\r\n     * @param {draw2d.geo.Rectangle} Rectangle providing the bounding values\r\n     * @returns  {this}\r\n     */\r\n    setBounds: function (rect) {\r\n      this.setPosition(rect.x, rect.y);\r\n\r\n      this.w = rect.w;\r\n      this.h = rect.h;\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns <code>true</code> if this Rectangle's width or height is less than or\r\n     * equal to 0.\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    isEmpty: function () {\r\n      return this.w <= 0 || this.h <= 0;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The width of the dimension element.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getWidth: function () {\r\n      return this.w;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the new width of the rectangle.\r\n     *\r\n     * @param {Number} w the new width of the rectangle\r\n     * @returns  {this}\r\n     */\r\n    setWidth: function (w) {\r\n      this.w = w;\r\n      this.adjustBoundary();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The height of the dimension element.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getHeight: function () {\r\n      return this.h;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the new height of the rectangle.\r\n     *\r\n     * @param {Number} h the new height of the rectangle\r\n     * @returns  {this}\r\n     */\r\n    setHeight: function (h) {\r\n      this.h = h;\r\n      this.adjustBoundary();\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The x coordinate of the left corner.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getLeft: function () {\r\n      return this.x;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The x coordinate of the right corner.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getRight: function () {\r\n      return this.x + this.w;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The y coordinate of the top.\r\n     *\r\n     *@return {Number}\r\n     **/\r\n    getTop: function () {\r\n      return this.y;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The y coordinate of the bottom.\r\n     *\r\n     *@return {Number}\r\n     **/\r\n    getBottom: function () {\r\n      return this.y + this.h;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The top left corner of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getTopLeft: function () {\r\n      return new draw2d.geo.Point(this.x, this.y);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The top center coordinate of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getTopCenter: function () {\r\n      return new draw2d.geo.Point(this.x + (this.w / 2), this.y);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The top right corner of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getTopRight: function () {\r\n      return new draw2d.geo.Point(this.x + this.w, this.y);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The center left  of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getCenterLeft: function () {\r\n      return new draw2d.geo.Point(this.x, this.y + (this.h / 2));\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The center right  of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getCenterRight: function () {\r\n      return new draw2d.geo.Point(this.x+ this.w, this.y + (this.h / 2));\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The bottom left corner of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getBottomLeft: function () {\r\n      return new draw2d.geo.Point(this.x, this.y + this.h);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The bottom center coordinate of the dimension object.\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point objects which holds the coordinates\r\n     **/\r\n    getBottomCenter: function () {\r\n      return new draw2d.geo.Point(this.x + (this.w / 2), this.y + this.h);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The center of the dimension object\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point which holds the center of the object\r\n     **/\r\n    getCenter: function () {\r\n      return new draw2d.geo.Point(this.x + this.w / 2, this.y + this.h / 2);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Bottom right corner of the object\r\n     *\r\n     * @returns {draw2d.geo.Point} a new point which holds the bottom right corner\r\n     **/\r\n    getBottomRight: function () {\r\n      return new draw2d.geo.Point(this.x + this.w, this.y + this.h);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return all points of the rectangle as array. Starting at topLeft and the\r\n     * clockwise.\r\n     *\r\n     * @returns {draw2d.util.ArrayList} the points starting at top/left and the clockwise\r\n     */\r\n    getVertices: function () {\r\n      let result = new draw2d.util.ArrayList();\r\n      // don't change the order. We expect always that the top left corner has index[0]\r\n      // and goes clock wise\r\n      //\r\n      result.add(this.getTopLeft());\r\n      result.add(this.getTopRight());\r\n      result.add(this.getBottomRight());\r\n      result.add(this.getBottomLeft());\r\n\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return a new rectangle which fits into this rectangle. <b>ONLY</b> the x/y coordinates\r\n     * will be changed. Not the dimension of the given rectangle.\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect the rectangle to adjust\r\n     * @returns the new shifted rectangle\r\n     */\r\n    moveInside: function (rect) {\r\n      let newRect = new draw2d.geo.Rectangle(rect.x, rect.y, rect.w, rect.h);\r\n      // shift the coordinate right/down if coordinate not inside the rect\r\n      //\r\n      newRect.x = Math.max(newRect.x, this.x);\r\n      newRect.y = Math.max(newRect.y, this.y);\r\n\r\n      // ensure that the right border is inside this rect (if possible). \r\n      //\r\n      if (newRect.w < this.w) {\r\n        newRect.x = Math.min(newRect.x + newRect.w, this.x + this.w) - newRect.w;\r\n      } else {\r\n        newRect.x = this.x;\r\n      }\r\n\r\n      // ensure that the bottom is inside this rectangle\r\n      //\r\n      if (newRect.h < this.h) {\r\n        newRect.y = Math.min(newRect.y + newRect.h, this.y + this.h) - newRect.h;\r\n      } else {\r\n        newRect.y = this.y;\r\n      }\r\n\r\n      return newRect;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the minimum distance of this rectangle to the given {@link draw2d.geo.Point} or\r\n     * {link draw2d.geo.Rectangle}.\r\n     *\r\n     * @param {draw2d.geo.Point|draw2d.geo.Rectangle} pointOrRectangle the reference point/rectangle for the distance calculation\r\n     */\r\n    getDistance: function (pointOrRectangle) {\r\n      let cx = this.x;\r\n      let cy = this.y;\r\n      let cw = this.w;\r\n      let ch = this.h;\r\n\r\n      let ox = pointOrRectangle.getX();\r\n      let oy = pointOrRectangle.getY();\r\n      let ow = 1;\r\n      let oh = 1;\r\n\r\n      if (pointOrRectangle instanceof draw2d.geo.Rectangle) {\r\n        ow = pointOrRectangle.getWidth();\r\n        oh = pointOrRectangle.getHeight();\r\n      }\r\n      let oct = 9;\r\n\r\n      // Determin Octant\r\n      //\r\n      // 0 | 1 | 2\r\n      // __|___|__\r\n      // 7 | 9 | 3\r\n      // __|___|__\r\n      // 6 | 5 | 4\r\n\r\n      if (cx + cw <= ox) {\r\n        if ((cy + ch) <= oy) {\r\n          oct = 0;\r\n        } else if (cy >= (oy + oh)) {\r\n          oct = 6;\r\n        } else {\r\n          oct = 7;\r\n        }\r\n      } else if (cx >= ox + ow) {\r\n        if (cy + ch <= oy) {\r\n          oct = 2;\r\n        } else if (cy >= oy + oh) {\r\n          oct = 4;\r\n        } else {\r\n          oct = 3;\r\n        }\r\n      } else if (cy + ch <= oy) {\r\n        oct = 1;\r\n      } else if (cy >= oy + oh) {\r\n        oct = 5;\r\n      } else {\r\n        return 0;\r\n      }\r\n\r\n\r\n      // Determine Distance based on Quad\r\n      //\r\n      switch (oct) {\r\n        case 0:\r\n          cx = (cx + cw) - ox;\r\n          cy = (cy + ch) - oy;\r\n          return -(cx + cy);\r\n        case 1:\r\n          return -((cy + ch) - oy);\r\n        case 2:\r\n          cx = (ox + ow) - cx;\r\n          cy = (cy + ch) - oy;\r\n          return -(cx + cy);\r\n        case 3:\r\n          return -((ox + ow) - cx);\r\n        case 4:\r\n          cx = (ox + ow) - cx;\r\n          cy = (oy + oh) - cy;\r\n          return -(cx + cy);\r\n        case 5:\r\n          return -((oy + oh) - cy);\r\n        case 6:\r\n          cx = (cx + cw) - ox;\r\n          cy = (oy + oh) - cy;\r\n          return -(cx + cy);\r\n        case 7:\r\n          return -((cx + cw) - ox);\r\n      }\r\n\r\n      throw \"Unknown data type of parameter for distance calculation in draw2d.geo.Rectangle.getDistance(..)\";\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Determin the octant of r2 in relation to this rectangle.\r\n     * <pre>\r\n     *\r\n     *    0 | 1 | 2\r\n     *    __|___|__\r\n     *    7 | 8 | 3\r\n     *    __|___|__\r\n     *    6 | 5 | 4\r\n     * </pre>\r\n     *\r\n     * @param {draw2d.geo.Rectangle} r2\r\n     *\r\n     */\r\n    determineOctant: function (r2) {\r\n      let HISTERESE = 3; // Toleranz um diese vermieden wird, dass der Octant \"8\" zurückgegeben wird\r\n\r\n      let ox = this.x + HISTERESE;\r\n      let oy = this.y + HISTERESE;\r\n      let ow = this.w - (HISTERESE * 2);\r\n      let oh = this.h - (HISTERESE * 2);\r\n\r\n      let cx = r2.x;\r\n      let cy = r2.y;\r\n      let cw = 2;\r\n      let ch = 2;\r\n      if (r2 instanceof draw2d.geo.Rectangle) {\r\n        cw = r2.w;\r\n        ch = r2.h;\r\n      }\r\n\r\n      let oct = 0;\r\n\r\n      if (cx + cw <= ox) {\r\n        if ((cy + ch) <= oy) {\r\n          oct = 0;\r\n        } else if (cy >= (oy + oh)) {\r\n          oct = 6;\r\n        } else {\r\n          oct = 7;\r\n        }\r\n      } else if (cx >= ox + ow) {\r\n        if (cy + ch <= oy) {\r\n          oct = 2;\r\n        } else if (cy >= oy + oh) {\r\n          oct = 4;\r\n        } else {\r\n          oct = 3;\r\n        }\r\n      } else if (cy + ch <= oy) {\r\n        oct = 1;\r\n      } else if (cy >= oy + oh) {\r\n        oct = 5;\r\n      } else {\r\n        oct = 8;\r\n      }\r\n\r\n      return oct;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the direction the point <i>p</i> is in relation to the given rectangle.\r\n     * Util method for inherit router implementations.\r\n     *\r\n     * <p>\r\n     * Possible values:\r\n     * <ul>\r\n     *   <li>up -&gt; 0</li>\r\n     *   <li>right -&gt; 1</li>\r\n     *   <li>down -&gt; 2</li>\r\n     *   <li>left -&gt; 3</li>\r\n     * </ul>\r\n     * <p>\r\n     *\r\n     * @param {draw2d.geo.Point} other the point in relation to the given rectangle\r\n     *\r\n     * @returns {Number} the direction from <i>r</i> to <i>p</i>\r\n     */\r\n    getDirection: function (other) {\r\n      let current = this.getTopLeft();\r\n      switch (this.determineOctant(other)) {\r\n        case 0:\r\n          if ((current.x - other.x) < (current.y - other.y))\r\n            return draw2d.geo.Rectangle.DIRECTION_UP;\r\n          return draw2d.geo.Rectangle.DIRECTION_LEFT;\r\n        case 1:\r\n          return draw2d.geo.Rectangle.DIRECTION_UP;\r\n        case 2:\r\n          current = this.getTopRight();\r\n          if ((other.x - current.x) < (current.y - other.y))\r\n            return draw2d.geo.Rectangle.DIRECTION_UP;\r\n          return draw2d.geo.Rectangle.DIRECTION_RIGHT;\r\n        case 3:\r\n          return draw2d.geo.Rectangle.DIRECTION_RIGHT;\r\n        case 4:\r\n          current = this.getBottomRight();\r\n          if ((other.x - current.x) < (other.y - current.y))\r\n            return draw2d.geo.Rectangle.DIRECTION_DOWN;\r\n          return draw2d.geo.Rectangle.DIRECTION_RIGHT;\r\n        case 5:\r\n          return draw2d.geo.Rectangle.DIRECTION_DOWN;\r\n        case 6:\r\n          current = this.getBottomLeft();\r\n          if ((current.x - other.x) < (other.y - current.y))\r\n            return draw2d.geo.Rectangle.DIRECTION_DOWN;\r\n          return draw2d.geo.Rectangle.DIRECTION_LEFT;\r\n        case 7:\r\n          return draw2d.geo.Rectangle.DIRECTION_LEFT;\r\n        case 8:\r\n          if (other.y > this.y) {\r\n            return draw2d.geo.Rectangle.DIRECTION_DOWN;\r\n          }\r\n          return draw2d.geo.Rectangle.DIRECTION_UP;\r\n\r\n      }\r\n      return draw2d.geo.Rectangle.DIRECTION_UP;\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Compares two rectangle objects\r\n     *\r\n     * @param {draw2d.geo.Rectangle} o\r\n     *\r\n     * @returns {Boolean}\r\n     **/\r\n    equals: function (o) {\r\n      return this.x == o.x && this.y == o.y && this.w == o.w && this.h == o.h;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Detect whenever the hands over coordinate is inside the rectangle.\r\n     *\r\n     * @param {Number/draw2d.geo.Point} iX\r\n     * @param {Number} iY\r\n     * @returns {Boolean}\r\n     */\r\n    hitTest: function (iX, iY) {\r\n      if (iX instanceof draw2d.geo.Point) {\r\n        iY = iX.y;\r\n        iX = iX.x;\r\n      }\r\n      let iX2 = this.x + this.getWidth();\r\n      let iY2 = this.y + this.getHeight();\r\n      return (iX >= this.x && iX <= iX2 && iY >= this.y && iY <= iY2);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return true if this rectangle inside the hand over rectangle\r\n     *\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect\r\n     * @returns {Boolean}\r\n     */\r\n    isInside: function (rect) {\r\n      return rect.hitTest(this.getTopLeft())\r\n        && rect.hitTest(this.getTopRight())\r\n        && rect.hitTest(this.getBottomLeft())\r\n        && rect.hitTest(this.getBottomRight());\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return true if this rectangle contains the hand over rectangle.\r\n     *\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect\r\n     * @returns {Boolean}\r\n     * @since 4.7.2\r\n     */\r\n    contains: function (rect) {\r\n      return this.hitTest(rect.getTopLeft())\r\n        && this.hitTest(rect.getTopRight())\r\n        && this.hitTest(rect.getBottomLeft())\r\n        && this.hitTest(rect.getBottomRight());\r\n    },\r\n\r\n    /**\r\n     *\r\n     * checks whenever the rectangles has an intersection.\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect\r\n     * @returns {Boolean}\r\n     */\r\n    intersects: function (rect) {\r\n      let x11 = rect.x,\r\n        y11 = rect.y,\r\n        x12 = rect.x + rect.w,\r\n        y12 = rect.y + rect.h,\r\n        x21 = this.x,\r\n        y21 = this.y,\r\n        x22 = this.x + this.w,\r\n        y22 = this.y + this.h;\r\n\r\n      let x_overlap = Math.max(0, Math.min(x12, x22) - Math.max(x11, x21));\r\n      let y_overlap = Math.max(0, Math.min(y12, y22) - Math.max(y11, y21));\r\n\r\n      return x_overlap * y_overlap !== 0;\r\n    },\r\n\r\n    /**\r\n     * Merge this rectangle with the given one.\r\n     *\r\n     * @param {draw2d.geo.Rectangle} rect\r\n     * @since 4.8.0\r\n     * @returns  {this}\r\n     */\r\n    merge: function (rect) {\r\n      let r = Math.max(rect.getRight(), this.getRight());\r\n      let b = Math.max(rect.getBottom(), this.getBottom());\r\n\r\n      this.setPosition(Math.min(this.x, rect.x), Math.min(this.y, rect.y));\r\n\r\n      this.w = r - this.x;\r\n      this.h = b - this.y;\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * returns the intersection points with the given line if any exists\r\n     *\r\n     * @param {draw2d.geo.Point} start\r\n     * @param {draw2d.geo.Point} end\r\n     */\r\n    intersectionWithLine: function (start, end) {\r\n      let result = new draw2d.util.ArrayList();\r\n      let v = this.getVertices();\r\n      v.add(v.first());\r\n      let p1 = v.first();\r\n      let p2 = null;\r\n      for (let i = 1; i < 5; i++) {\r\n        p2 = v.get(i);\r\n        p1 = draw2d.shape.basic.Line.intersection(start, end, p1, p2);\r\n        if (p1 !== null) {\r\n          result.add(p1);\r\n        }\r\n        p1 = p2;\r\n      }\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns a copy of this rectangle\r\n     *\r\n     *\r\n     * @returns {draw2d.geo.Rectangle}\r\n     * @since 5.6.0\r\n     */\r\n    clone: function () {\r\n      return new draw2d.geo.Rectangle(this.x, this.y, this.w, this.h);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * converts the rectangle to JSON representation. required for the draw2d.io.Writer\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    toJSON: function () {\r\n      return {\r\n        width: this.w,\r\n        height: this.h,\r\n        x: this.x,\r\n        y: this.y\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n/**\r\n * ENUM for Direction\r\n */\r\ndraw2d.geo.Rectangle.DIRECTION_UP = 0;\r\ndraw2d.geo.Rectangle.DIRECTION_RIGHT = 1;\r\ndraw2d.geo.Rectangle.DIRECTION_DOWN = 2;\r\ndraw2d.geo.Rectangle.DIRECTION_LEFT = 3;\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Geometric utils functions used in ray, point and some routers.\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.geo.Util = {\r\n\r\n  /**\r\n   *\r\n   * @param start {draw2d.geo.Point} start point of a line\r\n   * @param end  {draw2d.geo.Point} end point of a line\r\n   * @param distanceFromStart {Number} distance from the start point to extrapolate a new point\r\n   * @returns {{x: *, y: *}|*} a new point with the distance *distanceFromStart* from the start point\r\n   */\r\n    insetPoint: function (start, end, distanceFromStart) {\r\n      if (start.equals(end)) {\r\n        return start\r\n      }\r\n      let vx = start.x - end.x\r\n      let vy = start.y - end.y\r\n      let length = Math.sqrt(vx * vx + vy * vy)\r\n      let localDistance = Math.min(length / 2, distanceFromStart)\r\n      return {\r\n        x: end.x + vx / length * (length - localDistance),\r\n        y: end.y + vy / length * (length - localDistance)\r\n      }\r\n    }\r\n}\r\n","import draw2d from 'packages'\r\nexport default draw2d;\r\n\r\n\r\nimport raph from 'lib/raphael.exec.js'\r\nimport cl   from 'lib/Class.exec.js'\r\nimport path from 'lib/pathfinding.exec.js'\r\n\r\n\r\nrequire('./util/raphael_ext');\r\nrequire('./util/Polyfill');\r\nrequire('./util/Base64');\r\nrequire('./util/Debug');\r\n// require('./util/Color');\r\n\r\nrequire('./util/ArrayList');\r\nrequire('./util/SVGUtil');\r\n//require('./util/JSONUtil');\r\n//require('./util/UUID');\r\nrequire('./util/spline/Spline');\r\nrequire('./util/spline/CubicSpline');\r\nrequire('./util/spline/CatmullRomSpline');\r\nrequire('./util/spline/BezierSpline');\r\nrequire('./geo/PositionConstants');\r\nrequire('./geo/Point');\r\nrequire('./geo/Rectangle');\r\nrequire('./geo/Util');\r\nrequire('./geo/Ray');\r\nrequire('./geo/Line');\r\nrequire('./command/CommandType');\r\nrequire('./command/Command');\r\nrequire('./command/CommandCollection');\r\nrequire('./command/CommandStack');\r\nrequire('./command/CommandStackEvent');\r\nrequire('./command/CommandStackEventListener');\r\nrequire('./command/CommandMove');\r\nrequire('./command/CommandAttr');\r\nrequire('./command/CommandMoveLine');\r\nrequire('./command/CommandMoveConnection');\r\nrequire('./command/CommandMoveVertex');\r\nrequire('./command/CommandMoveVertices');\r\nrequire('./command/CommandResize');\r\nrequire('./command/CommandRotate');\r\nrequire('./command/CommandConnect');\r\nrequire('./command/CommandReconnect');\r\nrequire('./command/CommandDelete');\r\nrequire('./command/CommandDeleteGroup');\r\nrequire('./command/CommandAdd');\r\nrequire('./command/CommandGroup');\r\nrequire('./command/CommandUngroup');\r\nrequire('./command/CommandAddVertex');\r\nrequire('./command/CommandAssignFigure');\r\nrequire('./command/CommandBoundingBox');\r\nrequire('./command/CommandRemoveVertex');\r\nrequire('./command/CommandReplaceVertices');\r\nrequire('./layout/connection/ConnectionRouter');\r\nrequire('./layout/connection/DirectRouter');\r\nrequire('./layout/connection/RubberbandRouter');\r\nrequire('./layout/connection/VertexRouter');\r\nrequire('./layout/connection/ManhattanConnectionRouter');\r\nrequire('./layout/connection/ManhattanBridgedConnectionRouter');\r\nrequire('./layout/connection/InteractiveManhattanConnectionRouter');\r\nrequire('./layout/connection/CircuitConnectionRouter');\r\nrequire('./layout/connection/SplineConnectionRouter');\r\nrequire('./layout/connection/FanConnectionRouter');\r\nrequire('./layout/connection/MazeConnectionRouter');\r\nrequire('./layout/connection/MuteableManhattanConnectionRouter');\r\nrequire('./layout/connection/SketchConnectionRouter');\r\nrequire('./layout/mesh/MeshLayouter');\r\nrequire('./layout/mesh/ExplodeLayouter');\r\nrequire('./layout/mesh/ProposedMeshChange');\r\nrequire('./layout/locator/Locator');\r\nrequire('./layout/locator/PortLocator');\r\nrequire('./layout/locator/DraggableLocator');\r\nrequire('./layout/locator/SmartDraggableLocator');\r\nrequire('./layout/locator/XYAbsPortLocator');\r\nrequire('./layout/locator/XYRelPortLocator');\r\nrequire('./layout/locator/InputPortLocator');\r\nrequire('./layout/locator/OutputPortLocator');\r\nrequire('./layout/locator/ConnectionLocator');\r\nrequire('./layout/locator/ManhattanMidpointLocator');\r\nrequire('./layout/locator/PolylineMidpointLocator');\r\nrequire('./layout/locator/ParallelMidpointLocator');\r\nrequire('./layout/locator/TopLocator');\r\nrequire('./layout/locator/BottomLocator');\r\nrequire('./layout/locator/LeftLocator');\r\nrequire('./layout/locator/RightLocator');\r\nrequire('./layout/locator/CenterLocator');\r\nrequire('./policy/EditPolicy');\r\nrequire('./policy/canvas/CanvasPolicy');\r\nrequire('./policy/canvas/ZoomPolicy');\r\nrequire('./policy/canvas/WheelZoomPolicy');\r\nrequire('./policy/canvas/KeyboardPolicy');\r\nrequire('./policy/canvas/DefaultKeyboardPolicy');\r\nrequire('./policy/canvas/ExtendedKeyboardPolicy');\r\nrequire('./policy/canvas/SelectionPolicy');\r\nrequire('./policy/canvas/SingleSelectionPolicy');\r\nrequire('./policy/canvas/GhostMoveSelectionPolicy');\r\nrequire('./policy/canvas/PanningSelectionPolicy');\r\nrequire('./policy/canvas/BoundingboxSelectionPolicy');\r\nrequire('./policy/canvas/ReadOnlySelectionPolicy');\r\nrequire('./policy/canvas/DecorationPolicy');\r\nrequire('./policy/canvas/FadeoutDecorationPolicy');\r\nrequire('./policy/canvas/CoronaDecorationPolicy');\r\nrequire('./policy/canvas/SnapToEditPolicy');\r\nrequire('./policy/canvas/ShowDimetricGridEditPolicy');\r\nrequire('./policy/canvas/SnapToDimetricGridEditPolicy');\r\nrequire('./policy/canvas/ShowGridEditPolicy');\r\nrequire('./policy/canvas/SnapToGridEditPolicy');\r\nrequire('./policy/canvas/ShowDotEditPolicy');\r\nrequire('./policy/canvas/ShowChessboardEditPolicy');\r\nrequire('./policy/canvas/SnapToGeometryEditPolicy');\r\nrequire('./policy/canvas/SnapToVerticesEditPolicy');\r\nrequire('./policy/canvas/SnapToInBetweenEditPolicy');\r\nrequire('./policy/canvas/SnapToCenterEditPolicy');\r\nrequire('./policy/canvas/DropInterceptorPolicy');\r\nrequire('./policy/connection/ConnectionCreatePolicy');\r\nrequire('./policy/connection/ComposedConnectionCreatePolicy');\r\nrequire('./policy/connection/ClickConnectionCreatePolicy');\r\nrequire('./policy/connection/OrthogonalConnectionCreatePolicy');\r\nrequire('./policy/connection/DragConnectionCreatePolicy');\r\nrequire('./policy/figure/FigureEditPolicy');\r\nrequire('./policy/figure/DragDropEditPolicy');\r\nrequire('./policy/figure/RegionEditPolicy');\r\nrequire('./policy/figure/HorizontalEditPolicy');\r\nrequire('./policy/figure/VerticalEditPolicy');\r\nrequire('./policy/figure/SelectionPolicy');\r\nrequire('./policy/figure/SelectionFeedbackPolicy');\r\nrequire('./policy/figure/ResizeSelectionFeedbackPolicy');\r\nrequire('./policy/figure/RectangleSelectionFeedbackPolicy');\r\nrequire('./policy/figure/RaftSelectionFeedbackPolicy');\r\nrequire('./policy/figure/BigRectangleSelectionFeedbackPolicy');\r\nrequire('./policy/figure/RoundRectangleSelectionFeedbackPolicy');\r\nrequire('./policy/figure/BusSelectionFeedbackPolicy');\r\nrequire('./policy/figure/WidthSelectionFeedbackPolicy');\r\nrequire('./policy/figure/VBusSelectionFeedbackPolicy');\r\nrequire('./policy/figure/HBusSelectionFeedbackPolicy');\r\nrequire('./policy/figure/AntSelectionFeedbackPolicy');\r\nrequire('./policy/figure/GlowSelectionFeedbackPolicy');\r\nrequire('./policy/figure/SlimSelectionFeedbackPolicy');\r\nrequire('./policy/figure/VertexSelectionFeedbackPolicy');\r\nrequire('./policy/line/LineSelectionFeedbackPolicy');\r\nrequire('./policy/line/VertexSelectionFeedbackPolicy');\r\nrequire('./policy/line/OrthogonalSelectionFeedbackPolicy');\r\nrequire('./policy/port/PortFeedbackPolicy');\r\nrequire('./policy/port/ElasticStrapFeedbackPolicy');\r\nrequire('./policy/port/IntrusivePortsFeedbackPolicy');\r\nrequire('./Configuration');\r\nrequire('./HeadlessCanvas');\r\nrequire('./Canvas');\r\nrequire('./Selection');\r\nrequire('./Figure');\r\nrequire('./shape/node/Node');\r\nrequire('./VectorFigure');\r\nrequire('./shape/basic/Rectangle');\r\nrequire('./SetFigure');\r\nrequire('./SVGFigure');\r\nrequire('./shape/node/Hub');\r\nrequire('./shape/node/HorizontalBus');\r\nrequire('./shape/node/VerticalBus');\r\nrequire('./shape/node/Fulcrum');\r\nrequire('./shape/basic/Arc');\r\nrequire('./shape/basic/Oval');\r\nrequire('./shape/basic/Circle');\r\nrequire('./shape/basic/Label');\r\nrequire('./shape/basic/Text');\r\nrequire('./shape/basic/Line');\r\nrequire('./shape/basic/PolyLine');\r\nrequire('./shape/basic/Image');\r\nrequire('./shape/basic/Polygon');\r\nrequire('./shape/basic/Diamond');\r\nrequire('./shape/dimetric/Rectangle');\r\nrequire('./shape/composite/Composite');\r\nrequire('./shape/composite/StrongComposite');\r\nrequire('./shape/composite/Group');\r\nrequire('./shape/composite/Jailhouse');\r\nrequire('./shape/composite/WeakComposite');\r\nrequire('./shape/composite/Raft');\r\nrequire('./Connection');\r\nrequire('./VectorFigure');\r\nrequire('./ResizeHandle');\r\nrequire('./shape/composite/RaftResizeHandle');\r\nrequire('./shape/basic/LineResizeHandle');\r\nrequire('./shape/basic/LineStartResizeHandle');\r\nrequire('./shape/basic/LineEndResizeHandle');\r\nrequire('./shape/basic/VertexResizeHandle');\r\nrequire('./shape/basic/GhostVertexResizeHandle');\r\nrequire('./Port');\r\nrequire('./InputPort');\r\nrequire('./OutputPort');\r\nrequire('./HybridPort');\r\nrequire('./layout/anchor/ConnectionAnchor');\r\nrequire('./layout/anchor/ChopboxConnectionAnchor');\r\nrequire('./layout/anchor/FanConnectionAnchor');\r\nrequire('./layout/anchor/ShortesPathConnectionAnchor');\r\nrequire('./layout/anchor/CenterEdgeConnectionAnchor');\r\nrequire('./shape/arrow/CalligrapherArrowLeft');\r\nrequire('./shape/arrow/CalligrapherArrowDownLeft');\r\nrequire('./shape/node/Start');\r\nrequire('./shape/node/End');\r\nrequire('./shape/node/Between');\r\nrequire('./shape/note/PostIt');\r\nrequire('./shape/flowchart/Document');\r\nrequire('./shape/widget/Widget');\r\nrequire('./shape/widget/Slider');\r\nrequire('./shape/diagram/Diagram');\r\nrequire('./shape/diagram/Pie');\r\nrequire('./shape/diagram/Sparkline');\r\nrequire('./shape/analog/OpAmp');\r\nrequire('./shape/analog/ResistorBridge');\r\nrequire('./shape/analog/ResistorVertical');\r\nrequire('./shape/analog/VoltageSupplyHorizontal');\r\nrequire('./shape/analog/VoltageSupplyVertical');\r\nrequire('./shape/layout/Layout');\r\nrequire('./shape/layout/HorizontalLayout');\r\nrequire('./shape/layout/VerticalLayout');\r\nrequire('./shape/layout/TableLayout');\r\nrequire('./shape/layout/FlexGridLayout');\r\nrequire('./shape/layout/StackLayout');\r\nrequire('./shape/icon/Icon');\r\nrequire('./shape/icon/Thunder');\r\nrequire('./shape/icon/Snow');\r\nrequire('./shape/icon/Hail');\r\nrequire('./shape/icon/Rain');\r\nrequire('./shape/icon/Cloudy');\r\nrequire('./shape/icon/Sun');\r\nrequire('./shape/icon/Undo');\r\nrequire('./shape/icon/Detour');\r\nrequire('./shape/icon/Merge');\r\nrequire('./shape/icon/Split');\r\nrequire('./shape/icon/Fork');\r\nrequire('./shape/icon/ForkAlt');\r\nrequire('./shape/icon/Exchange');\r\nrequire('./shape/icon/Shuffle');\r\nrequire('./shape/icon/Refresh');\r\nrequire('./shape/icon/Ccw');\r\nrequire('./shape/icon/Acw');\r\nrequire('./shape/icon/Contract');\r\nrequire('./shape/icon/Expand');\r\nrequire('./shape/icon/Stop');\r\nrequire('./shape/icon/End');\r\nrequire('./shape/icon/Start');\r\nrequire('./shape/icon/Ff');\r\nrequire('./shape/icon/Rw');\r\nrequire('./shape/icon/ArrowRight');\r\nrequire('./shape/icon/ArrowLeft');\r\nrequire('./shape/icon/ArrowUp');\r\nrequire('./shape/icon/ArrowDown');\r\nrequire('./shape/icon/ArrowLeft2');\r\nrequire('./shape/icon/ArrowRight2');\r\nrequire('./shape/icon/Smile2');\r\nrequire('./shape/icon/Smile');\r\nrequire('./shape/icon/Alarm');\r\nrequire('./shape/icon/Clock');\r\nrequire('./shape/icon/StopWatch');\r\nrequire('./shape/icon/History');\r\nrequire('./shape/icon/Future');\r\nrequire('./shape/icon/GlobeAlt2');\r\nrequire('./shape/icon/GlobeAlt');\r\nrequire('./shape/icon/Globe');\r\nrequire('./shape/icon/Warning');\r\nrequire('./shape/icon/Code');\r\nrequire('./shape/icon/Pensil');\r\nrequire('./shape/icon/Pen');\r\nrequire('./shape/icon/Plus');\r\nrequire('./shape/icon/Minus');\r\nrequire('./shape/icon/TShirt');\r\nrequire('./shape/icon/Sticker');\r\nrequire('./shape/icon/Page2');\r\nrequire('./shape/icon/Page');\r\nrequire('./shape/icon/Landscape1');\r\nrequire('./shape/icon/Landscape2');\r\nrequire('./shape/icon/Plugin');\r\nrequire('./shape/icon/Bookmark');\r\nrequire('./shape/icon/Hammer');\r\nrequire('./shape/icon/Users');\r\nrequire('./shape/icon/User');\r\nrequire('./shape/icon/Customer');\r\nrequire('./shape/icon/Employee');\r\nrequire('./shape/icon/Anonymous');\r\nrequire('./shape/icon/Skull');\r\nrequire('./shape/icon/Mail');\r\nrequire('./shape/icon/Picture');\r\nrequire('./shape/icon/Bubble');\r\nrequire('./shape/icon/CodeTalk');\r\nrequire('./shape/icon/Talkq');\r\nrequire('./shape/icon/Talke');\r\nrequire('./shape/icon/Home');\r\nrequire('./shape/icon/Lock');\r\nrequire('./shape/icon/Clip');\r\nrequire('./shape/icon/Star');\r\nrequire('./shape/icon/StarOff');\r\nrequire('./shape/icon/Star2');\r\nrequire('./shape/icon/Star2Off');\r\nrequire('./shape/icon/Star3');\r\nrequire('./shape/icon/Star3Off');\r\nrequire('./shape/icon/Chat');\r\nrequire('./shape/icon/Quote');\r\nrequire('./shape/icon/Gear2');\r\nrequire('./shape/icon/Gear');\r\nrequire('./shape/icon/Wrench');\r\nrequire('./shape/icon/Wrench2');\r\nrequire('./shape/icon/Wrench3');\r\nrequire('./shape/icon/ScrewDriver');\r\nrequire('./shape/icon/HammerAndScrewDriver');\r\nrequire('./shape/icon/Magic');\r\nrequire('./shape/icon/Download');\r\nrequire('./shape/icon/View');\r\nrequire('./shape/icon/Noview');\r\nrequire('./shape/icon/Cloud');\r\nrequire('./shape/icon/Cloud2');\r\nrequire('./shape/icon/CloudDown');\r\nrequire('./shape/icon/CloudUp');\r\nrequire('./shape/icon/Location');\r\nrequire('./shape/icon/Volume0');\r\nrequire('./shape/icon/Volume1');\r\nrequire('./shape/icon/Volume2');\r\nrequire('./shape/icon/Volume3');\r\nrequire('./shape/icon/Key');\r\nrequire('./shape/icon/Ruler');\r\nrequire('./shape/icon/Power');\r\nrequire('./shape/icon/Unlock');\r\nrequire('./shape/icon/Flag');\r\nrequire('./shape/icon/Tag');\r\nrequire('./shape/icon/Search');\r\nrequire('./shape/icon/ZoomOut');\r\nrequire('./shape/icon/ZoomIn');\r\nrequire('./shape/icon/Cross');\r\nrequire('./shape/icon/Check');\r\nrequire('./shape/icon/Settings');\r\nrequire('./shape/icon/SettingsAlt');\r\nrequire('./shape/icon/Feed');\r\nrequire('./shape/icon/Bug');\r\nrequire('./shape/icon/Link');\r\nrequire('./shape/icon/Calendar');\r\nrequire('./shape/icon/Picker');\r\nrequire('./shape/icon/No');\r\nrequire('./shape/icon/CommandLine');\r\nrequire('./shape/icon/Photo');\r\nrequire('./shape/icon/Printer');\r\nrequire('./shape/icon/Export');\r\nrequire('./shape/icon/Import');\r\nrequire('./shape/icon/Run');\r\nrequire('./shape/icon/Magnet');\r\nrequire('./shape/icon/NoMagnet');\r\nrequire('./shape/icon/ReflectH');\r\nrequire('./shape/icon/ReflectV');\r\nrequire('./shape/icon/Resize2');\r\nrequire('./shape/icon/Rotate');\r\nrequire('./shape/icon/Connect');\r\nrequire('./shape/icon/Disconnect');\r\nrequire('./shape/icon/Folder');\r\nrequire('./shape/icon/Man');\r\nrequire('./shape/icon/Woman');\r\nrequire('./shape/icon/People');\r\nrequire('./shape/icon/Parent');\r\nrequire('./shape/icon/Notebook');\r\nrequire('./shape/icon/Diagram');\r\nrequire('./shape/icon/BarChart');\r\nrequire('./shape/icon/PieChart');\r\nrequire('./shape/icon/LineChart');\r\nrequire('./shape/icon/Apps');\r\nrequire('./shape/icon/Locked');\r\nrequire('./shape/icon/Ppt');\r\nrequire('./shape/icon/Lab');\r\nrequire('./shape/icon/Umbrella');\r\nrequire('./shape/icon/Dry');\r\nrequire('./shape/icon/Ipad');\r\nrequire('./shape/icon/Iphone');\r\nrequire('./shape/icon/Jigsaw');\r\nrequire('./shape/icon/Lamp');\r\nrequire('./shape/icon/Lamp_alt');\r\nrequire('./shape/icon/Video');\r\nrequire('./shape/icon/Palm');\r\nrequire('./shape/icon/Fave');\r\nrequire('./shape/icon/Help');\r\nrequire('./shape/icon/Crop');\r\nrequire('./shape/icon/BioHazard');\r\nrequire('./shape/icon/WheelChair');\r\nrequire('./shape/icon/Mic');\r\nrequire('./shape/icon/MicMute');\r\nrequire('./shape/icon/IMac');\r\nrequire('./shape/icon/Pc');\r\nrequire('./shape/icon/Cube');\r\nrequire('./shape/icon/FullCube');\r\nrequire('./shape/icon/Font');\r\nrequire('./shape/icon/Trash');\r\nrequire('./shape/icon/NewWindow');\r\nrequire('./shape/icon/DockRight');\r\nrequire('./shape/icon/DockLeft');\r\nrequire('./shape/icon/DockBottom');\r\nrequire('./shape/icon/DockTop');\r\nrequire('./shape/icon/Pallete');\r\nrequire('./shape/icon/Cart');\r\nrequire('./shape/icon/Glasses');\r\nrequire('./shape/icon/Package');\r\nrequire('./shape/icon/Book');\r\nrequire('./shape/icon/Books');\r\nrequire('./shape/icon/Icons');\r\nrequire('./shape/icon/List');\r\nrequire('./shape/icon/Db');\r\nrequire('./shape/icon/Paper');\r\nrequire('./shape/icon/TakeOff');\r\nrequire('./shape/icon/Landing');\r\nrequire('./shape/icon/Plane');\r\nrequire('./shape/icon/Phone');\r\nrequire('./shape/icon/HangUp');\r\nrequire('./shape/icon/SlideShare');\r\nrequire('./shape/icon/Twitter');\r\nrequire('./shape/icon/TwitterBird');\r\nrequire('./shape/icon/Skype');\r\nrequire('./shape/icon/Windows');\r\nrequire('./shape/icon/Apple');\r\nrequire('./shape/icon/Linux');\r\nrequire('./shape/icon/NodeJs');\r\nrequire('./shape/icon/JQuery');\r\nrequire('./shape/icon/Sencha');\r\nrequire('./shape/icon/Vim');\r\nrequire('./shape/icon/InkScape');\r\nrequire('./shape/icon/Aumade');\r\nrequire('./shape/icon/Firefox');\r\nrequire('./shape/icon/Ie');\r\nrequire('./shape/icon/Ie9');\r\nrequire('./shape/icon/Opera');\r\nrequire('./shape/icon/Chrome');\r\nrequire('./shape/icon/Safari');\r\nrequire('./shape/icon/LinkedIn');\r\nrequire('./shape/icon/Flickr');\r\nrequire('./shape/icon/GitHub');\r\nrequire('./shape/icon/GitHubAlt');\r\nrequire('./shape/icon/Raphael');\r\nrequire('./shape/icon/GRaphael');\r\nrequire('./shape/icon/Svg');\r\nrequire('./shape/icon/Usb');\r\nrequire('./shape/icon/Ethernet');\r\nrequire('./shape/pert/Activity');\r\nrequire('./shape/pert/Start');\r\nrequire('./shape/state/Start');\r\nrequire('./shape/state/End');\r\nrequire('./shape/state/State');\r\nrequire('./shape/state/Connection');\r\nrequire('./ui/LabelEditor');\r\nrequire('./ui/LabelInplaceEditor');\r\nrequire('./decoration/connection/Decorator');\r\nrequire('./decoration/connection/ArrowDecorator');\r\nrequire('./decoration/connection/DiamondDecorator');\r\nrequire('./decoration/connection/CircleDecorator');\r\nrequire('./decoration/connection/BarDecorator');\r\nrequire('./io/Reader');\r\nrequire('./io/Writer');\r\nrequire('./io/svg/Writer');\r\nrequire('./io/png/Writer');\r\nrequire('./io/json/Writer');\r\nrequire('./io/json/Reader');\r\n","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n * Template class for general import of a document into the canvas.\r\n *\r\n * @author andreas Herz\r\n */\r\ndraw2d.io.Reader = Class.extend(\r\n  /** @lends draw2d.io.Reader */\r\n  {\r\n\r\n    init: function(){\r\n\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Restore the canvas from a given String.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the canvas to restore\r\n     * @param {Object} document the document to read\r\n     *\r\n     * @returns {draw2d.util.ArrayList} the added elements\r\n     * @template\r\n     */\r\n    unmarshal: function(canvas, document){\r\n        // do nothing. Inherit classes must implement this method\r\n    }\r\n\r\n});\r\n","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Serialize the canvas to an external format. This is only a template/interface class.\r\n * Inherit classes must implement the export format.\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.io.Writer = Class.extend(\r\n  /** @lends draw2d.io.Writer */\r\n\r\n  {\r\n    init: function(){\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Export the content to the implemented data format. Inherit class implements\r\n     * content specific writer.\r\n     * <br>\r\n     * <br>\r\n     *\r\n     * Method signature has been changed from version 2.10.1 to version 3.0.0.<br>\r\n     * The parameter <b>resultCallback</b> is required and new. The method calls\r\n     * the callback instead of return the result.\r\n     *\r\n     * @template\r\n     * @since 2.10.1\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Function} resultCallback the method to call on success. The first argument is the result object, the second the base64 content of a corresponding file\r\n     * @returns {Object}\r\n     *\r\n     */\r\n    marshal: function(canvas, resultCallback){\r\n        // I change the API signature from version 2.10.1 to 3.0.0. Throw an exception\r\n        // if any application not care about this changes.\r\n        if(typeof resultCallback !== \"function\"){\r\n            throw \"Writer.marshal method signature has been change from version 2.10.1 to version 3.0.0. Please consult the API documentation about this issue.\";\r\n        }\r\n\r\n\r\n        resultCallback(\"\", \"\");\r\n    },\r\n\r\n    /**\r\n     * \r\n     * utility method to format a given XML string.\r\n     *\r\n     * @param xml\r\n     * @returns {String}\r\n     */\r\n    formatXml: function(xml) {\r\n        let formatted = '';\r\n        let reg = new RegExp(\"(>)(<)(\\/*)\",\"g\");\r\n        xml = xml.replace(reg, '$1\\r\\n$2$3');\r\n        let pad = 0;\r\n        xml.split('\\r\\n').forEach(function(node) {\r\n            let indent = 0;\r\n            if (node.match( new RegExp(\".+<\\/\\w[^>]*>$\") )) {\r\n                indent = 0;\r\n            } else if (node.match( new RegExp(\"^<\\/\\w\") )) {\r\n                if (pad != 0) {\r\n                    pad -= 1;\r\n                }\r\n            } else if (node.match( new RegExp(\"^<\\w[^>]*[^\\/]>.*$\") )) {\r\n                indent = 1;\r\n            } else {\r\n                indent = 0;\r\n            }\r\n\r\n            var padding = '';\r\n            for (var i = 0; i < pad; i++) {\r\n                padding += '  ';\r\n            }\r\n\r\n            formatted += padding + node + '\\r\\n';\r\n            pad += indent;\r\n        });\r\n\r\n        return formatted;\r\n    }\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Read a JSON data and import them into the canvas. The JSON must be generated with the\r\n * {@link draw2d.io.json.Writer}.\r\n *\r\n * @example\r\n *\r\n *     // Load a standard draw2d JSON object into the canvas\r\n *     //\r\n *     let jsonDocument =\r\n *         [\r\n *          {\r\n *             \"type\": \"draw2d.shape.basic.Oval\",\r\n *             \"id\": \"5b4c74 b0-96d1-1aa3-7eca-bbeaed5fffd7\",\r\n *             \"x\": 237,\r\n *             \"y\": 236,\r\n *             \"width\": 93,\r\n *             \"height\": 38\r\n *           },\r\n *           {\r\n *             \"type\": \"draw2d.shape.basic.Rectangle\",\r\n *             \"id\": \"354fa3b9-a834-0221-2009-abc2d6bd852a\",\r\n *             \"x\": 225,\r\n *             \"y\": 97,\r\n *             \"width\": 201,\r\n *             \"height\": 82,\r\n *             \"radius\": 2\r\n *           }\r\n *         ];\r\n *     // unmarshal the JSON document into the canvas\r\n *     // (load)\r\n *     let reader = new draw2d.io.json.Reader();\r\n *     reader.unmarshal(canvas, jsonDocument);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.io.Reader\r\n */\r\ndraw2d.io.json.Reader = draw2d.io.Reader.extend(\r\n  /** @lends draw2d.io.json.Reader.prototype */\r\n  {\r\n    NAME: \"draw2d.io.json.Reader\",\r\n\r\n    init: function () {\r\n      this._super();\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Restore the canvas from a given JSON object.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the canvas to restore\r\n     * @param {Object|String} json the json object to load.\r\n     */\r\n    unmarshal: function (canvas, json) {\r\n      let result = new draw2d.util.ArrayList();\r\n\r\n      if (typeof json === \"string\") {\r\n        json = JSON.parse(json);\r\n      }\r\n\r\n      let node = null;\r\n      json.forEach((element) => {\r\n        try {\r\n          let o = this.createFigureFromElement(element) || this.createFigureFromType(element.type);\r\n          let source = null;\r\n          let target = null;\r\n          for (let i in element) {\r\n            let val = element[i];\r\n            if (i === \"source\") {\r\n              node = canvas.getFigure(val.node);\r\n              if (node === null) {\r\n                throw \"Source figure with id '\" + val.node + \"' not found\";\r\n              }\r\n              source = node.getPort(val.port);\r\n              if (source === null) {\r\n                throw \"Unable to find source port '\" + val.port + \"' at figure '\" + val.node + \"' to unmarschal '\" + element.type + \"'\";\r\n              }\r\n            } else if (i === \"target\") {\r\n              node = canvas.getFigure(val.node);\r\n              if (node === null) {\r\n                throw \"Target figure with id '\" + val.node + \"' not found\";\r\n              }\r\n              target = node.getPort(val.port);\r\n              if (target === null) {\r\n                throw \"Unable to find target port '\" + val.port + \"' at figure '\" + val.node + \"' to unmarschal '\" + element.type + \"'\";\r\n              }\r\n            }\r\n          }\r\n          if (source !== null && target !== null) {\r\n            // don't change the order or the source/target set.\r\n            // TARGET must always be the second one because some applications needs the \"source\"\r\n            // port in the \"connect\" event of the target.\r\n            o.setSource(source)\r\n            o.setTarget(target)\r\n          }\r\n          o.setPersistentAttributes(element)\r\n          canvas.add(o)\r\n          result.add(o)\r\n        } catch (exc) {\r\n          debug.error(element, \"Unable to instantiate figure type '\" + element.type + \"' with id '\" + element.id + \"' during unmarshal by \" + this.NAME + \". Skipping figure..\");\r\n          debug.error(exc)\r\n          debug.warn(element)\r\n        }\r\n      });\r\n\r\n      // restore group assignment\r\n      //\r\n      json.forEach(element => {\r\n        if (typeof element.composite !== \"undefined\") {\r\n          let figure = canvas.getFigure(element.id);\r\n          if (figure === null) {\r\n            figure = canvas.getLine(element.id);\r\n          }\r\n          let group = canvas.getFigure(element.composite);\r\n          group.assignFigure(figure);\r\n        }\r\n      });\r\n\r\n      // recalculate all crossings and repaint the connections with\r\n      // possible crossing decoration\r\n      canvas.calculateConnectionIntersection();\r\n      canvas.getLines().each((i, line) => {\r\n        line.svgPathString = null;\r\n        line.repaint();\r\n      });\r\n      canvas.linesToRepaintAfterDragDrop = canvas.getLines().clone();\r\n\r\n      canvas.showDecoration();\r\n\r\n      return result;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Factory method to create an instance of the given element type.\r\n     *\r\n     * @param {String} type\r\n     * @returns {draw2d.Figure}\r\n     */\r\n    createFigureFromType: function (type) {\r\n      return Function(`return new ${type}()`)()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Factory method to create an instance of the given element.\r\n     *\r\n     * @param {Object} element\r\n     * @returns {draw2d.Figure}\r\n     */\r\n    createFigureFromElement: function createFigureFromElement(element) {\r\n      return null;\r\n    }\r\n  });\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Serialize the canvas document into a JSON object which can be read from the corresponding\r\n * {@link draw2d.io.json.Reader}.\r\n *\r\n *     // Create a JSON writer and convert it into a JSON-String representation.\r\n *     //\r\n *     var writer = new draw2d.io.json.Writer();\r\n *     writer.marshal(canvas, function(json){\r\n *        // convert the json object into string representation\r\n *        var jsonTxt = JSON.stringify(json,null,2);\r\n *     \r\n *        // insert the json string into a DIV for preview or post\r\n *        // it via ajax to the server....\r\n *        $(\"#json\").text(jsonTxt);\r\n *     \r\n *     });\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.io.Writer\r\n */\r\n\r\ndraw2d.io.json.Writer = draw2d.io.Writer.extend(\r\n  /** @lends draw2d.io.json.Writer */\r\n  {\r\n\r\n    init: function () {\r\n      this._super();\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Export the content to the implemented data format. Inherit class implements\r\n     * content specific writer.\r\n     * <br>\r\n     * <br>\r\n     *\r\n     * Method signature has been changed from version 2.10.1 to version 3.0.0.<br>\r\n     * The parameter <b>resultCallback</b> is required and new. The method calls\r\n     * the callback instead of return the result.\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Function} resultCallback the method to call on success. The first argument is the result object, the second the base64 representation of the file content\r\n     * @param {Object} resultCallback.json  the canvas document as JSON object\r\n     * @param {String} resultCallback.base64  the canvas document as base encoded JSON\r\n     */\r\n    marshal: function (canvas, resultCallback) {\r\n      // I change the API signature from version 2.10.1 to 3.0.0. Throw an exception\r\n      // if any application not care about this changes.\r\n      if (typeof resultCallback !== \"function\") {\r\n        throw \"Writer.marshal method signature has been change from version 2.10.1 to version 3.0.0. Please consult the API documentation about this issue.\";\r\n      }\r\n\r\n      var result = [];\r\n\r\n      canvas.getFigures().each( (i, figure)=> {\r\n        result.push(figure.getPersistentAttributes());\r\n      });\r\n\r\n      canvas.getLines().each( (i, element)=> {\r\n        result.push(element.getPersistentAttributes());\r\n      });\r\n\r\n      var base64Content = draw2d.util.Base64.encode(JSON.stringify(result, null, 2));\r\n\r\n      resultCallback(result, base64Content);\r\n    }\r\n  });\r\n","import draw2d from '../../packages'\r\nconst canvg = require('canvg')\r\n\r\n/**\r\n * @class\r\n *\r\n * Converts the canvas document into a PNG Image.\r\n *\r\n * @example\r\n *    // example how to create a PNG image and set an\r\n *    // image src attribute.\r\n *    //\r\n *    let writer = new draw2d.io.png.Writer();\r\n *    writer.marshal(canvas, function(png){\r\n *        $(\"#preview\").attr(\"src\",png);\r\n *    });\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.io.Writer\r\n */\r\ndraw2d.io.png.Writer = draw2d.io.Writer.extend(\r\n  /** @lends draw2d.io.png.Writer */\r\n  {\r\n\r\n    init: function () {\r\n      this._super()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Export the content to a PNG image. The result can be set as <b>src=\"....\"</b> because\r\n     * the result is encoded as data source url <b>data:image/png;base64....</b>\r\n     * <br>\r\n     * <br>\r\n     *\r\n     * Method signature has been changed from version 2.10.1 to version 3.0.0.<br>\r\n     * The parameter <b>resultCallback</b> is required and new. The method calls\r\n     * the callback instead of return the result.\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Function} resultCallback the method to call on success. The first argument is the dataUrl, the second is the base64 formated png image\r\n     * @param {String} resultCallback.img  The image as data source url <b>data:image/png;base64....</b>\r\n     * @param {String} resultCallback.base64  the image encoded in base64\r\n     * @param {draw2d.geo.Rectangle} cropBoundingBox optional cropping/clipping bounding box\r\n     */\r\n    marshal: function (canvas, resultCallback, cropBoundingBox) {\r\n      // I change the API signature from version 2.10.1 to 3.0.0. Throw an exception\r\n      // if any application not care about this changes.\r\n      if (typeof resultCallback !== \"function\") {\r\n        throw \"Writer.marshal method signature has been change from version 2.10.1 to version 3.0.0. Please consult the API documentation about this issue.\";\r\n      }\r\n\r\n      let svg = \"\"\r\n      let canvasState = false\r\n\r\n      // the png.Writer can create Snapshots of a single figure too.\r\n      // Didn't work in IE <10\r\n      // @status beta\r\n      // @since 5.5.0\r\n      if (canvas instanceof draw2d.Figure) {\r\n        let figure = canvas\r\n        let origPos = figure.getPosition()\r\n        figure.setPosition(1, 1)\r\n        svg = \"<svg xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" >\"\r\n          + figure.shape.node.outerHTML\r\n          + \"</svg>\";\r\n        figure.setPosition(origPos);\r\n        figure.initialWidth = figure.getWidth() + 2\r\n        figure.initialHeight = figure.getHeight() + 2\r\n      }\r\n      // create a snapshot of a complete canvas\r\n      //\r\n      else {\r\n        canvasState = {\r\n          zoom: canvas.getZoom(),\r\n          scrollLeft: canvas.getScrollLeft(),\r\n          scrollTop: canvas.getScrollTop(),\r\n        }\r\n        canvas.setZoom(1.0)\r\n        canvas.hideDecoration()\r\n        svg = (new XMLSerializer()).serializeToString(canvas.getHtmlContainer().find(\"svg\")[0]);\r\n      }\r\n\r\n      let canvasDomNode = $('<canvas id=\"canvas_png_export_for_draw2d\"></canvas>')\r\n      $('body').append(canvasDomNode)\r\n      let fullSizeCanvas = $(\"#canvas_png_export_for_draw2d\")[0]\r\n      fullSizeCanvas.width = canvas.initialWidth\r\n      fullSizeCanvas.height = canvas.initialHeight\r\n\r\n      canvg(\"canvas_png_export_for_draw2d\", svg, {\r\n        ignoreMouse: true,\r\n        ignoreAnimation: true,\r\n        renderCallback: function () {\r\n          try {\r\n            if (canvas instanceof draw2d.Canvas) {\r\n              if(canvasState) {\r\n                canvas.setZoom(canvasState.zoom)\r\n                canvas.setScrollLeft(canvasState.scrollLeft)\r\n                canvas.setScrollTop(canvasState.scrollTop)\r\n              }\r\n              canvas.showDecoration();\r\n            }\r\n\r\n            if (typeof cropBoundingBox !== \"undefined\") {\r\n              let sourceX = cropBoundingBox.x\r\n              let sourceY = cropBoundingBox.y\r\n              let sourceWidth = cropBoundingBox.w\r\n              let sourceHeight = cropBoundingBox.h\r\n\r\n              let croppedCanvas = document.createElement('canvas')\r\n              croppedCanvas.width = sourceWidth\r\n              croppedCanvas.height = sourceHeight\r\n\r\n              croppedCanvas.getContext(\"2d\").drawImage(fullSizeCanvas, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, sourceWidth, sourceHeight);\r\n\r\n              let dataUrl = croppedCanvas.toDataURL(\"image/png\")\r\n              let base64Image = dataUrl.replace(\"data:image/png;base64,\", \"\")\r\n              resultCallback(dataUrl, base64Image)\r\n            } else {\r\n              let img = fullSizeCanvas.toDataURL(\"image/png\")\r\n              resultCallback(img, img.replace(\"data:image/png;base64,\", \"\"))\r\n            }\r\n          } finally {\r\n            canvasDomNode.remove()\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Serialize the canvas document into a SVG document.\r\n *\r\n *     // Create a SVG writer and convert the canvas into a SVG document.\r\n *     //\r\n *     var writer = new draw2d.io.svg.Writer();\r\n *     writer.marshal(canvas, function(svg){\r\n *         // insert the svg string into a DIV for preview or post\r\n *         // it via ajax to the server....\r\n *         $(\"#svg\").text(svg);\r\n *     });\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.io.Writer\r\n */\r\ndraw2d.io.svg.Writer = draw2d.io.Writer.extend(\r\n  /** @lends draw2d.io.svg.Writer */\r\n  {\r\n    init: function () {\r\n      this._super()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Export the content of the canvas into SVG. The SVG document can be loaded with Inkscape or any other SVG Editor.\r\n     * <br>\r\n     * <br>\r\n     *\r\n     * Method signature has been changed from version 2.10.1 to version 3.0.0.<br>\r\n     * The parameter <b>resultCallback</b> is required and new. The method calls\r\n     * the callback instead of return the result.\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas the canvas to marshal\r\n     * @param {Function} callback the method to call on success. The first argument is the SVG document\r\n     * @param {String} callback.svg  the SVG document\r\n     * @param {String} callback.base64  the SVG document encoded in base64\r\n     */\r\n    marshal: function (canvas, callback) {\r\n      // I change the API signature from version 2.10.1 to 3.0.0. Throw an exception\r\n      // if any application not care about this changes.\r\n      if (typeof callback !== \"function\") {\r\n        throw \"Writer.marshal method signature has been change from version 2.10.1 to version 3.0.0. Please consult the API documentation about this issue.\";\r\n      }\r\n\r\n      let s = canvas.getPrimarySelection()\r\n      canvas.setCurrentSelection(null)\r\n      let svg = canvas.getHtmlContainer().html()\r\n        .replace(/>\\s+/g, \">\")\r\n        .replace(/\\s+</g, \"<\")\r\n      svg = this.formatXml(svg)\r\n      svg = svg.replace(/<desc>.*<\\/desc>/g, \"<desc>Create with draw2d JS graph library and RaphaelJS</desc>\")\r\n\r\n      canvas.setCurrentSelection(s)\r\n\r\n      let base64Content = draw2d.util.Base64.encode(svg)\r\n      callback(svg, base64Content)\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The CenterEdgeConnectionAnchor's location is found by calculating the intersection of a\r\n * line drawn from the center point of its owner's box (the parent of the\r\n * connection port) to a reference point on that box. A Connection using the\r\n * ChopBoxAnchor will be oriented such that they point to their port owner's\r\n * center.\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.layout.anchor.ConnectionAnchor\r\n */\r\n\r\ndraw2d.layout.anchor.CenterEdgeConnectionAnchor = draw2d.layout.anchor.ConnectionAnchor.extend(\r\n  /** @lends draw2d.layout.anchor.CenterEdgeConnectionAnchor.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.anchor.CenterEdgeConnectionAnchor\",\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.Figure} [owner] the figure to use for the anchor calculation\r\n   */\r\n  init: function (owner) {\r\n    this._super(owner)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the location where the Connection should be anchored in\r\n   * absolute coordinates. The anchor may use the given reference\r\n   * Point to calculate this location.\r\n   *\r\n   * @param {draw2d.geo.Point} ref The reference Point in absolute coordinates\r\n   * @param {draw2d.Connection} [inquiringConnection] the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The anchor's location\r\n   */\r\n  getLocation: function (ref, inquiringConnection) {\r\n    let r = this.getOwner().getParent().getBoundingBox()\r\n\r\n    let dir = r.getDirection(ref)\r\n    let center = r.getCenter()\r\n\r\n    switch (dir) {\r\n      case 0:\r\n        center.y = r.y\r\n        break\r\n      case 1:\r\n        center.x = r.x + r.w\r\n        break\r\n      case 2:\r\n        center.y = r.y + r.h\r\n        break\r\n      case 3:\r\n        center.x = r.x\r\n    }\r\n\r\n    return center\r\n  },\r\n\r\n  /**\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @returns {draw2d.geo.Rectangle} The bounds of this Anchor's owner\r\n   */\r\n  getBox: function () {\r\n    return this.getOwner().getParent().getBoundingBox()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @param {draw2d.Connection} [inquiringConnection] the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The bounds of this Anchor's owner\r\n   */\r\n  getReferencePoint: function (inquiringConnection) {\r\n    return this.getBox().getCenter()\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The ChopboxAnchor's location is found by calculating the intersection of a\r\n * line drawn from the center point of its owner's box (the parent of the\r\n * connection port) to a reference point on that box. A Connection using the\r\n * ChopBoxAnchor will be oriented such that they point to their port owner's\r\n * center.\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.layout.anchor.ConnectionAnchor\r\n */\r\n\r\ndraw2d.layout.anchor.ChopboxConnectionAnchor = draw2d.layout.anchor.ConnectionAnchor.extend(\r\n  /** @lends draw2d.layout.anchor.ChopboxConnectionAnchor.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.anchor.ChopboxConnectionAnchor\",\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.Figure} owner the figure to use for the anchor calculation\r\n   */\r\n  init: function (owner) {\r\n    this._super(owner)\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Returns the location where the Connection should be anchored in\r\n   * absolute coordinates. The anchor may use the given reference\r\n   * Point to calculate this location.\r\n   *\r\n   * @param {draw2d.geo.Point} reference The reference Point in absolute coordinates\r\n   * @param {draw2d.Connection} [inquiringConnection] the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The anchor's location\r\n   */\r\n  getLocation: function (reference, inquiringConnection) {\r\n    let r = new draw2d.geo.Rectangle(0, 0)\r\n    r.setBounds(this.getBox())\r\n    r.translate(-1, -1)\r\n    r.resize(1, 1)\r\n\r\n    let center = r.getCenter()\r\n\r\n    if (r.isEmpty() || (reference.x === center.x && reference.y === center.y)) {\r\n      return center // This avoids divide-by-zero\r\n    }\r\n\r\n    let dx = reference.x - center.x\r\n    let dy = reference.y - center.y\r\n\r\n    // r.width, r.height, dx, and dy are guaranteed to be non-zero.\r\n    let scale = 0.5 / Math.max(Math.abs(dx) / r.w, Math.abs(dy) / r.h)\r\n\r\n    dx *= scale\r\n    dy *= scale\r\n    center.translate(dx, dy)\r\n\r\n    return center\r\n  },\r\n\r\n  /**\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @returns {draw2d.geo.Rectangle} The bounds of this Anchor's owner\r\n   */\r\n  getBox: function () {\r\n    return this.getOwner().getParent().getBoundingBox()\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * Returns the reference point for this anchor in absolute coordinates. This might be used\r\n   * by another anchor to determine its own location.\r\n   *\r\n   * @param {draw2d.Connection} [inquiringConnection] the connection who ask for the location.\r\n   * @returns {draw2d.geo.Point} The bounds of this Anchor's owner\r\n   */\r\n  getReferencePoint: function (inquiringConnection) {\r\n    return this.getBox().getCenter()\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *  An object to which a {@link draw2d.Connection} will be anchored.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n */\r\n\r\ndraw2d.layout.anchor.ConnectionAnchor = Class.extend(\r\n  /** @lends draw2d.layout.anchor.ConnectionAnchor.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.anchor.ConnectionAnchor\",\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.Figure} owner the figure to use for the anchor calculation\r\n   */\r\n  init: function (owner) {\r\n    this.owner = owner\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the location where the Connection should be anchored in absolute coordinates.\r\n   * The anchor may use the given reference Point to calculate this location.\r\n   *\r\n   * @param {draw2d.geo.Point} reference the opposite reference point\r\n   * @param {draw2d.Connection} inquiringConnection the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point}\r\n   */\r\n  getLocation: function (reference, inquiringConnection) {\r\n    // return the center of the owner/port.\r\n    return this.getReferencePoint(inquiringConnection)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the Figure that contains this ConnectionAnchor.\r\n   *\r\n   * @returns {draw2d.Figure} The Figure that contains this ConnectionAnchor\r\n   */\r\n  getOwner: function () {\r\n    return this.owner\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the owner of the Anchor.\r\n   *\r\n   * @param {draw2d.Figure} owner the new owner of the anchor locator\r\n   */\r\n  setOwner: function (owner) {\r\n    if (typeof owner === \"undefined\") {\r\n      throw \"Missing parameter for 'owner' in ConnectionAnchor.setOwner\"\r\n    }\r\n    this.owner = owner\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the bounds of this Anchor's owner.  Subclasses can override this method\r\n   * to adjust the box. Maybe you return the box of the port parent (the parent figure)\r\n   *\r\n   * @returns {draw2d.geo.Rectangle} The bounds of this Anchor's owner\r\n   */\r\n  getBox: function () {\r\n    return this.getOwner().getAbsoluteBounds()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the reference point for this anchor in absolute coordinates. This might be used\r\n   * by another anchor to determine its own location.\r\n   *\r\n   * @param {draw2d.Connection} [inquiringConnection] the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The reference Point\r\n   */\r\n  getReferencePoint: function (inquiringConnection) {\r\n    return this.getOwner().getAbsolutePosition()\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The FanConnectionAnchor's location is found by calculating the intersection of a\r\n * line drawn from the center point of its owner's box (the parent of the\r\n * connection port) to a reference point on that box.\r\n * Additional the anchor resolves conflicts by spread the anchor if more than one\r\n * connection has the same reference point. <br>\r\n * In a case of a DirectRouter parallel connections are the result.\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @since 4.6.0\r\n * @extends draw2d.layout.anchor.ConnectionAnchor\r\n */\r\n\r\ndraw2d.layout.anchor.FanConnectionAnchor = draw2d.layout.anchor.ConnectionAnchor.extend(\r\n  /** @lends draw2d.layout.anchor.FanConnectionAnchor.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.anchor.FanConnectionAnchor\",\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.Figure} owner the figure to use for the anchor calculation\r\n   * @param {Number} [separation] the separation or fan distance between the concurrent/conflicting anchors\r\n   */\r\n  init: function (owner, separation) {\r\n    this._super(owner)\r\n\r\n    if (separation) {\r\n      this.separation = parseInt(separation)\r\n    }\r\n    else {\r\n      this.separation = 10\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the location where the Connection should be anchored in\r\n   * absolute coordinates. The anchor may use the given reference\r\n   * Point to calculate this location.\r\n   *\r\n   * @param {draw2d.geo.Point} reference The reference Point in absolute coordinates\r\n   * @param {draw2d.Connection} inquiringConnection the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The anchor's location\r\n   */\r\n  getLocation: function (reference, inquiringConnection) {\r\n\r\n    let r = new draw2d.geo.Rectangle(0, 0)\r\n    r.setBounds(this.getBox())\r\n    r.translate(-1, -1)\r\n    r.resize(1, 1)\r\n\r\n    let center = r.getCenter()\r\n\r\n    if (r.isEmpty() || (reference.x === center.x && reference.y === center.y)) {\r\n      return center // This avoids divide-by-zero\r\n    }\r\n\r\n    // translate the center if required\r\n    //\r\n    let s = inquiringConnection.getSource()\r\n    let t = inquiringConnection.getTarget()\r\n    let lines = this.getOwner().getConnections().clone()\r\n    lines.grep(function (other) {\r\n      return (other.getTarget() === t && other.getSource() === s) || (other.getTarget() === s && other.getSource() === t)\r\n    })\r\n    let index = lines.indexOf(inquiringConnection) + 1\r\n    let position = center.getPosition(reference)\r\n    let ray\r\n    if (position === draw2d.geo.PositionConstants.SOUTH || position === draw2d.geo.PositionConstants.EAST) {\r\n      ray = new draw2d.geo.Point(reference.x - center.x, reference.y - center.y)\r\n    }\r\n    else {\r\n      ray = new draw2d.geo.Point(center.x - reference.x, center.y - reference.y)\r\n    }\r\n    let length = Math.sqrt(ray.x * ray.x + ray.y * ray.y)\r\n    if (index <= 2) {\r\n      length *= 1.5\r\n    }\r\n    let xSeparation = this.separation * ray.x / length\r\n    let ySeparation = this.separation * ray.y / length\r\n    if (index % 2 === 0) {\r\n      center = new draw2d.geo.Point(center.x + (index / 2) * (-1 * ySeparation), center.y + (index / 2) * xSeparation)\r\n    }\r\n    else {\r\n      center = new draw2d.geo.Point(center.x + (index / 2) * ySeparation, center.y + (index / 2) * (-1 * xSeparation))\r\n    }\r\n\r\n    let intersections = this.getBox().intersectionWithLine(center, reference)\r\n    // perfect - one intersection mean that the shifted center point is inside the bounding box and has only one intersection with it.\r\n    //\r\n    switch (intersections.getSize()) {\r\n      case 0:\r\n        // calculate the edge of the bounding box which is nearest to the reference point\r\n        //\r\n        let v = this.getBox().getVertices()\r\n        let first = v.first()\r\n        first.distance = reference.distance(first)\r\n        return v.asArray().reduce(function (previous, current) {\r\n          current.distance = reference.distance(current)\r\n          return current.distance < previous.distance ? current : previous\r\n        })\r\n      case 1:\r\n        return intersections.get(0)\r\n      case 2:\r\n        // get the nearest of these points\r\n        let p0 = intersections.get(0)\r\n        let p1 = intersections.get(1)\r\n        let p0diff = reference.distance(p0)\r\n        let p1diff = reference.distance(p1)\r\n        if (p0diff < p1diff) {\r\n          return p0\r\n        }\r\n        return p1\r\n    }\r\n\r\n    // we have 0 or 2 intersections with the bounding box. This means the shifted\r\n    // calculate the intersection if the new \"center\" with the bounding box of the\r\n    // shape (if any exists)\r\n\r\n  },\r\n\r\n  /**\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @returns {draw2d.geo.Rectangle} The bounds of this Anchor's owner\r\n   */\r\n  getBox: function () {\r\n    return this.getOwner().getParent().getBoundingBox()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the reference point for this anchor in absolute coordinates. This might be used\r\n   * by another anchor to determine its own location.\r\n   *\r\n   * @param {draw2d.Connection} inquiringConnection the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The bounds of this Anchor's owner\r\n   */\r\n  getReferencePoint: function (inquiringConnection) {\r\n    return this.getBox().getCenter()\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The ChopboxAnchor's location is found by calculating the intersection of a\r\n * line drawn from the center point of its owner's box (the parent of the\r\n * connection port) to a reference point on that box. A Connection using the\r\n * ChopBoxAnchor will be oriented such that they point to their port owner's\r\n * center.\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.layout.anchor.ConnectionAnchor\r\n */\r\n\r\ndraw2d.layout.anchor.ShortesPathConnectionAnchor = draw2d.layout.anchor.ConnectionAnchor.extend(\r\n  /** @lends draw2d.layout.anchor.ShortesPathConnectionAnchor.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.anchor.ShortesPathConnectionAnchor\",\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.Figure} [owner] the figure to use for the anchor calculation\r\n   */\r\n  init: function (owner) {\r\n    this._super(owner)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the location where the Connection should be anchored in\r\n   * absolute coordinates. The anchor may use the given reference\r\n   * Point to calculate this location.\r\n   *\r\n   * @param {draw2d.geo.Point} ref The reference Point in absolute coordinates\r\n   * @param {draw2d.Connection} inquiringConnection the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The anchor's location\r\n   */\r\n  getLocation: function (ref, inquiringConnection) {\r\n    let r = this.getOwner().getParent().getBoundingBox()\r\n    let center = r.getCenter()\r\n\r\n    // check if we can calculate with a circle/line intersection\r\n    //\r\n    if (this.getOwner().getParent() instanceof draw2d.shape.basic.Oval) {\r\n      let result = this.getOwner().getParent().intersectionWithLine(ref, center)\r\n      if (result.getSize() === 1) {\r\n        return result.get(0)\r\n      }\r\n    }\r\n\r\n    /*    0 | 1 | 2\r\n     *    __|___|__\r\n     *    7 | 8 | 3\r\n     *    __|___|__\r\n     *    6 | 5 | 4\r\n     */\r\n    let octant = r.determineOctant(new draw2d.geo.Rectangle(ref.x, ref.y, 2, 2))\r\n\r\n    switch (octant) {\r\n      case 0:\r\n        return r.getTopLeft()\r\n      case 1:\r\n        return new draw2d.geo.Point(ref.x, r.getTop())\r\n      case 2:\r\n        return r.getTopRight()\r\n      case 3:\r\n        return new draw2d.geo.Point(r.getRight(), ref.y)\r\n      case 4:\r\n        return r.getBottomRight()\r\n      case 5:\r\n        return new draw2d.geo.Point(ref.x, r.getBottom())\r\n      case 6:\r\n        return r.getBottomLeft()\r\n      case 7:\r\n        return new draw2d.geo.Point(r.getLeft(), ref.y)\r\n    }\r\n\r\n    return r.getTopLeft()\r\n  },\r\n\r\n  /**\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @returns {draw2d.geo.Rectangle} The bounds of this Anchor's owner\r\n   */\r\n  getBox: function () {\r\n    return this.getOwner().getParent().getBoundingBox()\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * Returns the bounds of this Anchor's owner. Subclasses can\r\n   * override this method to adjust the box. Maybe you return the box\r\n   * of the port parent (the parent figure)\r\n   *\r\n   * @param {draw2d.Connection} inquiringConnection the connection who ask for the location.\r\n   *\r\n   * @returns {draw2d.geo.Point} The bounds of this Anchor's owner\r\n   */\r\n  getReferencePoint: function (inquiringConnection) {\r\n    return this.getBox().getCenter()\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Provides a {@link draw2d.Connection} with an orthogonal route between the Connection's source\r\n * and target anchors.\r\n * <br>\r\n * Additional a <b>bridge</b> is added to each connection which didn't have a common source or target\r\n * port.<br>\r\n * A <b>dot</b> is added at the crossing if the two connections have a common spurce or target port.\r\n *\r\n * <br>\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.CircuitConnectionRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let f1 = new draw2d.shape.analog.OpAmp({x:10, y:10});\r\n *    let f2 = new draw2d.shape.analog.ResistorVertical({angle:90, height:20, x:300, y:150});\r\n *    let f3 = new draw2d.shape.analog.ResistorVertical({x:250, y:70});\r\n *    let f4 = new draw2d.shape.analog.ResistorVertical({x:10, y:90});\r\n *\r\n *    // ...add it to the canvas\r\n *    //\r\n *    canvas.add( f1);\r\n *    canvas.add( f2);\r\n *    canvas.add( f3);\r\n *    canvas.add( f4);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(f1.getOutputPort(0));\r\n *    c.setTarget(f2.getHybridPort(0));\r\n *    canvas.add(c);\r\n *\r\n *    // second Connection between the other resistors\r\n *    //\r\n *    c = createConnection();\r\n *    c.setSource(f3.getHybridPort(1));\r\n *    c.setTarget(f4.getHybridPort(0));\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ManhattanConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.CircuitConnectionRouter = draw2d.layout.connection.ManhattanConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.CircuitConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.CircuitConnectionRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n    this.setBridgeRadius(4)\r\n    this.setVertexRadius(2)\r\n\r\n    // experimental\r\n    this.abortRoutingOnFirstVertexNode = false\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been removed from the connection. In the case of the CircuitRouter\r\n   * all vertex nodes will be removed from the canvas.\r\n   *\r\n   * @param {draw2d.Connection} connection The related connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onUninstall: function (connection) {\r\n    if (typeof connection.vertexNodes !== \"undefined\" && connection.vertexNodes !== null) {\r\n      connection.vertexNodes.remove()\r\n      connection.vertexNodes = null\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the radius of the vertex circle.\r\n   *\r\n   * @param {Number} radius\r\n   */\r\n  setVertexRadius: function (radius) {\r\n    this.vertexRadius = radius\r\n\r\n    return this\r\n  },\r\n  /** deprecated\r\n   * @private\r\n   * **/\r\n  setJunctionRadius: function (radius) {\r\n    this.vertexRadius = radius\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the radius or span of the bridge. A bridge will be drawn if two connections are crossing and didn't have any\r\n   * common port.\r\n   *\r\n   * @param {Number} radius\r\n   */\r\n  setBridgeRadius: function (radius) {\r\n    this.bridgeRadius = radius\r\n    this.bridge_LR = [\" r\", 0.5, -0.5, radius - (radius / 2), -(radius - radius / 4), radius, -radius, radius + (radius / 2), -(radius - radius / 4), radius * 2, \"0 \"].join(\" \")\r\n    this.bridge_RL = [\" r\", -0.5, -0.5, -(radius - (radius / 2)), -(radius - radius / 4), -radius, -radius, -(radius + (radius / 2)), -(radius - radius / 4), -radius * 2, \"0 \"].join(\" \")\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let fromPt = conn.getStartPoint()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPoint()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // calculate the lines between the two points with the standard ManhattanRouter.\r\n    //\r\n    this._route(conn, toPt, toDir, fromPt, fromDir)\r\n\r\n    // get the intersections to the other connections\r\n    //\r\n    let intersectionsASC = conn.getCanvas().getIntersection(conn).sort(\"x\")\r\n    let intersectionsDESC = intersectionsASC.clone().reverse()\r\n\r\n    let intersectionForCalc = intersectionsASC\r\n\r\n    // add a ArrayList of all added vertex nodes to the connection\r\n    //\r\n    if (typeof conn.vertexNodes !== \"undefined\" && conn.vertexNodes !== null) {\r\n      conn.vertexNodes.remove()\r\n    }\r\n    conn.vertexNodes = conn.canvas.paper.set()\r\n\r\n    // ATTENTION: we cast all x/y coordinates to integer and add 0.5 to avoid subpixel rendering of\r\n    //            the connection. The 1px or 2px lines look much clearer than before.\r\n    //\r\n    let ps = conn.getVertices()\r\n    let p = ps.get(0)\r\n    let path = [\"M\", (p.x | 0) + 0.5, \" \", (p.y | 0) + 0.5]\r\n\r\n    let oldP = p\r\n    let bridgeWidth = null\r\n    let bridgeCode = null\r\n\r\n    let lastVertexNode = null\r\n\r\n    for (let i = 1; i < ps.getSize(); i++) {\r\n      p = ps.get(i)\r\n\r\n      // line goes from right->left.\r\n      if (oldP.x > p.x) {\r\n        intersectionForCalc = intersectionsDESC\r\n        bridgeCode = this.bridge_RL\r\n        bridgeWidth = -this.bridgeRadius\r\n      }\r\n      // line goes from left->right\r\n      else {\r\n        intersectionForCalc = intersectionsASC\r\n        bridgeCode = this.bridge_LR\r\n        bridgeWidth = this.bridgeRadius\r\n      }\r\n\r\n      // add a bridge or a vertex node depending to the intersection connection\r\n      //\r\n      // bridge   => the connections didn't have a common port\r\n      // vertex => the connections did have a common source or target port\r\n      //\r\n      intersectionForCalc.each((ii, interP) => {\r\n        if (draw2d.shape.basic.Line.hit(1, oldP.x, oldP.y, p.x, p.y, interP.x, interP.y) === true) {\r\n\r\n          // It is a vertex node..\r\n          //\r\n          if (conn.sharingPorts(interP.other)) {\r\n            let other = interP.other\r\n            let otherZ = other.getZOrder()\r\n            let connZ = conn.getZOrder()\r\n            if (connZ < otherZ) {\r\n              let vertexNode = conn.canvas.paper.ellipse(interP.x, interP.y, this.vertexRadius, this.vertexRadius).attr({fill: conn.lineColor.rgba()})\r\n              conn.vertexNodes.push(vertexNode)\r\n              // we found a vertex node. In this case an already existing connection did draw the connection.\r\n              //\r\n              if (this.abortRoutingOnFirstVertexNode === true) {\r\n                if (conn.getSource() === other.getSource() || conn.getSource() === other.getTarget()) {\r\n                  path = [\"M\", (interP.x | 0) + 0.5, \" \", (interP.y | 0) + 0.5]\r\n                  if (lastVertexNode !== null) {\r\n                    lastVertexNode.remove()\r\n                    conn.vertexNodes.exclude(lastVertexNode)\r\n                  }\r\n                }\r\n                lastVertexNode = vertexNode\r\n              }\r\n            }\r\n          }\r\n          // ..or a bridge. We draw only horizontal bridges. Just a design decision\r\n          //\r\n          else if (p.y === interP.y) {\r\n            path.push(\" L\", ((interP.x - bridgeWidth) | 0) + 0.5, \" \", (interP.y | 0) + 0.5)\r\n            path.push(bridgeCode)\r\n          }\r\n        }\r\n      })\r\n\r\n      path.push(\" L\", (p.x | 0) + 0.5, \" \", (p.y | 0) + 0.5)\r\n      oldP = p\r\n    }\r\n    conn.svgPathString = path.join(\"\")\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Routes a {@link draw2d.Connection}, possibly using a constraint.\r\n *\r\n * @author Andreas Herz\r\n */\r\n\r\ndraw2d.layout.connection.ConnectionRouter = Class.extend(\r\n  /** @lends draw2d.layout.connection.ConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.ConnectionRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function () {\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Routes the Connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The Connection to route\r\n   * @param {Object} [routingHints] some helper attributes for the router\r\n   * @param {Boolean} [routingHints.startMoved] is true if just the start location has moved\r\n   * @param {Boolean} [routingHints.endMoved] is true if the destination location has changed\r\n   * @param {draw2d.util.ArrayList} [routingHints.oldVertices] the vertices before the reroute has been triggered\r\n   *\r\n   * @template\r\n   */\r\n  route: function (connection, routingHints) {\r\n    throw \"subclasses must implement the method [ConnectionRouter.route]\"\r\n  },\r\n\r\n  _paint: function (conn) {\r\n    // calculate the path string for the SVG rendering\r\n    // Important: to avoid subpixel error rendering we add 0.5 to each coordinate\r\n    //            With this offset the canvas can paint the line on a \"full pixel\" instead\r\n    //            of subpixel rendering.\r\n//    let adjust = val => (val| 0) +0.5\r\n    let adjust = val => val.toFixed(2)\r\n\r\n    let ps = conn.getVertices()\r\n    let p = ps.get(0)\r\n    let radius = conn.getRadius()\r\n    let path = [\"M\", adjust(p.x), \" \", adjust(p.y)]\r\n    let i = 1\r\n    let length, inset, p2\r\n    if (radius > 0) {\r\n      let lastP = p\r\n      length = (ps.getSize() - 1)\r\n      for (; i < length; i++) {\r\n        p = ps.get(i)\r\n        inset = draw2d.geo.Util.insetPoint(p, lastP, radius)\r\n        path.push(\"L\", adjust(inset.x), \",\", adjust(inset.y))\r\n\r\n        p2 = ps.get(i + 1)\r\n        inset = draw2d.geo.Util.insetPoint(p, p2, radius)\r\n\r\n        path.push(\"Q\", p.x, \",\", p.y, \" \", adjust(inset.x), \", \", adjust(inset.y))\r\n        lastP = p\r\n      }\r\n      p = ps.get(i)\r\n      path.push(\"L\", adjust(p.x), \",\", adjust(p.y))\r\n    }\r\n    else {\r\n      length = ps.getSize()\r\n      for (; i < length; i++) {\r\n        p = ps.get(i)\r\n        path.push(\"L\", adjust(p.x), \",\", adjust(p.y))\r\n      }\r\n    }\r\n    conn.svgPathString = path.join(\"\")\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been removed from the connection.\r\n   *\r\n   * @param {draw2d.shape.basic.PolyLine} connection The related connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onUninstall: function (connection) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback method for the PolyLine or Connection to check if it possible to remove a vertex from\r\n   * the list. The router can send an veto for this.\r\n   * Per default it is not possible to remove any vertex from the PolyLine exceptional if any interactive\r\n   * router is installed.\r\n   *\r\n   * @param {Number} index\r\n   * @since 4.2.3\r\n   */\r\n  canRemoveVertexAt: function (index) {\r\n    return false\r\n  },\r\n\r\n  /**\r\n   * Callback method for the PolyLine or Connection to verify that a segment is deletable.\r\n   *\r\n   * @param {Number} index\r\n   * @returns {Boolean}\r\n   * @since 4.2.3\r\n   */\r\n  canRemoveSegmentAt: function (index) {\r\n    return false\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Tweak or enrich the polyline persistence data with routing information\r\n   *\r\n   * @since 2.10.0\r\n   * @param {draw2d.shape.basic.PolyLine} line\r\n   * @param {Object} memento The memento data of the polyline\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function (line, memento) {\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   *\r\n   * set the attributes for the polyline with routing information\r\n   *\r\n   * @since 2.10.0\r\n   * @param {draw2d.shape.basic.Line} line\r\n   * @param {Object} memento the JSON data to read\r\n   */\r\n  setPersistentAttributes: function (line, memento) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * The draw2d.Connection delegates the drag operation to the router. The router can\r\n   * handle the different constraints of the connection.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} line\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   */\r\n  onDrag: function (line, dx, dy, dx2, dy2) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called by the connection if the vertices set outside.\r\n   * This enforce the router to avoid full autoroute. E.g. InteractiveManhattanRouter\r\n   *\r\n   * @protected\r\n   * @param {draw2d.shape.basic.Line} line\r\n   */\r\n  verticesSet: function (line) {\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Router for direct connections between two ports. Beeline\r\n * <br>\r\n * <br>\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.DirectRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.DirectRouter = draw2d.layout.connection.ConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.DirectRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.DirectRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Invalidates the given Connection\r\n   */\r\n  invalidate: function () {\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (connection, routingHints) {\r\n    let start = connection.getStartPosition()\r\n    let end = connection.getEndPosition()\r\n\r\n    // required for hit tests\r\n    //\r\n    connection.addPoint(start)\r\n    connection.addPoint(end)\r\n\r\n    // calculate the path\r\n    let path = [\"M\", start.x, \" \", start.y]\r\n    path.push(\"L\", end.x, \" \", end.y)\r\n\r\n    connection.svgPathString = path.join(\"\")\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Automatic router that spreads its  {@link draw2d.Connection Connections} in a fan-like fashion upon collision.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       // return my special kind of connection\r\n *       let con = new draw2d.Connection({\r\n *         radius: 14,\r\n *         router: new draw2d.layout.connection.FanConnectionRouter()\r\n *       });\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *    // second Connection\r\n *    //\r\n *    c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *    // third Connection\r\n *    //\r\n *    c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.layout.connection.DirectRouter\r\n */\r\n\r\ndraw2d.layout.connection.FanConnectionRouter = draw2d.layout.connection.DirectRouter.extend(\r\n  /** @lends draw2d.layout.connection.FanConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.FanConnectionRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Layout the hands over connection in a manhattan like layout\r\n   *\r\n   * @param {draw2d.Connection}  conn\r\n   * @param {draw2d.util.ArrayList} oldVertices old/existing vertices of the Connection\r\n   * @param {Object} routingHints some helper attributes for the router\r\n   * @param {Boolean} routingHints.startMoved is true if just the start location has moved\r\n   * @param {Boolean} routingHints.destMoved is true if the destination location has changed\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let lines = conn.getSource().getConnections().clone()\r\n    lines.grep( other => other.getTarget() === conn.getTarget() || other.getSource() === conn.getTarget())\r\n\r\n    if (lines.getSize() > 1) {\r\n      this.routeCollision(conn, lines.indexOf(conn))\r\n    }\r\n    else {\r\n      this._super(conn, routingHints)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * route the connection if connections overlap. Two connections overlap if the combination\r\n   * of source and target anchors are equal.\r\n   *\r\n   * @param {draw2d.Connection} conn\r\n   * @param {Number} index\r\n   */\r\n  routeCollision: function (conn, index) {\r\n    index = index + 1\r\n    let start = conn.getStartPoint()\r\n    let end = conn.getEndPoint()\r\n\r\n    let separation = 15\r\n\r\n    let midPoint = new draw2d.geo.Point((end.x + start.x) / 2, (end.y + start.y) / 2)\r\n    let position = end.getPosition(start)\r\n    let ray\r\n    if (position === draw2d.geo.PositionConstants.SOUTH || position === draw2d.geo.PositionConstants.EAST) {\r\n      ray = new draw2d.geo.Point(end.x - start.x, end.y - start.y)\r\n    }\r\n    else {\r\n      ray = new draw2d.geo.Point(start.x - end.x, start.y - end.y)\r\n    }\r\n\r\n    let length = Math.sqrt(ray.x * ray.x + ray.y * ray.y)\r\n\r\n    let xSeparation = separation * ray.x / length\r\n    let ySeparation = separation * ray.y / length\r\n\r\n    let bendPoint\r\n\r\n    if (index % 2 === 0) {\r\n      bendPoint = new draw2d.geo.Point(midPoint.x + (index / 2) * (-1 * ySeparation), midPoint.y + (index / 2) * xSeparation)\r\n    }\r\n    else {\r\n      bendPoint = new draw2d.geo.Point(midPoint.x + (index / 2) * ySeparation, midPoint.y + (index / 2) * (-1 * xSeparation))\r\n    }\r\n\r\n    // required for hit tests\r\n    conn.addPoint(start)\r\n    conn.addPoint(bendPoint)\r\n    conn.addPoint(end)\r\n\r\n    // calculate the path string for the SVG rendering\r\n    //\r\n    this._paint(conn)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * Route the connection in an Manhattan style and add resize handles to all vertex for interactive alignment of the\r\n * routing.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       // return my special kind of connection\r\n *       let con = new draw2d.Connection({\r\n *         radius: 4,\r\n *         router: new draw2d.layout.connection.InteractiveManhattanConnectionRouter()\r\n *       });\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *    // select the connection to show the selection handles\r\n *    //\r\n *    c.select();\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @since 4.0.2\r\n * @extends  draw2d.layout.connection.ManhattanConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.InteractiveManhattanConnectionRouter = draw2d.layout.connection.ManhattanConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.InteractiveManhattanConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.InteractiveManhattanConnectionRouter\",\r\n\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n  onInstall: function (conn) {\r\n    conn.installEditPolicy(new draw2d.policy.line.OrthogonalSelectionFeedbackPolicy())\r\n    conn._routingMetaData ??= { routedByUserInteraction: false,fromDir: -1,toDir: -1}\r\n  },\r\n\r\n  onUninstall: function (conn) {\r\n    delete conn._routingMetaData\r\n  },\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    if (!routingHints.oldVertices) {\r\n      debugger\r\n    }\r\n    if (routingHints.oldVertices.getSize() === 0 || conn._routingMetaData.routedByUserInteraction === false) {\r\n      this._super(conn, routingHints)\r\n      conn._routingMetaData.fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n      conn._routingMetaData.toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n    }\r\n    else {\r\n      this.halfRoute(conn, routingHints)\r\n      this._paint(conn)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * The routing algorithm if the user has changed at least on of the vertices manually.\r\n   * This kind of routing just align the start and end vertices to the new source/target port\r\n   * location.\r\n   * The vertices between keep untouched. Modification of this vertices are done by the\r\n   * draw2d.policy.line.OrthogonalSelectionFeedbackPolicy\r\n   *\r\n   * @param {draw2d.Connection} conn the connection to route\r\n   * @param {Object} routingHints some helper attributes for the router\r\n   * @param {Boolean} routingHints.startMoved is true if just the start location has moved\r\n   * @param {Boolean} routingHints.endMoved is true if the destination location has changed\r\n   */\r\n  halfRoute: function (conn, routingHints) {\r\n    let MINDIST = this.MINDIST\r\n    let max = Math.max\r\n    let min = Math.min\r\n\r\n    routingHints ??= {oldVertices: new draw2d.util.ArrayList()}\r\n    let oldVertices = routingHints.oldVertices\r\n    let vertexCount = oldVertices.getSize()\r\n\r\n    let fromPt = conn.getStartPosition()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPosition()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // the port orientation has been changed. This can happen if the node rotates. In this case\r\n    // we must recalculate the routing.\r\n    if (conn._routingMetaData.fromDir !== fromDir || conn._routingMetaData.toDir !== toDir) {\r\n      conn._routingMetaData.routedByUserInteraction = false\r\n      this.route(conn, routingHints)\r\n    }\r\n\r\n    // TODO: detection for switch back to autoroute isn't good enough.\r\n    //       Add more logic. e.g. if the fromDir!==1. This happens if\r\n    //       The ports are at bottom and top.\r\n    //       The code below covers only the classic workflow configuration left->right\r\n    //\r\n    //  go back to the default if no routing is possible anymore\r\n    //\r\n    if ((fromDir === draw2d.geo.Rectangle.DIRECTION_RIGHT) && (toDir === draw2d.geo.Rectangle.DIRECTION_LEFT)\r\n      && (fromPt.x > toPt.x) && (vertexCount <= 4)) {\r\n\r\n      conn._routingMetaData.routedByUserInteraction = false\r\n      this.route(conn, routingHints)\r\n    }\r\n    // it makes no sense to have just 2 vertices and manual routing for Manhattan-style routing\r\n    else if(conn.getVertices().getSize() ===2 && conn._routingMetaData.routedByUserInteraction === true){\r\n      conn._routingMetaData.routedByUserInteraction = false\r\n      this.route(conn, routingHints)\r\n    }\r\n\r\n    // transfer the old vertices into the connection\r\n    //\r\n    oldVertices.each( (i, vertex) =>{\r\n      conn.addPoint(vertex)\r\n    })\r\n\r\n\r\n    // all points are adjusted with the drag&drop operation. There is no need to move\r\n    // start/end points twice\r\n    if (conn.isInDragDrop) {\r\n      return\r\n    }\r\n\r\n    // The SOURCE port (labeled with p0) has been moved/changed.\r\n    //\r\n    if (routingHints.startMoved || !fromPt.equals(oldVertices.get(0))) {\r\n      let p1 = oldVertices.get(1)\r\n      let p2 = oldVertices.get(2) // optional. Happens if the connection has just 2 points\r\n      conn.setVertex(0, fromPt)\r\n      switch (fromDir) {\r\n        //          .\r\n        //   p0     . p1\r\n        //   x------+\r\n        //          .\r\n        //          .\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n          conn.setVertex(1, max(fromPt.x + MINDIST, p1.x), fromPt.y)// p1\r\n          if(p2)\r\n            conn.setVertex(2, max(fromPt.x + MINDIST, p1.x), p2.y)    // p2\r\n          break\r\n        //   .\r\n        //   . p1     p0\r\n        //   +------x\r\n        //   .\r\n        //   .\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n          conn.setVertex(1, min(fromPt.x - MINDIST, p1.x), fromPt.y)// p1\r\n          if(p2)\r\n            conn.setVertex(2, min(fromPt.x - MINDIST, p1.x), p2.y)    // p2\r\n          break\r\n        //     ...+....\r\n        //     p1 |\r\n        //        |\r\n        //        |\r\n        //     p0 x\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_UP:\r\n          conn.setVertex(1, fromPt.x, min(fromPt.y - MINDIST, p1.y)) // p1\r\n          if(p2)\r\n            conn.setVertex(2, p2.x, min(fromPt.y - MINDIST, p1.y)) // p2\r\n          break\r\n        //        x\r\n        //     p0 |\r\n        //        |\r\n        //     p1 |\r\n        //    ....+....\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n          conn.setVertex(1, fromPt.x, max(fromPt.y + MINDIST, p1.y)) // p1\r\n          if(p2)\r\n            conn.setVertex(2, p2.x, max(fromPt.y + MINDIST, p1.y))     // p2\r\n          break\r\n      }\r\n    }\r\n    //////////////////////////////////////////////////////////////////\r\n    // the TARGET port (labeled with p0) has moved\r\n    //\r\n    if (routingHints.endMoved || !toPt.equals(oldVertices.get(vertexCount - 1))) {\r\n      let p1 = oldVertices.get(vertexCount - 2)\r\n      let p2 = oldVertices.get(vertexCount - 3) // optional\r\n      conn.setVertex(vertexCount - 1, toPt)                        // p0\r\n\r\n      switch (toDir) {\r\n        //               .\r\n        //      p0       . p1\r\n        //    x----------+\r\n        //               .\r\n        //               .\r\n        case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n          conn.setVertex(vertexCount - 2, max(toPt.x + MINDIST, p1.x), toPt.y)  // p1\r\n          if(p2)\r\n            conn.setVertex(vertexCount - 3, max(toPt.x + MINDIST, p1.x), p2.y)    // p2\r\n          break\r\n\r\n        //    .\r\n        //    .\r\n        //    . p1         p0\r\n        //    +----------x\r\n        //    .\r\n        //    .\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n          conn.setVertex(vertexCount - 2, min(toPt.x - MINDIST, p1.x), toPt.y)  // p1\r\n          if(p2)\r\n            conn.setVertex(vertexCount - 3, min(toPt.x - MINDIST, p1.x), p2.y)    // p2\r\n          break\r\n\r\n        //     ...+....\r\n        //     p1 |\r\n        //        |\r\n        //        |\r\n        //     p0 x\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_UP:\r\n          conn.setVertex(vertexCount - 2, toPt.x, min(toPt.y - MINDIST, p1.y))  // p1\r\n          if(p2)\r\n            conn.setVertex(vertexCount - 3, p2.x, min(toPt.y - MINDIST, p1.y))  // p2\r\n          break\r\n\r\n        //        +\r\n        //     p0 |\r\n        //        |\r\n        //     p1 |\r\n        //     ...+...\r\n        //\r\n        case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n          conn.setVertex(vertexCount - 2, toPt.x, max(toPt.y + MINDIST, p1.y))  // p1\r\n          if(p2)\r\n            conn.setVertex(vertexCount - 3, p2.x, max(toPt.y + MINDIST, p1.y))  // p2\r\n          break\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Callback method for the PolyLine or Connection to verify that a segment is deletable.\r\n   * @param {draw2d.Connection} conn\r\n   * @param {Number} index\r\n   *\r\n   * @returns {Boolean}\r\n   * @since 4.2.3\r\n   */\r\n  canRemoveSegmentAt: function (conn, index) {\r\n\r\n    let segmentCount = conn.getVertices().getSize() - 1 // segmentCount is one less than vertex count\r\n\r\n    // The first and last segment isn't deletable\r\n    //\r\n    if ((index <= 0) || ((index + 1) >= segmentCount)) {\r\n      return false\r\n    }\r\n\r\n    // a connection need at least three strokes\r\n    //\r\n    if (segmentCount < 4) {\r\n      return false\r\n    }\r\n\r\n    let fromPt = conn.getStartPosition()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPosition()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    if (segmentCount <= 5) {\r\n      //     ___\r\n      //    |   |      From\r\n      //    | 1 |-----+\r\n      //    |___|     |\r\n      //              |\r\n      //   +----------+\r\n      //   |\r\n      //   |    ___\r\n      //   |   |   |\r\n      //   +---| 2 |    To\r\n      //       |___|\r\n      // the connection needs at least 5 segments if the routing is like this\r\n      //\r\n      if ((fromDir === draw2d.geo.Rectangle.DIRECTION_RIGHT) && (toDir === draw2d.geo.Rectangle.DIRECTION_LEFT) && (fromPt.x >= toPt.x)) {\r\n        return false\r\n      }\r\n\r\n\r\n      //     ___\r\n      //    |   |        To\r\n      //    | 2 |-----+\r\n      //    |___|     |\r\n      //              |\r\n      //   +----------+\r\n      //   |\r\n      //   |    ___\r\n      //   |   |   |\r\n      //   +---| 1 |    From\r\n      //       |___|\r\n      // the connection needs at least 5 segments if the routing is like this\r\n      //\r\n      if ((fromDir == draw2d.geo.Rectangle.DIRECTION_LEFT) & (toDir == draw2d.geo.Rectangle.DIRECTION_RIGHT) && (fromPt.x <= toPt.x)) {\r\n        return false\r\n      }\r\n\r\n      //                          ___\r\n      //      +_______           |   |\r\n      //      | from  |          | 2 |\r\n      //     _+_      |          |___|\r\n      //    |   |     |       To   +\r\n      //    | 1 |     |____________|\r\n      //    |___|\r\n      // the connection needs at least 5 segments if the routing is like this\r\n      //\r\n      if ((fromDir == draw2d.geo.Rectangle.DIRECTION_UP) & (toDir == draw2d.geo.Rectangle.DIRECTION_DOWN) && (fromPt.y <= toPt.y)) {\r\n        return false\r\n      }\r\n\r\n      //                          ___\r\n      //      +_______           |   |\r\n      //      | to    |          | 1 |\r\n      //     _+_      |          |___|\r\n      //    |   |     |     from   +\r\n      //    | 2 |     |____________|\r\n      //    |___|\r\n      // the connection needs at least 5 segments if the routing is like this\r\n      //\r\n      if ((fromDir == draw2d.geo.Rectangle.DIRECTION_DOWN) & (toDir == draw2d.geo.Rectangle.DIRECTION_UP) && (fromPt.y >= toPt.y)) {\r\n        return false\r\n      }\r\n\r\n      // unable to make the decision on the easy way. calculate the route again with an\r\n      // temporary connection and check if the segment count of the new routed connection\r\n      // allows a removal\r\n      //\r\n      let tmpConn = new draw2d.Connection()\r\n      tmpConn.lineSegments = new draw2d.util.ArrayList()\r\n      tmpConn.vertices = new draw2d.util.ArrayList()\r\n      tmpConn.sourcePort = conn.sourcePort\r\n      tmpConn.targetPort = conn.targetPort\r\n      tmpConn._routingMetaData = {routedByUserInteraction: false, fromDir: -1, toDir: -1}\r\n      this.route(tmpConn, {oldVertices: new draw2d.util.ArrayList()})\r\n      let curSegmentCount = conn.getVertices().getSize() - 1\r\n      let minSegmentCount = tmpConn.getVertices().getSize() - 1\r\n      if (curSegmentCount <= minSegmentCount) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * The draw2d.Connection delegates the drag operation to the router. The router can\r\n   * handle the different constraints of the connection and just drag&drop a single segment\r\n   * instead of the complete connection.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} line the related line to handle\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   *\r\n   * @since 6.1.0\r\n   */\r\n  onDrag: function (line, dx, dy, dx2, dy2) {\r\n    let i = 0\r\n    // Connection is dragged by source and origin port movement\r\n    // or MultiSelection in this case we drag the complete\r\n    // connection\r\n    if (line.draggedSegment === null) {\r\n      let count = line.getVertices().getSize() - 1\r\n      for (i = 1; i < count; i++) {\r\n        line.getVertex(i).translate(dx2, dy2)\r\n      }\r\n      return\r\n    }\r\n\r\n    // don't drag start/end segments. This segments are bounded to the related\r\n    // ports.\r\n    if (line.draggedSegment.index === 0 || line.draggedSegment.index === (line.getSegments().getSize() - 1)) {\r\n      return\r\n    }\r\n\r\n    line._routingMetaData.routedByUserInteraction = true\r\n\r\n    let p0 = line.draggedSegment.start\r\n    let p1 = line.draggedSegment.end\r\n    i = line.draggedSegment.index\r\n    let lp0 = line.getVertices().first()\r\n    let lp1 = line.getVertices().last()\r\n\r\n    // horizontal segment movement\r\n    //                              x Py\r\n    //                              .\r\n    //  P0                          .\r\n    //  +---------------------------+ P1\r\n    //  .\r\n    //  .\r\n    //  x Px\r\n    //\r\n    let distance = 0\r\n    if (p0.y === p1.y) {\r\n      // ensure that the segment is the min distance away from the source/target port\r\n      // (Px is endpoints of the connection and bounded to a port)\r\n      if (i === 1) distance = p0.y - lp0.y\r\n      // (Py is endpoints of the connection and bounded to a port)\r\n      if (i === line.getSegments().getSize() - 2) distance = p1.y - lp1.y\r\n\r\n\r\n      if (distance < 0 && dy2 > 0) {\r\n        dy2 = Math.min(dy2, (-distance) - this.MINDIST)\r\n      }\r\n      else if (distance > 0 && dy2 < 0) {\r\n        dy2 = -Math.min(-dy2, (distance) - this.MINDIST)\r\n      }\r\n\r\n      line.getVertex(i).translate(0, dy2)\r\n      line.getVertex(i + 1).translate(0, dy2)\r\n    }\r\n    // vertical segment movement\r\n    //\r\n    else if (p0.x === p1.x) {\r\n      // ensure that the segment is the min distance away from the source/target port\r\n      //\r\n      if (i === 1) {\r\n        distance = p0.x - lp0.x\r\n        if (distance < 0 && dx2 > 0) {\r\n          dx2 = Math.min(dx2, (-distance) - this.MINDIST)\r\n        }\r\n        else if (distance > 0 && dx2 < 0) {\r\n          dx2 = -Math.min(-dx2, (distance) - this.MINDIST)\r\n        }\r\n      }\r\n\r\n      // we need this additional test too. No \"else if\" because the special\r\n      // case of \"index===1\". In this case the segment can be the last AND first\r\n      // segment if the connection has only three segments at all.\r\n      //\r\n      if (i === line.getSegments().getSize() - 2) {\r\n        distance = p1.x - lp1.x\r\n        if (distance < 0 && dx2 > 0) {\r\n          dx2 = Math.min(dx2, (-distance) - this.MINDIST)\r\n        }\r\n        else if (distance > 0 && dx2 < 0) {\r\n          dx2 = -Math.min(-dx2, (distance) - this.MINDIST)\r\n        }\r\n      }\r\n\r\n      line.getVertex(i).translate(dx2, 0)\r\n      line.getVertex(i + 1).translate(dx2, 0)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the connection if the vertices set outside.\r\n   * This enforce the router to avoid full autoroute. E.g. InteractiveManhattanRouter\r\n   *\r\n   * @protected\r\n   */\r\n  verticesSet: function (conn) {\r\n    conn._routingMetaData.routedByUserInteraction = true\r\n    if (conn.getSource() !== null && conn.getTarget() !== null) {\r\n      conn._routingMetaData.fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n      conn._routingMetaData.toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Tweak or enrich the polyline persistence data with routing information\r\n   *\r\n   * @since 2.10.0\r\n   * @param {draw2d.shape.basic.PolyLine} line\r\n   * @param {Object} memento The memento data of the polyline\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function (line, memento) {\r\n    memento.vertex = []\r\n\r\n    line.getVertices().each( (i, e) =>{\r\n      memento.vertex.push({x: e.x, y: e.y})\r\n    })\r\n    memento.routingMetaData = { ...line._routingMetaData}\r\n\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   * \r\n   * set the attributes for the polyline with routing information of the interactive manhattan router.\r\n   *\r\n   * @since 4..0.0\r\n   * @param {Object} memento\r\n   */\r\n  setPersistentAttributes: function (line, memento) {\r\n    // restore the points from the JSON data and add them to the polyline\r\n    //\r\n    if (Array.isArray(memento.vertex)) {\r\n\r\n      line.oldPoint = null\r\n      line.lineSegments = new draw2d.util.ArrayList()\r\n\r\n      line.setVertices(memento.vertex)\r\n    }\r\n\r\n    if (typeof memento.routingMetaData !== \"undefined\") {\r\n      line._routingMetaData = {...memento.routingMetaData}\r\n    }\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Provides a {@link draw2d.Connection} with an orthogonal route between the Connection's source\r\n * and target anchors.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ManhattanConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.ManhattanBridgedConnectionRouter = draw2d.layout.connection.ManhattanConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.ManhattanBridgedConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.ManhattanBridgedConnectionRouter\",\r\n\r\n  BRIDGE_HORIZONTAL_LR: \" r 0 0 3 -4 7 -4 10 0 13 0 \", // Left to right\r\n  BRIDGE_HORIZONTAL_RL: \" r 0 0 -3 -4 -7 -4 -10 0 -13 0 \", // right to left\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let fromPt = conn.getStartPoint()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPoint()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // calculate the lines between the two points.\r\n    //\r\n    this._route(conn, toPt, toDir, fromPt, fromDir)\r\n    // if the start/end are too close, the router do not route anything at all - shortcut. But for the drawing routine\r\n    // and the later processing, we need at least two points - \"start\" and \"end\". we fix this here\r\n    if(conn.getVertices().getSize()<2){\r\n      conn.addPoint(fromPt)\r\n    }\r\n    \r\n    // calculate the path string for the SVG rendering\r\n    //\r\n    let intersectionsASC = conn.getCanvas().getIntersection(conn).sort(\"x\")\r\n    let intersectionsDESC = intersectionsASC.clone().reverse()\r\n\r\n    let intersectionForCalc = intersectionsASC\r\n\r\n\r\n    // ATTENTION: we cast all x/y coordinates to int and add 0.5 to avoid subpixel rendering of\r\n    //            the connection. The 1px or 2px lines look much clearer than before.\r\n    //\r\n    let ps = conn.getVertices()\r\n    let p = ps.get(0)\r\n    let path = [\"M\", (p.x | 0) + 0.5, \" \", (p.y | 0) + 0.5]\r\n    let oldP = p\r\n    for (let i = 1; i < ps.getSize(); i++) {\r\n      p = ps.get(i)\r\n\r\n      // check for intersection and paint a bridge if required\r\n      // line goes from left to right\r\n      //\r\n      let bridgeWidth = 5\r\n      let bridgeCode = this.BRIDGE_HORIZONTAL_LR\r\n\r\n      // line goes from right->left. Inverse the bridge and the bridgeWidth\r\n      //\r\n      if (oldP.x >= p.x) {\r\n        intersectionForCalc = intersectionsDESC\r\n        bridgeCode = this.BRIDGE_HORIZONTAL_RL\r\n        bridgeWidth = -bridgeWidth\r\n      }\r\n\r\n      intersectionForCalc.each(function (ii, interP) {\r\n        if (interP.justTouching === false && draw2d.shape.basic.Line.hit(1, oldP.x, oldP.y, p.x, p.y, interP.x, interP.y) === true) {\r\n          // we draw only horizontal bridges. Just a design decision\r\n          //\r\n          if (Math.floor(p.y) === Math.floor(interP.y)) {\r\n            path.push(\" L\", ((interP.x - bridgeWidth) | 0) + 0.5, \" \", (interP.y | 0) + 0.5)\r\n            path.push(bridgeCode)\r\n          }\r\n        }\r\n\r\n      })\r\n\r\n      path.push(\" L\", (p.x | 0) + 0.5, \" \", (p.y | 0) + 0.5)\r\n      oldP = p\r\n    }\r\n    conn.svgPathString = path.join(\"\")\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Provides a {@link draw2d.Connection} with an orthogonal route between the Connection's source\r\n * and target anchors.\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Override the default connection type. This is used during drag&drop operations of ports.\r\n *    //\r\n *    let createConnection=function(sourcePort, targetPort){\r\n *       // return my special kind of connection\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.ManhattanConnectionRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // Install a special policy into the canvas to use my own implementation of connection\r\n *    // if we drag&drop a port\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *          createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.ManhattanConnectionRouter = draw2d.layout.connection.ConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.ManhattanConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.ManhattanConnectionRouter\",\r\n\r\n  MINDIST: 20,\r\n  TOL: 0.1,\r\n  TOLxTOL: 0.01,\r\n  TOGGLE_DIST: 20,\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let fromPt = conn.getStartPosition()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPosition()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // calculate the lines between the two points.\r\n    //\r\n    this._route(conn, toPt, toDir, fromPt, fromDir)\r\n    // if the start/end are too close, the router do not route anything at all - shortcut. But for the drawing routine\r\n    // and the later processing, we need at least two points - \"start\" and \"end\". we fix this here\r\n    if(conn.getVertices().getSize()<2){\r\n      conn.addPoint(fromPt)\r\n    }\r\n    \r\n    this._paint(conn)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Internal routing algorithm.\r\n   *\r\n   * @private\r\n   * @param {draw2d.Connection} conn\r\n   * @param {draw2d.geo.Point} fromPt\r\n   * @param {Number} fromDir\r\n   * @param {draw2d.geo.Point} toPt\r\n   * @param {Number} toDir\r\n   */\r\n  _route: function (conn, fromPt, fromDir, toPt, toDir) {\r\n    // fromPt is an x,y to start from.\r\n    // fromDir is an angle that the first link must\r\n    //\r\n    let UP = draw2d.geo.Rectangle.DIRECTION_UP\r\n    let RIGHT = draw2d.geo.Rectangle.DIRECTION_RIGHT\r\n    let DOWN = draw2d.geo.Rectangle.DIRECTION_DOWN\r\n    let LEFT = draw2d.geo.Rectangle.DIRECTION_LEFT\r\n\r\n    let xDiff = fromPt.x - toPt.x\r\n    let yDiff = fromPt.y - toPt.y\r\n    let point\r\n    let dir\r\n    let pos\r\n\r\n    if (((xDiff * xDiff) < (this.TOLxTOL)) && ((yDiff * yDiff) < (this.TOLxTOL))) {\r\n      conn.addPoint(new draw2d.geo.Point(toPt.x, toPt.y))\r\n      return\r\n    }\r\n\r\n    if (fromDir === LEFT) {\r\n      if ((xDiff > 0) && ((yDiff * yDiff) < this.TOL) && (toDir === RIGHT)) {\r\n        point = toPt\r\n        dir = toDir\r\n      }\r\n      else {\r\n        if (xDiff < 0) {\r\n          point = new draw2d.geo.Point(fromPt.x - this.MINDIST, fromPt.y)\r\n        }\r\n        else if (((yDiff > 0) && (toDir === DOWN)) || ((yDiff < 0) && (toDir === UP))) {\r\n          point = new draw2d.geo.Point(toPt.x, fromPt.y)\r\n        }\r\n        else if (fromDir === toDir) {\r\n          pos = Math.min(fromPt.x, toPt.x) - this.MINDIST\r\n          point = new draw2d.geo.Point(pos, fromPt.y)\r\n        }\r\n        else {\r\n          point = new draw2d.geo.Point(fromPt.x - (xDiff / 2), fromPt.y)\r\n        }\r\n\r\n        if (yDiff > 0) {\r\n          dir = UP\r\n        }\r\n        else {\r\n          dir = DOWN\r\n        }\r\n      }\r\n    }\r\n    else if (fromDir === RIGHT) {\r\n      if ((xDiff < 0) && ((yDiff * yDiff) < this.TOL) && (toDir === LEFT)) {\r\n        point = toPt\r\n        dir = toDir\r\n      }\r\n      else {\r\n        if (xDiff > 0) {\r\n          point = new draw2d.geo.Point(fromPt.x + this.MINDIST, fromPt.y)\r\n        }\r\n        else if (((yDiff > 0) && (toDir === DOWN)) || ((yDiff < 0) && (toDir === UP))) {\r\n          point = new draw2d.geo.Point(toPt.x, fromPt.y)\r\n        }\r\n        else if (fromDir === toDir) {\r\n          pos = Math.max(fromPt.x, toPt.x) + this.MINDIST\r\n          point = new draw2d.geo.Point(pos, fromPt.y)\r\n        }\r\n        else {\r\n          point = new draw2d.geo.Point(fromPt.x - (xDiff / 2), fromPt.y)\r\n        }\r\n\r\n        if (yDiff > 0) {\r\n          dir = UP\r\n        }\r\n        else {\r\n          dir = DOWN\r\n        }\r\n      }\r\n    }\r\n    else if (fromDir === DOWN) {\r\n      if (((xDiff * xDiff) < this.TOL) && (yDiff < 0) && (toDir === UP)) {\r\n        point = toPt\r\n        dir = toDir\r\n      }\r\n      else {\r\n        if (yDiff > 0) {\r\n          point = new draw2d.geo.Point(fromPt.x, fromPt.y + this.MINDIST)\r\n        }\r\n        else if (((xDiff > 0) && (toDir === RIGHT)) || ((xDiff < 0) && (toDir === LEFT))) {\r\n          point = new draw2d.geo.Point(fromPt.x, toPt.y)\r\n        }\r\n        else if (fromDir === toDir) {\r\n          pos = Math.max(fromPt.y, toPt.y) + this.MINDIST\r\n          point = new draw2d.geo.Point(fromPt.x, pos)\r\n        }\r\n        else {\r\n          point = new draw2d.geo.Point(fromPt.x, fromPt.y - (yDiff / 2))\r\n        }\r\n\r\n        if (xDiff > 0) {\r\n          dir = LEFT\r\n        }\r\n        else {\r\n          dir = RIGHT\r\n        }\r\n      }\r\n    }\r\n    else if (fromDir === UP) {\r\n      if (((xDiff * xDiff) < this.TOL) && (yDiff > 0) && (toDir === DOWN)) {\r\n        point = toPt\r\n        dir = toDir\r\n      }\r\n      else {\r\n        if (yDiff < 0) {\r\n          point = new draw2d.geo.Point(fromPt.x, fromPt.y - this.MINDIST)\r\n        }\r\n        else if (((xDiff > 0) && (toDir === RIGHT)) || ((xDiff < 0) && (toDir === LEFT))) {\r\n          point = new draw2d.geo.Point(fromPt.x, toPt.y)\r\n        }\r\n        else if (fromDir === toDir) {\r\n          pos = Math.min(fromPt.y, toPt.y) - this.MINDIST\r\n          point = new draw2d.geo.Point(fromPt.x, pos)\r\n        }\r\n        else {\r\n          point = new draw2d.geo.Point(fromPt.x, fromPt.y - (yDiff / 2))\r\n        }\r\n\r\n        if (xDiff > 0) {\r\n          dir = LEFT\r\n        }\r\n        else {\r\n          dir = RIGHT\r\n        }\r\n      }\r\n    }\r\n    this._route(conn, point, dir, toPt, toDir)\r\n    conn.addPoint(fromPt)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * <b>BETA VERSION. Not for production!!!<br></b>\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ConnectionRouter\r\n */\r\n\r\nlet ROUTER_RECTS = null\r\n\r\ndraw2d.layout.connection.MazeConnectionRouter = draw2d.layout.connection.ConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.MazeConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.MazeConnectionRouter\",\r\n\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n    this.useSpline = false\r\n    this.useSimplify = true\r\n    this.useSimplifyValue = 2\r\n    this.useDebug = false\r\n    this.useShift = 4\r\n    this.portOutletOffset = 15\r\n\r\n\r\n//    \tthis.finder = new PF.AStarFinder();\r\n//      this.finder = new PF.AStarFinder({ allowDiagonal: true, dontCrossCorners: true});\r\n//      this.finder = new PF.AStarFinder({ allowDiagonal: false});\r\n//      this.finder = new PF.BiBreadthFirstFinder({ allowDiagonal: false});\r\n//      this.finder = new PF.BreadthFirstFinder({ allowDiagonal: false});\r\n    this.finder = new PF.JumpPointFinder({allowDiagonal: false, dontCrossCorners: true})\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let fromPt = conn.getStartPoint()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPoint()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // calculate the lines between the two points.\r\n    //\r\n    this._route(conn, toPt, toDir, fromPt, fromDir)\r\n    this._paint(conn)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Internal routing algorithm.\r\n   *     * <p>\r\n   * Possible values:\r\n   * <ul>\r\n   *   <li>up -&gt; 0</li>\r\n   *   <li>right -&gt; 1</li>\r\n   *   <li>down -&gt; 2</li>\r\n   *   <li>left -&gt; 3</li>\r\n   * </ul>\r\n   * <p>\r\n\r\n   * @private\r\n   * @param {draw2d.Connection} conn\r\n   * @param {draw2d.geo.Point} fromPt\r\n   * @param {Number} fromDir\r\n   * @param {draw2d.geo.Point} toPt\r\n   * @param {Number} toDir\r\n   */\r\n  _route: function (conn, fromPt, fromDir, toPt, toDir) {\r\n    let shift = this.useShift\r\n\r\n    let oldToPt = toPt\r\n    let oldFromPt = fromPt\r\n\r\n    // move the points with an offset in the prefered routing direction of the ports\r\n    // to avoid that the routed connection is sticking on one side of the figure.\r\n    //\r\n    fromPt = this.getAdjustedPoint(fromPt, fromDir, this.portOutletOffset)\r\n    toPt = this.getAdjustedPoint(toPt, toDir, this.portOutletOffset)\r\n\r\n    let grid = this.generateNoGoGrid(conn, fromPt, fromDir, toPt, toDir)\r\n\r\n    // 4. Calculate the shortest path from source to target based on the grid\r\n    //\r\n    let path = this.finder.findPath(\r\n        Math.max(fromPt.x) >> shift, Math.max(fromPt.y) >> shift,\r\n        Math.max(toPt.x )>> shift, Math.max(0,toPt.y) >> shift,\r\n        grid)\r\n\r\n    // transfer the path from the grid based coordinates back to the real coordinates\r\n    //\r\n    path.forEach(e => {\r\n      e.x = e[0] = e[0] << shift\r\n      e.y = e[1] = e[1] << shift\r\n    })\r\n\r\n    // 5. paint the \"no go\" area in read if we are in debug mode\r\n    //\r\n    if (this.useDebug) {\r\n      if (ROUTER_RECTS !== null) {\r\n        ROUTER_RECTS.remove()\r\n      }\r\n      ROUTER_RECTS = conn.canvas.paper.set()\r\n\r\n      for (let i = 0; i < grid.width; i++) {\r\n        for (let j = 0; j < grid.height; j++) {\r\n          if (!grid.isWalkableAt(i, j))\r\n            ROUTER_RECTS.push(conn.canvas.paper.rect(i << shift, j << shift, 1 << shift, 1 << shift).attr({\r\n              \"fill\": \"red\",\r\n              \"opacity\": \"0.1\"\r\n            }))\r\n        }\r\n      }\r\n      ROUTER_RECTS.push(conn.canvas.paper.rect(fromPt.x - 3, fromPt.y - 3, 6, 6).attr({\r\n        \"fill\": \"#ff0000\",\r\n        \"opacity\": \"0.8\"\r\n      }))\r\n      ROUTER_RECTS.push(conn.canvas.paper.rect(toPt.x - 3, toPt.y - 3, 6, 6).attr({\r\n        \"fill\": \"#ff0000\",\r\n        \"opacity\": \"0.8\"\r\n      }))\r\n\r\n      // paint the original calculated path without any simplification in BLUE\r\n      path.forEach(e => {\r\n        ROUTER_RECTS.push(conn.canvas.paper.rect(e.x - 3, e.y - 3, 6, 6).attr({\"fill\": \"#0000ff\", \"opacity\": \"0.8\"}))\r\n      })\r\n      if(path.length>0){\r\n        let p = path[0]\r\n        let svgPathBefore = [\"M\", p.x.toFixed(2), \" \", p.y.toFixed(2)]\r\n        for (let i = 1; i < path.length; i++) {\r\n          p = path[i]\r\n          svgPathBefore.push(\"L\", p.x.toFixed(2), \" \", p.y.toFixed(2))\r\n        }\r\n        svgPathBefore = svgPathBefore.join(\"\")\r\n        ROUTER_RECTS.push(conn.canvas.paper.path(svgPathBefore).attr({\"stroke\": \"#0000ff\"}))\r\n      }\r\n    }\r\n\r\n\r\n    this.adjustPath(fromPt, path, fromDir)\r\n    path.reverse()\r\n    this.adjustPath(toPt, path, toDir)\r\n    path.reverse()\r\n\r\n    path.forEach(e => {\r\n      e.x = e[0]\r\n      e.y = e[1]\r\n    })\r\n\r\n\r\n    if (this.useSpline) {\r\n      let p = new draw2d.util.ArrayList()\r\n      p.add(oldFromPt)\r\n      path.forEach(e => {\r\n        p.add(new draw2d.geo.Point(e[0], e[1]))\r\n      })\r\n      p.add(oldToPt)\r\n\r\n      if (this.useDebug) {\r\n        path.forEach(e => {\r\n          ROUTER_RECTS.push(conn.canvas.paper.rect(e.x - 3, e.y - 3, 6, 6).attr({\"fill\": \"#00ff00\", \"opacity\": \"0.8\"}))\r\n        })\r\n        let pt = path[0]\r\n        let svgPathBefore = [\"M\", pt.x.toFixed(2), \" \", pt.y.toFixed(2)]\r\n        for (let i = 1; i < path.length; i++) {\r\n          pt = path[i]\r\n          svgPathBefore.push(\"L\", pt.x.toFixed(2), \" \", pt.y.toFixed(2))\r\n        }\r\n        svgPathBefore = svgPathBefore.join(\"\")\r\n        ROUTER_RECTS.push(conn.canvas.paper.path(svgPathBefore).attr({\"stroke\": \"#00ff00\"}))\r\n      }\r\n\r\n      this.spline = new draw2d.util.spline.CubicSpline()\r\n      let splinePoints = this.spline.generate(p, 8)\r\n\r\n      if (this.useSimplify) {\r\n        path = []\r\n        splinePoints.each(function (i, e) {\r\n          path.push({x: e.x, y: e.y})\r\n        })\r\n        path = this.simplify(path, this.useSimplifyValue, true)\r\n\r\n        path.forEach(e => {\r\n          conn.addPoint(e.x, e.y)\r\n        })\r\n      }\r\n      else {\r\n        splinePoints.each(function (i, e) {\r\n          conn.addPoint(e)\r\n        })\r\n      }\r\n    }\r\n    else {\r\n      if (this.useSimplify) {\r\n        path = this.simplify(path, this.useSimplifyValue, true)\r\n      }\r\n\r\n      if (this.useDebug) {\r\n        path.forEach(e => {\r\n          ROUTER_RECTS.push(conn.canvas.paper.rect(e.x - 3, e.y - 3, 6, 6).attr({\"fill\": \"#00ff00\", \"opacity\": \"0.8\"}))\r\n        })\r\n        if(path.length>0){\r\n          let p = path[0]\r\n          let svgPathBefore = [\"M\", p.x.toFixed(2), \" \", p.y.toFixed(2)]\r\n          for (let i = 1; i < path.length; i++) {\r\n            p = path[i]\r\n            svgPathBefore.push(\"L\", p.x.toFixed(2), \" \", p.y.toFixed(2))\r\n          }\r\n          svgPathBefore = svgPathBefore.join(\"\")\r\n          ROUTER_RECTS.push(conn.canvas.paper.path(svgPathBefore).attr({\"stroke\": \"#00ff00\"}))\r\n        }\r\n      }\r\n\r\n      conn.addPoint(oldFromPt)\r\n      path.forEach(e => {\r\n        conn.addPoint(e[0], e[1])\r\n      })\r\n      conn.addPoint(oldToPt)\r\n\r\n    }\r\n\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Generate a grid base no go map required for the path finding algorithm\r\n   *\r\n   * @param conn\r\n   * @returns {PF.Grid}\r\n   * @private\r\n   */\r\n  generateNoGoGrid: function (conn, fromPt, fromDir, toPt, toDir) {\r\n    let shift = this.useShift\r\n    let oneShift2 = (1 << shift) / 2\r\n\r\n    // 1. generate a map with all \"no go\" areas. The bounding box of the shapes defines\r\n    //    the no go areas.\r\n    //\r\n    let canvasWidth = conn.getCanvas().paper.width >> shift\r\n    let canvasHeight = conn.getCanvas().paper.height >> shift\r\n    let grid = new PF.Grid(canvasWidth, canvasHeight)\r\n    let figures = conn.getCanvas().getFigures()\r\n    figures.each(function (i, e) {\r\n      let box = e.getBoundingBox()\r\n      // remove shapes which are hit by the input or output ports. It is not possible to route\r\n      // out from a not walkable area\r\n      if (box.hitTest(fromPt.x, fromPt.y) === true || box.hitTest(toPt.x, toPt.y)) {\r\n        return\r\n      }\r\n\r\n      let x = box.x >> shift\r\n      let y = box.y >> shift\r\n      if (x < 1 || y < 1) {\r\n        return\r\n      }\r\n      let r_orig = (box.x + box.w + oneShift2) >> shift\r\n      let b_orig = (box.y + box.h + oneShift2) >> shift\r\n      for (let i = x; i <= r_orig; i++) {\r\n        for (let j = y; j <= b_orig; j++) {\r\n          grid.setWalkableAt(i, j, false)\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n    // 3. make the are walkable on the edge of the port side. Otherwise we a\r\n    //    an enclosed area around the port if we are very close to another shape\r\n    //\r\n    let box = conn.getSource().getParent().getBoundingBox()\r\n    if (toDir === 1 || toDir === 3) {\r\n      let y = box.y >> shift\r\n      if (y > 0) {\r\n        let b_orig = box.y + box.h\r\n        let i = (toPt.x >> shift)\r\n\r\n        for (let j = y - 1; j << shift <= b_orig; j++) {\r\n          grid.setWalkableAt(i, j, true)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      let x = box.x >> shift\r\n      if (x > 0) {\r\n        let r_orig = box.x + box.w\r\n        let j = (toPt.x >> shift)\r\n        for (let i = x - 1; i << shift <= r_orig; i++) {\r\n          grid.setWalkableAt(i, j, true)\r\n        }\r\n      }\r\n    }\r\n\r\n    box = conn.getTarget().getParent().getBoundingBox()\r\n    if (fromDir === 1 || fromDir === 3) {\r\n      let y = box.y >> shift\r\n      if (y > 0) {\r\n        let b_orig = box.y + box.h\r\n        let i = (fromPt.x >> shift)\r\n        for (let j = y - 1; j << shift <= b_orig; j++) {\r\n          grid.setWalkableAt(i, j, true)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      let x = box.x >> shift\r\n      if (x > 0) {\r\n        let r_orig = box.x + box.w\r\n        let j = (fromPt.x >> shift)\r\n        for (let i = x - 1; i << shift <= r_orig; i++) {\r\n          grid.setWalkableAt(i, j, true)\r\n        }\r\n      }\r\n    }\r\n\r\n    return grid\r\n  },\r\n\r\n  /**\r\n   * \r\n   * move the point in the given direction with the given offset\r\n   *\r\n   * @param {draw2d.geo.Point} pt\r\n   * @param {Number} direction\r\n   * @param {Number} adjustment\r\n   *\r\n   * @returns {draw2d.geo.Point}\r\n   */\r\n  getAdjustedPoint: function (pt, direction, adjustment) {\r\n\r\n    switch (direction) {\r\n      case draw2d.geo.Rectangle.DIRECTION_UP:\r\n        return new draw2d.geo.Point(pt.x, pt.y - adjustment)\r\n      case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n        return new draw2d.geo.Point(pt.x + adjustment, pt.y)\r\n      case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n        return new draw2d.geo.Point(pt.x, pt.y + adjustment)\r\n      case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n        return new draw2d.geo.Point(pt.x - adjustment, pt.y)\r\n    }\r\n  },\r\n\r\n  adjustPath: function (pt, path, direction) {\r\n    let shift = this.useShift\r\n    let x = pt.x >> shift\r\n    let y = pt.y >> shift\r\n    path.forEach(e => {\r\n      if (y === (e[1] >> shift)) {\r\n        e[1] = pt.y\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    })\r\n    path.forEach(e => {\r\n      if (x === (e[0] >> shift)) {\r\n        e[0] = pt.x\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    })\r\n  },\r\n\r\n\r\n  getSquareDistance: function (p1, p2) { // square distance between 2 points\r\n\r\n    let dx = p1.x - p2.x,\r\n      dy = p1.y - p2.y\r\n\r\n    return dx * dx +\r\n      dy * dy\r\n  },\r\n\r\n  getSquareSegmentDistance: function (p, p1, p2) { // square distance from a point to a segment\r\n\r\n    let x = p1.x,\r\n      y = p1.y,\r\n\r\n      dx = p2.x - x,\r\n      dy = p2.y - y,\r\n\r\n      t\r\n\r\n    if (dx !== 0 || dy !== 0) {\r\n\r\n      t = ((p.x - x) * dx +\r\n        (p.y - y) * dy) /\r\n        (dx * dx +\r\n          dy * dy)\r\n\r\n      if (t > 1) {\r\n        x = p2.x\r\n        y = p2.y\r\n\r\n      } else if (t > 0) {\r\n        x += dx * t\r\n        y += dy * t\r\n      }\r\n    }\r\n\r\n    dx = p.x - x\r\n    dy = p.y - y\r\n\r\n    return dx * dx +\r\n      dy * dy\r\n  },\r\n\r\n  simplifyRadialDistance: function (points, sqTolerance) { // distance-based simplification\r\n\r\n    let i,\r\n      len = points.length,\r\n      point = null,\r\n      prevPoint = points[0],\r\n      newPoints = [prevPoint]\r\n\r\n    for (i = 1; i < len; i++) {\r\n      point = points[i]\r\n\r\n      if (this.getSquareDistance(point, prevPoint) > sqTolerance) {\r\n        newPoints.push(point)\r\n        prevPoint = point\r\n      }\r\n    }\r\n\r\n    if (prevPoint !== point) {\r\n      newPoints.push(point)\r\n    }\r\n\r\n    return newPoints\r\n  },\r\n\r\n\r\n  // simplification using optimized Douglas-Peucker algorithm with recursion elimination\r\n\r\n  simplifyDouglasPeucker: function (points, sqTolerance) {\r\n\r\n    let len = points.length,\r\n\r\n      MarkerArray = (typeof Uint8Array !== undefined + '')\r\n        ? Uint8Array\r\n        : Array,\r\n\r\n      markers = new MarkerArray(len),\r\n\r\n      first = 0,\r\n      last = len - 1,\r\n\r\n      i,\r\n      maxSqDist,\r\n      sqDist,\r\n      index,\r\n\r\n      firstStack = [],\r\n      lastStack = [],\r\n\r\n      newPoints = []\r\n\r\n    markers[first] = markers[last] = 1\r\n\r\n    while (last) {\r\n\r\n      maxSqDist = 0\r\n\r\n      for (i = first + 1; i < last; i++) {\r\n        sqDist = this.getSquareSegmentDistance(points[i], points[first], points[last])\r\n\r\n        if (sqDist > maxSqDist) {\r\n          index = i\r\n          maxSqDist = sqDist\r\n        }\r\n      }\r\n\r\n      if (maxSqDist > sqTolerance) {\r\n        markers[index] = 1\r\n\r\n        firstStack.push(first)\r\n        lastStack.push(index)\r\n\r\n        firstStack.push(index)\r\n        lastStack.push(last)\r\n      }\r\n\r\n      first = firstStack.pop()\r\n      last = lastStack.pop()\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (markers[i]) {\r\n        newPoints.push(points[i])\r\n      }\r\n    }\r\n\r\n    return newPoints\r\n  },\r\n\r\n\r\n  simplify: function (points, tolerance, highestQuality) {\r\n\r\n    let sqTolerance = (tolerance !== undefined)\r\n      ? tolerance * tolerance\r\n      : 1\r\n\r\n    if (!highestQuality) {\r\n      points = this.simplifyRadialDistance(points, sqTolerance)\r\n    }\r\n    points = this.simplifyDouglasPeucker(points, sqTolerance)\r\n\r\n    return points\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * JUST FOR RESEARCH AT THE MOMENT!!!!!!\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ManhattanConnectionRouter\r\n */\r\n\r\ndraw2d.layout.connection.MuteableManhattanConnectionRouter = draw2d.layout.connection.ManhattanConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.MuteableManhattanConnectionRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.MuteableManhattanConnectionRouter\",\r\n\r\n  UP: new draw2d.geo.Ray(0, -1),\r\n  DOWN: new draw2d.geo.Ray(0, 1),\r\n  LEFT: new draw2d.geo.Ray(-1, 0),\r\n  RIGHT: new draw2d.geo.Ray(1, 0),\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n    this.rowsUsed = {}//new HashMap<Integer, Integer>();\r\n    this.colsUsed = {}//new HashMap<Integer, Integer>();\r\n    this.constraints = {}//new HashMap<Connection, Object>();\r\n    this.reservedInfo = {}//new HashMap<Connection, ReservedInfo>();\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    this.rowsUsed = {}//new HashMap<Integer, Integer>();\r\n    this.colsUsed = {}//new HashMap<Integer, Integer>();\r\n    this.constraints = {}//new HashMap<Connection, Object>();\r\n    this.reservedInfo = {}//new HashMap<Connection, ReservedInfo>();\r\n\r\n    let canvas = conn.getCanvas()\r\n    let i\r\n\r\n    let startPoint = conn.getStartPoint()\r\n    let endPoint = conn.getEndPoint()\r\n\r\n    let start = new draw2d.geo.Ray(startPoint)\r\n    let end = new draw2d.geo.Ray(endPoint)\r\n    let average = new draw2d.geo.Ray((start.x + end.x) / 2, (start.y + end.y) / 2)\r\n\r\n    let direction = new draw2d.geo.Ray(end.x - start.x, end.y - start.y)\r\n    let startNormal = this.getStartDirection(conn)\r\n    let endNormal = this.getEndDirection(conn)\r\n\r\n    let positions = new draw2d.util.ArrayList()\r\n    let horizontal = startNormal.isHorizontal()\r\n\r\n    if (horizontal) {\r\n      positions.add(start.y)\r\n    }\r\n    else {\r\n      positions.add(start.x)\r\n    }\r\n\r\n    horizontal = !horizontal\r\n\r\n    // dot product is zero if the vector orthogonal (90°)\r\n    if (startNormal.dot(endNormal) === 0) {\r\n      if ((startNormal.dot(direction) >= 0) && (endNormal.dot(direction) <= 0)) {\r\n        // 0\r\n      } else {\r\n\r\n        // 2\r\n        if (startNormal.dot(direction) < 0)\r\n          i = startNormal.similarity(start.translated(startNormal.scaled(10)))\r\n        else {\r\n          if (horizontal)\r\n            i = average.y\r\n          else\r\n            i = average.x\r\n        }\r\n\r\n        positions.add(i)\r\n        horizontal = !horizontal\r\n\r\n        if (endNormal.dot(direction) > 0) {\r\n          i = endNormal.similarity(end.translated(endNormal.scaled(10)))\r\n        }\r\n        else {\r\n          if (horizontal) {\r\n            i = average.y\r\n          }\r\n          else {\r\n            i = average.x\r\n          }\r\n        }\r\n        positions.add(i)\r\n        horizontal = !horizontal\r\n      }\r\n    } else {\r\n      if (startNormal.dot(endNormal) > 0) {\r\n        //1\r\n        if (startNormal.dot(direction) >= 0)\r\n          i = startNormal.similarity(start.translated(startNormal.scaled(10)))\r\n        else\r\n          i = endNormal.similarity(end.translated(endNormal.scaled(10)))\r\n        positions.add(i)\r\n        horizontal = !horizontal\r\n      } else {\r\n        //3 or 1\r\n        if (startNormal.dot(direction) < 0) {\r\n          i = startNormal.similarity(start.translated(startNormal.scaled(10)))\r\n          positions.add(i)\r\n          horizontal = !horizontal\r\n        }\r\n\r\n        // my tweak to route SCA wires starts\r\n        if (this.isCycle(conn)) {\r\n          if (horizontal)\r\n            i = conn.getSource().getParent().getBoundingBox().getTop() - 10// * index;\r\n          else\r\n            i = conn.getSource().getParent().getBoundingBox().getRight() + 10// * index;\r\n        } else {\r\n          if (horizontal) {\r\n            let j = average.y\r\n\r\n            let next = endNormal.similarity(end.translated(endNormal.scaled(10)))\r\n\r\n            let trial = new draw2d.geo.Ray((positions.get(positions.getSize() - 1)), j)\r\n            let figure = this.findFirstFigureAtStraightLine(canvas, trial, this.LEFT, draw2d.util.ArrayList.EMPTY_LIST)\r\n\r\n            while (figure != null && figure.getBoundingBox().x + figure.getBoundingBox().width > next) {\r\n              j = figure.getBoundingBox().y + figure.getBoundingBox().height + 5\r\n              trial.y = j\r\n              figure = this.findFirstFigureAtStraightLine(canvas, trial, this.LEFT, draw2d.util.ArrayList.EMPTY_LIST)\r\n            }\r\n\r\n            i = j\r\n\r\n          } else {\r\n            let figure = this.findFirstFigureAtStraightLine(canvas, start, this.RIGHT, this.getExcludingFigures(conn))\r\n            if (figure == null)\r\n              i = average.x\r\n            else {\r\n              i = Math.min(average.x, start.translated(new draw2d.geo.Ray(3 * (figure.getBoundingBox().x - start.x) / 4, 0)).x)\r\n              i = Math.max(start.x, i)\r\n            }\r\n            i = this.adjust(conn, i)\r\n          }\r\n        }\r\n        // my tweak to route SCA wires ends\r\n        positions.add(i)\r\n        horizontal = !horizontal\r\n      }\r\n    }\r\n    if (horizontal)\r\n      positions.add(end.y)\r\n    else\r\n      positions.add(end.x)\r\n\r\n    this.processPositions(start, end, positions, startNormal.isHorizontal(), conn)\r\n\r\n\r\n    this._paint(conn)\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {draw2d.Connection} connection\r\n   * @param {Number} r\r\n   * @param {Number} n\r\n   * @param {Number} x\r\n   *\r\n   * @private\r\n   */\r\n  getColumnNear: function (connection, r, n, x) {\r\n    let min = Math.min(n, x)\r\n    let max = Math.max(n, x)\r\n\r\n    if (min > r) {\r\n      max = min\r\n      min = r - (min - r)\r\n    }\r\n    if (max < r) {\r\n      min = max\r\n      max = r + (r - max)\r\n    }\r\n\r\n    let proximity = 0\r\n    let direction = -1\r\n    if (r % 6 !== 0) {\r\n      r = r - (r % 6)\r\n    }\r\n\r\n    let i\r\n    while (proximity < r) {\r\n      i = parseInt(r + proximity * direction)\r\n      if (!(i in this.colsUsed)) {\r\n        this.colsUsed[i] = i\r\n        this.reserveColumn(connection, i)\r\n        return i\r\n      }\r\n\r\n      if (i <= min) {\r\n        return i + 6\r\n      }\r\n\r\n      if (i >= max) {\r\n        return i - 6\r\n      }\r\n\r\n      if (direction === 1) {\r\n        direction = -1\r\n      }\r\n      else {\r\n        direction = 1\r\n        proximity += 6\r\n      }\r\n    }\r\n    return r\r\n  },\r\n\r\n  getRowNear: function (connection, r, n, x) {\r\n    let min = Math.min(n, x)\r\n    let max = Math.max(n, x)\r\n\r\n    if (min > r) {\r\n      max = min\r\n      min = r - (min - r)\r\n    }\r\n    if (max < r) {\r\n      min = max\r\n      max = r + (r - max)\r\n    }\r\n\r\n    let proximity = 0\r\n    let direction = -1\r\n    if (r % 6 !== 0) {\r\n      r = r - (r % 6)\r\n    }\r\n\r\n    let i\r\n    while (proximity < r) {\r\n      i = parseInt(r + proximity * direction)\r\n      if (!(i in this.rowsUsed)) {\r\n        this.rowsUsed[i] = i\r\n        this.reserveRow(connection, i)\r\n        return i\r\n      }\r\n      if (i <= min)\r\n        return i + 6\r\n      if (i >= max)\r\n        return i - 6\r\n      if (direction === 1)\r\n        direction = -1\r\n      else {\r\n        direction = 1\r\n        proximity += 6\r\n      }\r\n    }\r\n    return r\r\n  },\r\n\r\n  /**\r\n   *   <li>up -&gt; 0</li>\r\n   *   <li>right -&gt; 1</li>\r\n   *   <li>down -&gt; 2</li>\r\n   *   <li>left -&gt; 3</li>\r\n   **/\r\n  getEndDirection: function (conn) {\r\n    let p = conn.getEndPoint()\r\n    let rect = conn.getTarget().getParent().getBoundingBox()\r\n    return this.getDirection(rect, p)\r\n  },\r\n\r\n\r\n  /**\r\n   *   <li>up -&gt; 0</li>\r\n   *   <li>right -&gt; 1</li>\r\n   *   <li>down -&gt; 2</li>\r\n   *   <li>left -&gt; 3</li>\r\n   **/\r\n  getStartDirection: function (conn) {\r\n    let p = conn.getStartPoint()\r\n    let rect = conn.getSource().getParent().getBoundingBox()\r\n    return this.getDirection(rect, p)\r\n  },\r\n\r\n  /**\r\n   * Returns the direction the point <i>p</i> is in relation to the given rectangle.\r\n   * Possible values are LEFT (-1,0), RIGHT (1,0), UP (0,-1) and DOWN (0,1).\r\n   *\r\n   * @param r the rectangle\r\n   * @param p the point\r\n   * @returns the direction from <i>r</i> to <i>p</i>\r\n   */\r\n  getDirection: function (r, p) {\r\n    let i = Math.abs(r.y - p.y)\r\n    let distance = Math.abs(r.x - p.x)\r\n    let direction = this.LEFT\r\n\r\n    if (i <= distance) {\r\n      distance = i\r\n      direction = this.UP\r\n    }\r\n\r\n    i = Math.abs(r.getBottom() - p.y)\r\n    if (i <= distance) {\r\n      distance = i\r\n      direction = this.DOWN\r\n    }\r\n\r\n    i = Math.abs(r.getRight() - p.x)\r\n    if (i < distance) {\r\n      direction = this.RIGHT\r\n    }\r\n\r\n    return direction\r\n  },\r\n\r\n  processPositions: function (/*Ray*/ start, /*Ray*/ end, /*List*/ positions, /*boolean*/ horizontal, /*Connection*/ conn) {\r\n    this.removeReservedLines(conn)\r\n\r\n    let pos = []\r\n    if (horizontal)\r\n      pos.push(start.x)\r\n    else\r\n      pos.push(start.y)\r\n    let i\r\n    for (i = 0; i < positions.getSize(); i++) {\r\n      pos.push(positions.get(i))\r\n    }\r\n\r\n    if (horizontal === (positions.getSize() % 2 === 1)) {\r\n      pos.push(end.x)\r\n    }\r\n    else {\r\n      pos.push(end.y)\r\n    }\r\n\r\n    conn.addPoint(new draw2d.geo.Point(start.x, start.y))\r\n    let p\r\n    let current, prev, min, max\r\n    let adjust\r\n    for (i = 2; i < pos.length - 1; i++) {\r\n      horizontal = !horizontal\r\n      prev = pos[i - 1]\r\n      current = pos[i]\r\n\r\n      adjust = (i !== pos.length - 2)\r\n      if (horizontal) {\r\n        if (adjust) {\r\n          min = pos[i - 2]\r\n          max = pos[i + 2]\r\n          pos[i] = current = this.getRowNear(conn, current, min, max)\r\n        }\r\n        p = new draw2d.geo.Point(prev, current)\r\n      } else {\r\n        if (adjust) {\r\n          min = pos[i - 2]\r\n          max = pos[i + 2]\r\n          pos[i] = current = this.getColumnNear(conn, current, min, max)\r\n        }\r\n        p = new draw2d.geo.Point(current, prev)\r\n      }\r\n      conn.addPoint(p)\r\n    }\r\n    conn.addPoint(new draw2d.geo.Point(end.x, end.y))\r\n  },\r\n\r\n\r\n  removeReservedLines: function (connection) {\r\n    let rInfo = this.reservedInfo[connection]\r\n    if (typeof rInfo === \"undefined\" || rInfo === null)\r\n      return\r\n\r\n    for (let i = 0; i < rInfo.reservedRows.getSize(); i++) {\r\n      delete this.rowsUsed[rInfo.reservedRows.get(i)]\r\n    }\r\n    for (let i = 0; i < rInfo.reservedCols.getSize(); i++) {\r\n      delete this.colsUsed[rInfo.reservedCols.get(i)]\r\n    }\r\n    delete this.reservedInfo[connection]\r\n  },\r\n\r\n  reserveColumn: function (connection, column) {\r\n    let info = this.reservedInfo[connection]\r\n    if (typeof info === \"undefined\" || info === null) {\r\n      info = {reservedCols: new draw2d.util.ArrayList(), reservedRows: new draw2d.util.ArrayList()}\r\n      this.reservedInfo[connection] = info\r\n    }\r\n    info.reservedCols.add(column)\r\n  },\r\n\r\n  reserveRow: function (connection, row) {\r\n    let info = this.reservedInfo[connection]\r\n    if (typeof info === \"undefined\" || info === null) {\r\n      info = {reservedCols: new draw2d.util.ArrayList(), reservedRows: new draw2d.util.ArrayList()}\r\n      this.reservedInfo[connection] = info\r\n    }\r\n    info.reservedRows.add(row)\r\n  },\r\n\r\n  getConstraint: function (connection) {\r\n    return this.constraints[connection]\r\n  },\r\n\r\n  setConstraint: function (connection, constraint) {\r\n    this.constraints[connection] = constraint\r\n  },\r\n\r\n  isCycle: function (conn) {\r\n    let source = conn.getSource().getParent()\r\n    let target = conn.getTarget().getParent()\r\n\r\n    return source.id === target.id\r\n  },\r\n\r\n  getExcludingFigures: function (conn) {\r\n    let excluding = new draw2d.util.ArrayList()\r\n\r\n    excluding.add(conn.getSource().getParent())\r\n    excluding.add(conn.getTarget().getParent())\r\n\r\n    return excluding\r\n  },\r\n\r\n  findFirstFigureAtStraightLine: function (canvas, /*Ray*/ start, /*Ray*/ direction, /*List*/ excluding) {\r\n    let figure = null\r\n\r\n    let figures = canvas.getFigures()\r\n    let _this = this\r\n    figures.each(function (i, child) {\r\n      try {\r\n        if (!excluding.contains(child)) {\r\n          let rect = child.getBoundingBox()\r\n          if (_this.LEFT.equals(direction)) {\r\n            if (start.x > rect.x && start.y >= rect.y && start.y <= rect.y + rect.h) {\r\n              if (figure === null || rect.x > figure.getBoundingBox().x)\r\n                figure = child\r\n            }\r\n          } else if (_this.RIGHT.equals(direction)) {\r\n            if (start.x < rect.x + rect.w && start.y >= rect.y && start.y <= rect.y + rect.h) {\r\n              if (figure == null || rect.x < figure.getBoundingBox().x)\r\n                figure = child\r\n            }\r\n          } else if (_this.UP.equals(direction)) {\r\n            if (start.y > rect.y && start.x >= rect.x && start.x <= rect.x + rect.w) {\r\n              if (figure === null || rect.y > figure.getBoundingBox().y)\r\n                figure = child\r\n            }\r\n          } else if (_this.DOWN.equals(direction)) {\r\n            if (start.y < rect.y + rect.h && start.x >= rect.x && start.x <= rect.x + rect.w) {\r\n              if (figure === null || rect.y < figure.getBoundingBox().y)\r\n                figure = child\r\n            }\r\n          }\r\n        }\r\n      }\r\n      catch (exc) {\r\n        console.log(exc)\r\n        debugger\r\n      }\r\n    })\r\n    return figure\r\n  },\r\n\r\n  adjust: function (connection, col) {\r\n    let column = col\r\n\r\n    let start = connection.getSource().getPosition()\r\n\r\n    let connections = connection.getCanvas().getLines()\r\n    connections.each(function (i, conn) {\r\n      try {\r\n        if (conn === connection)\r\n          return\r\n\r\n        let end = conn.getTarget().getPosition()\r\n        if (start.x < end.x && start.y === end.y) {\r\n          if (conn.getVertices().getMidpoint().x <= col)\r\n            column = conn.getVertices().getMidpoint().x - 5\r\n        }\r\n      }\r\n      catch (exc) {\r\n        console.log(exc)\r\n        debugger\r\n      }\r\n    })\r\n    return column\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Router for direct connections between two ports with a rubber band effect\r\n *\r\n *\r\n * @example\r\n *\r\n *    let RubberConnection= draw2d.Connection.extend({\r\n *        NAME: \"RubberConnection\",\r\n *\r\n *        init:function(attr, setter, getter)\r\n *        {\r\n *          this._super(extend({\r\n *              color: \"#33691e\",\r\n *              stroke:1,\r\n *              outlineStroke:0,\r\n *              outlineColor:null\r\n *          },attr),\r\n *          setter,\r\n *          getter);\r\n *\r\n *\r\n *          this.setRouter(new draw2d.layout.connection.RubberbandRouter());\r\n *        },\r\n *\r\n *        repaint:function(attributes)\r\n *        {\r\n *            if (this.repaintBlocked===true || this.shape === null){\r\n *                return;\r\n *            }\r\n *            attributes= attributes || {};\r\n *            // enrich the rendering with a \"fill\" attribute\r\n *            if(typeof attributes.fill === \"undefined\"){\r\n *            \t   attributes.fill = \"#aed581\";\r\n *            }\r\n *            this._super(attributes);\r\n *       }\r\n *    });\r\n *\r\n *    let createConnection=function(){\r\n *       let con = new RubberConnection();\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ConnectionRouter\r\n */\r\ndraw2d.layout.connection.RubberbandRouter = draw2d.layout.connection.ConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.RubberbandRouter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.connection.RubberbandRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Invalidates the given Connection\r\n   */\r\n  invalidate: function () {\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (connection, routingHints) {\r\n    let thickness = 10\r\n\r\n    let start = connection.getStartPoint()\r\n    let end = connection.getEndPoint()\r\n\r\n    // 1. Calculate the vector AB→ by subtracting the coordinates of A from the coordinates of B.\r\n    //    Let's say you get (u,v) as the vector components.\r\n    //\r\n    // 2. normalize the vector (u,v,) to a length of |1|\r\n    //\r\n    // 3. The vector (−v,u) is AB→ rotated by 90 degrees counterclockwise. (Why? Look up \"rotation matrix\").\r\n    //\r\n    // 4. Add (−v,u) to A to get C. Also add (−v,u) to B to get D.\r\n\r\n    let uv = end.subtract(start)\r\n    let uv2 = uv.clone()\r\n    let length = uv.length()\r\n\r\n    let strength = 1 - Math.min(0.75, (1 / 500 * length))\r\n    let first = start.lerp(end, 0.25 * strength)     // go closer to the start point if the strength grows\r\n    let second = start.lerp(end, 0.5)\r\n    let third = start.lerp(end, 1 - (0.25 * strength)) // go closer to the end point if the strengths grows\r\n\r\n    thickness = Math.max(5, thickness * strength)\r\n\r\n    uv.x = uv.x / length * thickness\r\n    uv.y = uv.y / length * thickness\r\n\r\n    uv2.x = uv2.x / length * (thickness * (strength))\r\n    uv2.y = uv2.y / length * (thickness * (strength))\r\n\r\n    // anchor points for the 180 arc at the start point of the connection\r\n    //\r\n    let start90 = new draw2d.geo.Point(-uv.y + start.x, uv.x + start.y)\r\n    let start270 = new draw2d.geo.Point(uv.y + start.x, -uv.x + start.y)\r\n\r\n    // anchor point in the first segment ( on the upside/downside) of the connection\r\n    //\r\n    let first90 = new draw2d.geo.Point(-uv2.y + first.x, uv2.x + first.y)\r\n    let first270 = new draw2d.geo.Point(uv2.y + first.x, -uv2.x + first.y)\r\n\r\n    // center upside/downside anchor point of the connection\r\n    //\r\n    let second90 = new draw2d.geo.Point(-uv2.y + second.x, uv2.x + second.y)\r\n    let second270 = new draw2d.geo.Point(uv2.y + second.x, -uv2.x + second.y)\r\n\r\n    // anchor point in the third segment of the connection\r\n    //\r\n    let third90 = new draw2d.geo.Point(-uv2.y + third.x, uv2.x + third.y)\r\n    let third270 = new draw2d.geo.Point(uv2.y + third.x, -uv2.x + third.y)\r\n\r\n    // anchor point for the 180 arc at the end\r\n    //\r\n    let end90 = new draw2d.geo.Point(-uv.y + end.x, uv.x + end.y)\r\n    let end270 = new draw2d.geo.Point(uv.y + end.x, -uv.x + end.y)\r\n\r\n    // required for hit tests\r\n    //\r\n    connection.addPoint(start)\r\n    connection.addPoint(end)\r\n\r\n    // calculate the path\r\n    let path = [\"M\", start90.x, \",\", start90.y]\r\n    path.push(\"A\", thickness, \",\", thickness, \"0 0 1 \", start270.x, \",\", start270.y)\r\n    path.push(\"C\", start270.x, \",\", start270.y, first270.x, \",\", first270.y, second270.x, \",\", second270.y)\r\n    path.push(\"C\", second270.x, \",\", second270.y, third270.x, \",\", third270.y, end270.x, \",\", end270.y)\r\n    path.push(\"A\", thickness, \",\", thickness, \"0 0 1\", end90.x, \",\", end90.y)\r\n    path.push(\"C\", end90.x, \",\", end90.y, third90.x, \",\", third90.y, second90.x, \",\", second90.y)\r\n    path.push(\"C\", second90.x, \",\", second90.y, first90.x, \",\", first90.y, start90.x, \",\", start90.y)\r\n\r\n    connection.svgPathString = path.join(\" \")\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Provide a router which routes the connection in a hand drawn manner.\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.SketchConnectionRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let f1 = new draw2d.shape.analog.OpAmp({x:10, y:10});\r\n *    let f2 = new draw2d.shape.analog.ResistorVertical({angle:90, height:20, x:300, y:150});\r\n *\r\n *    // ...add it to the canvas\r\n *    //\r\n *    canvas.add( f1);\r\n *    canvas.add( f2);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(f1.getOutputPort(0));\r\n *    c.setTarget(f2.getHybridPort(0));\r\n *    canvas.add(c);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @since 2.7.2\r\n * @extends  draw2d.layout.connection.MazeConnectionRouter\r\n */\r\ndraw2d.layout.connection.SketchConnectionRouter = draw2d.layout.connection.MazeConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.SketchConnectionRouter.prototype */\r\n  {\r\n  NAME: \"draw2d.layout.connection.SketchConnectionRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object.\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n    this.useSpline = true\r\n    this.useShift = 5\r\n    this.useSimplifyValue = 0.2\r\n    this.finder = new PF.JumpPointFinder({allowDiagonal: false, dontCrossCorners: true})\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A ManhattanConnectionRouter with an spline interpolation between the bend points.\r\n *\r\n * @example\r\n *\r\n *    let createConnection=function(){\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.SplineConnectionRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // install a custom connection create policy\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *           createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let f1 = new draw2d.shape.analog.OpAmp({x:10, y:10});\r\n *    let f2 = new draw2d.shape.analog.ResistorVertical({angle:90, height:20, x:300, y:150});\r\n *\r\n *    // ...add it to the canvas\r\n *    //\r\n *    canvas.add( f1);\r\n *    canvas.add( f2);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(f1.getOutputPort(0));\r\n *    c.setTarget(f2.getHybridPort(0));\r\n *    canvas.add(c);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.layout.connection.ManhattanConnectionRouter\r\n */\r\ndraw2d.layout.connection.SplineConnectionRouter = draw2d.layout.connection.ManhattanConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.SplineConnectionRouter.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.connection.SplineConnectionRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n//        this.spline = new draw2d.util.spline.CatmullRomSpline();\r\n    this.spline = new draw2d.util.spline.CubicSpline()\r\n//        this.spline = new draw2d.util.spline.BezierSpline();\r\n\r\n    this.MINDIST = 50\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (conn, routingHints) {\r\n    let i\r\n    let fromPt = conn.getStartPoint()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPoint()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    // calculate the manhatten bend points between start/end.\r\n    //\r\n    this._route(conn, toPt, toDir, fromPt, fromDir)\r\n\r\n    let ps = conn.getVertices()\r\n    // if the start/end are too close, the router do not route anything at all - shortcut. But for the drawing routine\r\n    // and the later processing, we need at least two points - \"start\" and \"end\". we fix this here\r\n    if(ps.getSize()<2){\r\n      conn.addPoint(fromPt)\r\n    }\r\n\r\n    conn.oldPoint = null\r\n    conn.lineSegments = new draw2d.util.ArrayList()\r\n    conn.vertices = new draw2d.util.ArrayList()\r\n\r\n    let splinePoints = this.spline.generate(ps, 8)\r\n    splinePoints.each( (i, e) => {\r\n      conn.addPoint(e)\r\n    })\r\n\r\n    // calculate the path string for the SVG rendering\r\n    //\r\n    ps = conn.getVertices()\r\n    let length = ps.getSize()\r\n    let p = ps.get(0)\r\n    let path = [\"M\", p.x.toFixed(2), \" \", p.y.toFixed(2)]\r\n    for (i = 1; i < length; i++) {\r\n      p = ps.get(i)\r\n      path.push(\"L\", p.x.toFixed(2), \" \", p.y.toFixed(2))\r\n    }\r\n    conn.svgPathString = path.join(\"\")\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A Router with unlimited vertices.\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Override the default connection type. This is used during drag&drop operations of ports.\r\n *    //\r\n *    let createConnection=function(){\r\n *       // return my special kind of connection\r\n *       let con = new draw2d.Connection();\r\n *       con.setRouter(new draw2d.layout.connection.VertexRouter());\r\n *       return con;\r\n *    };\r\n *\r\n *    // Install a special policy into the canvas to use my own implementation of connection\r\n *    // if we drag&drop a port\r\n *    //\r\n *    canvas.installEditPolicy(  new draw2d.policy.connection.DragConnectionCreatePolicy({\r\n *          createConnection: createConnection\r\n *    }));\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    let end   = new draw2d.shape.node.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,80);\r\n *\r\n *    // first Connection\r\n *    //\r\n *    let c = createConnection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends  draw2d.layout.connection.ConnectionRouter\r\n */\r\ndraw2d.layout.connection.VertexRouter = draw2d.layout.connection.ConnectionRouter.extend(\r\n  /** @lends draw2d.layout.connection.VertexRouter.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.connection.VertexRouter\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback method if the router has been assigned to a connection.\r\n   *\r\n   * @param {draw2d.Connection} connection The assigned connection\r\n   * @template\r\n   * @since 2.7.2\r\n   */\r\n  onInstall: function (connection) {\r\n    connection.installEditPolicy(new draw2d.policy.line.VertexSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Invalidates the given Connection\r\n   */\r\n  invalidate: function () {\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  route: function (connection, routingHints) {\r\n    // reuse all existing vertex points\r\n    //\r\n    let count = routingHints.oldVertices.getSize()\r\n    for (let i = 0; i < count; i++) {\r\n      connection.addPoint(routingHints.oldVertices.get(i))\r\n    }\r\n\r\n    let ps = connection.getVertices()\r\n\r\n    // respect the calculated anchor position if the start/end port has set any Anchor impl.\r\n    let startAnchor = connection.getStartPosition(ps.get(1))\r\n    let endAnchor = connection.getEndPosition(ps.get(ps.getSize() - 2))\r\n    ps.first().setPosition(startAnchor)\r\n    ps.last().setPosition(endAnchor)\r\n\r\n    this._paint(connection)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback method for the PolyLine or Connection to check if it possible to remove a vertex from\r\n   * the list. The router can send an veto for this.\r\n   * Per default it is not possible to remove any vertex from the PolyLine exceptional if any interactive\r\n   * router is installed.\r\n   *\r\n   * @param {draw2d.Connection} conn\r\n   * @param {Number} index\r\n   *\r\n   * @since 4.2.3\r\n   */\r\n  canRemoveVertexAt: function (conn, index) {\r\n    return false\r\n  },\r\n\r\n  /**\r\n   * Callback method for the PolyLine or Connection to verify that a segment is deletable.\r\n   *\r\n   * @param {draw2d.Connection} conn\r\n   * @param {Number} index\r\n   *\r\n   * @returns {Boolean}\r\n   * @since 4.2.3\r\n   */\r\n  canRemoveSegmentAt: function (conn, index) {\r\n\r\n    let segmentCount = conn.getVertices().getSize() - 1 // segmentCount is one less than vertex count\r\n\r\n    // The first and last segment isn't deletable\r\n    //\r\n    if ((index <= 0) || (index >= segmentCount)) {\r\n      return false\r\n    }\r\n\r\n    // a connection need at least one strokes\r\n    //\r\n    return (segmentCount >= 2)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Tweak or enrich the polyline persistence data with routing information\r\n   *\r\n   * @since 2.10.0\r\n   * @param {draw2d.shape.basic.PolyLine} line\r\n   * @param {Object} memento The memento data of the polyline\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function (line, memento) {\r\n    memento.vertex = []\r\n\r\n    line.getVertices().each(function (i, e) {\r\n      memento.vertex.push({x: e.x, y: e.y})\r\n    })\r\n\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   *\r\n   * set the attributes for the polyline with routing information\r\n   *\r\n   * @since 2.10.0\r\n   * @param {Object} memento\r\n   */\r\n  setPersistentAttributes: function (line, memento) {\r\n    // restore the points from the JSON data and add them to the polyline\r\n    //\r\n    if (Array.isArray(memento.vertex) && memento.vertex.length > 1) {\r\n\r\n      line.oldPoint = null\r\n      line.lineSegments = new draw2d.util.ArrayList()\r\n\r\n      line.setVertices(memento.vertex)\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * The draw2d.Connection delegates the drag operation to the router. The router can\r\n   * handle the different constraints of the connection and just drag&drop a single segment\r\n   * instead of the complete connection.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} line the related line to handle\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   *\r\n   * @since 6.1.0\r\n   */\r\n  onDrag: function (line, dx, dy, dx2, dy2) {\r\n    let count = line.getVertices().getSize() - 1\r\n    for (let i = 1; i < count; i++) {\r\n      line.getVertex(i).translate(dx2, dy2)\r\n    }\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A bottomLocator is used to place figures at the bottom of a parent shape.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create a basic figure and add a Label/child via API call\r\n *    //\r\n *    let circle = new draw2d.shape.basic.Circle({\r\n *        x:100,\r\n *        y:50,\r\n *        diameter:100,\r\n *        stroke: 3,\r\n *        color:\"#A63343\",\r\n *        bgColor:\"#E65159\"\r\n *    });\r\n *\r\n *    circle.add(new draw2d.shape.basic.Label({text:\"Bottom Label\"}), new draw2d.layout.locator.BottomLocator());\r\n *    canvas.add( circle);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.BottomLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.BottomLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.BottomLocator\",\r\n\r\n  /**\r\n   *\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    let parent = target.getParent()\r\n    let boundingBox = parent.getBoundingBox()\r\n    // I made a wrong decision in the port handling: anchor point\r\n    // is in the center and not topLeft. Now I must correct this flaw here, and there, and...\r\n    // shit happens.\r\n    let offset = (parent instanceof draw2d.Port) ? boundingBox.w / 2 : 0\r\n\r\n\r\n    let targetBoundingBox = target.getBoundingBox()\r\n    if (target instanceof draw2d.Port) {\r\n      target.setPosition(boundingBox.w / 2 - offset, boundingBox.h)\r\n    }\r\n    else {\r\n      target.setPosition(boundingBox.w / 2 - targetBoundingBox.w / 2 - offset, 2 + boundingBox.h)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A CenterLocator is used to place figures in the center of a parent shape.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *\r\n *    // create a basic figure and add a Label/child via API call\r\n *    //\r\n *    let circle = new draw2d.shape.basic.Circle({diameter:120});\r\n *    circle.setStroke(3);\r\n *    circle.setColor(\"#A63343\");\r\n *    circle.setBackgroundColor(\"#E65159\");\r\n *    circle.add(new draw2d.shape.basic.Label({text:\"Center Label\"}), new draw2d.layout.locator.CenterLocator());\r\n *    canvas.add( circle, 100,50);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.CenterLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.CenterLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.CenterLocator\",\r\n\r\n  /**\r\n   * Constructs a locator with associated parent.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    let parent = target.getParent()\r\n    let boundingBox = parent.getBoundingBox()\r\n\r\n    // TODO: instanceof is always a HACK. ugly. Redirect the call to the figure instead of \r\n    // determine the position with a miracle.\r\n    //\r\n    if (target instanceof draw2d.Port) {\r\n      target.setPosition(boundingBox.w / 2, boundingBox.h / 2)\r\n    }\r\n    else {\r\n      let targetBoundingBox = target.getBoundingBox()\r\n      target.setPosition(((boundingBox.w / 2 - targetBoundingBox.w / 2) | 0) + 0.5, ((boundingBox.h / 2 - (targetBoundingBox.h / 2)) | 0) + 0.5)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Repositions a Figure attached to a Connection when the\r\n * Connection is moved. Provides for alignment at the start\r\n * (source), middle, or end (target) of the Connection.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.ConnectionLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.ConnectionLocator.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.locator.ConnectionLocator\",\r\n\r\n  /**\r\n   * Default constructor for a Locator which can layout a figure in context of a\r\n   * {@link draw2d.Connector}\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A DraggableLocator is used to place figures relative to the parent top left corner. It is\r\n * possible to move a child node via drag&drop.\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.DraggableLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.DraggableLocator.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.locator.DraggableLocator\",\r\n\r\n  /**\r\n   * Constructs a locator with associated parent.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  bind: function (parent, child) {\r\n    // override the parent implementation to avoid\r\n    // that the child is \"!selectable\" and \"!draggable\"\r\n\r\n    // Don't redirect the selection handling to the parent\r\n    // Using the DraggableLocator provides the ability to the children\r\n    // that they are selectable and draggable. Remove the SelectionAdapter from the parent\r\n    // assignment.\r\n    child.setSelectionAdapter(() => child)\r\n  },\r\n\r\n  unbind: function (parent, child) {\r\n    // use default\r\n    child.setSelectionAdapter(null)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Repositions a Figure attached to a Connection when the\r\n * Connection is moved. Provides for alignment at the start\r\n * (source), middle, or end (target) of the Connection.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.PortLocator\r\n */\r\ndraw2d.layout.locator.InputPortLocator = draw2d.layout.locator.PortLocator.extend(\r\n  /** @lends draw2d.layout.locator.InputPortLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.InputPortLocator\",\r\n\r\n  /**\r\n   * Default constructor for a Locator which can layout a port in context of a\r\n   * {@link draw2d.shape.node.Node}\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Controls the location of an {@link draw2d.Figure}\r\n   *\r\n   * @param {Number} index port index of the figure\r\n   * @param {draw2d.Figure} figure the figure to control\r\n   *\r\n   * @template\r\n   **/\r\n  relocate: function (index, figure) {\r\n    let node = figure.getParent()\r\n\r\n    let dividerFactor = 1\r\n    let thisNAME = this.NAME\r\n    let portIndex = 1\r\n    node.getPorts().each((i, p) => {\r\n      portIndex = (p === figure) ? dividerFactor : portIndex\r\n      dividerFactor += p.getLocator().NAME === thisNAME ? 1 : 0\r\n    })\r\n    this.applyConsiderRotation(figure, 0, (node.getHeight() / dividerFactor) * portIndex)\r\n  }\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A LeftLocator is used to place figures to the left of a parent shape.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create a basic figure and add a Label/child via API call\r\n *    //\r\n *    let start = new draw2d.shape.node.Start();\r\n *    start.add(new draw2d.shape.basic.Label({text:\"Left Label\"}), new draw2d.layout.locator.LeftLocator({\r\n *     margin:10  // distance to the parent shape\r\n *    }));\r\n *    canvas.add( start, 100,50);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.LeftLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.LeftLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.LeftLocator\",\r\n\r\n  /**\r\n   * Constructs a locator with associated parent.\r\n   *\r\n   * @param {Object} attr additional init attributes\r\n   * @param {Object} setter key/value map of injected setter-methods\r\n   * @param {Object} getter key/value map of injected getter-methods\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter,getter)\r\n\r\n    this.margin = (attr && (\"margin\" in attr)) ? attr.margin : 5\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    let parent = target.getParent()\r\n    let boundingBox = parent.getBoundingBox()\r\n\r\n    // I made a wrong decision in the port handling: anchor point\r\n    // is in the center and not topLeft. Now I must correct this flaw here, and there, and...\r\n    // shit happens.\r\n    let offset = (parent instanceof draw2d.Port) ? boundingBox.h / 2 : 0\r\n\r\n\r\n    if (target instanceof draw2d.Port) {\r\n      target.setPosition(0, (boundingBox.h / 2) - offset)\r\n    }\r\n    else {\r\n      let targetBoundingBox = target.getBoundingBox()\r\n      target.setPosition(-targetBoundingBox.w - this.margin, (boundingBox.h / 2) - (targetBoundingBox.h / 2) - offset)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Controls the location of an IFigure.\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.layout.locator.Locator = Class.extend(\r\n  /** @lends draw2d.layout.locator.Locator.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.layout.locator.Locator\",\r\n\r\n    /**\r\n     * Initial Constructor\r\n     *\r\n     * @param {Object} attr additional init attributes\r\n     * @param {Object} setter key/value map of injected setter-methods\r\n     * @param {Object} getter key/value map of injected getter-methods\r\n     */\r\n    init: function (attr, setter, getter) {\r\n\r\n      this.setterWhitelist = {...setter}\r\n      this.getterWhitelist = {...getter}\r\n      \r\n      // propagate the attr to the new instance\r\n      this.attr(attr)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read or set locator attributes.<br>\r\n     * When no value is given, reads specified attribute from the element.<br>\r\n     * When value is given, sets the attribute to that value.\r\n     * Multiple attributes can be set by passing an object with name-value pairs.\r\n     *\r\n     *\r\n     *    // multiple attributes:\r\n     *    locator.attr({\r\n     *      x: 30,\r\n     *      y: 40\r\n     *    });\r\n     *\r\n     *    let data = locator.attr()\r\n     *\r\n     *\r\n     * @param {String/Object} name\r\n     * @param {Object} [value]\r\n     * @since 5.0.1\r\n     * @experimental\r\n     * @returns {Object} either the requested attribute if this method used as getter or `this` if the method uses as setter\r\n     **/\r\n    attr: function (name, value) {\r\n      let _this = this\r\n\r\n      // call of attr as setter method with {name1:val1, name2:val2 }  argument list\r\n      //\r\n      if ($.isPlainObject(name)) {\r\n        for (let key in name) {\r\n          let func = this.setterWhitelist[key]\r\n          let param = name[key]\r\n          if (func && param !== undefined) {\r\n            func.call(this, param)\r\n          }\r\n        }\r\n      } else if (typeof name === \"string\") {\r\n        // call attr as getter\r\n        //\r\n        if (typeof value === \"undefined\") {\r\n          let getter = this.getterWhitelist[name]\r\n          if (typeof getter === \"function\") {\r\n            return getter.call(this)\r\n          }\r\n          return // undefined\r\n        }\r\n\r\n        // the value can be a function. In this case we must call the value().\r\n        if (typeof value === \"function\") {\r\n          value = value()\r\n        }\r\n        let setter = this.setterWhitelist[name]\r\n        if (setter) {\r\n          setter.call(this, value)\r\n        }\r\n      }\r\n      // may it is a array of attributes used for the getter\r\n      //\r\n      else if (Array.isArray(name)) {\r\n        return Object.assign({}, ...Object.keys(name).map(k => ({[k]: _this.attr(k)})))\r\n      }\r\n      // generic getter of all registered attributes\r\n      else if (typeof name === \"undefined\") {\r\n        let result = {}\r\n        for (let key in this.getterWhitelist) {\r\n          result[key] = this.getterWhitelist[key].call(this)\r\n        }\r\n        return result\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback method if a child is bounded to a parent. This is\r\n     * the perfect moment to prepare the child node with some basic\r\n     * behaviour which are forced by the <code>Locator</code>\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {draw2d.Figure} child\r\n     * @returns {this}\r\n     */\r\n    bind: function (figure, child) {\r\n      // default behaviour of an Locator. The child isn't draggable and\r\n      // the locator defines the position of the child.\r\n      //\r\n      child.setDraggable(false)\r\n      child.setSelectable(false)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback method if a child is unbounded to the locator.\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {draw2d.Figure} child\r\n     * @returns {this}\r\n     */\r\n    unbind: function (figure, child) {\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Controls the location of an I{@link draw2d.Figure}\r\n     *\r\n     * @param {Number} index child index of the figure\r\n     * @param {draw2d.Figure} figure the figure to control\r\n     *\r\n     * @private\r\n     **/\r\n    relocate: function (index, figure) {\r\n      // just repaint the child to update the SVG related to the new location\r\n      // of the parent.\r\n      figure.repaint()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return a clone of the locator object\r\n     *\r\n     * @returns {draw2d.layout.locator.Locator}\r\n     */\r\n    clone: function () {\r\n      return Function(`return new ${this.NAME}()`)()\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A ManhattanMidpointLocator that is used to place figures at the midpoint of a Manhatten routed\r\n * connection. The midpoint is always in the center of an edge.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create and add two Node which contains Ports (In and OUT)\r\n *    let start = new draw2d.shape.node.Start({x:50,y:50});\r\n *    let end   = new draw2d.shape.node.End({x:230,y:100});\r\n *\r\n *    canvas.add( start);\r\n *    canvas.add( end);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    let c = new draw2d.Connection();\r\n *    c.setSource(start.getOutputPort(0));\r\n *    c.setTarget(end.getInputPort(0));\r\n *    canvas.add(c);\r\n *\r\n *    // create a label which should attach to the connection\r\n *    //\r\n *    let label = new draw2d.shape.basic.Label({text:\"I'm a Label\"});\r\n *    label.setColor(\"#0d0d0d\");\r\n *    label.setFontColor(\"#0d0d0d\");\r\n *    label.setBackgroundColor(\"#f0f0f0\");\r\n *\r\n *    // add the decoration to the connection with a ManhattanMidpointLocator.\r\n *    //\r\n *    c.add(label, new draw2d.layout.locator.ManhattanMidpointLocator());\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.layout.locator.ConnectionLocator\r\n */\r\ndraw2d.layout.locator.ManhattanMidpointLocator = draw2d.layout.locator.ConnectionLocator.extend(\r\n  /** @lends draw2d.layout.locator.ManhattanMidpointLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.ManhattanMidpointLocator\",\r\n\r\n  /**\r\n   * Constructs a ManhattanMidpointLocator with associated Connection c.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Relocates the given Figure always in the center of an edge.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    let conn = target.getParent()\r\n    let points = conn.getVertices()\r\n\r\n    let segmentIndex = Math.floor((points.getSize() - 2) / 2)\r\n    if (points.getSize() <= segmentIndex + 1)\r\n      return\r\n\r\n    let p1 = points.get(segmentIndex)\r\n    let p2 = points.get(segmentIndex + 1)\r\n\r\n    target.setPosition(\r\n      ((p2.x - p1.x) / 2 + p1.x - target.getWidth() / 2) | 0,\r\n      ((p2.y - p1.y) / 2 + p1.y - target.getHeight() / 2) | 0)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Repositions a Figure attached to a Connection when the\r\n * Connection is moved. Provides for alignment at the start\r\n * (source), middle, or end (target) of the Connection.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.PortLocator\r\n */\r\ndraw2d.layout.locator.OutputPortLocator = draw2d.layout.locator.PortLocator.extend(\r\n  /** @lends draw2d.layout.locator.OutputPortLocator.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.locator.OutputPortLocator\",\r\n\r\n  /**\r\n   * Default constructor for a Locator which can layout a port in context of a\r\n   * {@link draw2d.shape.node.Node}\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Controls the location of an I{@link draw2d.Figure}\r\n   *\r\n   * @param {Number} index child index of the figure\r\n   * @param {draw2d.Figure} figure the figure to control\r\n   *\r\n   * @template\r\n   **/\r\n  relocate: function (index, figure) {\r\n    let node = figure.getParent()\r\n    let dividerFactor = 1\r\n    let thisNAME = this.NAME\r\n    let portIndex = 1\r\n    node.getPorts().each((i, p) => {\r\n      portIndex = (p === figure) ? dividerFactor : portIndex\r\n      dividerFactor += p.getLocator().NAME === thisNAME ? 1 : 0\r\n    })\r\n    this.applyConsiderRotation(figure, node.getWidth(), (node.getHeight() / dividerFactor) * portIndex)\r\n  }\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A ParallelMidpointLocator that is used to place label at the midpoint of a  routed\r\n * connection. The midpoint is always in the center of an edge.\r\n * The label is aligned to the connection angle at the calculated conection segment.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.ConnectionLocator\r\n * @since 4.4.4\r\n */\r\ndraw2d.layout.locator.ParallelMidpointLocator = draw2d.layout.locator.ConnectionLocator.extend(\r\n  /** @lends draw2d.layout.locator.ParallelMidpointLocator.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.layout.locator.ParallelMidpointLocator\",\r\n\r\n    /**\r\n     * Constructs a ParallelMidpointLocator with optional padding to the connection.\r\n     *\r\n     * if the parameter <b>distance</b> is less than zero the label is\r\n     * placed above of the connection. Else the label is below the connection.\r\n     *\r\n     * @param {Object} attr object with {distance: <NUMBER>>} distance of the label to the connection.\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.distance = 0\r\n\r\n      this._super(\r\n        {distance: -5, ...attr},\r\n        {x: this.setDistance,...setter},\r\n        {distance: this.getDistance,...getter}\r\n      )\r\n    },\r\n\r\n    /**\r\n     * Set the distance to the connection\r\n     *\r\n     * @param {Number} distance the distance to the connection\r\n     * @returns {this}\r\n     */\r\n    setDistance: function (distance) {\r\n      this.distance = distance\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Returns the distance to the connection\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getDistance: function () {\r\n      return this.distance\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Relocates the given Figure always in the center of an edge.\r\n     *\r\n     * @param {Number} index child index of the target\r\n     * @param {draw2d.Figure} target The figure to relocate\r\n     **/\r\n    relocate: function (index, target) {\r\n      let conn = target.getParent()\r\n      let points = conn.getVertices()\r\n\r\n      let segmentIndex = Math.floor((points.getSize() - 2) / 2)\r\n      if (points.getSize() <= segmentIndex + 1) {\r\n        return\r\n      }\r\n\r\n      let p1 = points.get(segmentIndex)\r\n      let p2 = points.get(segmentIndex + 1)\r\n\r\n      // calculate the distance of the label (above or below the connection)\r\n      let distance = this.distance <= 0 ? this.distance - target.getHeight() : this.distance\r\n\r\n      // get the angle of the segment\r\n      let nx = p1.x - p2.x\r\n      let ny = p1.y - p2.y\r\n      let length = Math.sqrt(nx * nx + ny * ny)\r\n      let radian = -Math.asin(ny / length)\r\n      let angle = (180 / Math.PI) * radian\r\n      if (radian < 0) {\r\n        if (p2.x < p1.x) {\r\n          radian = Math.abs(radian) + Math.PI\r\n          angle = 360 - angle\r\n          distance = -distance - target.getHeight()\r\n        } else {\r\n          radian = Math.PI * 2 - Math.abs(radian)\r\n          angle = 360 + angle\r\n        }\r\n      } else {\r\n        if (p2.x < p1.x) {\r\n          radian = Math.PI - radian\r\n          angle = 360 - angle\r\n          distance = -distance - target.getHeight()\r\n        }\r\n      }\r\n\r\n      let rotAnchor = this.rotate(length / 2 - target.getWidth() / 2, distance, 0, 0, radian)\r\n\r\n      // rotate the x/y coordinate with the calculated angle around \"p1\"\r\n      //\r\n      let rotCenterOfLabel = this.rotate(0, 0, target.getWidth() / 2, target.getHeight() / 2, radian)\r\n\r\n      target.setRotationAngle(angle)\r\n      target.setPosition(rotAnchor.x - rotCenterOfLabel.x + p1.x, rotAnchor.y - rotCenterOfLabel.y + p1.y)\r\n    },\r\n\r\n    rotate: function (x, y, xm, ym, radian) {\r\n      let cos = Math.cos,\r\n        sin = Math.sin\r\n\r\n      // Subtract midpoints, so that midpoint is translated to origin\r\n      // and add it in the end again\r\n      return {\r\n        x: (x - xm) * cos(radian) - (y - ym) * sin(radian) + xm,\r\n        y: (x - xm) * sin(radian) + (y - ym) * cos(radian) + ym\r\n      }\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A PolylineMidpointLocator is used to place figures at the midpoint of a routed\r\n * connection. <br>\r\n * If the connection did have an odd count of points the figure is located in the center vertex of the polyline.<br>\r\n * On an even count of junction point, the figure will be center on the middle segment of the ploy line.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.ManhattanMidpointLocator\r\n */\r\ndraw2d.layout.locator.PolylineMidpointLocator = draw2d.layout.locator.ManhattanMidpointLocator.extend(\r\n  /** @lends draw2d.layout.locator.PolylineMidpointLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.PolylineMidpointLocator\",\r\n\r\n  /**\r\n   * Constructs a ManhattanMidpointLocator with associated Connection c.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    var conn = target.getParent()\r\n    var points = conn.getVertices()\r\n\r\n    // it has an event count of points -> use the manhattan algorithm...this is working\r\n    // well in this case\r\n    if (points.getSize() % 2 === 0) {\r\n      this._super(index, target)\r\n    }\r\n    // odd count of points. take the center point as fulcrum\r\n    else {\r\n      var index = Math.floor(points.getSize() / 2)\r\n      var p1 = points.get(index)\r\n      target.setPosition(p1.x - (target.getWidth() / 2), p1.y - (target.getHeight() / 2))\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The port locator calculates the position of an port. All ports MUST have a locator\r\n * if you add them as child to a node.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.PortLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.PortLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.PortLocator\",\r\n\r\n  /**\r\n   * Default constructor for a Locator which can layout a port in context of a\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  applyConsiderRotation: function (port, x, y) {\r\n    let parent = port.getParent()\r\n\r\n    // determine the width/height before manipulate the \r\n    // matrix of the shape\r\n    let halfW = parent.getWidth() / 2\r\n    let halfH = parent.getHeight() / 2\r\n\r\n    let rotAngle = parent.getRotationAngle()\r\n    let m = Raphael.matrix()\r\n    m.rotate(rotAngle, halfW, halfH)\r\n    if (rotAngle === 90 || rotAngle === 270) {\r\n      let ratio = parent.getHeight() / parent.getWidth()\r\n      m.scale(ratio, 1 / ratio, halfW, halfH)\r\n    }\r\n\r\n    port.setPosition(m.x(x, y), m.y(x, y))\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A RightLocator is used to place figures to the right of a parent shape.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *\r\n *    // create a basic figure and add a Label/child via API call\r\n *    //\r\n *    var end = new draw2d.shape.node.End();\r\n *    end.add(new draw2d.shape.basic.Label({text:\"Right Label\"}), new draw2d.layout.locator.RightLocator({\r\n *         margin: 10 // distance to the parent shape\r\n *    }));\r\n *    canvas.add( end, 50,50);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.RightLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.RightLocator.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.layout.locator.RightLocator\",\r\n\r\n  /**\r\n   * Constructs a locator with associated parent.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.margin = (attr && (\"margin\" in attr)) ? attr.margin : 5\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    var parent = target.getParent()\r\n    var boundingBox = parent.getBoundingBox()\r\n\r\n    // I made a wrong decision in the port handling: anchor point\r\n    // is in the center and not topLeft. Now I must correct this flaw here, and there, and...\r\n    // shit happens.\r\n    var offset = (parent instanceof draw2d.Port) ? boundingBox.h / 2 : 0\r\n\r\n    if (target instanceof draw2d.Port) {\r\n      target.setPosition(boundingBox.w, (boundingBox.h / 2) - offset)\r\n    }\r\n    else {\r\n      var targetBoundingBox = target.getBoundingBox()\r\n      target.setPosition(boundingBox.w + this.margin, (boundingBox.h / 2) - (targetBoundingBox.h / 2) - offset)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A DraggableLocator is used to place figures relative to the parent nearest corner. It is\r\n * possible to move a child node via drag&drop.\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.SmartDraggableLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.SmartDraggableLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.SmartDraggableLocator\",\r\n\r\n  /**\r\n   * Constructs a locator with associated parent.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    // description see \"bind\" method\r\n    this.boundedCorners = {\r\n      init: false,\r\n      parent: 0,\r\n      child: 0,\r\n      dist: Number.MAX_SAFE_INTEGER,\r\n      xOffset: 0,\r\n      yOffset: 0\r\n    }\r\n\r\n  },\r\n\r\n  bind: function (parent, child) {\r\n    let _this = this\r\n    // determine the best corner of the parent/child node and stick to the calculated corner\r\n    // In the example below it is R1.2 in combination with R2.0\r\n    //\r\n    //     0             1\r\n    //      +-----------+\r\n    //      |           |\r\n    //      |    R1     |\r\n    //      +-----------+\r\n    //     3             2\r\n    //\r\n    //              0             1\r\n    //               +-----------+\r\n    //               |           |\r\n    //               |    R2     |\r\n    //               +-----------+\r\n    //              3             2\r\n    //\r\n    let calcBoundingCorner = function () {\r\n      _this.boundedCorners = {\r\n        init: false,\r\n        parent: 0,\r\n        child: 0,\r\n        dist: Number.MAX_SAFE_INTEGER,\r\n        xOffset: 0,\r\n        yOffset: 0\r\n      }\r\n      let parentVertices = child.getParent().getBoundingBox().getVertices()\r\n      let childVertices = child.getBoundingBox().getVertices()\r\n      let i_parent, i_child\r\n      let p1, p2, distance\r\n      for (i_parent = 0; i_parent < parentVertices.getSize(); i_parent++) {\r\n        for (i_child = 0; i_child < childVertices.getSize(); i_child++) {\r\n          p1 = parentVertices.get(i_parent)\r\n          p2 = childVertices.get(i_child)\r\n          distance = Math.abs(p1.distance(p2))\r\n          if (distance < _this.boundedCorners.dist) {\r\n            _this.boundedCorners = {\r\n              parent: i_parent,\r\n              child: i_child,\r\n              dist: distance,\r\n              xOffset: p1.x - p2.x,\r\n              yOffset: p1.y - p2.y\r\n            }\r\n          }\r\n        }\r\n      }\r\n      _this.boundedCorners.init = true\r\n    }\r\n\r\n    // override the parent implementation to avoid\r\n    // that the child is \"!selectable\" and \"!draggable\"\r\n\r\n    // Don't redirect the selection handling to the parent\r\n    // Using the DraggableLocator provides the ability to the children\r\n    // that they are selectable and draggable. Remove the SelectionAdapter from the parent\r\n    // assignment.\r\n    child.setSelectionAdapter( () => child)\r\n\r\n    child.getParent().on(\"added\", calcBoundingCorner)\r\n    child.on(\"dragend\", calcBoundingCorner)\r\n  },\r\n\r\n  unbind: function (parent, child) {\r\n    // use default\r\n    child.setSelectionAdapter(null)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Controls the location of an I{@link draw2d.Figure}\r\n   *\r\n   * @param {Number} index child index of the figure\r\n   * @param {draw2d.Figure} figure the figure to control\r\n   *\r\n   * @template\r\n   **/\r\n  relocate: function (index, figure) {\r\n    this._super(index, figure)\r\n    if (this.boundedCorners.init === true) {\r\n      let parentVertices = figure.getParent().getBoundingBox().getVertices()\r\n      let childVertices = figure.getBoundingBox().getVertices()\r\n      let p1 = parentVertices.get(this.boundedCorners.parent)\r\n      let p2 = childVertices.get(this.boundedCorners.child)\r\n\r\n      let xOffset = p1.x - p2.x\r\n      let yOffset = p1.y - p2.y\r\n      // restore the initial distance from the corner by adding the new offset\r\n      // to the position of the child\r\n      figure.translate(xOffset - this.boundedCorners.xOffset, yOffset - this.boundedCorners.yOffset)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A TopLocator  is used to place figures at the top/center of a parent shape.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create a basic figure and add a Label/child via API call\r\n *    //\r\n *    let circle = new draw2d.shape.basic.Circle({\r\n *        x:100,\r\n *        y:70,\r\n *        diameter:80,\r\n *        stroke: 3,\r\n *        color:\"#A63343\",\r\n *        bgColor:\"#E65159\"\r\n *    });\r\n *\r\n *    circle.add(new draw2d.shape.basic.Label({text:\"Top Label\"}), new draw2d.layout.locator.TopLocator());\r\n *    canvas.add( circle);\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.Locator\r\n */\r\ndraw2d.layout.locator.TopLocator = draw2d.layout.locator.Locator.extend(\r\n  /** @lends draw2d.layout.locator.TopLocator.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.layout.locator.TopLocator\",\r\n\r\n  /**\r\n   * Constructs a ManhattanMidpointLocator with associated Connection c.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Relocates the given Figure.\r\n   *\r\n   * @param {Number} index child index of the target\r\n   * @param {draw2d.Figure} target The figure to relocate\r\n   **/\r\n  relocate: function (index, target) {\r\n    let parent = target.getParent()\r\n    let boundingBox = parent.getBoundingBox()\r\n\r\n    // I made a wrong decision in the port handling: anchor point\r\n    // is in the center and not topLeft. Now I must correct this flaw here, and there, and...\r\n    // shit happens.\r\n    let offset = (parent instanceof draw2d.Port) ? boundingBox.w / 2 : 0\r\n\r\n\r\n    let targetBoundingBox = target.getBoundingBox()\r\n    if (target instanceof draw2d.Port) {\r\n      target.setPosition(boundingBox.w / 2 - offset, 0)\r\n    }\r\n    else {\r\n      target.setPosition(boundingBox.w / 2 - (targetBoundingBox.w / 2) - offset, -(targetBoundingBox.h + 2))\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Create a locator for fixed x/y coordinate position. The port in the example below is\r\n * always 20px below of the top border.\r\n *\r\n *\r\n * @example\r\n *\r\n *    var figure =  new draw2d.shape.basic.Rectangle({x:130,y:30,width:100,height:60});\r\n *    figure.createPort(\"input\", new draw2d.layout.locator.XYAbsPortLocator(0,20));\r\n *\r\n *    canvas.add(figure);\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.PortLocator\r\n * @since 4.0.0\r\n */\r\ndraw2d.layout.locator.XYAbsPortLocator = draw2d.layout.locator.PortLocator.extend(\r\n  /** @lends draw2d.layout.locator.XYAbsPortLocator.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.layout.locator.XYAbsPortLocator\",\r\n\r\n    /**\r\n     *\r\n     * {@link draw2d.shape.node.Node}\r\n     *\r\n     * @param {Number} x the x coordinate of the port relative to the left of the parent\r\n     * @param {Number} y the y coordinate of the port relative to the top of the parent\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.x = 0\r\n      this.y = 0\r\n\r\n      this._super(attr,\r\n        {\r\n          x: this.setX,\r\n          y: this.setY,\r\n         ...setter},\r\n        {\r\n          x: this.getX,\r\n          y: this.getY,\r\n          ...getter})\r\n    },\r\n\r\n    /**\r\n     * Set the X Offset for the Locator\r\n     * @param {Number} x\r\n     */\r\n    setX: function (x) {\r\n      this.x = x\r\n    },\r\n\r\n    /**\r\n     * Set the y-offset of the locator\r\n     *\r\n     * @param {Number} y\r\n     */\r\n    setY: function (y) {\r\n      this.y = y\r\n    },\r\n\r\n    /**\r\n     * Get the X-Offset of the Locator\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getX: function(){\r\n      return this.x\r\n    },\r\n\r\n    /**\r\n     * Returns the Y-Offset of the Locator\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getY: function(){\r\n      return this.y\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Controls the location of an {@link draw2d.Figure}\r\n     *\r\n     * @param {Number} index child index of the figure\r\n     * @param {draw2d.Figure} figure the figure to control\r\n     *\r\n     * @template\r\n     **/\r\n    relocate: function (index, figure) {\r\n      this.applyConsiderRotation(figure, this.x, this.y)\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Create a locator for a relative x/y coordinate position. The coordinates are named in percentage [0..100%]\r\n * relative to the top/left corner of the parent node.<br>\r\n * <br>\r\n * <br>\r\n * Resize the shape in the example to see what happens. The port top position is always 20% of the shape height.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.basic.Rectangle({x:130,y:30,width:100,height:60});\r\n *    figure.createPort(\"input\", new draw2d.layout.locator.XYRelPortLocator(0,20));\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.locator.PortLocator\r\n * @since 4.0.0\r\n */\r\ndraw2d.layout.locator.XYRelPortLocator = draw2d.layout.locator.PortLocator.extend(\r\n  /** @lends draw2d.layout.locator.XYRelPortLocator.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.layout.locator.XYRelPortLocator\",\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {Number} xPercentage the x coordinate in percent of the port relative to the left of the parent\r\n     * @param {Number} yPercentage the y coordinate in percent of the port relative to the top of the parent\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      // legacy code handling for calls like this:\r\n      // new draw2d.layout.locator.XYRelPortLocator(10,30)\r\n      if(typeof attr ===\"number\" && typeof setter === \"number\"){\r\n        this.x = attr\r\n        this.y = setter\r\n        this._super()\r\n      }\r\n      // new constructor\r\n      // new draw2d.layout.locator.XYRelPortLocator({x:10, y:30}})\r\n      else {\r\n        this.x = 0\r\n        this.y = 0\r\n        this._super(attr,\r\n          {\r\n            x: this.setX,\r\n            y: this.setY,\r\n            ...setter},\r\n          {\r\n            x: this.getX,\r\n            y: this.getY,\r\n            ...getter})\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * Set the X Offset for the Locator\r\n     * @param {Number} x\r\n     */\r\n    setX: function (x) {\r\n      this.x = x\r\n    },\r\n\r\n    /**\r\n     * Set the y-offset of the locator\r\n     *\r\n     * @param {Number} y\r\n     */\r\n    setY: function (y) {\r\n      this.y = y\r\n    },\r\n\r\n    /**\r\n     * Get the X-Offset of the Locator\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getX: function () {\r\n      return this.x\r\n    },\r\n\r\n    /**\r\n     * Returns the Y-Offset of the Locator\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getY: function () {\r\n      return this.y\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Controls the location of an I{@link draw2d.Figure}\r\n     *\r\n     * @param {Number} index child index of the figure\r\n     * @param {draw2d.Figure} figure the figure to control\r\n     *\r\n     * @template\r\n     **/\r\n    relocate: function (index, figure) {\r\n      let parent = figure.getParent()\r\n\r\n      this.applyConsiderRotation(\r\n        figure,\r\n        parent.getWidth() / 100 * this.x,\r\n        parent.getHeight() / 100 * this.y\r\n      )\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n","\r\n/**\r\n * @class\r\n * Routes a {@link draw2d.Connection}, possibly using a constraint.\r\n *\r\n * @author Andreas Herz\r\n * @extend draw2d.layout.mesh.MeshLayouter\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.layout.mesh.ExplodeLayouter = draw2d.layout.mesh.MeshLayouter.extend(\r\n  /** @lends draw2d.layout.mesh.ExplodeLayouter.prototype */\r\n  {\r\n\r\n\tMIN_MARGIN : 40,\r\n\t\r\n\t/**\r\n\t * Creates a new layouter object.\r\n\t */\r\n    init: function()\r\n\t{\r\n    },\r\n    \r\n    /**\r\n     *\r\n     * Return a changes list for an existing mesh/canvas to ensure that the element to insert \r\n     * did have enough space.\r\n     * \r\n     * @param {draw2d.Canvas} canvas the canvas to use for the analytic\r\n     * @param {draw2d.Figure} figure The figure to add to the exising canvas\r\n     * @param {Number} x requested x-position for the figure\r\n     * @param {Number} y requested y-position for the figure\r\n     * \r\n     * \r\n     * @returns {draw2d.util.ArrayList} a list of changes to apply if the user want to insert he figure.\r\n     */\r\n    add: function( canvas, figureToAdd)\r\n    {\r\n    \t// changes for the different octant areas\r\n    \tvar changes = [];\r\n    \tchanges[0]= {x:0, y:0};\r\n    \tchanges[1]= {x:0, y:0};\r\n    \tchanges[2]= {x:0, y:0};\r\n    \tchanges[3]= {x:0, y:0};\r\n    \tchanges[4]= {x:0, y:0};\r\n    \tchanges[5]= {x:0, y:0};\r\n    \tchanges[6]= {x:0, y:0};\r\n    \tchanges[7]= {x:0, y:0};\r\n    \tchanges[8]= {x:0, y:0};\r\n\r\n    \tvar boundingBox = figureToAdd.getBoundingBox();\r\n\r\n    \tvar figures = canvas.getFigures();\r\n    \tvar figure = null;\r\n    \t\r\n    \tvar dis=0;\r\n    \tvar oct =0;\r\n    \tvar currentOctChanges =null;\r\n    \tvar i=0;\r\n    \tfor( i=0; i< figures.getSize();i++){\r\n    \t\t\r\n    \t\tfigure = figures.get(i);\r\n    \t\t\r\n    \t\t// calculate the distance of all corners in relation to the requested x/y coordinate\r\n    \t\t//\r\n    \t\tif(figure !== figureToAdd ){\r\n    \t\t\tdis = figure.getBoundingBox().getDistance(boundingBox);\r\n    \t\t\t// other figure is to close\r\n    \t\t\t//\r\n    \t\t\tif(dis<this.MIN_MARGIN){\r\n    \t\t\t\t// determine the octant of the figure\r\n    \t\t\t\toct = this.determineOctant(boundingBox, figure.getBoundingBox());\r\n        \t\t\t\r\n    \t\t\t\t// all other relevant segments must be arranged too!!\r\n    \t\t\t\t//\r\n        \t\t\tswitch(oct){\r\n        \t\t\tcase 2:\r\n        \t\t\t\tchanges[2].x =  Math.max(changes[2].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[3].x =  Math.max(changes[3].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[4].x =  Math.max(changes[4].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tbreak;\r\n        \t\t\tcase 3:\r\n        \t\t\t\tchanges[2].x =  Math.max(changes[2].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[3].x =  Math.max(changes[3].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[4].x =  Math.max(changes[4].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tbreak;\r\n        \t\t\tcase 4:\r\n        \t\t\t\tchanges[2].x =  Math.max(changes[2].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[3].x =  Math.max(changes[3].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[4].x =  Math.max(changes[4].x,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[4].y =  Math.max(changes[4].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[5].y =  Math.max(changes[5].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[6].y =  Math.max(changes[6].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tbreak;\r\n        \t\t\tcase 5:\r\n        \t\t\t\tchanges[4].y =  Math.max(changes[4].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[5].y =  Math.max(changes[5].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[6].y =  Math.max(changes[6].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tbreak;\r\n        \t\t\tcase 6:\r\n        \t\t\t\tchanges[4].y =  Math.max(changes[4].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[5].y =  Math.max(changes[5].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tchanges[6].y =  Math.max(changes[6].y,this.MIN_MARGIN-dis);\r\n        \t\t\t\tbreak;\r\n        \t\t\tcase 8:\r\n        \t\t\t\t// overlapping\r\n        \t\t\t\t// we must determine the new distance with the border of the figures\r\n        \t\t\t\tdis = (boundingBox.getBottomRight().getDistance(figure.getBoundingBox().getTopLeft()))|0;\r\n        \t\t\t\t\r\n        \t\t\t\tchanges[2].x =  Math.max(changes[2].x,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[3].x =  Math.max(changes[3].x,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[4].x =  Math.max(changes[4].x,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[4].y =  Math.max(changes[4].y,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[5].y =  Math.max(changes[5].y,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[6].y =  Math.max(changes[6].y,this.MIN_MARGIN+dis);\r\n        \t\t\t\tchanges[8].x =  Math.max(changes[8].x,this.MIN_MARGIN+dis);\r\n//        \t\t\t\tchanges[8].y =  Math.max(changes[8].y,this.MIN_MARGIN+dis);\r\n        \t\t\t}\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\t// Falls die minimale Distance zu den Objecten kleiner 80 ist, muss ein layout erfolgen\r\n    \t}\r\n\r\n    \t// calculate the adjustment for each figure\r\n    \t//\r\n    \tvar result = new draw2d.util.ArrayList();\r\n    \tfor( i=0; i< figures.getSize();i++){\r\n    \t\tfigure = figures.get(i);\r\n    \t\tif(figure !== figureToAdd ){\r\n\t\t\t\toct = this.determineOctant(boundingBox, figure.getBoundingBox());\r\n\t\t\t\tcurrentOctChanges = changes[oct];\r\n\t\t\t\tif(currentOctChanges.x!==0 || currentOctChanges.y!==0){\r\n\t\t\t\t\tresult.add(new draw2d.layout.mesh.ProposedMeshChange(figure, currentOctChanges.x,currentOctChanges.y));\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \treturn result;\r\n    },\r\n    \r\n    \r\n    /**\r\n     *\r\n     * Determin Octant\r\n\t *\r\n\t *    0 | 1 | 2\r\n\t *    __|___|__\r\n\t *    7 | 8 | 3\r\n     *    __|___|__\r\n\t *    6 | 5 | 4\r\n     *\r\n\t * @returns {Number}\r\n     */\r\n    determineOctant: function(r1, r2){\r\n\t\tvar ox = r1.x;\r\n\t\tvar oy = r1.y;\r\n\t\tvar ow = r1.w;\r\n\t\tvar oh = r1.h;\r\n\t\t\r\n\t\tvar cx = r2.x;\r\n\t\tvar cy = r2.y;\r\n\t\tvar cw = r2.w;\r\n\t\tvar ch = r2.h;\r\n\t\tvar oct =0;\r\n\r\n\t\tif(cx + cw <= ox){\r\n\t\t\tif((cy + ch) <= oy){\r\n\t\t\t\toct = 0;\r\n\t\t\t}\r\n\t\t\telse if(cy >= (oy + oh)){\r\n\t\t\t\toct = 6;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\toct = 7;\r\n\t\t\t}\r\n\t    }\r\n\t\telse if(cx >= ox + ow){\r\n\t\t\tif(cy + ch <= oy){\r\n\t\t\t\toct = 2;\r\n\t\t\t}\r\n\t\t\telse if(cy >= oy + oh){\r\n\t\t\t\toct = 4;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\toct = 3;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(cy + ch <= oy){\r\n\t\t\toct = 1;\r\n\t\t}\r\n\t\telse if(cy >= oy + oh){\r\n\t\t\toct = 5;\r\n\t\t}\r\n\t\telse{\r\n\t\t\toct= 8;\r\n\t\t}\r\n\t\t\r\n\t\treturn oct;\r\n    }\r\n});\r\n","\r\n/**\r\n * @class\r\n * Layouter for a mesh or grid.\r\n *\r\n * @author Andreas Herz\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.layout.mesh.MeshLayouter = Class.extend(\r\n  /** @lends draw2d.layout.mesh.MeshLayouter.prototype */\r\n\r\n  {\r\n\r\n\t/**\r\n\t * Creates a new layouter object.\r\n\t */\r\n    init: function(){\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Return a changes list for an existing mesh/canvas to ensure that the element to insert\r\n     * did have enough space.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the canvas to use for the analytic\r\n     * @param {draw2d.Figure} figure The figure to add to the exising canvas\r\n     *\r\n     *\r\n     * @returns {draw2d.util.ArrayList} a list of changes to apply if the user want to insert he figure.\r\n     */\r\n    add: function( canvas, figure)\r\n    {\r\n    \treturn new draw2d.util.ArrayList();\r\n    }\r\n});\r\n","\r\n/**\r\n * @class\r\n * Change proposal for grid/mesh layout changes.\r\n *\r\n * @author Andreas Herz\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.layout.mesh.ProposedMeshChange = Class.extend(\r\n  /** @lends draw2d.layout.mesh.ProposedMeshChange.prototype */\r\n\r\n  {\r\n\r\n\t/**\r\n\t * Creates change object.\r\n\t */\r\n    init: function(figure, x, y)\r\n    {\r\n    \tthis.figure = figure;\r\n    \tthis.x = x;\r\n    \tthis.y = y;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the related figure.\r\n     *\r\n     * @returns {draw2d.Figure} the figure to the related change proposal\r\n     */\r\n    getFigure: function( )\r\n    {\r\n    \treturn this.figure;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The proposed x-coordinate.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getX: function()\r\n    {\r\n    \treturn this.x;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The proposed y-coordinate\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getY: function()\r\n    {\r\n    \treturn this.y;\r\n    }\r\n\r\n});\r\n","\r\n\r\n/*\r\n * jQuery.fn.autoResize 1.14\r\n * --\r\n * https://github.com/padolsey/jQuery.fn.autoResize\r\n * --\r\n * This program is free software. It comes without any warranty, to\r\n * the extent permitted by applicable law. You can redistribute it\r\n * and/or modify it under the terms of the Do What The Fuck You Want\r\n * To Public License, Version 2, as published by Sam Hocevar. See\r\n * http://sam.zoy.org/wtfpl/COPYING for more details. */\r\n(function($){\r\n\r\n\tvar uid = 'ar' + +new Date,\r\n\r\n\t\tdefaults = autoResize.defaults = {\r\n\t\t\tonResize: function(){},\r\n\t\t\tonBeforeResize: function(){return 123},\r\n\t\t\tonAfterResize: function(){return 555},\r\n\t\t\tanimate: {\r\n\t\t\t\tduration: 200,\r\n\t\t\t\tcomplete: function(){}\r\n\t\t\t},\r\n\t\t\textraSpace: 50,\r\n\t\t\tminHeight: 'original',\r\n\t\t\tmaxHeight: 500,\r\n\t\t\tminWidth: 'original',\r\n\t\t\tmaxWidth: 500\r\n\t\t};\r\n\r\n\tautoResize.cloneCSSProperties = [\r\n\t\t'lineHeight', 'textDecoration', 'letterSpacing',\r\n\t\t'fontSize', 'fontFamily', 'fontStyle', 'fontWeight',\r\n\t\t'textTransform', 'textAlign', 'direction', 'wordSpacing', 'fontSizeAdjust',\r\n\t\t'paddingTop', 'paddingLeft', 'paddingBottom', 'paddingRight', 'width'\r\n\t];\r\n\r\n\tautoResize.cloneCSSValues = {\r\n\t\tposition: 'absolute',\r\n\t\ttop: -9999,\r\n\t\tleft: -9999,\r\n\t\topacity: 0,\r\n\t\toverflow: 'hidden'\r\n\t};\r\n\r\n\tautoResize.resizableFilterSelector = [\r\n\t\t'textarea:not(textarea.' + uid + ')',\r\n\t\t'input:not(input[type])',\r\n\t\t'input[type=text]',\r\n\t\t'input[type=password]',\r\n\t\t'input[type=email]',\r\n\t\t'input[type=url]'\r\n\t].join(',');\r\n\r\n\tautoResize.AutoResizer = AutoResizer;\r\n\r\n\t$.fn.autoResize = autoResize;\r\n\r\n\tfunction autoResize(config) {\r\n\t\tthis.filter(autoResize.resizableFilterSelector).each(function(){\r\n\t\t\tnew AutoResizer( $(this), config );\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\tfunction AutoResizer(el, config) {\r\n\r\n\t\tif (el.data('AutoResizer')) {\r\n\t\t\tel.data('AutoResizer').destroy();\r\n\t\t}\r\n\r\n\t\tconfig = this.config = $.extend({}, autoResize.defaults, config);\r\n\t\tthis.el = el;\r\n\r\n\t\tthis.nodeName = el[0].nodeName.toLowerCase();\r\n\r\n\t\tthis.originalHeight = el.height();\r\n\t\tthis.previousScrollTop = null;\r\n\r\n\t\tthis.value = el.val();\r\n\r\n\t\tif (config.maxWidth === 'original') config.maxWidth = el.width();\r\n\t\tif (config.minWidth === 'original') config.minWidth = el.width();\r\n\t\tif (config.maxHeight === 'original') config.maxHeight = el.height();\r\n\t\tif (config.minHeight === 'original') config.minHeight = el.height();\r\n\r\n\t\tif (this.nodeName === 'textarea') {\r\n\t\t\tel.css({\r\n\t\t\t\tresize: 'none',\r\n\t\t\t\toverflowY: 'hidden'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tel.data('AutoResizer', this);\r\n\r\n\t\t// Make sure onAfterResize is called upon animation completion\r\n\t\tconfig.animate.complete = (function(f){\r\n\t\t\treturn function() {\r\n\t\t\t\tconfig.onAfterResize.call(el);\r\n\t\t\t\treturn f.apply(this, arguments);\r\n\t\t\t};\r\n\t\t}(config.animate.complete));\r\n\r\n\t\tthis.bind();\r\n\t}\r\n\r\n\tAutoResizer.prototype = {\r\n\r\n\t\tbind: function() {\r\n\r\n\t\t\tvar check = $.proxy(function(){\r\n\t\t\t\tthis.check();\r\n\t\t\t\treturn true;\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis.unbind();\r\n\r\n\t\t\tthis.el\r\n\t\t\t\t.bind('keyup.autoResize', check)\r\n\t\t\t\t//.bind('keydown.autoResize', check)\r\n\t\t\t\t.bind('change.autoResize', check)\r\n\t\t\t\t.bind('paste.autoResize', function() {\r\n\t\t\t\t\tsetTimeout(function() { check(); }, 0);\r\n\t\t\t\t});\r\n\r\n\t\t\tif (!this.el.is(':hidden')) {\r\n\t\t\t\tthis.check(null, true);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tunbind: function() {\r\n\t\t\tthis.el.unbind('.autoResize');\r\n\t\t},\r\n\r\n\t\tcreateClone: function() {\r\n\r\n\t\t\tvar el = this.el,\r\n\t\t\t\tclone = this.nodeName === 'textarea' ? el.clone() : $('<span/>');\r\n\r\n\t\t\tthis.clone = clone;\r\n\r\n\t\t\t$.each(autoResize.cloneCSSProperties, function(i, p){\r\n\t\t\t\tclone[0].style[p] = el.css(p);\r\n\t\t\t});\r\n\r\n\t\t\tclone\r\n\t\t\t\t.removeAttr('name')\r\n\t\t\t\t.removeAttr('id')\r\n\t\t\t\t.addClass(uid)\r\n\t\t\t\t.attr('tabIndex', -1)\r\n\t\t\t\t.css(autoResize.cloneCSSValues);\r\n\r\n\t\t\tif (this.nodeName === 'textarea') {\r\n\t\t\t\tclone.height('auto');\r\n\t\t\t} else {\r\n\t\t\t\tclone.width('auto').css({\r\n\t\t\t\t\twhiteSpace: 'nowrap'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tcheck: function(e, immediate) {\r\n\r\n\t\t\tif (!this.clone) {\r\n\t\tthis.createClone();\r\n\t\tthis.injectClone();\r\n\t\t\t}\r\n\r\n\t\t\tvar config = this.config,\r\n\t\t\t\tclone = this.clone,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\tvalue = el.val();\r\n\r\n\t\t\t// Do nothing if value hasn't changed\r\n\t\t\tif (value === this.prevValue) { return true; }\r\n\t\t\tthis.prevValue = value;\r\n\r\n\t\t\tif (this.nodeName === 'input') {\r\n\r\n\t\t\t\tclone.text(value);\r\n\r\n\t\t\t\t// Calculate new width + whether to change\r\n\t\t\t\tvar cloneWidth = clone.width(),\r\n\t\t\t\t\tnewWidth = (cloneWidth + config.extraSpace) >= config.minWidth ?\r\n\t\t\t\t\t\tcloneWidth + config.extraSpace : config.minWidth,\r\n\t\t\t\t\tcurrentWidth = el.width();\r\n\r\n\t\t\t\tnewWidth = Math.min(newWidth, config.maxWidth);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t(newWidth < currentWidth && newWidth >= config.minWidth) ||\r\n\t\t\t\t\t(newWidth >= config.minWidth && newWidth <= config.maxWidth)\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tconfig.onBeforeResize.call(el);\r\n\t\t\t\t\tconfig.onResize.call(el);\r\n\r\n\t\t\t\t\tel.scrollLeft(0);\r\n\r\n\t\t\t\t\tif (config.animate && !immediate) {\r\n\t\t\t\t\t\tel.stop(1,1).animate({\r\n\t\t\t\t\t\t\twidth: newWidth\r\n\t\t\t\t\t\t}, config.animate);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tel.width(newWidth);\r\n\t\t\t\t\t\tconfig.onAfterResize.call(el);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// TEXTAREA\r\n\r\n\t\t\tclone.width(el.width()).height(0).val(value).scrollTop(10000);\r\n\r\n\t\t\tvar scrollTop = clone[0].scrollTop;\r\n\r\n\t\t\tif(!value) {\r\n\t\t\t\t// empty textarea should be exactly minHeight\r\n\t\t\t\tscrollTop = config.minHeight;\r\n\t\t\t\tthis.previousScrollTop = null;   // reset state\r\n\t\t\t} else {\r\n\t\t\t\t// Don't do anything if scrollTop hasen't changed:\r\n\t\t\t\tif (this.previousScrollTop === scrollTop) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.previousScrollTop = scrollTop;\r\n\r\n\t\t\t\tif (scrollTop + config.extraSpace >= config.maxHeight) {\r\n\t\t\t\t\tel.css('overflowY', '');\r\n\t\t\t\t\tscrollTop = config.maxHeight;\r\n\t\t\t\t\timmediate = true;\r\n\t\t\t\t} else if (scrollTop + config.extraSpace <= config.minHeight) {\r\n\t\t\t\t\t\t// include extraSpace in calculations so the code works correctly\r\n\t\t\t\t\t\t// when there are few lines\r\n\t\t\t\t\tscrollTop = config.minHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.css('overflowY', 'hidden');\r\n\t\t\t\t\tscrollTop += config.extraSpace;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconfig.onBeforeResize.call(el);\r\n\t\t\tconfig.onResize.call(el);\r\n\r\n\t\t\t// Either animate or directly apply height:\r\n\t\t\tif (config.animate && !immediate) {\r\n\t\t\t\t\tel.stop(1,1).animate({\r\n\t\t\t\t\t\t\theight: scrollTop\r\n\t\t\t\t\t}, config.animate);\r\n\t\t\t} else {\r\n\t\t\t\t\tel.height(scrollTop);\r\n\t\t\t\t\tconfig.onAfterResize.call(el);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tdestroy: function() {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.el.removeData('AutoResizer');\r\n\t\t\tthis.clone.remove();\r\n\t\t\tdelete this.el;\r\n\t\t\tdelete this.clone;\r\n\t\t},\r\n\r\n\t\tinjectClone: function() {\r\n\t\t\t(\r\n\t\t\t\tautoResize.cloneContainer ||\r\n\t\t\t\t(autoResize.cloneContainer = $('<arclones/>').appendTo('body'))\r\n\t\t\t).append(this.clone);\r\n\t\t}\r\n\r\n\t};\r\n\r\n})(jQuery);\r\n","\r\n\r\n/*!\r\n * jQuery contextMenu - Plugin for simple contextMenu handling\r\n *\r\n * Version: 1.6.5\r\n *\r\n * Authors: Rodney Rehm, Addy Osmani (patches for FF)\r\n * Web: http://medialize.github.com/jQuery-contextMenu/\r\n *\r\n * Licensed under\r\n *   MIT License http://www.opensource.org/licenses/mit-license\r\n *   GPL v3 http://opensource.org/licenses/GPL-3.0\r\n *\r\n */\r\n(function($, undefined){\r\n\r\n    // TODO: -\r\n        // ARIA stuff: menuitem, menuitemcheckbox und menuitemradio\r\n        // create <menu> structure if $.support[htmlCommand || htmlMenuitem] and !opt.disableNative\r\n\r\n// determine html5 compatibility\r\n$.support.htmlMenuitem = ('HTMLMenuItemElement' in window);\r\n$.support.htmlCommand = ('HTMLCommandElement' in window);\r\n$.support.eventSelectstart = (\"onselectstart\" in document.documentElement);\r\n/* // should the need arise, test for css user-select\r\n$.support.cssUserSelect = (function(){\r\n    var t = false,\r\n        e = document.createElement('div');\r\n\r\n    $.each('Moz|Webkit|Khtml|O|ms|Icab|'.split('|'), function(i, prefix) {\r\n        var propCC = prefix + (prefix ? 'U' : 'u') + 'serSelect',\r\n            prop = (prefix ? ('-' + prefix.toLowerCase() + '-') : '') + 'user-select';\r\n\r\n        e.style.cssText = prop + ': text;';\r\n        if (e.style[propCC] == 'text') {\r\n            t = true;\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\n    return t;\r\n})();\r\n*/\r\n\r\nif (!$.ui || !$.ui.widget) {\r\n    // duck punch $.cleanData like jQueryUI does to get that remove event\r\n    // https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js#L16-24\r\n    var _cleanData = $.cleanData;\r\n    $.cleanData = function( elems ) {\r\n        for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\r\n            try {\r\n                $( elem ).triggerHandler( \"remove\" );\r\n                // http://bugs.jquery.com/ticket/8235\r\n            } catch( e ) {}\r\n        }\r\n        _cleanData( elems );\r\n    };\r\n}\r\n\r\nvar // currently active contextMenu trigger\r\n    $currentTrigger = null,\r\n    // is contextMenu initialized with at least one menu?\r\n    initialized = false,\r\n    // window handle\r\n    $win = $(window),\r\n    // number of registered menus\r\n    counter = 0,\r\n    // mapping selector to namespace\r\n    namespaces = {},\r\n    // mapping namespace to options\r\n    menus = {},\r\n    // custom command type handlers\r\n    types = {},\r\n    // default values\r\n    defaults = {\r\n        // selector of contextMenu trigger\r\n        selector: null,\r\n        // where to append the menu to\r\n        appendTo: null,\r\n        // method to trigger context menu [\"right\", \"left\", \"hover\"]\r\n        trigger: \"right\",\r\n        // hide menu when mouse leaves trigger / menu elements\r\n        autoHide: false,\r\n        // ms to wait before showing a hover-triggered context menu\r\n        delay: 200,\r\n        // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\r\n        // as long as the trigger happened on one of the trigger-element's child nodes\r\n        reposition: false,\r\n        // determine position to show menu at\r\n        determinePosition: function($menu) {\r\n            // position to the lower middle of the trigger element\r\n            if ($.ui && $.ui.position) {\r\n                // .position() is provided as a jQuery UI utility\r\n                // (...and it won't work on hidden elements)\r\n                $menu.css('display', 'block').position({\r\n                    my: \"center top\",\r\n                    at: \"center bottom\",\r\n                    of: this,\r\n                    offset: \"0 5\",\r\n                    collision: \"fit\"\r\n                }).css('display', 'none');\r\n            } else {\r\n                // determine contextMenu position\r\n                var offset = this.offset();\r\n                offset.top += this.outerHeight();\r\n                offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\r\n                $menu.css(offset);\r\n            }\r\n        },\r\n        // position menu\r\n        position: function(opt, x, y) {\r\n            var $this = this,\r\n                offset;\r\n            // determine contextMenu position\r\n            if (!x && !y) {\r\n                opt.determinePosition.call(this, opt.$menu);\r\n                return;\r\n            } else if (x === \"maintain\" && y === \"maintain\") {\r\n                // x and y must not be changed (after re-show on command click)\r\n                offset = opt.$menu.position();\r\n            } else {\r\n                // x and y are given (by mouse event)\r\n                offset = {top: y, left: x};\r\n            }\r\n\r\n            // correct offset if viewport demands it\r\n            var bottom = $win.scrollTop() + $win.height(),\r\n                right = $win.scrollLeft() + $win.width(),\r\n                height = opt.$menu.height(),\r\n                width = opt.$menu.width();\r\n\r\n            if (offset.top + height > bottom) {\r\n                offset.top -= height;\r\n            }\r\n\r\n            if (offset.left + width > right) {\r\n                offset.left -= width;\r\n            }\r\n\r\n            opt.$menu.css(offset);\r\n        },\r\n        // position the sub-menu\r\n        positionSubmenu: function($menu) {\r\n            if ($.ui && $.ui.position) {\r\n                // .position() is provided as a jQuery UI utility\r\n                // (...and it won't work on hidden elements)\r\n                $menu.css('display', 'block').position({\r\n                    my: \"left top\",\r\n                    at: \"right top\",\r\n                    of: this,\r\n                    collision: \"flipfit fit\"\r\n                }).css('display', '');\r\n            } else {\r\n                // determine contextMenu position\r\n                var offset = {\r\n                    top: 0,\r\n                    left: this.outerWidth()\r\n                };\r\n                $menu.css(offset);\r\n            }\r\n        },\r\n        // offset to add to zIndex\r\n        zIndex: 1,\r\n        // show hide animation settings\r\n        animation: {\r\n            duration: 50,\r\n            show: 'slideDown',\r\n            hide: 'slideUp'\r\n        },\r\n        // events\r\n        events: {\r\n            show: $.noop,\r\n            hide: $.noop\r\n        },\r\n        // default callback\r\n        callback: null,\r\n        // list of contextMenu items\r\n        items: {}\r\n    },\r\n    // mouse position for hover activation\r\n    hoveract = {\r\n        timer: null,\r\n        pageX: null,\r\n        pageY: null\r\n    },\r\n    // determine zIndex\r\n    zindex = function($t) {\r\n        var zin = 0,\r\n            $tt = $t;\r\n\r\n        while (true) {\r\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\r\n            $tt = $tt.parent();\r\n            if (!$tt || !$tt.length || \"html body\".indexOf($tt.prop('nodeName').toLowerCase()) > -1 ) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return zin;\r\n    },\r\n    // event handlers\r\n    handle = {\r\n        // abort anything\r\n        abortevent: function(e){\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n        },\r\n\r\n        // contextmenu show dispatcher\r\n        contextmenu: function(e) {\r\n            var $this = $(this);\r\n\r\n            // disable actual context-menu\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            // abort native-triggered events unless we're triggering on right click\r\n            if (e.data.trigger != 'right' && e.originalEvent) {\r\n                return;\r\n            }\r\n\r\n            // abort event if menu is visible for this trigger\r\n            if ($this.hasClass('context-menu-active')) {\r\n                return;\r\n            }\r\n\r\n            if (!$this.hasClass('context-menu-disabled')) {\r\n                // theoretically need to fire a show event at <menu>\r\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\r\n                // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\r\n                // e.data.$menu.trigger(evt);\r\n\r\n                $currentTrigger = $this;\r\n                if (e.data.build) {\r\n                    var built = e.data.build($currentTrigger, e);\r\n                    // abort if build() returned false\r\n                    if (built === false) {\r\n                        return;\r\n                    }\r\n\r\n                    // dynamically build menu on invocation\r\n                    e.data = $.extend(true, {}, defaults, e.data, built || {});\r\n\r\n                    // abort if there are no items to display\r\n                    if (!e.data.items || $.isEmptyObject(e.data.items)) {\r\n                        // Note: jQuery captures and ignores errors from event handlers\r\n                        if (window.console) {\r\n                            (console.error || console.log)(\"No items specified to show in contextMenu\");\r\n                        }\r\n\r\n                        throw new Error('No Items sepcified');\r\n                    }\r\n\r\n                    // backreference for custom command type creation\r\n                    e.data.$trigger = $currentTrigger;\r\n\r\n                    op.create(e.data);\r\n                }\r\n                // show menu\r\n                op.show.call($this, e.data, e.pageX, e.pageY);\r\n            }\r\n        },\r\n        // contextMenu left-click trigger\r\n        click: function(e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n            $(this).trigger($.Event(\"contextmenu\", { data: e.data, pageX: e.pageX, pageY: e.pageY }));\r\n        },\r\n        // contextMenu right-click trigger\r\n        mousedown: function(e) {\r\n            // register mouse down\r\n            var $this = $(this);\r\n\r\n            // hide any previous menus\r\n            if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {\r\n                $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');\r\n            }\r\n\r\n            // activate on right click\r\n            if (e.button == 2) {\r\n                $currentTrigger = $this.data('contextMenuActive', true);\r\n            }\r\n        },\r\n        // contextMenu right-click trigger\r\n        mouseup: function(e) {\r\n            // show menu\r\n            var $this = $(this);\r\n            if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                $currentTrigger = $this;\r\n                $this.trigger($.Event(\"contextmenu\", { data: e.data, pageX: e.pageX, pageY: e.pageY }));\r\n            }\r\n\r\n            $this.removeData('contextMenuActive');\r\n        },\r\n        // contextMenu hover trigger\r\n        mouseenter: function(e) {\r\n            var $this = $(this),\r\n                $related = $(e.relatedTarget),\r\n                $document = $(document);\r\n\r\n            // abort if we're coming from a menu\r\n            if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n                return;\r\n            }\r\n\r\n            // abort if a menu is shown\r\n            if ($currentTrigger && $currentTrigger.length) {\r\n                return;\r\n            }\r\n\r\n            hoveract.pageX = e.pageX;\r\n            hoveract.pageY = e.pageY;\r\n            hoveract.data = e.data;\r\n            $document.on('mousemove.contextMenuShow', handle.mousemove);\r\n            hoveract.timer = setTimeout(function() {\r\n                hoveract.timer = null;\r\n                $document.off('mousemove.contextMenuShow');\r\n                $currentTrigger = $this;\r\n                $this.trigger($.Event(\"contextmenu\", { data: hoveract.data, pageX: hoveract.pageX, pageY: hoveract.pageY }));\r\n            }, e.data.delay );\r\n        },\r\n        // contextMenu hover trigger\r\n        mousemove: function(e) {\r\n            hoveract.pageX = e.pageX;\r\n            hoveract.pageY = e.pageY;\r\n        },\r\n        // contextMenu hover trigger\r\n        mouseleave: function(e) {\r\n            // abort if we're leaving for a menu\r\n            var $related = $(e.relatedTarget);\r\n            if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                clearTimeout(hoveract.timer);\r\n            } catch(e) {}\r\n\r\n            hoveract.timer = null;\r\n        },\r\n\r\n        // click on layer to hide contextMenu\r\n        layerClick: function(e) {\r\n            var $this = $(this),\r\n                root = $this.data('contextMenuRoot'),\r\n                mouseup = false,\r\n                button = e.button,\r\n                x = e.pageX,\r\n                y = e.pageY,\r\n                target,\r\n                offset,\r\n                selectors;\r\n\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            setTimeout(function() {\r\n                var $window, hideshow, possibleTarget;\r\n                var triggerAction = ((root.trigger == 'left' && button === 0) || (root.trigger == 'right' && button === 2));\r\n\r\n                // find the element that would've been clicked, wasn't the layer in the way\r\n                if (document.elementFromPoint) {\r\n                    root.$layer.hide();\r\n                    target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop());\r\n                    root.$layer.show();\r\n                }\r\n\r\n                if (root.reposition && triggerAction) {\r\n                    if (document.elementFromPoint) {\r\n                        if (root.$trigger.is(target) || root.$trigger.has(target).length) {\r\n                            root.position.call(root.$trigger, root, x, y);\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        offset = root.$trigger.offset();\r\n                        $window = $(window);\r\n                        // while this looks kinda awful, it's the best way to avoid\r\n                        // unnecessarily calculating any positions\r\n                        offset.top += $window.scrollTop();\r\n                        if (offset.top <= e.pageY) {\r\n                            offset.left += $window.scrollLeft();\r\n                            if (offset.left <= e.pageX) {\r\n                                offset.bottom = offset.top + root.$trigger.outerHeight();\r\n                                if (offset.bottom >= e.pageY) {\r\n                                    offset.right = offset.left + root.$trigger.outerWidth();\r\n                                    if (offset.right >= e.pageX) {\r\n                                        // reposition\r\n                                        root.position.call(root.$trigger, root, x, y);\r\n                                        return;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (target && triggerAction) {\r\n                    root.$trigger.one('contextmenu:hidden', function() {\r\n                        $(target).contextMenu({x: x, y: y});\r\n                    });\r\n                }\r\n\r\n                root.$menu.trigger('contextmenu:hide');\r\n            }, 50);\r\n        },\r\n        // key handled :hover\r\n        keyStop: function(e, opt) {\r\n            if (!opt.isInput) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            e.stopPropagation();\r\n        },\r\n        key: function(e) {\r\n            var opt = $currentTrigger.data('contextMenu') || {};\r\n\r\n            switch (e.keyCode) {\r\n                case 9:\r\n                case 38: // up\r\n                    handle.keyStop(e, opt);\r\n                    // if keyCode is [38 (up)] or [9 (tab) with shift]\r\n                    if (opt.isInput) {\r\n                        if (e.keyCode == 9 && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            opt.$selected && opt.$selected.find('input, textarea, select').blur();\r\n                            opt.$menu.trigger('prevcommand');\r\n                            return;\r\n                        } else if (e.keyCode == 38 && opt.$selected.find('input, textarea, select').prop('type') == 'checkbox') {\r\n                            // checkboxes don't capture this key\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                    } else if (e.keyCode != 9 || e.shiftKey) {\r\n                        opt.$menu.trigger('prevcommand');\r\n                        return;\r\n                    }\r\n                    // omitting break;\r\n\r\n                // case 9: // tab - reached through omitted break;\r\n                case 40: // down\r\n                    handle.keyStop(e, opt);\r\n                    if (opt.isInput) {\r\n                        if (e.keyCode == 9) {\r\n                            e.preventDefault();\r\n                            opt.$selected && opt.$selected.find('input, textarea, select').blur();\r\n                            opt.$menu.trigger('nextcommand');\r\n                            return;\r\n                        } else if (e.keyCode == 40 && opt.$selected.find('input, textarea, select').prop('type') == 'checkbox') {\r\n                            // checkboxes don't capture this key\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                    } else {\r\n                        opt.$menu.trigger('nextcommand');\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                case 37: // left\r\n                    handle.keyStop(e, opt);\r\n                    if (opt.isInput || !opt.$selected || !opt.$selected.length) {\r\n                        break;\r\n                    }\r\n\r\n                    if (!opt.$selected.parent().hasClass('context-menu-root')) {\r\n                        var $parent = opt.$selected.parent().parent();\r\n                        opt.$selected.trigger('contextmenu:blur');\r\n                        opt.$selected = $parent;\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                case 39: // right\r\n                    handle.keyStop(e, opt);\r\n                    if (opt.isInput || !opt.$selected || !opt.$selected.length) {\r\n                        break;\r\n                    }\r\n\r\n                    var itemdata = opt.$selected.data('contextMenu') || {};\r\n                    if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\r\n                        opt.$selected = null;\r\n                        itemdata.$selected = null;\r\n                        itemdata.$menu.trigger('nextcommand');\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                case 35: // end\r\n                case 36: // home\r\n                    if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\r\n                        return;\r\n                    } else {\r\n                        (opt.$selected && opt.$selected.parent() || opt.$menu)\r\n                            .children(':not(.disabled, .not-selectable)')[e.keyCode == 36 ? 'first' : 'last']()\r\n                            .trigger('contextmenu:focus');\r\n                        e.preventDefault();\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                case 13: // enter\r\n                    handle.keyStop(e, opt);\r\n                    if (opt.isInput) {\r\n                        if (opt.$selected && !opt.$selected.is('textarea, select')) {\r\n                            e.preventDefault();\r\n                            return;\r\n                        }\r\n                        break;\r\n                    }\r\n                    opt.$selected && opt.$selected.trigger('mouseup');\r\n                    return;\r\n\r\n                case 32: // space\r\n                case 33: // page up\r\n                case 34: // page down\r\n                    // prevent browser from scrolling down while menu is visible\r\n                    handle.keyStop(e, opt);\r\n                    return;\r\n\r\n                case 27: // esc\r\n                    handle.keyStop(e, opt);\r\n                    opt.$menu.trigger('contextmenu:hide');\r\n                    return;\r\n\r\n                default: // 0-9, a-z\r\n                    var k = (String.fromCharCode(e.keyCode)).toUpperCase();\r\n                    if (opt.accesskeys[k]) {\r\n                        // according to the specs accesskeys must be invoked immediately\r\n                        opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu\r\n                            ? 'contextmenu:focus'\r\n                            : 'mouseup'\r\n                        );\r\n                        return;\r\n                    }\r\n                    break;\r\n            }\r\n            // pass event to selected item,\r\n            // stop propagation to avoid endless recursion\r\n            e.stopPropagation();\r\n            opt.$selected && opt.$selected.trigger(e);\r\n        },\r\n\r\n        // select previous possible command in menu\r\n        prevItem: function(e) {\r\n            e.stopPropagation();\r\n            var opt = $(this).data('contextMenu') || {};\r\n\r\n            // obtain currently selected menu\r\n            if (opt.$selected) {\r\n                var $s = opt.$selected;\r\n                opt = opt.$selected.parent().data('contextMenu') || {};\r\n                opt.$selected = $s;\r\n            }\r\n\r\n            var $children = opt.$menu.children(),\r\n                $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),\r\n                $round = $prev;\r\n\r\n            // skip disabled\r\n            while ($prev.hasClass('disabled') || $prev.hasClass('not-selectable')) {\r\n                if ($prev.prev().length) {\r\n                    $prev = $prev.prev();\r\n                } else {\r\n                    $prev = $children.last();\r\n                }\r\n                if ($prev.is($round)) {\r\n                    // break endless loop\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // leave current\r\n            if (opt.$selected) {\r\n                handle.itemMouseleave.call(opt.$selected.get(0), e);\r\n            }\r\n\r\n            // activate next\r\n            handle.itemMouseenter.call($prev.get(0), e);\r\n\r\n            // focus input\r\n            var $input = $prev.find('input, textarea, select');\r\n            if ($input.length) {\r\n                $input.focus();\r\n            }\r\n        },\r\n        // select next possible command in menu\r\n        nextItem: function(e) {\r\n            e.stopPropagation();\r\n            var opt = $(this).data('contextMenu') || {};\r\n\r\n            // obtain currently selected menu\r\n            if (opt.$selected) {\r\n                var $s = opt.$selected;\r\n                opt = opt.$selected.parent().data('contextMenu') || {};\r\n                opt.$selected = $s;\r\n            }\r\n\r\n            var $children = opt.$menu.children(),\r\n                $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),\r\n                $round = $next;\r\n\r\n            // skip disabled\r\n            while ($next.hasClass('disabled') || $next.hasClass('not-selectable')) {\r\n                if ($next.next().length) {\r\n                    $next = $next.next();\r\n                } else {\r\n                    $next = $children.first();\r\n                }\r\n                if ($next.is($round)) {\r\n                    // break endless loop\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // leave current\r\n            if (opt.$selected) {\r\n                handle.itemMouseleave.call(opt.$selected.get(0), e);\r\n            }\r\n\r\n            // activate next\r\n            handle.itemMouseenter.call($next.get(0), e);\r\n\r\n            // focus input\r\n            var $input = $next.find('input, textarea, select');\r\n            if ($input.length) {\r\n                $input.focus();\r\n            }\r\n        },\r\n\r\n        // flag that we're inside an input so the key handler can act accordingly\r\n        focusInput: function(e) {\r\n            var $this = $(this).closest('.context-menu-item'),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot;\r\n\r\n            root.$selected = opt.$selected = $this;\r\n            root.isInput = opt.isInput = true;\r\n        },\r\n        // flag that we're inside an input so the key handler can act accordingly\r\n        blurInput: function(e) {\r\n            var $this = $(this).closest('.context-menu-item'),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot;\r\n\r\n            root.isInput = opt.isInput = false;\r\n        },\r\n\r\n        // :hover on menu\r\n        menuMouseenter: function(e) {\r\n            var root = $(this).data().contextMenuRoot;\r\n            if(root)root.hovering = true;\r\n        },\r\n        // :hover on menu\r\n        menuMouseleave: function(e) {\r\n            var root = $(this).data().contextMenuRoot;\r\n            if (root && root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                root.hovering = false;\r\n            }\r\n        },\r\n\r\n        // :hover done manually so key handling is possible\r\n        itemMouseenter: function(e) {\r\n            var $this = $(this),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot;\r\n\r\n            if(!root)\r\n              return\r\n\r\n            root.hovering = true;\r\n\r\n            // abort if we're re-entering\r\n            if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n            }\r\n\r\n            // make sure only one item is selected\r\n            (opt.$menu ? opt : root).$menu\r\n                .children('.hover').trigger('contextmenu:blur');\r\n\r\n            if ($this.hasClass('disabled') || $this.hasClass('not-selectable')) {\r\n                opt.$selected = null;\r\n                return;\r\n            }\r\n\r\n            $this.trigger('contextmenu:focus');\r\n        },\r\n        // :hover done manually so key handling is possible\r\n        itemMouseleave: function(e) {\r\n            var $this = $(this),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot;\r\n\r\n            if (root && root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\r\n                root.$selected && root.$selected.trigger('contextmenu:blur');\r\n                e.preventDefault();\r\n                e.stopImmediatePropagation();\r\n                root.$selected = opt.$selected = opt.$node;\r\n                return;\r\n            }\r\n\r\n            $this.trigger('contextmenu:blur');\r\n        },\r\n        // contextMenu item click\r\n        itemClick: function(e) {\r\n            var $this = $(this),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot,\r\n                key = data.contextMenuKey,\r\n                callback;\r\n\r\n            // abort if the key is unknown or disabled or is a menu\r\n            if (!opt.items[key] || $this.is('.disabled, .context-menu-submenu, .context-menu-separator, .not-selectable')) {\r\n                return;\r\n            }\r\n\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            if ($.isFunction(root.callbacks[key]) && Object.prototype.hasOwnProperty.call(root.callbacks, key)) {\r\n                // item-specific callback\r\n                callback = root.callbacks[key];\r\n            } else if ($.isFunction(root.callback)) {\r\n                // default callback\r\n                callback = root.callback;\r\n            } else {\r\n                // no callback, no action\r\n                return;\r\n            }\r\n\r\n            // hide menu if callback doesn't stop that\r\n            if (callback.call(root.$trigger, key, root) !== false) {\r\n                root.$menu.trigger('contextmenu:hide');\r\n            } else if (root.$menu.parent().length) {\r\n                op.update.call(root.$trigger, root);\r\n            }\r\n        },\r\n        // ignore click events on input elements\r\n        inputClick: function(e) {\r\n            e.stopImmediatePropagation();\r\n        },\r\n\r\n        // hide <menu>\r\n        hideMenu: function(e, data) {\r\n            var root = $(this).data('contextMenuRoot');\r\n            op.hide.call(root.$trigger, root, data && data.force);\r\n        },\r\n        // focus <command>\r\n        focusItem: function(e) {\r\n            e.stopPropagation();\r\n            var $this = $(this),\r\n                data = $this.data(),\r\n                opt = data.contextMenu,\r\n                root = data.contextMenuRoot;\r\n\r\n            $this.addClass('hover')\r\n                .siblings('.hover').trigger('contextmenu:blur');\r\n\r\n            // remember selected\r\n            opt.$selected = root.$selected = $this;\r\n\r\n            // position sub-menu - do after show so dumb $.ui.position can keep up\r\n            if (opt.$node) {\r\n                root.positionSubmenu.call(opt.$node, opt.$menu);\r\n            }\r\n        },\r\n        // blur <command>\r\n        blurItem: function(e) {\r\n            e.stopPropagation();\r\n            var $this = $(this),\r\n                data = $this.data(),\r\n                opt = data.contextMenu;\r\n\r\n            $this.removeClass('hover');\r\n            if(opt)opt.$selected = null;\r\n        }\r\n    },\r\n    // operations\r\n    op = {\r\n        show: function(opt, x, y) {\r\n            var $trigger = $(this),\r\n                offset,\r\n                css = {};\r\n\r\n            // hide any open menus\r\n            $('#context-menu-layer').trigger('mousedown');\r\n\r\n            // backreference for callbacks\r\n            opt.$trigger = $trigger;\r\n\r\n            // show event\r\n            if (opt.events.show.call($trigger, opt) === false) {\r\n                $currentTrigger = null;\r\n                return;\r\n            }\r\n\r\n            // create or update context menu\r\n            op.update.call($trigger, opt);\r\n\r\n            // position menu\r\n            opt.position.call($trigger, opt, x, y);\r\n\r\n            // make sure we're in front\r\n            if (opt.zIndex) {\r\n                css.zIndex = zindex($trigger) + opt.zIndex;\r\n            }\r\n\r\n            // add layer\r\n            op.layer.call(opt.$menu, opt, css.zIndex);\r\n\r\n            // adjust sub-menu zIndexes\r\n            opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\r\n\r\n            // position and show context menu\r\n            opt.$menu.css( css )[opt.animation.show](opt.animation.duration, function() {\r\n                $trigger.trigger('contextmenu:visible');\r\n            });\r\n            // make options available and set state\r\n            $trigger\r\n                .data('contextMenu', opt)\r\n                .addClass(\"context-menu-active\");\r\n\r\n            // register key handler\r\n            $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);\r\n            // register autoHide handler\r\n            if (opt.autoHide) {\r\n                // mouse position handler\r\n                $(document).on('mousemove.contextMenuAutoHide', function(e) {\r\n                    // need to capture the offset on mousemove,\r\n                    // since the page might've been scrolled since activation\r\n                    var pos = $trigger.offset();\r\n                    pos.right = pos.left + $trigger.outerWidth();\r\n                    pos.bottom = pos.top + $trigger.outerHeight();\r\n\r\n                    if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\r\n                        // if mouse in menu...\r\n                        opt.$menu.trigger('contextmenu:hide');\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        hide: function(opt, force) {\r\n            var $trigger = $(this);\r\n            if (!opt) {\r\n                opt = $trigger.data('contextMenu') || {};\r\n            }\r\n\r\n            // hide event\r\n            if (!force && opt.events && opt.events.hide.call($trigger, opt) === false) {\r\n                return;\r\n            }\r\n\r\n            // remove options and revert state\r\n            $trigger\r\n                .removeData('contextMenu')\r\n                .removeClass(\"context-menu-active\");\r\n\r\n            if (opt.$layer) {\r\n                // keep layer for a bit so the contextmenu event can be aborted properly by opera\r\n                setTimeout((function($layer) {\r\n                    return function(){\r\n                        $layer.remove();\r\n                    };\r\n                })(opt.$layer), 10);\r\n\r\n                try {\r\n                    delete opt.$layer;\r\n                } catch(e) {\r\n                    opt.$layer = null;\r\n                }\r\n            }\r\n\r\n            // remove handle\r\n            $currentTrigger = null;\r\n            // remove selected\r\n            opt.$menu.find('.hover').trigger('contextmenu:blur');\r\n            opt.$selected = null;\r\n            // unregister key and mouse handlers\r\n            //$(document).off('.contextMenuAutoHide keydown.contextMenu'); // http://bugs.jquery.com/ticket/10705\r\n            $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\r\n            // hide menu\r\n            opt.$menu && opt.$menu[opt.animation.hide](opt.animation.duration, function (){\r\n                // tear down dynamically built menu after animation is completed.\r\n                if (opt.build) {\r\n                    opt.$menu.remove();\r\n                    $.each(opt, function(key, value) {\r\n                        switch (key) {\r\n                            case 'ns':\r\n                            case 'selector':\r\n                            case 'build':\r\n                            case 'trigger':\r\n                                return true;\r\n\r\n                            default:\r\n                                opt[key] = undefined;\r\n                                try {\r\n                                    delete opt[key];\r\n                                } catch (e) {}\r\n                                return true;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    $trigger.trigger('contextmenu:hidden');\r\n                }, 10);\r\n            });\r\n        },\r\n        create: function(opt, root) {\r\n            if (root === undefined) {\r\n                root = opt;\r\n            }\r\n            // create contextMenu\r\n            opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || \"\").data({\r\n                'contextMenu': opt,\r\n                'contextMenuRoot': root\r\n            });\r\n\r\n            $.each(['callbacks', 'commands', 'inputs'], function(i,k){\r\n                opt[k] = {};\r\n                if (!root[k]) {\r\n                    root[k] = {};\r\n                }\r\n            });\r\n\r\n            root.accesskeys || (root.accesskeys = {});\r\n\r\n            // create contextMenu items\r\n            $.each(opt.items, function(key, item) {\r\n              var $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || \"\"),\r\n                $label = null,\r\n                $input = null;\r\n\r\n              // iOS needs to see a click-event bound to an element to actually\r\n              // have the TouchEvents infrastructure trigger the click event\r\n              $t.on('click', $.noop);\r\n\r\n              if (typeof item !== \"string\"){\r\n                item.$node = $t.data({\r\n                  'contextMenu': opt,\r\n                  'contextMenuRoot': root,\r\n                  'contextMenuKey': key\r\n                });\r\n              }\r\n\r\n                // register accesskey\r\n                // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\r\n                if (item.accesskey) {\r\n                    var aks = splitAccesskey(item.accesskey);\r\n                    for (var i=0, ak; ak = aks[i]; i++) {\r\n                        if (!root.accesskeys[ak]) {\r\n                            root.accesskeys[ak] = item;\r\n                            item._name = item.name.replace(new RegExp('(' + ak + ')', 'i'), '<span class=\"context-menu-accesskey\">$1</span>');\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (typeof item == \"string\") {\r\n                    $t.addClass('context-menu-separator not-selectable');\r\n                } else if (item.type && types[item.type]) {\r\n                    // run custom type handler\r\n                    types[item.type].call($t, item, opt, root);\r\n                    // register commands\r\n                    $.each([opt, root], function(i,k){\r\n                        k.commands[key] = item;\r\n                        if ($.isFunction(item.callback)) {\r\n                            k.callbacks[key] = item.callback;\r\n                        }\r\n                    });\r\n                } else {\r\n                    // add label for input\r\n                    if (item.type == 'html') {\r\n                        $t.addClass('context-menu-html not-selectable');\r\n                    } else if (item.type) {\r\n                        $label = $('<label></label>').appendTo($t);\r\n                        $('<span></span>').html(item._name || item.name).appendTo($label);\r\n                        $t.addClass('context-menu-input');\r\n                        opt.hasTypes = true;\r\n                        $.each([opt, root], function(i,k){\r\n                            k.commands[key] = item;\r\n                            k.inputs[key] = item;\r\n                        });\r\n                    } else if (item.items) {\r\n                        item.type = 'sub';\r\n                    }\r\n\r\n                    switch (item.type) {\r\n                        case 'text':\r\n                            $input = $('<input type=\"text\" value=\"1\" name=\"\" value=\"\">')\r\n                                .attr('name', 'context-menu-input-' + key)\r\n                                .val(item.value || \"\")\r\n                                .appendTo($label);\r\n                            break;\r\n\r\n                        case 'textarea':\r\n                            $input = $('<textarea name=\"\"></textarea>')\r\n                                .attr('name', 'context-menu-input-' + key)\r\n                                .val(item.value || \"\")\r\n                                .appendTo($label);\r\n\r\n                            if (item.height) {\r\n                                $input.height(item.height);\r\n                            }\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                            $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" value=\"\">')\r\n                                .attr('name', 'context-menu-input-' + key)\r\n                                .val(item.value || \"\")\r\n                                .prop(\"checked\", !!item.selected)\r\n                                .prependTo($label);\r\n                            break;\r\n\r\n                        case 'radio':\r\n                            $input = $('<input type=\"radio\" value=\"1\" name=\"\" value=\"\">')\r\n                                .attr('name', 'context-menu-input-' + item.radio)\r\n                                .val(item.value || \"\")\r\n                                .prop(\"checked\", !!item.selected)\r\n                                .prependTo($label);\r\n                            break;\r\n\r\n                        case 'select':\r\n                            $input = $('<select name=\"\">')\r\n                                .attr('name', 'context-menu-input-' + key)\r\n                                .appendTo($label);\r\n                            if (item.options) {\r\n                                $.each(item.options, function(value, text) {\r\n                                    $('<option></option>').val(value).text(text).appendTo($input);\r\n                                });\r\n                                $input.val(item.selected);\r\n                            }\r\n                            break;\r\n\r\n                        case 'sub':\r\n                            // FIXME: shouldn't this .html() be a .text()?\r\n                            $('<span></span>').html(item._name || item.name).appendTo($t);\r\n                            item.appendTo = item.$node;\r\n                            op.create(item, root);\r\n                            $t.data('contextMenu', item).addClass('context-menu-submenu');\r\n                            item.callback = null;\r\n                            break;\r\n\r\n                        case 'html':\r\n                            $(item.html).appendTo($t);\r\n                            break;\r\n\r\n                        default:\r\n                            $.each([opt, root], function(i,k){\r\n                                k.commands[key] = item;\r\n                                if ($.isFunction(item.callback)) {\r\n                                    k.callbacks[key] = item.callback;\r\n                                }\r\n                            });\r\n                            // FIXME: shouldn't this .html() be a .text()?\r\n                            $('<span></span>').html(item._name || item.name || \"\").appendTo($t);\r\n                            break;\r\n                    }\r\n\r\n                    // disable key listener in <input>\r\n                    if (item.type && item.type != 'sub' && item.type != 'html') {\r\n                        $input\r\n                            .on('focus', handle.focusInput)\r\n                            .on('blur', handle.blurInput);\r\n\r\n                        if (item.events) {\r\n                            $input.on(item.events, opt);\r\n                        }\r\n                    }\r\n\r\n                    // add icons\r\n                    if (item.icon) {\r\n                        $t.addClass(\"icon icon-\" + item.icon);\r\n                    }\r\n                }\r\n\r\n                // cache contained elements\r\n                if(typeof item !==\"string\") {\r\n                  item.$input = $input;\r\n                  item.$label = $label;\r\n                }\r\n\r\n                // attach item to menu\r\n                $t.appendTo(opt.$menu);\r\n\r\n                // Disable text selection\r\n                if (!opt.hasTypes && $.support.eventSelectstart) {\r\n                    // browsers support user-select: none,\r\n                    // IE has a special event for text-selection\r\n                    // browsers supporting neither will not be preventing text-selection\r\n                    $t.on('selectstart.disableTextSelect', handle.abortevent);\r\n                }\r\n            });\r\n            // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\r\n            if (!opt.$node) {\r\n                opt.$menu.css('display', 'none').addClass('context-menu-root');\r\n            }\r\n            opt.$menu.appendTo(opt.appendTo || document.body);\r\n        },\r\n        resize: function($menu, nested) {\r\n            // determine widths of submenus, as CSS won't grow them automatically\r\n            // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\r\n            // kinda sucks hard...\r\n\r\n            // determine width of absolutely positioned element\r\n            $menu.css({position: 'absolute', display: 'block'});\r\n            // don't apply yet, because that would break nested elements' widths\r\n            // add a pixel to circumvent word-break issue in IE9 - #80\r\n            $menu.data('width', Math.ceil($menu.width()) + 1);\r\n            // reset styles so they allow nested elements to grow/shrink naturally\r\n            $menu.css({\r\n                position: 'static',\r\n                minWidth: '0px',\r\n                maxWidth: '100000px'\r\n            });\r\n            // identify width of nested menus\r\n            $menu.find('> li > ul').each(function() {\r\n                op.resize($(this), true);\r\n            });\r\n            // reset and apply changes in the end because nested\r\n            // elements' widths wouldn't be calculatable otherwise\r\n            if (!nested) {\r\n                $menu.find('ul').andSelf().css({\r\n                    position: '',\r\n                    display: '',\r\n                    minWidth: '',\r\n                    maxWidth: ''\r\n                }).width(function() {\r\n                    return $(this).data('width');\r\n                });\r\n            }\r\n        },\r\n        update: function(opt, root) {\r\n            var $trigger = this;\r\n            if (root === undefined) {\r\n                root = opt;\r\n                op.resize(opt.$menu);\r\n            }\r\n            // re-check disabled for each item\r\n            opt.$menu.children().each(function(){\r\n                var $item = $(this),\r\n                    key = $item.data('contextMenuKey'),\r\n                    item = opt.items[key],\r\n                    disabled = (item === undefined)||(typeof item ===\"string\") || ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || item.disabled === true;\r\n\r\n                // dis- / enable item\r\n                $item[disabled ? 'addClass' : 'removeClass']('disabled');\r\n\r\n                if (item && item.type) {\r\n                    // dis- / enable input elements\r\n                    $item.find('input, select, textarea').prop('disabled', disabled);\r\n\r\n                    // update input states\r\n                    switch (item.type) {\r\n                        case 'text':\r\n                        case 'textarea':\r\n                            item.$input.val(item.value || \"\");\r\n                            break;\r\n\r\n                        case 'checkbox':\r\n                        case 'radio':\r\n                            item.$input.val(item.value || \"\").prop('checked', !!item.selected);\r\n                            break;\r\n\r\n                        case 'select':\r\n                            item.$input.val(item.selected || \"\");\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                if (item && item.$menu) {\r\n                    // update sub-menu\r\n                    op.update.call($trigger, item, root);\r\n                }\r\n            });\r\n        },\r\n        layer: function(opt, zIndex) {\r\n            // add transparent layer for click area\r\n            // filter and background for Internet Explorer, Issue #23\r\n            var $layer = opt.$layer = $('<div id=\"context-menu-layer\" style=\"position:fixed; z-index:' + zIndex + '; top:0; left:0; opacity: 0; filter: alpha(opacity=0); background-color: #000;\"></div>')\r\n                .css({height: $win.height(), width: $win.width(), display: 'block'})\r\n                .data('contextMenuRoot', opt)\r\n                .insertBefore(this)\r\n                .on('contextmenu', handle.abortevent)\r\n                .on('mousedown', handle.layerClick);\r\n\r\n            // IE6 doesn't know position:fixed;\r\n            if (!$.support.fixedPosition) {\r\n                $layer.css({\r\n                    'position' : 'absolute',\r\n                    'height' : $(document).height()\r\n                });\r\n            }\r\n\r\n            return $layer;\r\n        }\r\n    };\r\n\r\n// split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\r\nfunction splitAccesskey(val) {\r\n    var t = val.split(/\\s+/),\r\n        keys = [];\r\n\r\n    for (var i=0, k; k = t[i]; i++) {\r\n        k = k[0].toUpperCase(); // first character only\r\n        // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\r\n        // a map to look up already used access keys would be nice\r\n        keys.push(k);\r\n    }\r\n\r\n    return keys;\r\n}\r\n\r\n// handle contextMenu triggers\r\n$.fn.contextMenu = function(operation) {\r\n    if (operation === undefined) {\r\n        this.first().trigger('contextmenu');\r\n    } else if (operation.x && operation.y) {\r\n        this.first().trigger($.Event(\"contextmenu\", {pageX: operation.x, pageY: operation.y}));\r\n    } else if (operation === \"hide\") {\r\n        var $menu = this.data('contextMenu').$menu;\r\n        $menu && $menu.trigger('contextmenu:hide');\r\n    } else if (operation === \"destroy\") {\r\n        $.contextMenu(\"destroy\", {context: this});\r\n    } else if ($.isPlainObject(operation)) {\r\n        operation.context = this;\r\n        $.contextMenu(\"create\", operation);\r\n    } else if (operation) {\r\n        this.removeClass('context-menu-disabled');\r\n    } else if (!operation) {\r\n        this.addClass('context-menu-disabled');\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// manage contextMenu instances\r\n$.contextMenu = function(operation, options) {\r\n    if (typeof operation != 'string') {\r\n        options = operation;\r\n        operation = 'create';\r\n    }\r\n\r\n    if (typeof options == 'string') {\r\n        options = {selector: options};\r\n    } else if (options === undefined) {\r\n        options = {};\r\n    }\r\n\r\n    // merge with default options\r\n    var o = $.extend(true, {}, defaults, options || {});\r\n    var $document = $(document);\r\n    var $context = $document;\r\n    var _hasContext = false;\r\n\r\n    if (!o.context || !o.context.length) {\r\n        o.context = document;\r\n    } else {\r\n        // you never know what they throw at you...\r\n        $context = $(o.context).first();\r\n        o.context = $context.get(0);\r\n        _hasContext = o.context !== document;\r\n    }\r\n\r\n    switch (operation) {\r\n        case 'create':\r\n            // no selector no joy\r\n            if (!o.selector) {\r\n                throw new Error('No selector specified');\r\n            }\r\n            // make sure internal classes are not bound to\r\n            if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\r\n                throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\r\n            }\r\n            if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\r\n                throw new Error('No Items sepcified');\r\n            }\r\n            counter ++;\r\n            o.ns = '.contextMenu' + counter;\r\n            if (!_hasContext) {\r\n                namespaces[o.selector] = o.ns;\r\n            }\r\n            menus[o.ns] = o;\r\n\r\n            // default to right click\r\n            if (!o.trigger) {\r\n                o.trigger = 'right';\r\n            }\r\n\r\n            if (!initialized) {\r\n                // make sure item click is registered first\r\n                $document\r\n                    .on({\r\n                        'contextmenu:hide.contextMenu': handle.hideMenu,\r\n                        'prevcommand.contextMenu': handle.prevItem,\r\n                        'nextcommand.contextMenu': handle.nextItem,\r\n                        'contextmenu.contextMenu': handle.abortevent,\r\n                        'mouseenter.contextMenu': handle.menuMouseenter,\r\n                        'mouseleave.contextMenu': handle.menuMouseleave\r\n                    }, '.context-menu-list')\r\n                    .on('mouseup.contextMenu', '.context-menu-input', handle.inputClick)\r\n                    .on({\r\n                        'mouseup.contextMenu': handle.itemClick,\r\n                        'contextmenu:focus.contextMenu': handle.focusItem,\r\n                        'contextmenu:blur.contextMenu': handle.blurItem,\r\n                        'contextmenu.contextMenu': handle.abortevent,\r\n                        'mouseenter.contextMenu': handle.itemMouseenter,\r\n                        'mouseleave.contextMenu': handle.itemMouseleave\r\n                    }, '.context-menu-item');\r\n\r\n                initialized = true;\r\n            }\r\n\r\n            // engage native contextmenu event\r\n            $context\r\n                .on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);\r\n\r\n            if (_hasContext) {\r\n                // add remove hook, just in case\r\n                $context.on('remove' + o.ns, function() {\r\n                    $(this).contextMenu(\"destroy\");\r\n                });\r\n            }\r\n\r\n            switch (o.trigger) {\r\n                case 'hover':\r\n                        $context\r\n                            .on('mouseenter' + o.ns, o.selector, o, handle.mouseenter)\r\n                            .on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);\r\n                    break;\r\n\r\n                case 'left':\r\n                        $context.on('click' + o.ns, o.selector, o, handle.click);\r\n                    break;\r\n                /*\r\n                default:\r\n                    // http://www.quirksmode.org/dom/events/contextmenu.html\r\n                    $document\r\n                        .on('mousedown' + o.ns, o.selector, o, handle.mousedown)\r\n                        .on('mouseup' + o.ns, o.selector, o, handle.mouseup);\r\n                    break;\r\n                */\r\n            }\r\n\r\n            // create menu\r\n            if (!o.build) {\r\n                op.create(o);\r\n            }\r\n            break;\r\n\r\n        case 'destroy':\r\n            var $visibleMenu;\r\n            if (_hasContext) {\r\n                // get proper options\r\n                var context = o.context;\r\n                $.each(menus, function(ns, o) {\r\n                    if (o.context !== context) {\r\n                        return true;\r\n                    }\r\n\r\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\r\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n                    }\r\n\r\n                    try {\r\n                        if (menus[o.ns].$menu) {\r\n                            menus[o.ns].$menu.remove();\r\n                        }\r\n\r\n                        delete menus[o.ns];\r\n                    } catch(e) {\r\n                        menus[o.ns] = null;\r\n                    }\r\n\r\n                    $(o.context).off(o.ns);\r\n\r\n                    return true;\r\n                });\r\n            } else if (!o.selector) {\r\n                $document.off('.contextMenu .contextMenuAutoHide');\r\n                $.each(menus, function(ns, o) {\r\n                    $(o.context).off(o.ns);\r\n                });\r\n\r\n                namespaces = {};\r\n                menus = {};\r\n                counter = 0;\r\n                initialized = false;\r\n\r\n                $('#context-menu-layer, .context-menu-list').remove();\r\n            } else if (namespaces[o.selector]) {\r\n                $visibleMenu = $('.context-menu-list').filter(':visible');\r\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\r\n                    $visibleMenu.trigger('contextmenu:hide', {force: true});\r\n                }\r\n\r\n                try {\r\n                    if (menus[namespaces[o.selector]].$menu) {\r\n                        menus[namespaces[o.selector]].$menu.remove();\r\n                    }\r\n\r\n                    delete menus[namespaces[o.selector]];\r\n                } catch(e) {\r\n                    menus[namespaces[o.selector]] = null;\r\n                }\r\n\r\n                $document.off(namespaces[o.selector]);\r\n            }\r\n            break;\r\n\r\n        case 'html5':\r\n            // if <command> or <menuitem> are not handled by the browser,\r\n            // or options was a bool true,\r\n            // initialize $.contextMenu for them\r\n            if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options == \"boolean\" && options)) {\r\n                $('menu[type=\"context\"]').each(function() {\r\n                    if (this.id) {\r\n                        $.contextMenu({\r\n                            selector: '[contextmenu=' + this.id +']',\r\n                            items: $.contextMenu.fromMenu(this)\r\n                        });\r\n                    }\r\n                }).css('display', 'none');\r\n            }\r\n            break;\r\n\r\n        default:\r\n            throw new Error('Unknown operation \"' + operation + '\"');\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n// import values into <input> commands\r\n$.contextMenu.setInputValues = function(opt, data) {\r\n    if (data === undefined) {\r\n        data = {};\r\n    }\r\n\r\n    $.each(opt.inputs, function(key, item) {\r\n        switch (item.type) {\r\n            case 'text':\r\n            case 'textarea':\r\n                item.value = data[key] || \"\";\r\n                break;\r\n\r\n            case 'checkbox':\r\n                item.selected = data[key] ? true : false;\r\n                break;\r\n\r\n            case 'radio':\r\n                item.selected = (data[item.radio] || \"\") == item.value ? true : false;\r\n                break;\r\n\r\n            case 'select':\r\n                item.selected = data[key] || \"\";\r\n                break;\r\n        }\r\n    });\r\n};\r\n\r\n// export values from <input> commands\r\n$.contextMenu.getInputValues = function(opt, data) {\r\n    if (data === undefined) {\r\n        data = {};\r\n    }\r\n\r\n    $.each(opt.inputs, function(key, item) {\r\n        switch (item.type) {\r\n            case 'text':\r\n            case 'textarea':\r\n            case 'select':\r\n                data[key] = item.$input.val();\r\n                break;\r\n\r\n            case 'checkbox':\r\n                data[key] = item.$input.prop('checked');\r\n                break;\r\n\r\n            case 'radio':\r\n                if (item.$input.prop('checked')) {\r\n                    data[item.radio] = item.value;\r\n                }\r\n                break;\r\n        }\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\n// find <label for=\"xyz\">\r\nfunction inputLabel(node) {\r\n    return (node.id && $('label[for=\"'+ node.id +'\"]').val()) || node.name;\r\n}\r\n\r\n// convert <menu> to items object\r\nfunction menuChildren(items, $children, counter) {\r\n    if (!counter) {\r\n        counter = 0;\r\n    }\r\n\r\n    $children.each(function() {\r\n        var $node = $(this),\r\n            node = this,\r\n            nodeName = this.nodeName.toLowerCase(),\r\n            label,\r\n            item;\r\n\r\n        // extract <label><input>\r\n        if (nodeName == 'label' && $node.find('input, textarea, select').length) {\r\n            label = $node.text();\r\n            $node = $node.children().first();\r\n            node = $node.get(0);\r\n            nodeName = node.nodeName.toLowerCase();\r\n        }\r\n\r\n        /*\r\n         * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\r\n         * Not being the sadistic kind, $.contextMenu only accepts:\r\n         * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\r\n         * Everything else will be imported as an html node, which is not interfaced with contextMenu.\r\n         */\r\n\r\n        // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\r\n        switch (nodeName) {\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\r\n            case 'menu':\r\n                item = {name: $node.attr('label'), items: {}};\r\n                counter = menuChildren(item.items, $node.children(), counter);\r\n                break;\r\n\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\r\n            case 'a':\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\r\n            case 'button':\r\n                item = {\r\n                    name: $node.text(),\r\n                    disabled: !!$node.attr('disabled'),\r\n                    callback: (function(){ return function(){ $node.click(); }; })()\r\n                };\r\n                break;\r\n\r\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\r\n\r\n            case 'menuitem':\r\n            case 'command':\r\n                switch ($node.attr('type')) {\r\n                    case undefined:\r\n                    case 'command':\r\n                    case 'menuitem':\r\n                        item = {\r\n                            name: $node.attr('label'),\r\n                            disabled: !!$node.attr('disabled'),\r\n                            callback: (function(){ return function(){ $node.click(); }; })()\r\n                        };\r\n                        break;\r\n\r\n                    case 'checkbox':\r\n                        item = {\r\n                            type: 'checkbox',\r\n                            disabled: !!$node.attr('disabled'),\r\n                            name: $node.attr('label'),\r\n                            selected: !!$node.attr('checked')\r\n                        };\r\n                        break;\r\n\r\n                    case 'radio':\r\n                        item = {\r\n                            type: 'radio',\r\n                            disabled: !!$node.attr('disabled'),\r\n                            name: $node.attr('label'),\r\n                            radio: $node.attr('radiogroup'),\r\n                            value: $node.attr('id'),\r\n                            selected: !!$node.attr('checked')\r\n                        };\r\n                        break;\r\n\r\n                    default:\r\n                        item = undefined;\r\n                }\r\n                break;\r\n\r\n            case 'hr':\r\n                item = '-------';\r\n                break;\r\n\r\n            case 'input':\r\n                switch ($node.attr('type')) {\r\n                    case 'text':\r\n                        item = {\r\n                            type: 'text',\r\n                            name: label || inputLabel(node),\r\n                            disabled: !!$node.attr('disabled'),\r\n                            value: $node.val()\r\n                        };\r\n                        break;\r\n\r\n                    case 'checkbox':\r\n                        item = {\r\n                            type: 'checkbox',\r\n                            name: label || inputLabel(node),\r\n                            disabled: !!$node.attr('disabled'),\r\n                            selected: !!$node.attr('checked')\r\n                        };\r\n                        break;\r\n\r\n                    case 'radio':\r\n                        item = {\r\n                            type: 'radio',\r\n                            name: label || inputLabel(node),\r\n                            disabled: !!$node.attr('disabled'),\r\n                            radio: !!$node.attr('name'),\r\n                            value: $node.val(),\r\n                            selected: !!$node.attr('checked')\r\n                        };\r\n                        break;\r\n\r\n                    default:\r\n                        item = undefined;\r\n                        break;\r\n                }\r\n                break;\r\n\r\n            case 'select':\r\n                item = {\r\n                    type: 'select',\r\n                    name: label || inputLabel(node),\r\n                    disabled: !!$node.attr('disabled'),\r\n                    selected: $node.val(),\r\n                    options: {}\r\n                };\r\n                $node.children().each(function(){\r\n                    item.options[this.value] = $(this).text();\r\n                });\r\n                break;\r\n\r\n            case 'textarea':\r\n                item = {\r\n                    type: 'textarea',\r\n                    name: label || inputLabel(node),\r\n                    disabled: !!$node.attr('disabled'),\r\n                    value: $node.val()\r\n                };\r\n                break;\r\n\r\n            case 'label':\r\n                break;\r\n\r\n            default:\r\n                item = {type: 'html', html: $node.clone(true)};\r\n                break;\r\n        }\r\n\r\n        if (item) {\r\n            counter++;\r\n            items['key' + counter] = item;\r\n        }\r\n    });\r\n\r\n    return counter;\r\n}\r\n\r\n// convert html5 menu\r\n$.contextMenu.fromMenu = function(element) {\r\n    var $this = $(element),\r\n        items = {};\r\n\r\n    menuChildren(items, $this.children());\r\n\r\n    return items;\r\n};\r\n\r\n// make defaults accessible\r\n$.contextMenu.defaults = defaults;\r\n$.contextMenu.types = types;\r\n// export internal functions - undocumented, for hacking only!\r\n$.contextMenu.handle = handle;\r\n$.contextMenu.op = op;\r\n$.contextMenu.menus = menus;\r\n\r\n})(jQuery);\r\n","\r\n\r\n/**\r\n *\r\n * @private\r\n */\r\n/**\r\n * Primary package containing general interfaces and implementation classes.\r\n * @namespace draw2d */\r\nexport default {\r\n  /**\r\n   * Types representing or manipulating geometric values, such as Points, Rectangles, etc.\r\n   * @namespace draw2d.geo\r\n   * */\r\n  geo: {},\r\n\r\n  /** \r\n   * Contains classes to load and save Draw2D files into, or from, a Canvas.\r\n   * @namespace draw2d.io \r\n   **/\r\n  io: {\r\n    /** @namespace draw2d.io.json\r\n     * */\r\n    json: {},\r\n    /** @namespace draw2d.io.png */\r\n    png: {},\r\n    /** @namespace draw2d.io.svg */\r\n    svg: {}\r\n  },\r\n\r\n  /** @namespace draw2d.util */\r\n  util: {\r\n    /** @namespace draw2d.util.spline */\r\n    spline: {}\r\n  },\r\n\r\n  /**\r\n   * This package contains EditPolicy implementations for all used elements. A *EditPolicy*\r\n   * is a pluggable contribution implementing a portion of an element behavior. Editpolicies contribute to the\r\n   * overall editing behavior of an EditPart.\r\n   *\r\n   * Editing behavior is defined as one or more of the following:\r\n   *  - Selection handling\r\n   *  - Routing\r\n   *  - Feedback management\r\n   *  - Delegation and Forwarding of commands\r\n   *  - Drag&Drop behaviour\r\n   *\r\n   * @namespace draw2d.policy\r\n   * */\r\n  policy: {\r\n    /**\r\n     * Editpolicies for selection handling, highlighting, background rendering, snapTo behaviour.\r\n     *\r\n     * @namespace draw2d.policy.canvas\r\n     * */\r\n    canvas: {},\r\n    /** \r\n     * Policies for Connection creation. Like 'ClickPolicy'...creates a connection if you click into the canvas. \r\n     * @namespace draw2d.policy.connection \r\n     **/\r\n    connection: {},\r\n    /** @namespace draw2d.policy.line */\r\n    line: {},\r\n    /** @namespace draw2d.policy.port */\r\n    port: {},\r\n    /** \r\n     * Selection decorations for figures. Movement contrains. Width limitation,...\r\n     * @namespace draw2d.policy.figure \r\n     **/\r\n    figure: {}\r\n  },\r\n\r\n  /** \r\n   * Contains all predefined visual shapes of Draw2D\r\n   *  \r\n   * @namespace draw2d.shape \r\n   **/\r\n  shape: {\r\n    /** \r\n     * @namespace draw2d.shape.basic \r\n     **/\r\n    basic: {},\r\n    /** @namespace draw2d.shape.dimetric */\r\n    dimetric: {},\r\n    /** @namespace draw2d.shape.composite */\r\n    composite: {},\r\n    /** @namespace draw2d.shape.arrow */\r\n    arrow: {},\r\n    /** @namespace draw2d.shape.node */\r\n    node: {},\r\n    /** @namespace draw2d.shape.note */\r\n    note: {},\r\n    /** @namespace draw2d.shape.diagram */\r\n    diagram: {},\r\n    /** @namespace draw2d.shape.flowchart */\r\n    flowchart: {},\r\n    /** @namespace draw2d.shape.analog */\r\n    analog: {},\r\n    /** @namespace draw2d.shape.icon */\r\n    icon: {},\r\n    /** @namespace draw2d.shape.layout */\r\n    layout: {},\r\n    /** @namespace draw2d.shape.pert */\r\n    pert: {},\r\n    /** @namespace draw2d.shape.state */\r\n    state: {},\r\n    /** @namespace draw2d.shape.widget */\r\n    widget: {}\r\n  },\r\n\r\n  /** \r\n   * The command is what eventually changes the model. Figures are asked for a command for a given request. Commands also help \r\n   * determine if the interaction is possible. If there is no command, or it is not executable, the UI will indicate that the \r\n   * interaction is not allowed. \r\n   * \r\n   * All commands (move, drag&drop, insert, remove,....) are stored on top of a CommandStack and available for undo and redo.\r\n   * An `draw2d.Canvas` has a single command stack. **Commands must be executed using the command stack rather than directly calling execute.**\r\n   * \r\n   * @namespace draw2d.command \r\n   **/\r\n  command: {},\r\n\r\n  /** @namespace draw2d.decoration */\r\n  decoration: {\r\n    /** @namespace draw2d.decoration.connection */\r\n    connection: {}\r\n  },\r\n\r\n  /** @namespace draw2d.layout */\r\n  layout: {\r\n    /** @namespace draw2d.layout.connection\r\n     *  @memberof draw2d.layout\r\n     * */\r\n    connection: {},\r\n    /** @namespace draw2d.layout.anchor */\r\n    anchor: {},\r\n    /** @namespace draw2d.layout.mesh */\r\n    mesh: {},\r\n    /** @namespace draw2d.layout.locator */\r\n    locator: {}\r\n  },\r\n\r\n  /** @namespace draw2d.ui */\r\n  ui: {},\r\n\r\n  isTouchDevice: (\r\n    //Detect iPhone\r\n    (navigator.platform.indexOf(\"iPhone\") != -1) ||\r\n    //Detect iPod\r\n    (navigator.platform.indexOf(\"iPod\") != -1) ||\r\n    //Detect iPad\r\n    (navigator.platform.indexOf(\"iPad\") != -1)\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A plugable contribution implementing a portion of an behavior.\r\n *\r\n *\r\n * EditPolicies should determine an Canvas or figure editing capabilities. It is possible to implement\r\n * an figure such that it handles all editing responsibility. However, it is much more flexible\r\n * and object-oriented to use EditPolicies. Using policies, you can pick and choose the editing\r\n * behavior for an figure/canvas without being bound to its class hierarchy. Code management is easier.\r\n *\r\n *\r\n * This interface is not intended to be implemented by clients. Clients should inherit from {@link draw2d.policy.figure.SelectionFeedbackPolicy}\r\n * or {@link draw2d.policy.canvas.SelectionPolicy}.\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.policy.EditPolicy = Class.extend(\r\n  /** @lends draw2d.policy.EditPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.EditPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.setterWhitelist = { ...setter}\r\n    this.getterWhitelist = { ...getter}\r\n\r\n    this.attr(attr)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Read or set object attributes.<br>\r\n   * When no value is given, reads specified attribute from the element.<br>\r\n   * When value is given, sets the attribute to that value.\r\n   * Multiple attributes can be set by passing an object with name-value pairs.\r\n   *\r\n   * @param {String/Object} name\r\n   * @param {Object} [value]\r\n   * @since 5.3.2\r\n   * @returns {Object}\r\n   **/\r\n  attr: function (name, value) {\r\n    // call of attr as setter method with {name1:val1, name2:val2 }  argument list\r\n    //\r\n    if ($.isPlainObject(name)) {\r\n      for (let key in name) {\r\n        let func = this.setterWhitelist[key]\r\n        // call the assigned method if given\r\n        if (func) {\r\n          func.call(this, name[key])\r\n        }\r\n        // maby the ussser adds a function as property to the attr call\r\n        // e.g.:\r\n        // {\r\n        //     doIt: function(){}\r\n        // }\r\n        //\r\n        // in this case we assign the method to this object and wrap it with \"this\" as context\r\n        // a very, very simple method to replace default implemenations of the object\r\n        else if (typeof name[key] === \"function\") {\r\n          this[key] = name[key].bind(this)\r\n        }\r\n      }\r\n    }\r\n    else if (typeof name === \"string\") {\r\n      // call attr as getter\r\n      //\r\n      if (typeof value === \"undefined\") {\r\n        let getter = this.getterWhitelist[name]\r\n        if (typeof getter === \"function\") {\r\n          return getter.call(this)\r\n        }\r\n        return // undefined\r\n      }\r\n      // call attr as simple setter with (key , value)\r\n      //\r\n\r\n      // the value can be a function. In this case we must call the value().\r\n      if (typeof value === \"function\") {\r\n        value = value()\r\n      }\r\n      let setter = this.setterWhitelist[name]\r\n      if (setter) {\r\n        setter.call(this, value)\r\n      }\r\n    }\r\n    // generic getter of all registered attributes\r\n    else if (typeof name === \"undefined\") {\r\n      let result = {}\r\n      for (key in this.getterWhitelist) {\r\n        result[key] = this.getterWhitelist[key].call(this)\r\n      }\r\n      return result\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been installed.\r\n   *\r\n   * @param {draw2d.Canvas|draw2d.Figure} host\r\n   */\r\n  onInstall: function (host) {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been uninstalled.\r\n   *\r\n   * @param {draw2d.Canvas|draw2d.Figure} host\r\n   */\r\n  onUninstall: function (host) {\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.SelectionPolicy\r\n */\r\ndraw2d.policy.canvas.BoundingboxSelectionPolicy = draw2d.policy.canvas.SingleSelectionPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.BoundingboxSelectionPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.BoundingboxSelectionPolicy\",\r\n\r\n  /**\r\n   * Creates a new selection policy for a canvas.\r\n   */\r\n  init: function () {\r\n    this.isInsideMode = (rect1, rect2) => rect1.isInside(rect2)\r\n    this.intersectsMode = (rect1, rect2) => rect1.intersects(rect2)\r\n\r\n    this.decision = this.isInsideMode\r\n\r\n    this._super()\r\n\r\n    this.boundingBoxFigure1 = null\r\n    this.boundingBoxFigure2 = null\r\n    this.x = 0\r\n    this.y = 0\r\n\r\n    // falls ein Port getroffen wird, dann darf keine BoundingBox gezeichnet werden.\r\n    //\r\n    this.canDrawBoundingBox = false\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  select: function (canvas, figure) {\r\n    if (canvas.getSelection().contains(figure)) {\r\n      return // nothing to to\r\n    }\r\n\r\n    let oldSelection = canvas.getSelection().getPrimary()\r\n\r\n    if (figure !== null) {\r\n      figure.select(true) // primary selection\r\n    }\r\n\r\n    if (oldSelection !== figure) {\r\n      canvas.getSelection().setPrimary(figure)\r\n\r\n      // inform all selection listeners about the new selection.\r\n      //\r\n      canvas.fireEvent(\"select\", {figure: figure, selection: canvas.getSelection()})\r\n    }\r\n\r\n    // adding connections to the selection of the source and target port part of the current selection\r\n    //\r\n    let selection = canvas.getSelection()\r\n    canvas.getLines().each((i, line) => {\r\n      if (line instanceof draw2d.Connection) {\r\n        if (selection.contains(line.getSource().getRoot()) && selection.contains(line.getTarget().getRoot())) {\r\n          this.select(canvas, line, false)\r\n        }\r\n      }\r\n    })\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the selection handling mode to <b>intersection</b> or to <b>isInside</b>.\r\n   * <ul>\r\n   *   <li>true = intersection, shapes must only touch the selection bounding box </li>\r\n   *   <li>false = isInside, shapes must complete inside the selection bounding box (default)</li>\r\n   * </ul>\r\n   *\r\n   * @param {Boolean} useIntersectionMode set true if the selection handle should use the alternative selection approach\r\n   * @since 4.9.0\r\n   */\r\n  setDecisionMode: function (useIntersectionMode) {\r\n    if (useIntersectionMode === true) {\r\n      this.decision = this.intersectsMode\r\n    }\r\n    else {\r\n      this.decision = this.isInsideMode\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onMouseDown: function (canvas, x, y, shiftKey, ctrlKey) {\r\n\r\n    try {\r\n      this.x = x\r\n      this.y = y\r\n\r\n      let currentSelection = canvas.getSelection().getAll()\r\n\r\n      // COPY_PARENT\r\n      // this code part is copied from the parent implementation. The main problem is, that\r\n      // the sequence of unselect/select of elements is broken if we call the base implementation\r\n      // in this case wrong  events are fired if we select a figure if already a figure is selected!\r\n      // WRONG: selectNewFigure -> unselectOldFigure\r\n      // RIGHT: unselectOldFigure -> selectNewFigure\r\n      // To ensure this I must copy the parent code and postbound the event propagation\r\n      //\r\n      this.mouseMovedDuringMouseDown = false\r\n      let canDragStart = true\r\n\r\n      this.canDrawBoundingBox = false\r\n\r\n      let figure = canvas.getBestFigure(x, y)\r\n\r\n      // may the figure is assigned to a composite. In this case the composite can\r\n      // override the event receiver\r\n      while (figure !== null) {\r\n        let delegated = figure.getSelectionAdapter()()\r\n        if (delegated === figure) {\r\n          break\r\n        }\r\n        figure = delegated\r\n      }\r\n\r\n      // ignore ports since version 6.1.0. This is handled by the ConnectionCreatePolicy\r\n      //\r\n      if (figure instanceof draw2d.Port) {\r\n        return// silently\r\n      }\r\n\r\n      if( figure !==null && figure.isSelectable() === false && figure.isDraggable()===false){\r\n        figure=null;\r\n      }\r\n\r\n      this.canDrawBoundingBox = true\r\n\r\n      if (figure !== null && figure.isDraggable()) {\r\n        canDragStart = figure.onDragStart(x - figure.getAbsoluteX(), y - figure.getAbsoluteY(), shiftKey, ctrlKey)\r\n        // Element send a veto about the drag&drop operation\r\n        this.mouseDraggingElement = canDragStart === false ? null : figure\r\n      }\r\n\r\n      this.mouseDownElement = figure\r\n\r\n      this.mouseDownElement?.fireEvent(\"mousedown\",\r\n       {\r\n        x: x, \r\n        y: y, \r\n        relX: x - this.mouseDownElement.getAbsoluteX(),\r\n        relY: y - this.mouseDownElement.getAbsoluteY(),\r\n        shiftKey: \r\n        shiftKey, \r\n        ctrlKey: ctrlKey\r\n      })\r\n\r\n      // we click on an element which are not part of the current selection\r\n      // => reset the \"old\" current selection if we didn't press the shift key\r\n      if (shiftKey === false) {\r\n        if (this.mouseDownElement !== null && this.mouseDownElement.isResizeHandle === false && !currentSelection.contains(this.mouseDownElement)) {\r\n          currentSelection.each((i, figure) => {\r\n            this.unselect(canvas, figure)\r\n          })\r\n        }\r\n      }\r\n\r\n      if (figure !== canvas.getSelection().getPrimary() && figure !== null && figure.isSelectable() === true) {\r\n        this.select(canvas, figure)\r\n\r\n        // its a line\r\n        if (figure instanceof draw2d.shape.basic.Line) {\r\n          // you can move a line with Drag&Drop...but not a connection.\r\n          // A Connection is fixed linked with the corresponding ports.\r\n          //\r\n          if (!(figure instanceof draw2d.Connection)) {\r\n            canvas.draggingLineCommand = figure.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE))\r\n            if (canvas.draggingLineCommand !== null) {\r\n              canvas.draggingLine = figure\r\n            }\r\n          }\r\n        }\r\n        else if (canDragStart === false) {\r\n          figure.unselect()\r\n        }\r\n      }\r\n      // END_COPY FROM PARENT\r\n\r\n\r\n      // inform all figures that they have a new ox/oy position for the relative\r\n      // drag/drop operation\r\n      if (this.mouseDownElement !== null && this.mouseDownElement.isResizeHandle === false) {\r\n        currentSelection = canvas.getSelection().getAll()\r\n        currentSelection.each((i, figure) => {\r\n          let fakeDragX = 1\r\n          let fakeDragY = 1\r\n\r\n          let handleRect = figure.getHandleBBox()\r\n          if (handleRect !== null) {\r\n            handleRect.translate(figure.getAbsolutePosition().scale(-1))\r\n            fakeDragX = handleRect.x + 1\r\n            fakeDragY = handleRect.y + 1\r\n          }\r\n\r\n          let canDragStart = figure.onDragStart(fakeDragX, fakeDragY, shiftKey, ctrlKey, true /*fakeFlag*/)\r\n          // its a line\r\n          if (figure instanceof draw2d.shape.basic.Line) {\r\n            // no special handling\r\n          }\r\n          else if (canDragStart === false) {\r\n            this.unselect(canvas, figure)\r\n          }\r\n        })\r\n      }\r\n    }\r\n    catch (exc) {\r\n      console.log(exc)\r\n      throw exc\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} dx The x diff between start of dragging and this event\r\n   * @param {Number} dy The y diff between start of dragging and this event\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   */\r\n  onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    // don't drag a selection box if we drag&drop a port\r\n    //\r\n    if (this.canDrawBoundingBox === false) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._super(canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n\r\n      if (this.mouseDraggingElement === null && this.mouseDownElement === null && this.boundingBoxFigure1 === null) {\r\n        this.boundingBoxFigure1 = new draw2d.shape.basic.Rectangle({\r\n          width: 1,\r\n          height: 1,\r\n          x: this.x,\r\n          y: this.y,\r\n          bgColor: \"#d4d1d4\",\r\n          alpha: 0.1\r\n        })\r\n        this.boundingBoxFigure1.setCanvas(canvas)\r\n\r\n        this.boundingBoxFigure2 = new draw2d.shape.basic.Rectangle({\r\n          width: 1,\r\n          height: 1,\r\n          x: this.x,\r\n          y: this.y,\r\n          dash: \"--..\",\r\n          stroke: 0.5,\r\n          color: \"#37a8ff\",\r\n          bgColor: null\r\n        })\r\n        this.boundingBoxFigure2.setCanvas(canvas)\r\n      }\r\n      let abs = Math.abs\r\n      let min = Math.min\r\n      if (this.boundingBoxFigure1 !== null) {\r\n        this.boundingBoxFigure1.setDimension(abs(dx), abs(dy))\r\n        this.boundingBoxFigure1.setPosition(this.x + min(0, dx), this.y + min(0, dy))\r\n        this.boundingBoxFigure2.setDimension(abs(dx), abs(dy))\r\n        this.boundingBoxFigure2.setPosition(this.x + min(0, dx), this.y + min(0, dy))\r\n      }\r\n    }\r\n    catch (exc) {\r\n      console.log(exc)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onMouseUp: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    try {\r\n      // delete the current selection if you have clicked in the empty\r\n      // canvas.\r\n      if (this.mouseDownElement === null) {\r\n        canvas.getSelection().getAll().each((i, figure) => {\r\n          this.unselect(canvas, figure)\r\n        })\r\n      }\r\n      else if (this.mouseDownElement instanceof draw2d.ResizeHandle || (this.mouseDownElement instanceof draw2d.shape.basic.LineResizeHandle)) {\r\n        // Do nothing\r\n        // A click on a resize handle didn't change the selection of the canvas\r\n        //\r\n      }\r\n      // delete the current selection if you click on another figure than the current\r\n      // selection and you didn't drag the complete selection.\r\n      else if (this.mouseDownElement !== null && this.mouseMovedDuringMouseDown === false) {\r\n        let sel = canvas.getSelection().getAll()\r\n        if (!sel.contains(this.mouseDownElement)) {\r\n          canvas.getSelection().getAll().each((i, figure) => {\r\n            this.unselect(canvas, figure)\r\n          })\r\n        }\r\n      }\r\n      this._super(canvas, x, y, shiftKey, ctrlKey)\r\n\r\n      if (this.boundingBoxFigure1 !== null) {\r\n        // retrieve all figures which are inside the bounding box and select all of them\r\n        //\r\n        let selectionRect = this.boundingBoxFigure1.getBoundingBox()\r\n        canvas.getFigures().each((i, figure) => {\r\n          if (figure.isSelectable() === true && figure.isVisible()===true && this.decision(figure.getBoundingBox(), selectionRect)) {\r\n            let fakeDragX = 1\r\n            let fakeDragY = 1\r\n\r\n            let handleRect = figure.getHandleBBox()\r\n            if (handleRect !== null) {\r\n              handleRect.translate(figure.getAbsolutePosition().scale(-1))\r\n              fakeDragX = handleRect.x + 1\r\n              fakeDragY = handleRect.y + 1\r\n            }\r\n            let canDragStart = figure.onDragStart(fakeDragX, fakeDragY, shiftKey, ctrlKey)\r\n            if (canDragStart === true) {\r\n              this.select(canvas, figure)\r\n            }\r\n          }\r\n        })\r\n\r\n        this.boundingBoxFigure1.setCanvas(null)\r\n        this.boundingBoxFigure1 = null\r\n        this.boundingBoxFigure2.setCanvas(null)\r\n        this.boundingBoxFigure2 = null\r\n      }\r\n    }\r\n    catch (exc) {\r\n      console.log(exc)\r\n      debugger\r\n    }\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\nimport Color from '../../util/Color'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.EditPolicy\r\n */\r\ndraw2d.policy.canvas.CanvasPolicy = draw2d.policy.EditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.CanvasPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.canvas.CanvasPolicy\",\r\n\r\n    /**\r\n     * Creates a new Router object\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.canvas = null\r\n      this._super(attr, setter, getter)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called if the policy is installed into the canvas.\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     */\r\n    onInstall: function (canvas) {\r\n      this.canvas = canvas\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called if the policy is deinstalled from the canvas\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     */\r\n    onUninstall: function (canvas) {\r\n      this.canvas = null\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     */\r\n    onMouseMove: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDown: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} dx The x diff between start of dragging and this event\r\n     * @param {Number} dy The y diff between start of dragging and this event\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas the shape below the mouse or null\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseUp: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called if the user press the right mouse in the canvas.\r\n     *\r\n     * @param {draw2d.Figure|draw2d.shape.basic.Line} figure the figure below the mouse\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @since 4.4.0\r\n     */\r\n    onRightMouseDown: function (figure, x, y, shiftKey, ctrlKey) {\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called by the canvas if the user click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure under the click event. Can be null\r\n     * @param {Number} mouseX the x coordinate of the mouse during the click event\r\n     * @param {Number} mouseY the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 3.0.0\r\n     *\r\n     * @template\r\n     */\r\n    onClick: function (figure, mouseX, mouseY, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the canvas if the user double click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure under the double click event. Can be null\r\n     * @param {Number} mouseX the x coordinate of the mouse during the click event\r\n     * @param {Number} mouseY the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 4.1.0\r\n     *\r\n     * @template\r\n     */\r\n    onDoubleClick: function (figure, mouseX, mouseY, shiftKey, ctrlKey) {\r\n    },\r\n\r\n    /**\r\n     *\r\n     * called if the user uses the mouse wheel.\r\n     *\r\n     *\r\n     * @param {Number} wheelDelta\r\n     * @param {Number} x the x coordinate of the event\r\n     * @param {Number} y the y coordinate of the event\r\n     * @param shiftKey\r\n     * @param ctrlKey\r\n     * @since 5.8.0\r\n     * @template\r\n     *\r\n     * @returns {Boolean} return <b>false</b> to preven tthe default event operation (e.g. scrolling)\r\n     */\r\n    onMouseWheel: function (wheelDelta, x, y, shiftKey, ctrlKey) {\r\n      // return \"false\" to prevent the default event operation\r\n      return true\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Helper method to make an monochrome GIF image WxH pixels big, first create a properly sized array: let pixels = new Array(W*H);.\r\n     * Then, for each pixel X,Y that should be opaque, store a 1 at the proper location: pixels[X+Y*W] = 1;.\r\n     * Finally, create the image: let my_gif = createGif(W, H, pixels, color);\r\n     * \"0\" pixels are transparent.\r\n     * The <b>color</b> defines the foreground color.\r\n     *\r\n     * Now, you can specify this image as the SRC attribute of an IMG tag: document.write(\"<IMG SRC=\\\"\" + my_gif + \"\\\">\");\r\n     * or for the canvas as background-image css attribute.\r\n     *\r\n     *\r\n     * @param w\r\n     * @param h\r\n     * @param d\r\n     * @param color\r\n     * @returns {String}\r\n     *\r\n     * @private\r\n     */\r\n    createMonochromGif: function (w, h, d, color) {\r\n      color = new Color(color)\r\n      let r = String.fromCharCode(w % 256) + String.fromCharCode(w / 256) + String.fromCharCode(h % 256) + String.fromCharCode(h / 256)\r\n\r\n      let gif = 'GIF89a' + r + '\\xf0\\0\\0\\xff\\xff\\xff' + String.fromCharCode(color.red) + String.fromCharCode(color.green) + String.fromCharCode(color.blue) + '\\x21\\xf9\\u{4}\\u{1}\\0\\0\\0,\\0\\0\\0\\0' + r + '\\0\\u{2}'\r\n\r\n      // help method to generate uncompressed in memory GIF data structure without the usage of a canvas or any other\r\n      // heavy weight stuff.\r\n      let b = {\r\n        bit: 1,\r\n        byte_: 0,\r\n        data: '',\r\n\r\n        writeBit: function (b) {\r\n          if (b) this.byte_ |= this.bit\r\n          this.bit <<= 1\r\n          if (this.bit === 256) {\r\n            this.bit = 1\r\n            this.data += String.fromCharCode(this.byte_)\r\n            this.byte_ = 0\r\n          }\r\n        },\r\n\r\n        get: function () {\r\n          let result = \"\"\r\n          let data = this.data\r\n          if (this.bit !== 1) {\r\n            data += String.fromCharCode(this.byte_)\r\n          }\r\n          for (let i = 0; i < data.length + 1; i += 255) {\r\n            let chunklen = data.length - i\r\n            if (chunklen < 0) chunklen = 0\r\n            if (chunklen > 255) chunklen = 255\r\n            result += String.fromCharCode(chunklen) + data.substring(i, i + 255)\r\n          }\r\n          return result + \"\\0\"\r\n        }\r\n      }\r\n\r\n      for (let y = 0; y < h; y++) {\r\n        for (let x = 0; x < w; x++) {\r\n          b.writeBit(d[x + w * y])\r\n          b.writeBit(0)\r\n          b.writeBit(0)\r\n          b.writeBit(0)\r\n          b.writeBit(0)\r\n          b.writeBit(1)\r\n        }\r\n      }\r\n      gif += b.get() + ';'\r\n\r\n      return 'data:image/gif;base64,' + draw2d.util.Base64.encode(gif)\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * This decorations hides draw2d.Ports which are to far from the current cursor position.\r\n * This makes the canvas more clean if you have a lot of nodes on it.<br>\r\n * You didn't see a bunch of ports.\r\n *\r\n *\r\n * @example\r\n *\r\n *      // install the policy to the canvas\r\n *\r\n *      // add some demo figure to the canvas\r\n *      canvas.add(new draw2d.shape.node.Start({x: 10,  y: 30}));\r\n *      canvas.add(new draw2d.shape.node.End({x: 90,  y: 90}));\r\n *      canvas.add(new draw2d.shape.node.Between({ x: 310, y: 30}));\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"move the mouse and you see that ports are hidden if the mouse far from it\"}),5,5);\r\n *\r\n *      canvas.installEditPolicy(new draw2d.policy.canvas.CoronaDecorationPolicy());\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n */\r\ndraw2d.policy.canvas.CoronaDecorationPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.CoronaDecorationPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.CoronaDecorationPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this.startDragX = 0\r\n    this.startDragY = 0\r\n    this.diameterToBeFullVisible = 0\r\n    this.diameterToBeVisible = 0\r\n    this.sumDiameter = 0\r\n\r\n    this._super(\r\n      {\r\n        diameterToBeVisible: 200, \r\n        diameterToBeFullVisible: 20,\r\n        ...attr\r\n      },\r\n      {\r\n        diameterToBeVisible: this.setDiameterToBeVisible,\r\n        diameterToBeFullVisible: this.setDiameterToBeFullVisible,\r\n        ...setter},\r\n\r\n      {\r\n        diameterToBeVisible: this.getDiameterToBeVisible,\r\n        diameterToBeFullVisible: this.getDiameterToBeFullVisible,\r\n        ...getter}\r\n    )\r\n  },\r\n\r\n  setDiameterToBeVisible: function (diameter) {\r\n    this.diameterToBeVisible = diameter\r\n    this.sumDiameter = this.diameterToBeFullVisible + this.diameterToBeVisible\r\n  },\r\n\r\n  getDiameterToBeVisible: function () {\r\n    return this.diameterToBeVisible\r\n  },\r\n\r\n  setDiameterToBeFullVisible: function (diameter) {\r\n    this.diameterToBeFullVisible = diameter\r\n    this.sumDiameter = this.diameterToBeFullVisible + this.diameterToBeVisible\r\n  },\r\n\r\n  getDiameterToBeFullVisible: function () {\r\n    return this.diameterToBeFullVisible\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n    canvas.getFigures().each((i, figure) => {\r\n      figure.getPorts().each((i, p) => p.setAlpha(0.0))\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n\r\n    canvas.getFigures().each(function (i, figure) {\r\n      figure.getPorts().each(function (i, p) {\r\n        if (p.__origAlpha) {\r\n          p.setAlpha(p.__origAlpha)\r\n          delete p.__origAlpha\r\n        }\r\n      })\r\n    })\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onMouseDown: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    this.startDragX = x\r\n    this.startDragY = y\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onMouseMove: function (canvas, x, y, shiftKey, ctrlKey) {\r\n    this.updatePorts(canvas, x, y)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    this.updatePorts(canvas, this.startDragX + dx, this.startDragY + dy)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Update all ports with the new calculated opacity in relation to the distance to the current\r\n   * mouse position\r\n   *\r\n   * @param canvas\r\n   * @param x\r\n   * @param y\r\n   * @private\r\n   */\r\n  updatePorts: function (canvas, x, y) {\r\n    canvas.getFigures().each((i, figure) => {\r\n      if (figure instanceof draw2d.shape.node.Node) {\r\n        if (figure.isVisible() === true && figure.hitTest(x, y, this.sumDiameter) === true) {\r\n          figure.getPorts().each((i, p) => {\r\n            if (p.isVisible() === false) {\r\n              p.__origAlpha = figure.getAlpha()\r\n            }\r\n            let dist = figure.getBoundingBox().getDistance(new draw2d.geo.Point(x, y))\r\n            let alpha = Math.max(0, (1 - (((100 / (this.diameterToBeVisible - this.diameterToBeFullVisible)) * dist) / 100.0)))\r\n            p.setAlpha(alpha)\r\n          })\r\n        }\r\n        else {\r\n          figure.getPorts().each((i, p) => {\r\n              p.setAlpha(0.0)\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * The base class for any canvas decoration like grid, chessboard, graph paper or\r\n * other.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n */\r\ndraw2d.policy.canvas.DecorationPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.DecorationPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.DecorationPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  }\r\n\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Standard keyboard policy. This is the standard installed keyboard policy.\r\n * <br>\r\n * <br>\r\n * Keyboard commands\r\n * <ul>\r\n *    <li>DEL    - delete selection</li>\r\n * </ul>\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.KeyboardPolicy\r\n */\r\ndraw2d.policy.canvas.DefaultKeyboardPolicy = draw2d.policy.canvas.KeyboardPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.DefaultKeyboardPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.DefaultKeyboardPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback if the user press a key.<br>\r\n   * This implementation checks only if the <b>DEL</b> has been pressed and creates an\r\n   * CommandDelete if this happens.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {Number} keyCode the pressed key\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onKeyDown: function (canvas, keyCode, shiftKey, ctrlKey) {\r\n    //\r\n    if (keyCode === 46 && canvas.getPrimarySelection() !== null) {\r\n      // create a single undo/redo transaction if the user delete more than one element. \r\n      // This happens with command stack transactions.\r\n      //\r\n      canvas.getCommandStack().startTransaction(draw2d.Configuration.i18n.command.deleteShape)\r\n      let selection = canvas.getSelection()\r\n      selection.each(function (index, figure) {\r\n        // don't delete a connection if the source or target figure is part of the selection.\r\n        // In this case the connection is deleted by the DeleteCommand itself and it is not allowed to\r\n        // delete a figure twice.\r\n        //\r\n        if (figure instanceof draw2d.Connection) {\r\n          if (selection.contains(figure.getSource(), true)) {\r\n            return\r\n          }\r\n          if (selection.contains(figure.getTarget(), true)) {\r\n            return\r\n          }\r\n        }\r\n        let cmd = figure.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.DELETE))\r\n        if (cmd !== null) {\r\n          canvas.getCommandStack().execute(cmd)\r\n        }\r\n      })\r\n      // execute all single commands at once.\r\n      canvas.getCommandStack().commitTransaction()\r\n    }\r\n    else {\r\n      this._super(canvas, keyCode, shiftKey, ctrlKey)\r\n    }\r\n\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Drop interceptors are basically event handlers from which you can return a value\r\n * that tells draw2d to abort what it is that it was doing.<br>\r\n * <br>\r\n * Interceptors can be registered via the registerEditPolicy method on the draw2d canvas just like any other\r\n * edit policies.<br>\r\n * <br>\r\n * The <b>delegateTarget</b> method is responsible for all drop event especially to all connection and port handling.\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n * @since 5.0.0\r\n */\r\ndraw2d.policy.canvas.DropInterceptorPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.DropInterceptorPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.canvas.DropInterceptorPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called if the user want connect a port with any kind draw2d.Figure.<br>\r\n   * Return a non <b>null</b> value if the interceptor accept the connect event.<br>\r\n   * <br>\r\n   * It is possible to delegate the drop event to another figure if the policy\r\n   * returns another figure. This is useful if a figure want to accept a port\r\n   * drop event and delegates this drop event to another port.<br>\r\n   *\r\n   *\r\n   * @param {draw2d.Figure} connectInquirer the figure who wants connect\r\n   * @param {draw2d.Figure} connectIntent the potential connect target\r\n   *\r\n   * @returns {draw2d.Figure} the calculated connect intent or <b>null</b> if the interceptor uses the veto right\r\n   */\r\n  delegateTarget: function (connectInquirer, connectIntent) {\r\n\r\n    // a composite accept any kind of figures exceptional ports\r\n    //\r\n    if (!(connectInquirer instanceof draw2d.Port) && connectIntent instanceof draw2d.shape.composite.StrongComposite) {\r\n      return connectIntent\r\n    }\r\n\r\n    // Ports accepts only Ports from the same semanticGroup as DropTarget\r\n    //\r\n    if ((connectIntent instanceof draw2d.Port) && (connectInquirer instanceof draw2d.Port)) {\r\n      if(connectIntent.getSemanticGroup() !== connectInquirer.getSemanticGroup()) {\r\n        return null\r\n      }\r\n    }\r\n\r\n    // Ports accepts only Ports as DropTarget\r\n    //\r\n    if (!(connectIntent instanceof draw2d.Port) || !(connectInquirer instanceof draw2d.Port)) {\r\n      return null\r\n    }\r\n\r\n    // ////////////////////////////////////////////////////////////\r\n    // at this stage we a sure, that we have two ports as argument\r\n    // ////////////////////////////////////////////////////////////\r\n\r\n    // It is not possible to create a loop back connection at the moment.\r\n    // Reason: no connection router implemented for this case\r\n    if (connectInquirer.getParent() === connectIntent.getParent()) {\r\n      return null\r\n    }\r\n\r\n    // It is not allowed to connect two output ports\r\n    if (connectInquirer instanceof draw2d.OutputPort && connectIntent instanceof draw2d.OutputPort) {\r\n      return null\r\n    }\r\n\r\n    // It is not allowed to connect two input ports\r\n    if (connectInquirer instanceof draw2d.InputPort && connectIntent instanceof draw2d.InputPort) {\r\n      return null\r\n    }\r\n\r\n\r\n    // redirect the dragEnter handling to the hybrid port\r\n    //\r\n    if ((connectIntent.getParent() instanceof draw2d.shape.node.Hub)) {\r\n\r\n      let inputConnections = connectIntent.getConnections().asArray().filter( con => (con.getPeerPort(connectIntent) instanceof draw2d.OutputPort))\r\n      let outputConnections = connectIntent.getConnections().asArray().filter( con => (con.getPeerPort(connectIntent) instanceof draw2d.InputPort))\r\n\r\n      if (connectInquirer instanceof draw2d.InputPort && outputConnections.length >= connectIntent.getMaxFanOut()) {\r\n        return null\r\n      }\r\n\r\n      if (connectInquirer instanceof draw2d.OutputPort && inputConnections.length >= connectIntent.getMaxFanIn()) {\r\n        return null\r\n      }\r\n\r\n      if (connectInquirer instanceof draw2d.HybridPort && inputConnections.length >= connectIntent.getMaxFanIn()) {\r\n        return null\r\n      }\r\n\r\n      return connectIntent\r\n    } \r\n\r\n    return connectIntent\r\n\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Extended keyboard policy to <b>delete</b> and <b>group</b> figures in the canvas.\r\n * <br>\r\n * Keyboard commands\r\n * <ul>\r\n *    <li>DEL    - delete selection</li>\r\n *    <li>Ctrl+G - group/ungroup selection</li>\r\n *    <li>Ctrl+B - send current selection in the background (toBack)</li>\r\n *    <li>Ctrl+F - send current selection in the foreground (toFront)</li>\r\n * </ul>\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.KeyboardPolicy\r\n */\r\ndraw2d.policy.canvas.ExtendedKeyboardPolicy = draw2d.policy.canvas.KeyboardPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ExtendedKeyboardPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.ExtendedKeyboardPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback if the user press a key\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {Number} keyCode the pressed key\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onKeyDown: function (canvas, keyCode, shiftKey, ctrlKey) {\r\n    if (canvas.getPrimarySelection() !== null && ctrlKey === true) {\r\n      switch (keyCode) {\r\n\r\n        case 71: // G\r\n          if (canvas.getPrimarySelection() instanceof draw2d.shape.composite.Group && canvas.getSelection().getSize() === 1) {\r\n            canvas.getCommandStack().execute(new draw2d.command.CommandUngroup(canvas, canvas.getPrimarySelection()))\r\n          }\r\n          else {\r\n            canvas.getCommandStack().execute(new draw2d.command.CommandGroup(canvas, canvas.getSelection()))\r\n          }\r\n          break\r\n        case 66: // B\r\n          canvas.getPrimarySelection().toBack()\r\n          break\r\n        case 70: // F\r\n          canvas.getPrimarySelection().toFront()\r\n      }\r\n    }\r\n    else {\r\n      this._super(canvas, keyCode, shiftKey, ctrlKey)\r\n    }\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Install this edit policy in a canvas if you want fadeout all decorations like ports, resize handles\r\n * if the user didn't move the mouse. This is good for a clean representation of your diagram.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n */\r\ndraw2d.policy.canvas.FadeoutDecorationPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.FadeoutDecorationPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.canvas.FadeoutDecorationPolicy\",\r\n\r\n    DEFAULT_FADEOUT_DURATION: 60,\r\n    DEFAULT_ALPHA_DECREMENT: 0.05,\r\n\r\n    /**\r\n     * Creates a new fade out policy. Don't forget to install them into the canvas.\r\n     *\r\n     */\r\n    init: function () {\r\n      this._super()\r\n      this.alpha = 1.0\r\n      this.alphaDec = this.DEFAULT_ALPHA_DECREMENT\r\n      this.hidePortsCounter = this.DEFAULT_FADEOUT_DURATION\r\n      this.portDragging = false\r\n    },\r\n\r\n    /**\r\n     * @inheritDoc\r\n     **/\r\n    onInstall: function (canvas) {\r\n      this._super(canvas)\r\n      this.timerId = window.setInterval(this.onTimer.bind(this), 50)\r\n\r\n      // initial hide all decorations after install of this policy\r\n      //\r\n      this.hidePortsCounter = 1\r\n      this.alpha = 0.1\r\n    },\r\n\r\n    /**\r\n     * @inheritDoc\r\n     **/\r\n    onUninstall: function (canvas) {\r\n      window.clearInterval(this.timerId)\r\n      this.canvas.getAllPorts().each(function (i, port) {\r\n        port.setAlpha(1.0)\r\n      })\r\n\r\n      this._super(canvas)\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Timerfucntion to show/hide the related ports\r\n     * @private\r\n     **/\r\n    onTimer: function () {\r\n      this.hidePortsCounter--\r\n\r\n      if (this.hidePortsCounter <= 0 && this.alpha > 0) {\r\n        this.alpha = Math.max(0, this.alpha - this.alphaDec)\r\n\r\n        this.canvas.getAllPorts().each((i, port) => {\r\n          port.setAlpha(this.alpha)\r\n        })\r\n\r\n        this.canvas.getSelection().getAll().each((i, figure) => {\r\n          figure.selectionHandles.each((i, handle) => {\r\n            handle.setAlpha(this.alpha)\r\n          })\r\n        })\r\n      } else if (this.hidePortsCounter > 0 && this.alpha !== 1.0) {\r\n        this.alpha = 1// Math.min(1,this.alpha+0.1);\r\n        this.alphaDec = this.DEFAULT_ALPHA_DECREMENT\r\n        this.duringHide = false\r\n        this.canvas.getAllPorts().each((i, port) => {\r\n          port.setAlpha(this.alpha)\r\n        })\r\n        this.canvas.getSelection().getAll().each((i, figure) => {\r\n          figure.selectionHandles.each((i, handle) => {\r\n            handle.setAlpha(this.alpha)\r\n          })\r\n        })\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDown: function (canvas, x, y, shiftKey, ctrlKey) {\r\n      this.hidePortsCounter = this.DEFAULT_FADEOUT_DURATION\r\n      this.portDragging = (canvas.getBestFigure(x, y) instanceof draw2d.Port)\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseMove: function (canvas, x, y, shiftKey, ctrlKey) {\r\n      this.hidePortsCounter = this.DEFAULT_FADEOUT_DURATION\r\n      this.portDragging = false\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} dx The x diff between start of dragging and this event\r\n     * @param {Number} dy The y diff between start of dragging and this event\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n      if (this.portDragging === false) {\r\n        this.hidePortsCounter = 0\r\n        this.alphaDec = 0.1\r\n        this.onTimer()\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseUp: function (figure, x, y, shiftKey, ctrlKey) {\r\n      this.hidePortsCounter = this.DEFAULT_FADEOUT_DURATION\r\n      this.portDragging = false\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A drag&Drop feedback handler for the canvas. The policy didn't move the\r\n * shapes in real time rather it shows a ghost rectangle as feedback. <br>\r\n * <br>\r\n * The shapes are updated after the drag&drop operation.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *      // install the policy to the canvas\r\n *      canvas.installEditPolicy(new draw2d.policy.canvas.GhostMoveSelectionPolicy());\r\n *\r\n *      // add some demo figure to the canvas\r\n *      canvas.add(new draw2d.shape.basic.Circle({diameter: 50, x: 10,  y: 30}));\r\n *      canvas.add(new draw2d.shape.basic.Circle({diameter: 30, x: 90,  y: 50}));\r\n *      canvas.add(new draw2d.shape.basic.Circle({diameter: 60, x: 110, y: 30}));\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"move the circle to see the drag&drop feedback\"}),5,5);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.SingleSelectionPolicy\r\n */\r\ndraw2d.policy.canvas.GhostMoveSelectionPolicy = draw2d.policy.canvas.SingleSelectionPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.GhostMoveSelectionPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.GhostMoveSelectionPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function () {\r\n    this.clone = null\r\n    this.ghostRectangle1 = null\r\n    this.ghostRectangle2 = null\r\n\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    this.mouseMovedDuringMouseDown = true\r\n    if (this.mouseDraggingElement !== null) {\r\n\r\n      // if the figure not part of the selection it must be a ResizeHandle...\r\n      let sel = canvas.getSelection().getAll()\r\n      if (!sel.contains(this.mouseDraggingElement)) {\r\n        this.mouseDraggingElement.onDrag(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n      }\r\n      // it is a normal draw2d.Figure\r\n      else {\r\n        // create the ghost handles for the figure to move and update the position\r\n        //\r\n        if (this.ghostRectangle1 === null) {\r\n          this.ghostRectangle1 = new draw2d.shape.basic.Rectangle(/*{bgColor:\"#303030\", alpha:0.1}*/) // new API with version 5.0.0\r\n          // old API\r\n          this.ghostRectangle1.setBackgroundColor(\"#303030\")\r\n          this.ghostRectangle1.setAlpha(0.1)\r\n\r\n          this.ghostRectangle2 = new draw2d.shape.basic.Rectangle(/*{dash:\"- \", stroke:1, color:\"#5497DC\", bgColor:null}*/)\r\n          this.ghostRectangle2.setDashArray(\"- \")\r\n          this.ghostRectangle2.setStroke(1)\r\n          this.ghostRectangle2.setColor(\"#5497DC\")\r\n          this.ghostRectangle2.setBackgroundColor(null)\r\n\r\n          this.ghostRectangle1.setBoundingBox(this.mouseDraggingElement.getBoundingBox())\r\n          this.ghostRectangle2.setBoundingBox(this.mouseDraggingElement.getBoundingBox())\r\n\r\n          this.ghostRectangle1.setCanvas(canvas)\r\n          this.ghostRectangle1.toFront()\r\n\r\n          this.ghostRectangle2.setCanvas(canvas)\r\n          this.ghostRectangle2.toFront()\r\n\r\n          this.clone = this.mouseDraggingElement.clone()\r\n          if (this.clone instanceof draw2d.shape.node.Node) {\r\n            this.clone.resetPorts()\r\n          }\r\n          this.clone.setCanvas(canvas)\r\n          this.clone.getShapeElement()\r\n          this.clone.setAlpha(0.4)\r\n          this.clone.repaint()\r\n        }\r\n        else {\r\n          this.ghostRectangle1.translate(dx2, dy2)\r\n          this.ghostRectangle2.translate(dx2, dy2)\r\n          this.clone.translate(dx2, dy2)\r\n        }\r\n\r\n        sel.each(function (i, figure) {\r\n          // store the new location in a tmp var.\r\n          figure._newPos = new draw2d.geo.Point(figure.ox + dx, figure.oy + dy)\r\n\r\n          // don't move the figure. This will be done in the MouseUp event\r\n          //figure.onDrag(dx, dy, dx2, dy2);\r\n        })\r\n      }\r\n\r\n      let p = canvas.fromDocumentToCanvasCoordinate(canvas.mouseDownX + (dx / canvas.zoomFactor), canvas.mouseDownY + (dy / canvas.zoomFactor))\r\n      let target = canvas.getBestFigure(p.x, p.y, this.mouseDraggingElement)\r\n\r\n      if (target !== canvas.currentDropTarget) {\r\n        if (canvas.currentDropTarget !== null) {\r\n          canvas.currentDropTarget.onDragLeave(this.mouseDraggingElement)\r\n          canvas.currentDropTarget.fireEvent(\"dragLeave\", {draggingElement: this.draggingElement})\r\n          canvas.currentDropTarget = null\r\n        }\r\n        if (target !== null) {\r\n          canvas.currentDropTarget = target.delegateTarget(this.mouseDraggingElement)\r\n          // inform all listener that the element has accept a dropEnter event\r\n          if (canvas.currentDropTarget !== null) {\r\n            canvas.currentDropTarget.onDragEnter(this.mouseDraggingElement) // legacy\r\n            canvas.currentDropTarget.fireEvent(\"dragEnter\", {draggingElement: this.draggingElement})\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Connection didn't support panning at the moment. There is no special reason for that. Just an interaction\r\n    // decision.\r\n    //\r\n    else if (this.mouseDownElement !== null && !(this.mouseDownElement instanceof draw2d.Connection)) {\r\n      if (this.mouseDownElement.panningDelegate !== null) {\r\n        this.mouseDownElement.panningDelegate.fireEvent(\"panning\", {\r\n          dx: dx,\r\n          dy: dy,\r\n          dx2: dx2,\r\n          dy2: dy2,\r\n          shiftKey: shiftKey,\r\n          ctrlKey: ctrlKey\r\n        })\r\n        this.mouseDownElement.panningDelegate.onPanning(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n      }\r\n      else {\r\n        this.mouseDownElement.fireEvent(\"panning\", {\r\n          dx: dx,\r\n          dy: dy,\r\n          dx2: dx2,\r\n          dy2: dy2,\r\n          shiftKey: shiftKey,\r\n          ctrlKey: ctrlKey\r\n        })\r\n        this.mouseDownElement.onPanning(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onMouseUp: function (canvas, x, y, shiftKey, ctrlKey) {\r\n\r\n    if (this.ghostRectangle1 !== null) {\r\n      this.ghostRectangle1.setCanvas(null)\r\n      this.ghostRectangle1 = null\r\n      this.ghostRectangle2.setCanvas(null)\r\n      this.ghostRectangle2 = null\r\n      this.clone.setCanvas(null)\r\n      this.clone = null\r\n    }\r\n\r\n    if (this.mouseDraggingElement !== null) {\r\n      let redrawConnection = new draw2d.util.ArrayList()\r\n      if (this.mouseDraggingElement instanceof draw2d.shape.node.Node) {\r\n        canvas.lineIntersections.each(function (i, inter) {\r\n          if (!redrawConnection.contains(inter.line)) redrawConnection.add(inter.line)\r\n          if (!redrawConnection.contains(inter.other)) redrawConnection.add(inter.other)\r\n        })\r\n      }\r\n\r\n\r\n      // start CommandStack transaction\r\n      // Trigger an update of the connections if we have move a draw2d.shape.node.Node figure.\r\n      // (only \"nodes\" can have ports and connections)\r\n      //\r\n      canvas.getCommandStack().startTransaction()\r\n\r\n\r\n      let sel = canvas.getSelection().getAll()\r\n      // We move a resize handle...\r\n      //\r\n      if (!sel.contains(this.mouseDraggingElement)) {\r\n        this.mouseDraggingElement.onDragEnd(x, y, shiftKey, ctrlKey)\r\n      }\r\n      // ... or a real figure.\r\n      //\r\n      else {\r\n        canvas.getSelection().getAll().each(function (i, figure) {\r\n          // set position and cleanup tmp variable\r\n          if (figure._newPos) {\r\n            figure.setPosition(figure._newPos)\r\n            delete figure._newPos\r\n          }\r\n          // done\r\n          figure.onDragEnd(x, y, shiftKey, ctrlKey)\r\n        })\r\n      }\r\n\r\n      // May we drop the figure onto another shape..handle this here\r\n      //\r\n      if (canvas.currentDropTarget !== null && !this.mouseDraggingElement.isResizeHandle) {\r\n        this.mouseDraggingElement.onDrop(canvas.currentDropTarget, x, y, shiftKey, ctrlKey)\r\n        canvas.currentDropTarget.onDragLeave(this.mouseDraggingElement)\r\n        canvas.currentDropTarget.onCatch(this.mouseDraggingElement, x, y, shiftKey, ctrlKey)\r\n        canvas.currentDropTarget = null\r\n      }\r\n\r\n      // end command stack trans\r\n      canvas.getCommandStack().commitTransaction()\r\n\r\n      if (this.mouseDraggingElement instanceof draw2d.shape.node.Node) {\r\n        canvas.lineIntersections.each((i, inter) => {\r\n          if (!redrawConnection.contains(inter.line)) redrawConnection.add(inter.line)\r\n          if (!redrawConnection.contains(inter.other)) redrawConnection.add(inter.other)\r\n        })\r\n        redrawConnection.each((i, line) => {\r\n          line.svgPathString = null\r\n          line.repaint()\r\n        })\r\n      }\r\n\r\n      this.mouseDraggingElement = null\r\n    }\r\n\r\n    // Reset the current selection if the user click in the blank canvas.\r\n    // Don't reset the selection if the user is panning the canvas\r\n    //\r\n    if (this.mouseDownElement === null && this.mouseMovedDuringMouseDown === false) {\r\n      this.select(canvas, null)\r\n    }\r\n\r\n    this.mouseDownElement = null\r\n    this.mouseMovedDuringMouseDown = false\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Default interface for keyboard interaction with the canvas.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n */\r\ndraw2d.policy.canvas.KeyboardPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.KeyboardPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.KeyboardPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback if the user release a key\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {Number} keyCode the pressed key\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onKeyUp: function (canvas, keyCode, shiftKey, ctrlKey) {\r\n    // do nothing per default\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback if the user press a key down\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {Number} keyCode the pressed key\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onKeyDown: function (canvas, keyCode, shiftKey, ctrlKey) {\r\n    // do nothing per default\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.SingleSelectionPolicy\r\n */\r\ndraw2d.policy.canvas.PanningSelectionPolicy = draw2d.policy.canvas.SingleSelectionPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.PanningSelectionPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.PanningSelectionPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} dx The x diff between start of dragging and this event\r\n   * @param {Number} dy The y diff between start of dragging and this event\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   */\r\n  onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    this._super(canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n\r\n    if (this.mouseDraggingElement === null && this.mouseDownElement === null) {\r\n\r\n      // check if we are dragging a port. This isn't reported by the selection handler anymore\r\n      //\r\n      let p = canvas.fromDocumentToCanvasCoordinate(canvas.mouseDownX + (dx / canvas.zoomFactor), canvas.mouseDownY + (dy / canvas.zoomFactor))\r\n      let figure = canvas.getBestFigure(p.x, p.y)\r\n\r\n      if (figure === null) {\r\n        let area = canvas.getScrollArea()\r\n        area.scrollTop(area.scrollTop() - dy2)\r\n        area.scrollLeft(area.scrollLeft() - dx2)\r\n      }\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.SelectionPolicy\r\n */\r\ndraw2d.policy.canvas.ReadOnlySelectionPolicy = draw2d.policy.canvas.SelectionPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ReadOnlySelectionPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.canvas.ReadOnlySelectionPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been installed.\r\n   *\r\n   * @param {draw2d.Canvas/draw2d.Canvas} canvas\r\n   */\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n    canvas.getAllPorts().each(function (i, port) {\r\n      port.setVisible(false)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been uninstalled.\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   */\r\n  onUninstall: function (canvas) {\r\n    canvas.getAllPorts().each(function (i, port) {\r\n      port.setVisible(true)\r\n    })\r\n\r\n    this._super(canvas)\r\n  },\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} dx The x diff between start of dragging and this event\r\n   * @param {Number} dy The y diff between start of dragging and this event\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   */\r\n  onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    let area = canvas.getScrollArea()\r\n    area.scrollTop(area.scrollTop() - dy2)\r\n    area.scrollLeft(area.scrollLeft() - dx2)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n */\r\ndraw2d.policy.canvas.SelectionPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SelectionPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SelectionPolicy\",\r\n\r\n  /**\r\n   * Creates a new selection policy\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Selects the given figure within the canvas. The policy must unselect already selected\r\n   * figures or show any decorations.\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {draw2d.Figure} figure\r\n   *\r\n   */\r\n  select: function (canvas, figure) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Unselect the given figure in the canvas and remove all resize handles\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {draw2d.Figure} figure\r\n   */\r\n  unselect: function (canvas, figure) {\r\n    canvas.getSelection().remove(figure)\r\n\r\n    figure.unselect()\r\n\r\n    // @since 6.1.42\r\n    canvas.fireEvent(\"unselect\", {figure: figure})\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Just to paint a grid in the background of a canvas.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.installEditPolicy(new draw2d.policy.canvas.ShowChessboardEditPolicy());\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with chessboard background.\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n */\r\ndraw2d.policy.canvas.ShowChessboardEditPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ShowChessboardEditPolicy.prototype */\r\n  {\r\n    NAME: \"draw2d.policy.canvas.ShowChessboardEditPolicy\",\r\n\r\n    GRID_COLOR: \"#e0e0e0\",\r\n    GRID_WIDTH: 20,\r\n\r\n    /**\r\n     * Creates a new constraint policy for snap to grid\r\n     *\r\n     * @param {Number} grid the grid width of the canvas\r\n     */\r\n    init: function (grid) {\r\n      this._super()\r\n      if (grid) {\r\n        this.grid = grid\r\n      } else {\r\n        this.grid = this.GRID_WIDTH\r\n      }\r\n    },\r\n\r\n\r\n    onInstall: function (canvas) {\r\n      this._super(canvas)\r\n\r\n      this.oldBg = this.canvas.html.css(\"background\")\r\n      this.setGrid(1/canvas.getZoom())\r\n      this.onZoomCallback =(emitterFigure, zoomData) => {\r\n        this.setGrid(1/zoomData.value)\r\n      }\r\n      canvas.on(\"zoom\", this.onZoomCallback)\r\n    },\r\n\r\n    onUninstall: function (canvas) {\r\n      this._super(canvas)\r\n      $(canvas.paper.canvas).css({\"background\": this.oldBg})\r\n      canvas.off(this.onZoomCallback)\r\n    },\r\n\r\n    /**\r\n     * Activate the grid and set the CSS properties for the SVG canvas\r\n     * @private\r\n     */\r\n    setGrid: function(zoom){\r\n\r\n      let gridColor = this.GRID_COLOR\r\n\r\n      let background =\r\n        `linear-gradient(45deg, ${gridColor} 25%, transparent 25%, transparent 75%, ${gridColor} 75%, ${gridColor} 100%),\\n` +\r\n        `linear-gradient(45deg, ${gridColor} 25%, transparent 25%, transparent 75%, ${gridColor} 75%, ${gridColor} 100%)`\r\n      let backgroundSize = `${(this.grid*2*zoom)}px ${(this.grid*2*zoom)}px`\r\n      let backgroundPosition = `0 0, ${(this.grid*zoom)}px ${(this.grid*zoom)}px`\r\n\r\n      $(this.canvas.paper.canvas).css({\r\n        \"background\": background,\r\n        \"background-size\": backgroundSize,\r\n        \"background-position\": backgroundPosition\r\n      })\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A canvas decoration which paints a dimetric in the background.\r\n * <br>\r\n * <br>\r\n *\r\n * @example\r\n *\r\n *    canvas.installEditPolicy(new draw2d.policy.canvas.ShowDimetricGridEditPolicy());\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with grid background.\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n */\r\ndraw2d.policy.canvas.ShowDimetricGridEditPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ShowDimetricGridEditPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.canvas.ShowDimetricGridEditPolicy\",\r\n\r\n  GRID_COLOR: \"#f0f0f0\",\r\n  GRID_WIDTH: 30,\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to grid\r\n   *\r\n   * @param {Number} [grid] the grid width of the canvas\r\n   */\r\n  init: function (grid) {\r\n    this.color = new draw2d.util.Color(this.GRID_COLOR)\r\n    this.zoom = 1\r\n    this.shapes = null\r\n\r\n    this._super()\r\n\r\n    if (typeof grid === \"number\") {\r\n      this.grid = grid\r\n    }\r\n    else {\r\n      this.grid = this.GRID_WIDTH\r\n    }\r\n  },\r\n\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n    this.zoom = canvas.getZoom()\r\n    this.setGrid(this.grid)\r\n  },\r\n\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n    if (this.shapes !== null) {\r\n      this.shapes.remove()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the grid color\r\n   *\r\n   * @param {draw2d.util.Color|String} color a color object or the CSS string declaration for a color\r\n   * @since 5.0.3\r\n   */\r\n  setGridColor: function (color) {\r\n    this.color = new draw2d.util.Color(color)\r\n    this.setGrid(this.grid)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set a new grid width/height\r\n   *\r\n   * @param {Number} grid\r\n   * @since 5.0.3\r\n   */\r\n  setGrid: function (grid) {\r\n    this.grid = grid\r\n\r\n    if (this.canvas != null) {\r\n      if (this.shapes !== null) {\r\n        this.shapes.remove()\r\n      }\r\n\r\n      let r = this.canvas.paper\r\n      let d = this.grid, i\r\n      let w = r.width\r\n      let h = r.height\r\n      let props = {stroke: this.color.rgba()}\r\n\r\n      let max = Math.sqrt(w * w + h * h)\r\n      let angle26 = Math.atan(.5)\r\n      let angle153 = Math.PI - angle26\r\n      let cos30 = Math.cos(angle26)\r\n      let sin30 = Math.sin(angle26)\r\n      let cos150 = Math.cos(angle153)\r\n      let sin150 = Math.sin(angle153)\r\n\r\n      r.setStart()\r\n      // horizontal\r\n      for (i = 0; i <= w; i += d * 2) {\r\n        r.path([[\"M\", i, 0], [\"L\", i + cos30 * max, sin30 * max]]).attr(props)\r\n        r.path([[\"M\", i, 0], [\"L\", i + cos150 * max, sin150 * max]]).attr(props)\r\n      }\r\n      for (i = d; i <= h; i += d) {\r\n        r.path([[\"M\", 0, i], [\"L\", cos30 * max, i + sin30 * max]]).attr(props)\r\n        r.path([[\"M\", w, i], [\"L\", w + cos150 * max, i + sin150 * max]]).attr(props)\r\n      }\r\n      // vertical\r\n      this.shapes = r.setFinish()\r\n\r\n      this.shapes.toBack()\r\n    }\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Paint a dotted pattern in the background of the canvas.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.installEditPolicy(new draw2d.policy.canvas.ShowDotEditPolicy());\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with dotted background.\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n * @since 4.0.1\r\n */\r\n\r\ndraw2d.policy.canvas.ShowDotEditPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ShowDotEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.ShowDotEditPolicy\",\r\n\r\n  DOT_COLOR: \"#999999\",\r\n  DOT_RADIUS: 1,\r\n  DOT_DISTANCE: 20,\r\n\r\n  /**\r\n   * show a dot grid in the canvas for decoration.\r\n   *\r\n   * @param {Number} [dotDistance] the distance or grid width between the dots.\r\n   * @param {Number} [dotRadius] the radius of the dots.\r\n   * @param {draw2d.util.Color|String} [dotColor] the color for the dots.\r\n   */\r\n  init: function (dotDistance, dotRadius, dotColor) {\r\n    this._super()\r\n\r\n    this.dotDistance = dotDistance ? dotDistance : this.DOT_DISTANCE\r\n    this.dotRadius = dotRadius ? dotRadius : this.DOT_RADIUS\r\n    this.dotColor = new draw2d.util.Color(dotColor ? dotColor : this.DOT_COLOR)\r\n    this.onZoomCallback =(emitterFigure, zoomData) => {\r\n      this.setGrid(1/zoomData.value)\r\n    }\r\n  },\r\n\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n\r\n    this.oldBg = this.canvas.html.css(\"background\")\r\n    this.setGrid(1/canvas.getZoom())\r\n    canvas.on(\"zoom\", this.onZoomCallback)\r\n  },\r\n\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n    $(canvas.paper.canvas).css({\"background\": this.oldBg})\r\n    canvas.off(this.onZoomCallback)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Number} zoom \r\n   */\r\n  setGrid: function (zoom) {\r\n    let bgColor = \"#FFFFFF\"\r\n    let dotColor = this.dotColor.rgba()\r\n\r\n    let background = `linear-gradient(90deg, ${bgColor} ${(this.dotDistance - this.dotRadius)*zoom}px, transparent 1%) center, \r\n                      linear-gradient(${bgColor} ${(this.dotDistance - this.dotRadius)*zoom}px, transparent 1%) center, ${dotColor}`\r\n    let backgroundSize = `${this.dotDistance*zoom}px ${this.dotDistance*zoom}px`\r\n\r\n    $(this.canvas.paper.canvas).css({\r\n      \"background\": background,\r\n      \"background-size\": backgroundSize\r\n    })\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A cavas decoration which paints a grid in the background.\r\n * <br>\r\n * <br>\r\n *\r\n * @example\r\n *\r\n *    canvas.installEditPolicy(new draw2d.policy.canvas.ShowGridEditPolicy());\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text in a canvas with grid background.\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.DecorationPolicy\r\n */\r\ndraw2d.policy.canvas.ShowGridEditPolicy = draw2d.policy.canvas.DecorationPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ShowGridEditPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.canvas.ShowGridEditPolicy\",\r\n\r\n  DEFAULTS: {\r\n    width: 20,\r\n    stroke: 1,\r\n    color: \"#f0f0f0\",\r\n    bgColor: \"#FFFFFF\"\r\n  },\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to grid\r\n   *\r\n   * @param {Number} [grid] the grid width of the canvas\r\n   */\r\n  init: function (attr) {\r\n \r\n    // Merge defaults with the provided attr object\r\n    const config = { ...this.DEFAULTS, ...attr };\r\n\r\n    this.gridWidth = config.width;\r\n    this.gridStroke = config.stroke;\r\n    this.gridColor = new draw2d.util.Color(config.color);\r\n    this.bgColor = config.bgColor;\r\n\r\n    this._super()\r\n    this.onZoomCallback =(emitterFigure, zoomData) => {\r\n      this.setGrid(1/zoomData.value)\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the grid color\r\n   *\r\n   * @param {draw2d.util.Color|String} color a color object or the CSS string declaration for a color\r\n   * @since 5.0.3\r\n   */\r\n  setGridColor: function (color) {\r\n    this.gridColor = new draw2d.util.Color(color)\r\n    this.setGrid(1/this.canvas.getZoom())\r\n  },\r\n\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n\r\n    this.oldBg = this.canvas.html.css(\"background\")\r\n    this.setGrid(1/canvas.getZoom())\r\n    canvas.on(\"zoom\", this.onZoomCallback)\r\n  },\r\n\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n    \r\n    $(canvas.paper.canvas).css({\"background\": this.oldBg})\r\n    canvas.off(this.onZoomCallback)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @param {Number} zoom \r\n   */\r\n  setGrid: function (zoom) {\r\n    let color = this.gridColor.rgba()\r\n\r\n    let background = \r\n    ` linear-gradient(to right,  ${color} ${this.gridStroke}px, transparent ${this.gridStroke}px),\r\n      linear-gradient(to bottom, ${color} ${this.gridStroke}px, ${this.bgColor}  ${this.gridStroke}px)`\r\n    let backgroundSize = `${this.gridWidth*zoom}px ${this.gridWidth*zoom}px`\r\n\r\n    $(this.canvas.paper.canvas).css({\r\n      \"background\": background,\r\n      \"background-size\": backgroundSize\r\n    })\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.SelectionPolicy\r\n */\r\ndraw2d.policy.canvas.SingleSelectionPolicy = draw2d.policy.canvas.SelectionPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SingleSelectionPolicy.prototype */\r\n  {\r\n    NAME: \"draw2d.policy.canvas.SingleSelectionPolicy\",\r\n\r\n    /**\r\n     * Creates a new Router object\r\n     */\r\n    init: function () {\r\n      this._super()\r\n      this.mouseMovedDuringMouseDown = false\r\n      this.mouseDraggingElement = null\r\n      this.mouseDownElement = null\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    select: function (canvas, figure) {\r\n      if (canvas.getSelection().contains(figure)) {\r\n        return // nothing to to\r\n      }\r\n\r\n      let oldSelection = canvas.getSelection().getPrimary()\r\n      if (oldSelection) {\r\n        this.unselect(canvas, oldSelection)\r\n      }\r\n\r\n      figure?.select(true) // primary selection\r\n\r\n      canvas.getSelection().setPrimary(figure)\r\n\r\n      // inform all selection listeners about the new selection.\r\n      //\r\n      if (oldSelection !== figure) {\r\n        canvas.fireEvent(\"select\", {figure: figure, selection: canvas.getSelection()})\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDown: function (canvas, x, y, shiftKey, ctrlKey) {\r\n      this.mouseMovedDuringMouseDown = false\r\n      let canDragStart = true\r\n\r\n      // ignore ports since version 6.1.0. This is handled by the ConnectionCreatePolicy\r\n      //\r\n      let figure = canvas.getBestFigure(x, y)\r\n\r\n      // may the figure is assigned to a composite. In this case the composite can\r\n      // override the event receiver\r\n      while (figure !== null) {\r\n        let delegate = figure.getSelectionAdapter()()\r\n        if (delegate === figure) {\r\n          break\r\n        }\r\n        figure = delegate\r\n      }\r\n\r\n      // ignore ports since version 6.1.0. This is handled by the ConnectionCreatePolicy\r\n      //\r\n      if (figure instanceof draw2d.Port) {\r\n        return// silently\r\n      }\r\n\r\n      if (figure !== null && figure.isDraggable()) {\r\n        canDragStart = figure.onDragStart(x - figure.getAbsoluteX(), y - figure.getAbsoluteY(), shiftKey, ctrlKey)\r\n        // Element send a veto about the drag&drop operation\r\n        this.mouseDraggingElement = canDragStart === false ? null : figure\r\n      }\r\n\r\n      this.mouseDownElement = figure\r\n      if (this.mouseDownElement !== null) {\r\n        this.mouseDownElement.fireEvent(\"mousedown\", {\r\n          x: x, \r\n          y: y, \r\n          relX: x - this.mouseDownElement.getAbsoluteX(),\r\n          relY: y - this.mouseDownElement.getAbsoluteY(),\r\n          shiftKey: shiftKey, \r\n          ctrlKey: ctrlKey\r\n        })\r\n      }\r\n\r\n      if (figure !== canvas.getSelection().getPrimary() && figure !== null && figure.isSelectable() === true) {\r\n        this.select(canvas, figure)\r\n\r\n        // it's a line\r\n        if (figure instanceof draw2d.shape.basic.Line) {\r\n          // you can move a line with Drag&Drop...but not a connection.\r\n          // A Connection is fixed linked with the corresponding ports.\r\n          //\r\n          if (!(figure instanceof draw2d.Connection)) {\r\n            canvas.draggingLineCommand = figure.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE))\r\n            if (canvas.draggingLineCommand !== null) {\r\n              canvas.draggingLine = figure\r\n            }\r\n          }\r\n        } else if (canDragStart === false) {\r\n          figure.unselect()\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} dx The x diff between start of dragging and this event\r\n     * @param {Number} dy The y diff between start of dragging and this event\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     */\r\n    onMouseDrag: function (canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n\r\n      this.mouseMovedDuringMouseDown = true\r\n      if (this.mouseDraggingElement !== null) {\r\n\r\n        // mouseDraggingElement be a ResizeHandle...in this case it is not part of the selection\r\n        //\r\n        let sel = canvas.getSelection()\r\n        if (sel.contains(this.mouseDraggingElement)) {\r\n          sel.each((i, figure) => { figure.onDrag(dx, dy, dx2, dy2, shiftKey, ctrlKey) })\r\n        } else {\r\n          this.mouseDraggingElement.onDrag(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n        }\r\n\r\n        let p = canvas.fromDocumentToCanvasCoordinate(canvas.mouseDownX + (dx / canvas.zoomFactor), canvas.mouseDownY + (dy / canvas.zoomFactor))\r\n        let target = canvas.getBestFigure(p.x, p.y, this.mouseDraggingElement)\r\n\r\n        if (target !== canvas.currentDropTarget) {\r\n          if (canvas.currentDropTarget !== null) {\r\n            canvas.currentDropTarget.onDragLeave(this.mouseDraggingElement)\r\n            canvas.currentDropTarget.fireEvent(\"dragLeave\", {draggingElement: this.mouseDraggingElement})\r\n            canvas.currentDropTarget = null\r\n          }\r\n          if (target !== null) {\r\n            canvas.currentDropTarget = target.delegateTarget(this.mouseDraggingElement)\r\n            // inform all listener that the element has accept the dragEnter event\r\n            //\r\n            if (canvas.currentDropTarget !== null) {\r\n              canvas.currentDropTarget.onDragEnter(this.mouseDraggingElement) // legacy\r\n              canvas.currentDropTarget.fireEvent(\"dragEnter\", {draggingElement: this.mouseDraggingElement})\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // Connection didn't support panning at the moment. There is no special reason for that. Just an interaction\r\n      // decision.\r\n      //\r\n      else if (this.mouseDownElement !== null && !(this.mouseDownElement instanceof draw2d.Connection)) {\r\n        if (this.mouseDownElement.panningDelegate !== null) {\r\n          this.mouseDownElement.panningDelegate.fireEvent(\"panning\", {\r\n            dx: dx,\r\n            dy: dy,\r\n            dx2: dx2,\r\n            dy2: dy2,\r\n            shiftKey: shiftKey,\r\n            ctrlKey: ctrlKey\r\n          })\r\n          this.mouseDownElement.panningDelegate.onPanning(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n        } else {\r\n          this.mouseDownElement.fireEvent(\"panning\", {\r\n            dx: dx,\r\n            dy: dy,\r\n            dx2: dx2,\r\n            dy2: dy2,\r\n            shiftKey: shiftKey,\r\n            ctrlKey: ctrlKey\r\n          })\r\n          this.mouseDownElement.onPanning(dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param {draw2d.Canvas} canvas the related Canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseUp: function (canvas, x, y, shiftKey, ctrlKey) {\r\n      if (this.mouseDraggingElement !== null) {\r\n        let redrawConnection = new draw2d.util.ArrayList()\r\n        if (this.mouseDraggingElement instanceof draw2d.shape.node.Node) {\r\n          // TODO: don't add the connections with to check if a repaint is required\r\n          //       may a moved connection didn't have an intersection with the named lines.\r\n          //       in this case a redraw is useless\r\n          canvas.lineIntersections.each(function (i, inter) {\r\n            if (!redrawConnection.contains(inter.line)) redrawConnection.add(inter.line)\r\n            if (!redrawConnection.contains(inter.other)) redrawConnection.add(inter.other)\r\n          })\r\n        }\r\n\r\n        // start CommandStack transaction\r\n        canvas.getCommandStack().startTransaction()\r\n\r\n        let sel = canvas.getSelection().getAll()\r\n        if (!sel.contains(this.mouseDraggingElement)) {\r\n          this.mouseDraggingElement.onDragEnd(x, y, shiftKey, ctrlKey)\r\n        } else {\r\n          canvas.getSelection().getAll().each(function (i, figure) {\r\n            figure.onDragEnd(x, y, shiftKey, ctrlKey)\r\n          })\r\n        }\r\n\r\n        if (canvas.currentDropTarget !== null && !this.mouseDraggingElement.isResizeHandle) {\r\n          this.mouseDraggingElement.onDrop(canvas.currentDropTarget, x, y, shiftKey, ctrlKey)\r\n          canvas.currentDropTarget.onDragLeave(this.mouseDraggingElement)\r\n          canvas.currentDropTarget.fireEvent(\"dragLeave\", {draggingElement: this.mouseDraggingElement})\r\n          canvas.currentDropTarget.onCatch(this.mouseDraggingElement, x, y, shiftKey, ctrlKey)\r\n          canvas.currentDropTarget = null\r\n        }\r\n\r\n        // end command stack trans\r\n        canvas.getCommandStack().commitTransaction()\r\n\r\n        if (this.mouseDraggingElement instanceof draw2d.shape.node.Node) {\r\n          canvas.lineIntersections.each(function (i, inter) {\r\n            if (!redrawConnection.contains(inter.line)) redrawConnection.add(inter.line)\r\n            if (!redrawConnection.contains(inter.other)) redrawConnection.add(inter.other)\r\n          })\r\n          redrawConnection.each(function (i, line) {\r\n            line.svgPathString = null\r\n            line.repaint()\r\n          })\r\n        }\r\n\r\n        this.mouseDraggingElement = null\r\n      }\r\n      // Connection didn't support panning at the moment. There is no special reason for that. Just an interaction\r\n      // decision.\r\n      //\r\n      else if (this.mouseDownElement !== null && !(this.mouseDownElement instanceof draw2d.Connection)) {\r\n        if (this.mouseDownElement.panningDelegate !== null) {\r\n          this.mouseDownElement.panningDelegate.fireEvent(\"panningEnd\")\r\n          this.mouseDownElement.panningDelegate.onPanningEnd()\r\n        } else {\r\n          this.mouseDownElement.fireEvent(\"panningEnd\")\r\n          this.mouseDownElement.onPanningEnd()\r\n        }\r\n      }\r\n\r\n      // Reset the current selection if the user click in the blank canvas.\r\n      // Don't reset the selection if the user pan the canvas\r\n      //\r\n      if (this.mouseDownElement === null && this.mouseMovedDuringMouseDown === false) {\r\n        this.select(canvas, null)\r\n      }\r\n\r\n      this.mouseDownElement?.fireEvent(\"mouseup\", {\r\n        x: x, \r\n        y: y, \r\n        relX: x - this.mouseDownElement.getAbsoluteX(),\r\n        relY: y - this.mouseDownElement.getAbsoluteY(),\r\n        shiftKey: shiftKey, \r\n        ctrlKey: ctrlKey\r\n      })\r\n\r\n      this.mouseDownElement = null\r\n      this.mouseMovedDuringMouseDown = false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the canvas if the user click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure under the click event. Can be null\r\n     * @param {Number} mouseX the x coordinate of the mouse during the click event\r\n     * @param {Number} mouseY the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 3.0.0\r\n     */\r\n    onClick: function (figure, mouseX, mouseY, shiftKey, ctrlKey) {\r\n      if (figure !== null) {\r\n        figure.fireEvent(\"click\", {\r\n          figure: figure,\r\n          x: mouseX,\r\n          y: mouseY,\r\n          relX: mouseX - figure.getAbsoluteX(),\r\n          relY: mouseY - figure.getAbsoluteY(),\r\n          shiftKey: shiftKey,\r\n          ctrlKey: ctrlKey\r\n        })\r\n\r\n        figure.onClick()\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the canvas if the user double click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure under the double click event. Can be null\r\n     * @param {Number} mouseX the x coordinate of the mouse during the click event\r\n     * @param {Number} mouseY the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 4.1.0\r\n     */\r\n    onDoubleClick: function (figure, mouseX, mouseY, shiftKey, ctrlKey) {\r\n      if (figure !== null) {\r\n        figure.fireEvent(\"dblclick\", \r\n        {\r\n          x: mouseX, \r\n          y: mouseY, \r\n          relX: mouseX - figure.getAbsoluteX(),\r\n          relY: mouseX - figure.getAbsoluteY(),  \r\n          shiftKey: shiftKey,\r\n          ctrlKey: ctrlKey\r\n        })\r\n        figure.onDoubleClick()\r\n      }\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Snapping is based on the existing children of a container. When snapping a shape,\r\n * the center of the bounding box will snap to the center of other figures of the given canvas.\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.SnapToEditPolicy\r\n * @since 5.6.4\r\n */\r\ndraw2d.policy.canvas.SnapToCenterEditPolicy = draw2d.policy.canvas.SnapToEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToCenterEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SnapToCenterEditPolicy\",\r\n\r\n  SNAP_THRESHOLD: 5,\r\n  FADEOUT_DURATION: 500,\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to geometry\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.centers = null\r\n\r\n    this.horizontalGuideLines = null\r\n    this.verticalGuideLines = null\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {draw2d.Figure} figure the shape below the mouse or null\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onMouseUp: function (figure, x, y, shiftKey, ctrlKey) {\r\n    this.centers = null\r\n    this.hideHorizontalGuides(false)\r\n    this.hideVerticalGuides(false)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Adjust the coordinates to the canvas neighbours\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   *\r\n   * @returns {draw2d.geo.Point} the constraint position of the figure\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    // do nothing for resize handles\r\n    if (figure instanceof draw2d.ResizeHandle) {\r\n      return modifiedPos\r\n    }\r\n\r\n    // do nothing for lines\r\n    if (figure instanceof draw2d.shape.basic.Line) {\r\n      return modifiedPos\r\n    }\r\n\r\n\r\n    let allowXChanges = modifiedPos.x === originalPos.x\r\n    let allowYChanges = modifiedPos.y === originalPos.y\r\n\r\n    let inputBounds = new draw2d.geo.Rectangle(modifiedPos.x, modifiedPos.y, figure.getWidth(), figure.getHeight())\r\n    let inputCenter = inputBounds.getCenter()\r\n\r\n    modifiedPos = modifiedPos.clone()\r\n\r\n    if (allowXChanges === true) {\r\n      let horizontal = this.snapHorizontal(inputCenter)\r\n\r\n      // Show a horizontal line if the snapper has modified the inputPoint\r\n      //\r\n      if (horizontal.snapped) {\r\n        // show the snap lines..\r\n        this.showHorizontalGuides(figure, horizontal)\r\n\r\n        // and snap the x coordinate\r\n        modifiedPos.y += horizontal.diff\r\n      }\r\n      else {\r\n        this.hideHorizontalGuides(true)\r\n      }\r\n    }\r\n    else {\r\n      this.hideHorizontalGuides(true)\r\n    }\r\n\r\n    if (allowYChanges === true) {\r\n      let vertical = this.snapVertical(inputCenter)\r\n\r\n      // Show a vertical guides if the snapper has modified the inputPoint\r\n      //\r\n      if (vertical.snapped) {\r\n        // show the snap lines..\r\n        this.showVerticalGuides(figure, vertical)\r\n\r\n        // and snap the x coordinate\r\n        modifiedPos.x += vertical.diff\r\n      }\r\n      else {\r\n        this.hideVerticalGuides(true)\r\n      }\r\n    }\r\n    else {\r\n      this.hideVerticalGuides(true)\r\n    }\r\n\r\n    return modifiedPos\r\n  },\r\n\r\n\r\n  snapVertical: function (center) {\r\n    let _this = this\r\n    if (this.centers === null) {\r\n      this.populateCenters()\r\n    }\r\n\r\n    let result = {\r\n      point: center,\r\n      snapped: false,\r\n      diff: 0\r\n    }\r\n\r\n\r\n    let candidates = []\r\n    this.centers.forEach( (point) =>{\r\n      if (Math.abs(point.x - center.x) < _this.SNAP_THRESHOLD) {\r\n        candidates.push(point)\r\n      }\r\n    })\r\n\r\n    // we can abort if we didn't find an intersection on the right hand side\r\n    if (candidates.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greatest X coordinate\r\n    //\r\n    candidates.sort( (a, b) => a.x - b.x )\r\n\r\n    let diff = candidates[0].x - center.x\r\n    let snappedPoint = center.clone()\r\n    snappedPoint.x += diff\r\n    return {snapped: true, diff: diff, point: candidates[0], snappedPoint: snappedPoint}\r\n  },\r\n\r\n\r\n  snapHorizontal: function (center) {\r\n    let _this = this\r\n    if (this.centers === null) {\r\n      this.populateCenters()\r\n    }\r\n\r\n    let result = {\r\n      point: center,\r\n      snapped: false,\r\n      diff: 0\r\n    }\r\n\r\n\r\n    let candidates = []\r\n    this.centers.forEach( (point) => {\r\n      if (Math.abs(point.y - center.y) < _this.SNAP_THRESHOLD) {\r\n        candidates.push(point)\r\n      }\r\n    })\r\n\r\n    // we can abort if we didn't find an intersection on the right hand side\r\n    if (candidates.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greatest X coordinate\r\n    //\r\n    candidates.sort( (a, b) =>  a.y - b.y)\r\n\r\n    let diff = candidates[0].y - center.y\r\n    let snappedPoint = center.clone()\r\n    snappedPoint.y += diff\r\n    return {snapped: true, diff: diff, point: candidates[0], snappedPoint: snappedPoint}\r\n  },\r\n\r\n  populateCenters: function () {\r\n    let selection = this.canvas.getSelection().getAll(true)\r\n    let centers = this.centers = []\r\n\r\n    let figures = this.canvas.getFigures()\r\n    figures.each( (index, figure) =>{\r\n      if (!selection.contains(figure)) {\r\n        centers.push(figure.getBoundingBox().getCenter())\r\n      }\r\n    })\r\n  },\r\n\r\n  showHorizontalGuides: function (causedFigure, constraint) {\r\n    if (this.horizontalGuideLines !== null) {\r\n      this.horizontalGuideLines.stop()\r\n      this.horizontalGuideLines.remove()\r\n    }\r\n\r\n    let start = constraint.point\r\n    let end = constraint.snappedPoint\r\n\r\n    this.canvas.paper.setStart()\r\n\r\n    // horizontal lines\r\n    //\r\n    this.canvas.paper\r\n      .path(\r\n        \"M \" + (start.x) + \" \" + ((start.y | 0) + 0.5) + \" L \" + (end.x) + \" \" + ((end.y | 0) + 0.5))\r\n      .attr({\r\n      \"stroke\": this.lineColor.rgba(),\r\n      \"stroke-width\": 1\r\n    })\r\n\r\n    this.horizontalGuideLines = this.canvas.paper.setFinish()\r\n    this.horizontalGuideLines.toFront()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Hide the horizontal snapping guides\r\n   *\r\n   * @param {Boolean} fast\r\n   */\r\n  hideHorizontalGuides: function (fast) {\r\n    if (this.horizontalGuideLines === null) {\r\n      return\r\n    }\r\n    if (fast === true) {\r\n      if (this.horizontalGuideLines !== null) {\r\n        this.horizontalGuideLines.remove()\r\n        this.horizontalGuideLines = null\r\n      }\r\n    }\r\n    else {\r\n      this.horizontalGuideLines.animate(\r\n        {opacity: 0.1},\r\n        this.FADEOUT_DURATION,\r\n        () => {\r\n          if (this.horizontalGuideLines !== null) {\r\n            this.horizontalGuideLines.remove()\r\n            this.horizontalGuideLines = null\r\n          }\r\n        }\r\n      )\r\n    }\r\n  },\r\n\r\n\r\n  showVerticalGuides: function (causedFigure, constraint) {\r\n    if (this.verticalGuideLines !== null) {\r\n      this.verticalGuideLines.stop()\r\n      this.verticalGuideLines.remove()\r\n    }\r\n\r\n    let start = constraint.point\r\n    let end = constraint.snappedPoint\r\n\r\n    this.canvas.paper.setStart()\r\n\r\n    // horizontal lines\r\n    //\r\n    this.canvas.paper\r\n      .path(\r\n        \"M \" + ((start.x | 0) + 0.5) + \" \" + (start.y) + \" L \" + ((end.x | 0) + 0.5) + \" \" + (end.y))\r\n      .attr({\r\n        \"stroke\": this.lineColor.rgba(),\r\n        \"stroke-width\": 1\r\n    })\r\n\r\n\r\n    this.verticalGuideLines = this.canvas.paper.setFinish()\r\n    this.verticalGuideLines.toFront()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Hide the horizontal snapüing guides\r\n   *\r\n   * @param soft\r\n   */\r\n  hideVerticalGuides: function (fast) {\r\n    if (this.verticalGuideLines === null) {\r\n      return\r\n    }\r\n    if (fast === true) {\r\n      if (this.verticalGuideLines !== null) {\r\n        this.verticalGuideLines.remove()\r\n        this.verticalGuideLines = null\r\n      }\r\n    }\r\n    else {\r\n      this.verticalGuideLines.animate(\r\n        {opacity: 0.1},\r\n        this.FADEOUT_DURATION,\r\n        () => {\r\n          if (this.verticalGuideLines !== null) {\r\n            this.verticalGuideLines.remove()\r\n            this.verticalGuideLines = null\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A helper used to perform snapping to a grid, which is specified on the canvas via the various\r\n * properties defined in this class.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.ShowDimetricGridEditPolicy\r\n */\r\ndraw2d.policy.canvas.SnapToDimetricGridEditPolicy = draw2d.policy.canvas.ShowDimetricGridEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToDimetricGridEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SnapToDimetricGridEditPolicy\",\r\n\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to grid\r\n   *\r\n   * @param {Number} grid the grid width of the canvas\r\n   */\r\n  init: function (grid) {\r\n    this._super(grid)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Applies a snapping correction to the given result.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   * @since 2.3.0\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    // do nothing for lines\r\n    if (figure instanceof draw2d.shape.basic.Line) {\r\n      return modifiedPos\r\n    }\r\n\r\n    let snapPoint = figure.getSnapToGridAnchor()\r\n\r\n    modifiedPos.x = modifiedPos.x + snapPoint.x\r\n    modifiedPos.y = modifiedPos.y + snapPoint.y\r\n\r\n    let g = this.grid / 5\r\n\r\n    modifiedPos.x = g * Math.floor(((modifiedPos.x + g / 2.0) / g))\r\n    modifiedPos.y = g * Math.floor(((modifiedPos.y + g / 2.0) / g))\r\n\r\n    modifiedPos.x = modifiedPos.x - snapPoint.x\r\n    modifiedPos.y = modifiedPos.y - snapPoint.y\r\n\r\n    return modifiedPos\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\ndraw2d.SnapToHelper = {}\r\n\r\ndraw2d.SnapToHelper.NORTH = 1\r\ndraw2d.SnapToHelper.SOUTH = 4\r\ndraw2d.SnapToHelper.WEST = 8\r\ndraw2d.SnapToHelper.EAST = 16\r\ndraw2d.SnapToHelper.CENTER_H = 32\r\ndraw2d.SnapToHelper.CENTER_V = 642\r\n\r\ndraw2d.SnapToHelper.NORTH_EAST = draw2d.SnapToHelper.NORTH | draw2d.SnapToHelper.EAST\r\ndraw2d.SnapToHelper.NORTH_WEST = draw2d.SnapToHelper.NORTH | draw2d.SnapToHelper.WEST\r\ndraw2d.SnapToHelper.SOUTH_EAST = draw2d.SnapToHelper.SOUTH | draw2d.SnapToHelper.EAST\r\ndraw2d.SnapToHelper.SOUTH_WEST = draw2d.SnapToHelper.SOUTH | draw2d.SnapToHelper.WEST\r\ndraw2d.SnapToHelper.NORTH_SOUTH = draw2d.SnapToHelper.NORTH | draw2d.SnapToHelper.SOUTH\r\ndraw2d.SnapToHelper.EAST_WEST = draw2d.SnapToHelper.EAST | draw2d.SnapToHelper.WEST\r\ndraw2d.SnapToHelper.NSEW = draw2d.SnapToHelper.NORTH_SOUTH | draw2d.SnapToHelper.EAST_WEST\r\n\r\n/**\r\n * @class\r\n *\r\n * A helper used by Tools for snapping certain mouse interactions.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n */\r\ndraw2d.policy.canvas.SnapToEditPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SnapToEditPolicy\",\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to grid\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.lineColor = null\r\n\r\n    this._super(\r\n      {\r\n        lineColor: \"#51C1FC\",\r\n        ...attr\r\n      },\r\n      {\r\n        // @attr {draw2d.util.Color} color the line color of the snapTo lines */\r\n        lineColor: this.setLineColor,\r\n        ...setter},\r\n      {\r\n        lineColor: this.getLineColor,\r\n        ...getter})\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the color of the snap line.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     policy.attr({\r\n   *       lineColor: color\r\n   *     });\r\n   *\r\n   * @param {draw2d.util.Color|String} color The new color of the line.\r\n   **/\r\n  setLineColor: function (color) {\r\n    this.lineColor = new draw2d.util.Color(color)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the current paint color.\r\n   *\r\n   * @returns {draw2d.util.Color} The paint color of the line.\r\n   * @since 5.6.1\r\n   **/\r\n  getLineColor: function () {\r\n    return this.lineColor\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Adjust the coordinates to the given constraint of the policy.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    return modifiedPos\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Snapping is based on the existing children of a container. When snapping a shape,\r\n * the edges of the bounding box will snap to edges of other rectangles generated\r\n * from the children of the given canvas.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.SnapToEditPolicy\r\n */\r\ndraw2d.policy.canvas.SnapToGeometryEditPolicy = draw2d.policy.canvas.SnapToEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToGeometryEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SnapToGeometryEditPolicy\",\r\n\r\n  SNAP_THRESHOLD: 3,\r\n  FADEOUT_DURATION: 300,\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to geometry\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.rows = null\r\n    this.cols = null\r\n    this.vline = null\r\n    this.hline = null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Figure} figure the shape below the mouse or null\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onMouseUp: function (figure, x, y, shiftKey, ctrlKey) {\r\n    this.rows = null\r\n    this.cols = null\r\n    this.hideVerticalLine()\r\n    this.hideHorizontalLine()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Adjust the coordinates to the canvas neighbours\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   *\r\n   * @returns {draw2d.geo.Point} the constraint position of the figure\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    // do nothing for lines\r\n    if (figure instanceof draw2d.shape.basic.Line) {\r\n      return modifiedPos\r\n    }\r\n\r\n    let result\r\n    let allowXChanges = modifiedPos.x === originalPos.x\r\n    let allowYChanges = modifiedPos.y === originalPos.y\r\n\r\n    // Coordinates already snapped to an x/y coordinate.\r\n    // Don't change them and in this case no further calculation is requried.\r\n    //\r\n    if (!allowXChanges && !allowYChanges) {\r\n      return modifiedPos\r\n    }\r\n\r\n    if (figure instanceof draw2d.ResizeHandle) {\r\n      let snapPoint = figure.getSnapToGridAnchor()\r\n      modifiedPos.x += snapPoint.x\r\n      modifiedPos.y += snapPoint.y\r\n\r\n      let snapDirections = figure.getSnapToDirection()\r\n      result = this.snapPoint(snapDirections, modifiedPos)\r\n\r\n      // Show a vertical line if the snapper has modified the inputPoint\r\n      //\r\n      if (allowXChanges && (snapDirections & draw2d.SnapToHelper.EAST_WEST) && !(result.edge & draw2d.SnapToHelper.EAST_WEST)) {\r\n        this.showVerticalLine(figure, draw2d.SnapToHelper.WEST, result.point.x)\r\n      }\r\n      else {\r\n        this.hideVerticalLine()\r\n      }\r\n\r\n      // Show a horizontal line if the snapper has modified the inputPoint\r\n      //\r\n      if (allowYChanges && (snapDirections & draw2d.SnapToHelper.NORTH_SOUTH) && !(result.edge & draw2d.SnapToHelper.NORTH_SOUTH)) {\r\n        this.showHorizontalLine(figure, draw2d.SnapToHelper.NORTH, result.point.y)\r\n      }\r\n      else {\r\n        this.hideHorizontalLine()\r\n      }\r\n\r\n      // restore the original pos coordinate if x or y coordinate already snapped to any axis\r\n      // or subtract the added snapOffset\r\n      //\r\n      result.point.x = allowXChanges ? result.point.x - snapPoint.x : modifiedPos.x\r\n      result.point.y = allowYChanges ? result.point.y - snapPoint.y : modifiedPos.y\r\n\r\n      return result.point\r\n    }\r\n\r\n    // The user drag&drop a normal figure\r\n    let inputBounds = new draw2d.geo.Rectangle(modifiedPos.x, modifiedPos.y, figure.getWidth(), figure.getHeight())\r\n\r\n    result = this.snapRectangle(inputBounds)\r\n\r\n    if (!allowXChanges) {\r\n      result.bounds.x = modifiedPos.x\r\n    }\r\n\r\n    if (!allowYChanges) {\r\n      result.bounds.y = modifiedPos.y\r\n    }\r\n\r\n    // Show a vertical line if the snapper has modified the inputPoint\r\n    //\r\n    if (allowXChanges && !(result.edge & draw2d.SnapToHelper.WEST)) {\r\n      this.showVerticalLine(figure, draw2d.SnapToHelper.WEST, result.bounds.x)\r\n    }\r\n    else if (allowXChanges && !(result.edge & draw2d.SnapToHelper.EAST)) {\r\n      this.showVerticalLine(figure, draw2d.SnapToHelper.EAST, result.bounds.x + result.bounds.getWidth())\r\n    }\r\n    else {\r\n      this.hideVerticalLine()\r\n    }\r\n\r\n\r\n    // Show a horizontal line if the snapper has modified the inputPoint\r\n    //\r\n    if (allowYChanges && !(result.edge & draw2d.SnapToHelper.NORTH)) {\r\n      this.showHorizontalLine(figure, draw2d.SnapToHelper.NORTH, result.bounds.y)\r\n    }\r\n    else if (allowYChanges && !(result.edge & draw2d.SnapToHelper.SOUTH)) {\r\n      this.showHorizontalLine(figure, draw2d.SnapToHelper.SOUTH, result.bounds.y + result.bounds.getHeight())\r\n    }\r\n    else {\r\n      this.hideHorizontalLine()\r\n    }\r\n\r\n    return result.bounds.getTopLeft()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * calculates the snapped position of the rectangle.\r\n   *\r\n   * @param {draw2d.geo.Rectangle} inputBounds\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  snapRectangle: function (inputBounds) {\r\n    let resultBounds = inputBounds.clone()\r\n\r\n    let topLeft = this.snapPoint(draw2d.SnapToHelper.NORTH_WEST, inputBounds.getTopLeft())\r\n    resultBounds.x = topLeft.point.x\r\n    resultBounds.y = topLeft.point.y\r\n\r\n    let bottomRight = this.snapPoint(draw2d.SnapToHelper.SOUTH_EAST, inputBounds.getBottomRight())\r\n\r\n    // The first test (topLeft) has not modified the point. so we can modify them with the bottomRight adjustment\r\n    //\r\n    if (topLeft.edge & draw2d.SnapToHelper.WEST) {\r\n      resultBounds.x = bottomRight.point.x - inputBounds.getWidth()\r\n    }\r\n\r\n    // The first test (topLeft) has not modified the point. so we can modify them with the bottomRight adjustment\r\n    //\r\n    if (topLeft.edge & draw2d.SnapToHelper.NORTH) {\r\n      resultBounds.y = bottomRight.point.y - inputBounds.getHeight()\r\n    }\r\n\r\n    return {edge: topLeft.edge | bottomRight.edge, bounds: resultBounds}\r\n  },\r\n\r\n  snapPoint: function (/*:int*/ snapOrientation, /*:draw2d.Point*/ inputPoint) {\r\n    let resultPoint = inputPoint.clone()\r\n\r\n    if (this.rows === null || this.cols === null)\r\n      this.populateRowsAndCols()\r\n\r\n    if ((snapOrientation & draw2d.SnapToHelper.EAST) !== 0) {\r\n      let rightCorrection = this.getCorrectionFor(this.cols, inputPoint.x + 1, 1)\r\n      if (rightCorrection !== this.SNAP_THRESHOLD) {\r\n        snapOrientation &= ~draw2d.SnapToHelper.EAST\r\n        resultPoint.x += rightCorrection\r\n      }\r\n    }\r\n\r\n    if ((snapOrientation & draw2d.SnapToHelper.WEST) !== 0) {\r\n      let leftCorrection = this.getCorrectionFor(this.cols, inputPoint.x, -1)\r\n      if (leftCorrection !== this.SNAP_THRESHOLD) {\r\n        snapOrientation &= ~draw2d.SnapToHelper.WEST\r\n        resultPoint.x += leftCorrection\r\n      }\r\n    }\r\n\r\n    if ((snapOrientation & draw2d.SnapToHelper.SOUTH) !== 0) {\r\n      let bottomCorrection = this.getCorrectionFor(this.rows, inputPoint.y + 1, 1)\r\n      if (bottomCorrection !== this.SNAP_THRESHOLD) {\r\n        snapOrientation &= ~draw2d.SnapToHelper.SOUTH\r\n        resultPoint.y += bottomCorrection\r\n      }\r\n    }\r\n\r\n    if ((snapOrientation & draw2d.SnapToHelper.NORTH) !== 0) {\r\n      let topCorrection = this.getCorrectionFor(this.rows, inputPoint.y, -1)\r\n      if (topCorrection !== this.SNAP_THRESHOLD) {\r\n        snapOrientation &= ~draw2d.SnapToHelper.NORTH\r\n        resultPoint.y += topCorrection\r\n      }\r\n    }\r\n\r\n    return {edge: snapOrientation, point: resultPoint}\r\n  },\r\n\r\n  populateRowsAndCols: function () {\r\n    let selection = this.canvas.getSelection()\r\n    this.rows = []\r\n    this.cols = []\r\n\r\n    let figures = this.canvas.getFigures()\r\n    for (let i = 0; i < figures.getSize(); i++) {\r\n      let figure = figures.get(i)\r\n      if (!selection.contains(figure, true)) {\r\n        let bounds = figure.getBoundingBox()\r\n        this.cols.push({type: -1, location: bounds.x})\r\n        this.cols.push({type: 0, location: bounds.x + (bounds.w - 1) / 2})\r\n        this.cols.push({type: 1, location: bounds.getRight() + 1})\r\n        this.rows.push({type: -1, location: bounds.y})\r\n        this.rows.push({type: 0, location: bounds.y + (bounds.h - 1) / 2})\r\n        this.rows.push({type: 1, location: bounds.getBottom() + 1})\r\n      }\r\n    }\r\n\r\n    // TODO: remove duplicate entries in the rows/cols array\r\n\r\n  },\r\n\r\n  getCorrectionFor: function (/*:Array*/ entries, /*:double*/ value, /*:int*/ side) {\r\n    let resultMag = this.SNAP_THRESHOLD\r\n    let result = this.SNAP_THRESHOLD\r\n\r\n    for (let i = 0; i < entries.length; i++) {\r\n      let entry = entries[i]\r\n      let magnitude\r\n\r\n      if (entry.type === -1 && side !== 0) {\r\n        magnitude = Math.abs(value - entry.location)\r\n        if (magnitude < resultMag) {\r\n          resultMag = magnitude\r\n          result = entry.location - value\r\n        }\r\n      }\r\n      else if (entry.type === 0 && side === 0) {\r\n        magnitude = Math.abs(value - entry.location)\r\n        if (magnitude < resultMag) {\r\n          resultMag = magnitude\r\n          result = entry.location - value\r\n        }\r\n      }\r\n      else if (entry.type === 1 && side !== 0) {\r\n        magnitude = Math.abs(value - entry.location)\r\n        if (magnitude < resultMag) {\r\n          resultMag = magnitude\r\n          result = entry.location - value\r\n        }\r\n      }\r\n    }\r\n    return result\r\n  },\r\n\r\n  showVerticalLine: function (causedFigure, edge, x) {\r\n    if (this.vline != null) {\r\n      this.vline.stop()\r\n      this.vline.remove()\r\n    }\r\n\r\n    let figures = this.canvas.getFigures().clone()\r\n    figures.removeAll(this.canvas.getSelection().getAll(true))\r\n    figures.map(function (figure) {\r\n      return figure.getBoundingBox()\r\n    })\r\n    figures.grep(function (bbox) {\r\n      return (Math.abs(bbox.x - x) <= 1) || (Math.abs(bbox.getRight() - x) <= 1)\r\n    })\r\n\r\n    // return silently if no figure bounding box is left\r\n    //\r\n    if (figures.getSize() === 0) {\r\n      return\r\n    }\r\n\r\n    // figure to align is above the current shape\r\n    //\r\n    let causedBox = causedFigure.getBoundingBox()\r\n    let causedCenter = causedBox.getCenter()\r\n    figures.sort(function (a, b) {\r\n      let d_a = a.getCenter().distance(causedCenter)\r\n      let d_b = b.getCenter().distance(causedCenter)\r\n      return d_a - d_b\r\n    })\r\n    let fromY = 0\r\n    let maxLength = this.canvas.getHeight() * Math.max(1, this.canvas.getZoom())\r\n    let yLength = maxLength\r\n    let snappedBox = figures.get(0)\r\n    if (causedBox.y < snappedBox.y) {\r\n      fromY = causedBox.y\r\n      yLength = snappedBox.getBottom() - causedBox.y\r\n    }\r\n    else {\r\n      fromY = snappedBox.y\r\n      yLength = causedBox.getBottom() - snappedBox.y\r\n    }\r\n\r\n    x = (x | 0) + 0.5 // force a .5 number to avoid subpixel rendering. Blurry lines...\r\n    this.canvas.paper.setStart()\r\n    this.canvas.paper.path(\"M \" + x + \" 0 l 0 \" + maxLength)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + x + \" \" + fromY + \" l 0 \" + yLength)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.vline = this.canvas.paper.setFinish()\r\n    this.vline.toBack()\r\n  },\r\n\r\n  hideVerticalLine: function () {\r\n    if (this.vline == null) {\r\n      return\r\n    }\r\n    this.vline.animate(\r\n      {opacity: 0.1},\r\n      this.FADEOUT_DURATION,\r\n      () => {\r\n        if (this.vline !== null) {\r\n          this.vline.remove()\r\n          this.vline = null\r\n        }\r\n      }\r\n    )\r\n  },\r\n\r\n  showHorizontalLine: function (causedFigure, edge, y) {\r\n    if (this.hline != null) {\r\n      this.hline.stop()\r\n      this.hline.remove()\r\n    }\r\n\r\n    let figures = this.canvas.getFigures().clone()\r\n    figures.removeAll(this.canvas.getSelection().getAll(true))\r\n    figures.map(function (figure) {\r\n      return figure.getBoundingBox()\r\n    })\r\n    figures.grep(function (bbox) {\r\n      return (Math.abs(bbox.y - y) <= 1) || (Math.abs(bbox.getBottom() - y) <= 1)\r\n    })\r\n\r\n    // return silently if no figure bounding box is left\r\n    //\r\n    if (figures.getSize() === 0) {\r\n      return\r\n    }\r\n\r\n    // figure to align is above the current shape\r\n    //\r\n    let causedBox = causedFigure.getBoundingBox()\r\n    let causedCenter = causedBox.getCenter()\r\n    figures.sort(function (a, b) {\r\n      let d_a = a.getCenter().distance(causedCenter)\r\n      let d_b = b.getCenter().distance(causedCenter)\r\n      return d_a - d_b\r\n    })\r\n    let fromX = 0\r\n    let maxLength\r\n    let xLength = maxLength = this.canvas.getWidth() * Math.max(1, this.canvas.getZoom())\r\n    let snappedBox = figures.get(0)\r\n    if (causedBox.x < snappedBox.x) {\r\n      fromX = causedBox.x\r\n      xLength = snappedBox.getRight() - causedBox.x\r\n    }\r\n    else {\r\n      fromX = snappedBox.x\r\n      xLength = causedBox.getRight() - snappedBox.x\r\n    }\r\n\r\n\r\n    y = (y | 0) + 0.5 // force a .5 number to avoid subpixel rendering. Blurry lines...\r\n\r\n    this.canvas.paper.setStart()\r\n    this.canvas.paper.path(\"M 0 \" + y + \" l \" + maxLength + \" 0\")\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + fromX + \" \" + y + \" l \" + xLength + \" 0\")\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.hline = this.canvas.paper.setFinish()\r\n    this.hline.toBack()\r\n\r\n  },\r\n\r\n  hideHorizontalLine: function () {\r\n    if (this.hline === null) {\r\n      return //silently\r\n    }\r\n    this.hline.animate(\r\n      {opacity: 0.1},\r\n      this.FADEOUT_DURATION,\r\n      () => {\r\n        if (this.hline !== null) {\r\n          this.hline.remove()\r\n          this.hline = null\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A helper used to perform snapping to a grid, which is specified on the canvas via the various\r\n * properties defined in this class.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.ShowGridEditPolicy\r\n */\r\ndraw2d.policy.canvas.SnapToGridEditPolicy = draw2d.policy.canvas.SnapToEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToGridEditPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.canvas.SnapToGridEditPolicy\",\r\n\r\n\r\n    /**\r\n     * Creates a new constraint policy for snap to grid\r\n     *\r\n     * @param {Number} grid the grid width of the canvas\r\n     */\r\n    init: function (grid, showGrid) {\r\n      this._super()\r\n      this.grid = grid || 20\r\n\r\n      // Default Value for \"showGrid=true\"\r\n      if (typeof showGrid ===\"undefined\" || showGrid===true) {\r\n        this.renderer = new draw2d.policy.canvas.ShowGridEditPolicy({width: this.grid})\r\n      }\r\n    },\r\n\r\n\r\n    onInstall: function (canvas) {\r\n      this._super(canvas)\r\n      if (this.renderer) this.renderer.onInstall(canvas)\r\n    },\r\n\r\n    onUninstall: function (canvas) {\r\n      this._super(canvas)\r\n      if (this.renderer) this.renderer.onUninstall(canvas)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set a new grid width/height\r\n     *\r\n     * @param {Number} grid\r\n     * @since 5.0.3\r\n     */\r\n    setGrid: function (grid) {\r\n      this.grid = grid\r\n      if (this.renderer) this.renderer.setGrid(grid)\r\n    },\r\n\r\n      /**\r\n     *\r\n     * Applies a snapping correction to the given result.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the related canvas\r\n     * @param {draw2d.Figure} figure the figure to snap\r\n     * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n     * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n     * @since 2.3.0\r\n     */\r\n    snap: function (canvas, figure, modifiedPos, originalPos) {\r\n      // do nothing for lines\r\n      if (figure instanceof draw2d.shape.basic.Line) {\r\n        return modifiedPos\r\n      }\r\n\r\n      let snapPoint = figure.getSnapToGridAnchor()\r\n\r\n      modifiedPos.x = modifiedPos.x + snapPoint.x\r\n      modifiedPos.y = modifiedPos.y + snapPoint.y\r\n\r\n\r\n      modifiedPos.x = this.grid * Math.floor(((modifiedPos.x + this.grid / 2.0) / this.grid))\r\n      modifiedPos.y = this.grid * Math.floor(((modifiedPos.y + this.grid / 2.0) / this.grid))\r\n\r\n      modifiedPos.x = modifiedPos.x - snapPoint.x\r\n      modifiedPos.y = modifiedPos.y - snapPoint.y\r\n\r\n      return modifiedPos\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Snapping is based on the existing children of a container. When snapping a shape,\r\n * the edges of the bounding box will snap to edges of other rectangles generated\r\n * from the children of the given canvas.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.SnapToEditPolicy\r\n * @since 5.6.4\r\n */\r\ndraw2d.policy.canvas.SnapToInBetweenEditPolicy = draw2d.policy.canvas.SnapToEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToInBetweenEditPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.canvas.SnapToInBetweenEditPolicy\",\r\n\r\n  SNAP_THRESHOLD: 5,\r\n  FADEOUT_DURATION: 500,\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to geometry\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this._super(attr, setter, getter)\r\n\r\n    this.bounds = null\r\n\r\n    this.horizontalGuideLines = null\r\n    this.verticalGuideLines = null\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   */\r\n  onMouseUp: function (figure, x, y, shiftKey, ctrlKey) {\r\n    this.bounds = null\r\n    this.hideHorizontalGuides(false)\r\n    this.hideVerticalGuides(false)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Adjust the coordinates to the canvas neighbours\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   *\r\n   * @returns {draw2d.geo.Point} the constraint position of the figure\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    // do nothing for resize handles\r\n    if (figure instanceof draw2d.ResizeHandle) {\r\n      return modifiedPos\r\n    }\r\n    // do nothing for lines\r\n    if (figure instanceof draw2d.shape.basic.Line) {\r\n      return modifiedPos\r\n    }\r\n\r\n\r\n    var allowXChanges = modifiedPos.x === originalPos.x\r\n    var allowYChanges = modifiedPos.y === originalPos.y\r\n\r\n    var inputBounds = new draw2d.geo.Rectangle(modifiedPos.x, modifiedPos.y, figure.getWidth(), figure.getHeight())\r\n\r\n    modifiedPos = modifiedPos.clone()\r\n\r\n    if (allowXChanges === true) {\r\n      var horizontal = this.snapHorizontal(inputBounds)\r\n\r\n      // Show a horizontal line if the snapper has modified the inputPoint\r\n      //\r\n      if (horizontal.snapped) {\r\n        // show the snap lines..\r\n        this.showHorizontalGuides(figure, horizontal)\r\n\r\n        // and snap the x coordinate\r\n        modifiedPos.x += horizontal.diff\r\n      }\r\n      else {\r\n        this.hideHorizontalGuides(true)\r\n      }\r\n    }\r\n    else {\r\n      this.hideHorizontalGuides(true)\r\n    }\r\n\r\n    if (allowYChanges === true) {\r\n      var vertical = this.snapVertical(inputBounds)\r\n\r\n      // Show a vertical guides if the snapper has modified the inputPoint\r\n      //\r\n      if (vertical.snapped) {\r\n        // show the snap lines..\r\n        this.showVerticalGuides(figure, vertical)\r\n\r\n        // and snap the x coordinate\r\n        modifiedPos.y += vertical.diff\r\n      }\r\n      else {\r\n        this.hideVerticalGuides(true)\r\n      }\r\n    }\r\n    else {\r\n      this.hideVerticalGuides(true)\r\n    }\r\n\r\n    return modifiedPos\r\n  },\r\n\r\n\r\n  snapHorizontal: function (boundingBox) {\r\n    var center = boundingBox.getCenter()\r\n    if (this.bounds === null)\r\n      this.populateBounds()\r\n\r\n    var result = {\r\n      point: center,\r\n      snapped: false,\r\n      snappedBox: boundingBox.clone()\r\n    }\r\n\r\n\r\n    var intersectionPoint = null\r\n\r\n    // Calculate the intersections points p(i) of all left side edges of the bounding boxes\r\n    // and the ray from the center of the drag&drop object to the left edge of the canva\r\n    //\r\n    // BBox of          Drag&Drop\r\n    // any Figure       Figure\r\n    //\r\n    // ....+           ........\r\n    //     |           .      .\r\n    // .   |p(i)       .      .\r\n    // .   X<------------->+  .\r\n    // .   |           .      .\r\n    // ....+           .      .\r\n    //                 ........\r\n    //\r\n    //\r\n    var leftIntersections = []\r\n    var leftInputPoint = center.clone()\r\n    leftInputPoint.x = 0\r\n    this.bounds.forEach(function (bbox, index) {\r\n      intersectionPoint = draw2d.shape.basic.Line.intersection(bbox.getTopRight(), bbox.getBottomRight(), center, leftInputPoint)\r\n      if (intersectionPoint !== null) {\r\n        intersectionPoint.causedBBox = bbox\r\n        leftIntersections.push(intersectionPoint)\r\n      }\r\n    })\r\n    // we can abort if we didn't find an intersection on the left hand side\r\n    if (leftIntersections.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greates X coordinate\r\n    //\r\n    leftIntersections.sort(function (a, b) {\r\n      return b.x - a.x\r\n    })\r\n\r\n\r\n    // Calculate the intersections points p(i) of all right hand side edges of the\r\n    // bounding boxes and the ray from the center of the drag&drop object to the\r\n    // left edge of the canvas\r\n    //\r\n    //                 Drag&Drop             bbox of any\r\n    //                 Figure                figure\r\n    //\r\n    //                 ........\r\n    //                 .      .\r\n    //                 .      .             ...........\r\n    //                 .   +<-------------->X         |\r\n    //                 .      .         p(i)|         |\r\n    //                 .      .             |         |\r\n    //                 ........             |         |\r\n    //                                      ...........\r\n    //\r\n    var rightIntersections = []\r\n    var rightInputPoint = center.clone()\r\n    rightInputPoint.x = Number.MAX_SAFE_INTEGER\r\n    this.bounds.forEach(function (bbox, index) {\r\n      intersectionPoint = draw2d.shape.basic.Line.intersection(bbox.getTopLeft(), bbox.getBottomLeft(), center, rightInputPoint)\r\n      if (intersectionPoint !== null) {\r\n        intersectionPoint.causedBBox = bbox\r\n        rightIntersections.push(intersectionPoint)\r\n      }\r\n    })\r\n    // we can abort if we didn't find an intersection on the right hand side\r\n    if (rightIntersections.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greates X coordinate\r\n    //\r\n    rightIntersections.sort(function (a, b) {\r\n      return a.x - b.x\r\n    })\r\n\r\n\r\n    // Snap the point (S) between the two founded intersections\r\n    // p(i1) and p(i2)\r\n    //\r\n    // BBox FigureA     Drag&Drop           BBox of FigureB\r\n    //                  Figure\r\n    //\r\n    // ....+           ........\r\n    //     |           .      .\r\n    // .   |p(i1)      .   S  .             ...........\r\n    // .   X<------------->X<-------------->X         |\r\n    // .   |           .      .        p(i2)|         |\r\n    // ....+           .      .             |         |\r\n    //                 ........             |         |\r\n    //                                      ...........\r\n    //\r\n    var snappedRect = boundingBox.clone()\r\n    var diff = ((leftIntersections[0].x + rightIntersections[0].x) / 2) - center.x\r\n\r\n    snappedRect.x += diff\r\n\r\n    return {\r\n      snapped: Math.abs(diff) < this.SNAP_THRESHOLD,\r\n      snappedRect: snappedRect,\r\n      diff: diff,\r\n      leftSide: leftIntersections[0],\r\n      rightSide: rightIntersections[0]\r\n    }\r\n  },\r\n\r\n\r\n  snapVertical: function (boundingBox) {\r\n    var center = boundingBox.getCenter()\r\n\r\n    if (this.bounds === null) {\r\n      this.populateBounds()\r\n    }\r\n\r\n    var result = {\r\n      point: center,\r\n      snapped: false,\r\n      snappedBox: boundingBox.clone()\r\n    }\r\n\r\n\r\n    var intersectionPoint = null\r\n\r\n    // Calculate the intersections points p(i) of all left side edges of the bounding boxes\r\n    // and the ray from the center of the drag&drop object to the left edge of the canva\r\n    //\r\n    // BBox of          Drag&Drop\r\n    // any Figure       Figure\r\n    //\r\n    // ....+           ........\r\n    //     |           .      .\r\n    // .   |p(i)       .      .\r\n    // .   X<------------->+  .\r\n    // .   |           .      .\r\n    // ....+           .      .\r\n    //                 ........\r\n    //\r\n    //\r\n    var topIntersections = []\r\n    var topInputPoint = center.clone()\r\n    topInputPoint.y = 0\r\n    this.bounds.forEach(function (bbox) {\r\n      intersectionPoint = draw2d.shape.basic.Line.intersection(bbox.getBottomLeft(), bbox.getBottomRight(), center, topInputPoint)\r\n      if (intersectionPoint !== null) {\r\n        intersectionPoint.causedBBox = bbox\r\n        topIntersections.push(intersectionPoint)\r\n      }\r\n    })\r\n    // we can abort if we didn't find an intersection on the left hand side\r\n    if (topIntersections.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greates X coordinate\r\n    //\r\n    topIntersections.sort(function (a, b) {\r\n      return b.y - a.y\r\n    })\r\n\r\n\r\n    // Calculate the intersections points p(i) of all right hand side edges of the\r\n    // bounding boxes and the ray from the center of the drag&drop object to the\r\n    // left edge of the canvas\r\n    //\r\n    //                 Drag&Drop             bbox of any\r\n    //                 Figure                figure\r\n    //\r\n    //                 ........\r\n    //                 .      .\r\n    //                 .      .             ...........\r\n    //                 .   +<-------------->X         |\r\n    //                 .      .         p(i)|         |\r\n    //                 .      .             |         |\r\n    //                 ........             |         |\r\n    //                                      ...........\r\n    //\r\n    var bottomIntersections = []\r\n    var bottomInputPoint = center.clone()\r\n    bottomInputPoint.y = Number.MAX_SAFE_INTEGER\r\n    this.bounds.forEach(function (bbox) {\r\n      intersectionPoint = draw2d.shape.basic.Line.intersection(bbox.getTopLeft(), bbox.getTopRight(), center, bottomInputPoint)\r\n      if (intersectionPoint !== null) {\r\n        intersectionPoint.causedBBox = bbox\r\n        bottomIntersections.push(intersectionPoint)\r\n      }\r\n    })\r\n    // we can abort if we didn't find an intersection on the right hand side\r\n    if (bottomIntersections.length === 0) {\r\n      return result\r\n    }\r\n\r\n    // sort the intersection point and get the closest point to the tested inputPoint\r\n    // In this case it is the point with the greates X coordinate\r\n    //\r\n    bottomIntersections.sort(function (a, b) {\r\n      return a.y - b.y\r\n    })\r\n\r\n\r\n    // Snap the point (S) between the two founded intersections\r\n    // p(i1) and p(i2)\r\n    //\r\n    // BBox FigureA     Drag&Drop           BBox of FigureB\r\n    //                  Figure\r\n    //\r\n    // ....+           ........\r\n    //     |           .      .\r\n    // .   |p(i1)      .   S  .             ...........\r\n    // .   X<------------->X<-------------->X         |\r\n    // .   |           .      .        p(i2)|         |\r\n    // ....+           .      .             |         |\r\n    //                 ........             |         |\r\n    //                                      ...........\r\n    //\r\n    var snappedRect = boundingBox.clone()\r\n    var diff = ((topIntersections[0].y + bottomIntersections[0].y) / 2) - center.y\r\n\r\n    snappedRect.y += diff\r\n\r\n    return {\r\n      snapped: Math.abs(diff) < this.SNAP_THRESHOLD,\r\n      snappedRect: snappedRect,\r\n      diff: diff,\r\n      topSide: topIntersections[0],\r\n      bottomSide: bottomIntersections[0]\r\n    }\r\n  },\r\n\r\n  populateBounds: function () {\r\n    var selection = this.canvas.getSelection().getAll(true)\r\n    var bounds = this.bounds = []\r\n\r\n    var figures = this.canvas.getFigures()\r\n    figures.each(function (index, figure) {\r\n      if (!selection.contains(figure)) {\r\n        bounds.push(figure.getBoundingBox())\r\n      }\r\n    })\r\n  },\r\n\r\n  showHorizontalGuides: function (causedFigure, constraint) {\r\n    if (this.horizontalGuideLines != null) {\r\n      this.horizontalGuideLines.stop()\r\n      this.horizontalGuideLines.remove()\r\n    }\r\n\r\n    var snapTopLeft = constraint.snappedRect.getTopLeft()\r\n    var snapTopRight = constraint.snappedRect.getTopRight()\r\n    var y = ((Math.min(constraint.leftSide.causedBBox.getTopRight().y, Math.min(constraint.rightSide.causedBBox.y, causedFigure.getY())) - 50) | 0) + 0.5\r\n\r\n    this.canvas.paper.setStart()\r\n\r\n    // Vertical lines from left to the right order\r\n    //\r\n    this.canvas.paper.path(\"M \" + ((constraint.leftSide.x | 0) + 0.5) + \" \" + y + \" L \" + ((constraint.leftSide.x | 0) + 0.5) + \" \" + constraint.leftSide.y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n\r\n    this.canvas.paper.path(\"M \" + ((snapTopLeft.x | 0) + 0.5) + \" \" + y + \" L \" + ((snapTopLeft.x | 0) + 0.5) + \" \" + snapTopLeft.y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n\r\n    this.canvas.paper.path(\"M \" + ((snapTopRight.x | 0) + 0.5) + \" \" + y + \" L \" + ((snapTopRight.x | 0) + 0.5) + \" \" + snapTopRight.y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n\r\n    this.canvas.paper.path(\"M \" + ((constraint.rightSide.x | 0) + 0.5) + \" \" + y + \" L \" + ((constraint.rightSide.x | 0) + 0.5) + \" \" + constraint.rightSide.y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n\r\n\r\n    // horizontal lines\r\n    //\r\n    this.canvas.paper.path(\"M \" + (constraint.leftSide.x) + \" \" + (y + 5) + \" L \" + (snapTopLeft.x) + \" \" + (y + 5)).attr({\r\n      \"stroke\": this.lineColor.rgba(),\r\n      \"stroke-width\": 1\r\n    })\r\n    this.canvas.paper.path(\"M \" + (constraint.rightSide.x) + \" \" + (y + 5) + \" L \" + (snapTopRight.x) + \" \" + (y + 5)).attr({\r\n      \"stroke\": this.lineColor.rgba(),\r\n      \"stroke-width\": 1\r\n    })\r\n\r\n    // 4 arrow heads starting on the left side and add one by one\r\n    //\r\n    this.canvas.paper.path(\r\n      \" M \" + (constraint.leftSide.x + 5) + \" \" + (y)\r\n      + \" L \" + (constraint.leftSide.x) + \" \" + (y + 5)\r\n      + \" L \" + (constraint.leftSide.x + 5) + \" \" + (y + 10))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (snapTopLeft.x - 5) + \" \" + (y)\r\n      + \" L \" + (snapTopLeft.x) + \" \" + (y + 5)\r\n      + \" L \" + (snapTopLeft.x - 5) + \" \" + (y + 10))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (snapTopRight.x + 5) + \" \" + (y)\r\n      + \" L \" + (snapTopRight.x) + \" \" + (y + 5)\r\n      + \" L \" + (snapTopRight.x + 5) + \" \" + (y + 10))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (constraint.rightSide.x - 5) + \" \" + (y)\r\n      + \" L \" + (constraint.rightSide.x) + \" \" + (y + 5)\r\n      + \" L \" + (constraint.rightSide.x - 5) + \" \" + (y + 10))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n\r\n    this.horizontalGuideLines = this.canvas.paper.setFinish()\r\n    this.horizontalGuideLines.toFront()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Hide the horizontal snaping guides\r\n   *\r\n   * @param {Boolean} fast\r\n   */\r\n  hideHorizontalGuides: function (fast) {\r\n    if (this.horizontalGuideLines == null) {\r\n      return\r\n    }\r\n\r\n    if (fast === true) {\r\n      if (this.horizontalGuideLines !== null) {\r\n        this.horizontalGuideLines.remove()\r\n        this.horizontalGuideLines = null\r\n      }\r\n    }\r\n    else {\r\n      this.horizontalGuideLines.animate(\r\n        {opacity: 0.1},\r\n        this.FADEOUT_DURATION,\r\n        () => {\r\n          if (this.horizontalGuideLines !== null) {\r\n            this.horizontalGuideLines.remove()\r\n            this.horizontalGuideLines = null\r\n          }\r\n        }\r\n      )\r\n    }\r\n  },\r\n\r\n  showVerticalGuides: function (causedFigure, constraint) {\r\n    if (this.verticalGuideLines != null) {\r\n      this.verticalGuideLines.stop()\r\n      this.verticalGuideLines.remove()\r\n    }\r\n\r\n    var snapTopRight = constraint.snappedRect.getTopRight()\r\n    var snapBottomRight = constraint.snappedRect.getBottomRight()\r\n    var x = ((Math.max(constraint.topSide.causedBBox.getRight(), Math.max(constraint.bottomSide.causedBBox.getRight(), causedFigure.getX())) + 40) | 0) + 0.5\r\n\r\n    this.canvas.paper.setStart()\r\n\r\n    // Vertical lines from left to the right order\r\n    //\r\n    this.canvas.paper.path(\"M \" + x + \" \" + ((constraint.topSide.y | 0) + 0.5) + \" L \" + ((constraint.topSide.x | 0) + 0.5) + \" \" + ((constraint.topSide.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + x + \" \" + ((snapTopRight.y | 0) + 0.5) + \" L \" + ((snapTopRight.x | 0) + 0.5) + \" \" + ((snapTopRight.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + x + \" \" + ((snapBottomRight.y | 0) + 0.5) + \" L \" + ((snapBottomRight.x | 0) + 0.5) + \" \" + ((snapBottomRight.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + x + \" \" + ((constraint.bottomSide.y | 0) + 0.5) + \" L \" + ((constraint.bottomSide.x | 0) + 0.5) + \" \" + ((constraint.bottomSide.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n\r\n    // horizontal lines\r\n    //\r\n    this.canvas.paper.path(\"M \" + (x - 5) + \" \" + (((constraint.topSide.y | 0) + 0.5)) + \" L \" + (x - 5) + \" \" + ((snapTopRight.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n    this.canvas.paper.path(\"M \" + (x - 5) + \" \" + (((constraint.bottomSide.y | 0) + 0.5)) + \" L \" + (x - 5) + \" \" + ((snapBottomRight.y | 0) + 0.5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n\r\n    // 4 arrow heads starting on the left side and add one by one\r\n    //\r\n    this.canvas.paper.path(\r\n      \" M \" + (x - 10) + \" \" + (constraint.topSide.y + 5)\r\n      + \" L \" + (x - 5) + \" \" + (constraint.topSide.y)\r\n      + \" L \" + (x) + \" \" + (constraint.topSide.y + 5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (x - 10) + \" \" + (snapTopRight.y - 5)\r\n      + \" L \" + (x - 5) + \" \" + (snapTopRight.y)\r\n      + \" L \" + (x) + \" \" + (snapTopRight.y - 5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (x - 10) + \" \" + (snapBottomRight.y + 5)\r\n      + \" L \" + (x - 5) + \" \" + (snapBottomRight.y)\r\n      + \" L \" + (x) + \" \" + (snapBottomRight.y + 5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.canvas.paper.path(\r\n      \" M \" + (x - 10) + \" \" + (constraint.bottomSide.y - 5)\r\n      + \" L \" + (x - 5) + \" \" + (constraint.bottomSide.y)\r\n      + \" L \" + (x) + \" \" + (constraint.bottomSide.y - 5))\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.verticalGuideLines = this.canvas.paper.setFinish()\r\n    this.verticalGuideLines.toFront()\r\n  },\r\n\r\n  hideVerticalGuides: function () {\r\n    if (this.verticalGuideLines == null) {\r\n      return //silently\r\n    }\r\n\r\n    this.verticalGuideLines.animate(\r\n      {opacity: 0.1},\r\n      this.FADEOUT_DURATION,\r\n      () => {\r\n        if (this.verticalGuideLines !== null) {\r\n          this.verticalGuideLines.remove()\r\n          this.verticalGuideLines = null\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Snapping is based on the existing children of a container. When snapping a shape,\r\n * the edges of the bounding box will snap to edges of other rectangles generated\r\n * from the children of the given canvas.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.SnapToEditPolicy\r\n */\r\ndraw2d.policy.canvas.SnapToVerticesEditPolicy = draw2d.policy.canvas.SnapToEditPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.SnapToVerticesEditPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.SnapToVerticesEditPolicy\",\r\n\r\n  SNAP_THRESHOLD: 3,\r\n  FADEOUT_DURATION: 300,\r\n\r\n  /**\r\n   * Creates a new constraint policy for snap to geometry\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.constraints = null\r\n    this.vline = null\r\n    this.hline = null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Figure} figure the shape below the mouse or null\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onMouseUp: function (figure, x, y, shiftKey, ctrlKey) {\r\n    this.constraints = null\r\n    this.hideVerticalLine()\r\n    this.hideHorizontalLine()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Adjust the coordinates to the canvas neighbours\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the figure to snap\r\n   * @param {draw2d.geo.Point} modifiedPos the already modified position of the figure (e.g. from an another Policy)\r\n   * @param {draw2d.geo.Point} originalPos the original requested position of the figure\r\n   *\r\n   * @returns {draw2d.geo.Point} the constraint position of the figure\r\n   */\r\n  snap: function (canvas, figure, modifiedPos, originalPos) {\r\n    // can only handle PolyLies at the moment\r\n    //\r\n    if (!(figure instanceof draw2d.shape.basic.VertexResizeHandle)) {\r\n      return modifiedPos\r\n    }\r\n\r\n    var allowXChanges = modifiedPos.x === originalPos.x\r\n    var allowYChanges = modifiedPos.y === originalPos.y\r\n\r\n    // Coordinates already snapped to an x/y coordinate.\r\n    // Don't change them and in this case no further calculation is required.\r\n    //\r\n    if (!allowXChanges && !allowYChanges) {\r\n      return modifiedPos\r\n    }\r\n\r\n    var result = modifiedPos.clone()\r\n    var correction = this.getCorrectionFor(figure, originalPos)\r\n\r\n    if (allowXChanges && (correction.vertical.x !== Number.MAX_SAFE_INTEGER)) {\r\n      result.x = correction.vertical.x\r\n      this.showVerticalLine(originalPos, correction.vertical)\r\n    }\r\n    else {\r\n      this.hideVerticalLine()\r\n    }\r\n\r\n    if (allowYChanges && (correction.horizontal.y !== Number.MAX_SAFE_INTEGER)) {\r\n      result.y = correction.horizontal.y\r\n      this.showHorizontalLine(originalPos, correction.horizontal)\r\n    }\r\n    else {\r\n      this.hideHorizontalLine()\r\n    }\r\n\r\n\r\n    return result\r\n  },\r\n\r\n\r\n  getCorrectionFor: function (vertexResizeHandle, point) {\r\n    var _this = this\r\n    if (this.constraints === null) {\r\n      this.constraints = []\r\n\r\n      var lines = this.canvas.getLines()\r\n      lines.each(function (i, line) {\r\n        line.getVertices().each(function (ii, vertex) {\r\n          if (vertexResizeHandle.index !== ii || vertexResizeHandle.owner !== line)\r\n            _this.constraints.push(vertex)\r\n        })\r\n      })\r\n    }\r\n\r\n    var SNAP = this.SNAP_THRESHOLD\r\n    var vertical = {x: Number.MAX_SAFE_INTEGER, y: Number.MAX_SAFE_INTEGER, diffy: Number.MAX_SAFE_INTEGER}\r\n    var horizontal = {x: Number.MAX_SAFE_INTEGER, y: Number.MAX_SAFE_INTEGER, diffx: Number.MAX_SAFE_INTEGER}\r\n    var diffx, diffy\r\n\r\n\r\n    for (var i = 0; i < this.constraints.length; i++) {\r\n      var entry = this.constraints[i]\r\n\r\n      diffx = Math.abs(point.x - entry.x)\r\n      diffy = Math.abs(point.y - entry.y)\r\n      // we found a possible candidate for the vertical snap line\r\n      //\r\n      if (diffx < SNAP) {\r\n        if (diffy < vertical.diffy) {\r\n          vertical = {x: entry.x, y: entry.y, diffy: diffy}\r\n        }\r\n      }\r\n\r\n\r\n      if (diffy < SNAP) {\r\n        if (diffx < horizontal.diffx) {\r\n          horizontal = {x: entry.x, y: entry.y, diffx: diffx}\r\n        }\r\n      }\r\n\r\n    }\r\n    return {vertical: vertical, horizontal: horizontal}\r\n  },\r\n\r\n  showVerticalLine: function (originalPos, snappedPos) {\r\n    if (this.vline != null) {\r\n      this.vline.stop()\r\n      this.vline.remove()\r\n    }\r\n\r\n\r\n    var maxLength = this.canvas.getHeight()\r\n    var x = (snappedPos.x | 0) + 0.5 // force a .5 number to avoid subpixel rendering. Blurry lines...\r\n    this.canvas.paper.setStart()\r\n    this.canvas.paper.path(\"M \" + x + \" 0 l 0 \" + maxLength)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + x + \" \" + originalPos.y + \" L \" + x + \" \" + snappedPos.y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.vline = this.canvas.paper.setFinish()\r\n    this.vline.toBack()\r\n  },\r\n\r\n  hideVerticalLine: function () {\r\n    if (this.vline == null) {\r\n      return\r\n    }\r\n    this.vline.animate(\r\n      {opacity: 0.1},\r\n      this.FADEOUT_DURATION,\r\n      () => {\r\n        if (this.vline !== null) {\r\n          this.vline.remove()\r\n          this.vline = null\r\n        }\r\n      }\r\n    )\r\n  },\r\n\r\n  showHorizontalLine: function (originalPos, snappedPos) {\r\n    if (this.hline != null) {\r\n      this.hline.stop()\r\n      this.hline.remove()\r\n    }\r\n\r\n    var maxLength = this.canvas.getWidth()\r\n    var y = (snappedPos.y | 0) + 0.5 // force a .5 number to avoid subpixel rendering. Blurry lines...\r\n\r\n    this.canvas.paper.setStart()\r\n    this.canvas.paper.path(\"M 0 \" + y + \" l \" + maxLength + \" 0\")\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1, \"stroke-dasharray\": \". \"})\r\n    this.canvas.paper.path(\"M \" + originalPos.x + \" \" + y + \" L \" + snappedPos.x + \" \" + y)\r\n      .attr({\"stroke\": this.lineColor.rgba(), \"stroke-width\": 1})\r\n\r\n    this.hline = this.canvas.paper.setFinish()\r\n    this.hline.toBack()\r\n\r\n  },\r\n\r\n  hideHorizontalLine: function () {\r\n    if (this.hline === null) {\r\n      return //silently\r\n    }\r\n    this.hline.animate(\r\n      {opacity: 0.1},\r\n      this.FADEOUT_DURATION,\r\n      () => {\r\n        if (this.hline !== null) {\r\n          this.hline.remove()\r\n          this.hline = null\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\nimport {Tweenable} from \"shifty\"\r\n\r\n\r\n/**\r\n * @class\r\n * Zoom support for a canvas. Use the mouse wheel and the shift key to zoom in/out.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.installEditPolicy(new draw2d.policy.canvas.WheelZoomPolicy());\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"Use the mouse wheel + SHIFT to zoom\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n * @since 5.8.0\r\n */\r\ndraw2d.policy.canvas.WheelZoomPolicy = draw2d.policy.canvas.ZoomPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.WheelZoomPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.WheelZoomPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function () {\r\n    this._super()\r\n\r\n    this.center = null\r\n    this.debouncedZoomedCallback = this._debounce(() => {\r\n      let canvas = this.canvas\r\n      if (canvas !== null) {\r\n        canvas.fireEvent(\"zoomed\", {value: canvas.zoomFactor})\r\n      }\r\n      this.center = null\r\n    }, 200)\r\n  },\r\n\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n    canvas.setZoom(1)\r\n    canvas.__wheelZoom = 1\r\n  },\r\n\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n\r\n    // cleanup the canvas object and remove custom properties\r\n    //\r\n    delete canvas.__wheelZoom\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * called if the user uses the mouse wheel.\r\n   *\r\n   *\r\n   * @param wheelDelta\r\n   * @param {Number} x the x coordinate of the event\r\n   * @param {Number} y the y coordinate of the event\r\n   * @param shiftKey\r\n   * @param ctrlKey\r\n   * @since 5.8.0\r\n   * @template\r\n   * @returns {Boolean} return <b>false</b> to preven tthe default event operation (e.g. scrolling)\r\n   */\r\n  onMouseWheel: function (wheelDelta, x, y, shiftKey, ctrlKey) {\r\n    // mouse wheel is only supported if the user presses the shift key.\r\n    // normally the canvas scrolls during mouseWheel usage.\r\n    //\r\n    if (shiftKey === false) {\r\n      return true\r\n    }\r\n\r\n    wheelDelta = wheelDelta / 1024\r\n\r\n    let newZoom = ((Math.min(5, Math.max(0.1, this.canvas.zoomFactor + wheelDelta)) * 10000 | 0) / 10000)\r\n    if (this.center === null) {\r\n      let client = this.canvas.fromCanvasToDocumentCoordinate(x, y)\r\n\r\n      this.center = {\r\n        x: x,\r\n        y: y,\r\n        clientX: client.x,\r\n        clientY: client.y\r\n      }\r\n    }\r\n    this._zoom(newZoom, this.center)\r\n    this.debouncedZoomedCallback()\r\n\r\n    return false\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the new zoom level of the canvas.\r\n   *\r\n   * @param zoomFactor\r\n   * @param animated\r\n   */\r\n  setZoom: function (zoomFactor, animated) {\r\n\r\n    // determine the center of the current canvas. We try to keep the\r\n    // current center during zoom operation\r\n    //\r\n    let scrollTop = this.canvas.getScrollTop()\r\n    let scrollLeft = this.canvas.getScrollLeft()\r\n    let scrollWidth = this.canvas.getScrollArea().width()\r\n    let scrollHeight = this.canvas.getScrollArea().height()\r\n    let centerY = scrollTop + (scrollHeight / 2) * this.canvas.zoomFactor\r\n    let centerX = scrollLeft + (scrollWidth / 2) * this.canvas.zoomFactor\r\n\r\n    if (animated) {\r\n      let myTweenable = new Tweenable()\r\n      myTweenable.tween({\r\n        from: {'x': this.canvas.zoomFactor},\r\n        to: {'x': zoomFactor},\r\n        duration: 300,\r\n        easing: \"easeOutSine\",\r\n        step: params => {\r\n          this._zoom(params.x, centerX, centerY)\r\n        },\r\n        finish: state => {\r\n          this.debouncedZoomedCallback()\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      this._zoom(zoomFactor, {x: centerX, y: centerY})\r\n      this.debouncedZoomedCallback()\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {Number} zoom\r\n   * @param {draw2d.geo.Point} center\r\n   * @private\r\n   */\r\n  _zoom: function (zoom, center) {\r\n    let canvas = this.canvas\r\n\r\n    if (zoom === canvas.zoomFactor) {\r\n      return\r\n    }\r\n\r\n    canvas.zoomFactor = zoom\r\n\r\n    canvas.paper.setViewBox(0, 0, canvas.initialWidth, canvas.initialHeight)\r\n    // Change the width and the height attributes manually through DOM\r\n    // unfortunately the raphaelJS 'setSize' method changes the viewBox as well and this is unwanted in this case\r\n    //\r\n    canvas.html\r\n      .find(\"svg\")\r\n      .attr({\r\n        'width': canvas.initialWidth / zoom,\r\n        'height': canvas.initialHeight / zoom\r\n      })\r\n\r\n\r\n    // try to keep the document position to the given client position\r\n    //\r\n    if (center.clientX) {\r\n      let coordsAfter = canvas.fromCanvasToDocumentCoordinate(center.x, center.y)\r\n      canvas.scrollTo(this.canvas.getScrollTop() - (center.clientY - coordsAfter.y), canvas.getScrollLeft() - (center.clientX - coordsAfter.x))\r\n    }\r\n\r\n    canvas.fireEvent(\"zoom\", {value: canvas.zoomFactor})\r\n  },\r\n\r\n\r\n  // Returns a function, that, as long as it continues to be invoked, will not\r\n  // be triggered. The function will be called after it stops being called for\r\n  // N milliseconds. If `immediate` is passed, trigger the function on the\r\n  // leading edge, instead of the trailing.\r\n  _debounce: function (func, wait, immediate) {\r\n    let timeout\r\n    return () => {\r\n      let context = this, args = arguments\r\n      let later = () => {\r\n        timeout = null\r\n        if (!immediate) func.apply(context, args)\r\n      }\r\n      let callNow = immediate && !timeout\r\n      clearTimeout(timeout)\r\n      timeout = setTimeout(later, wait)\r\n      if (callNow) func.apply(context, args)\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\nimport {Tweenable} from \"shifty\"\r\n\r\n\r\n/**\r\n * @class\r\n * Generic zoom policy installable into a canvas object.\r\n * This is the legacy implementation of the very first zooming in\r\n * Draw2D. You can use this implementation if you want backward compatible.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.canvas.CanvasPolicy\r\n * @since 5.8.0\r\n */\r\ndraw2d.policy.canvas.ZoomPolicy = draw2d.policy.canvas.CanvasPolicy.extend(\r\n  /** @lends draw2d.policy.canvas.ZoomPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.canvas.ZoomPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function () {\r\n    this._super()\r\n  },\r\n\r\n  onInstall: function (canvas) {\r\n    this._super(canvas)\r\n    canvas.setZoom(1)\r\n  },\r\n\r\n  onUninstall: function (canvas) {\r\n    this._super(canvas)\r\n  },\r\n\r\n  /** \r\n   * Set the new zoom factor for the canvas. The value must be between [0.01..10]\r\n   *\r\n   *     // you can register an eventhandler to listen to the zoom factor of the canvas.\r\n   *    //\r\n   *     canvas.on(\"zoom\", function(emitterFigure, zoomData){\r\n   *         alert(\"canvas zoomed to:\"+zoomData.factor);\r\n   *     });\r\n   *\r\n   * @param {Number} zoomFactor new zoom factor.\r\n   * @param {Boolean} [animated] set it to true for smooth zoom in/out\r\n   **/\r\n  setZoom: function (zoomFactor, animated) {\r\n    let canvas = this.canvas\r\n\r\n    let _zoom = function (z) {\r\n      canvas.zoomFactor = Math.min(Math.max(0.01, z), 10)\r\n\r\n      let viewBoxWidth = (canvas.initialWidth * (canvas.zoomFactor)) | 0\r\n      let viewBoxHeight = (canvas.initialHeight * (canvas.zoomFactor)) | 0\r\n\r\n      canvas.paper.setViewBox(0, 0, viewBoxWidth, viewBoxHeight)\r\n\r\n      canvas.fireEvent(\"zoom\", {value: canvas.zoomFactor})\r\n    }\r\n\r\n    if (animated) {\r\n      let myTweenable = new Tweenable()\r\n      myTweenable.tween({\r\n        from: {'x': canvas.zoomFactor},\r\n        to: {'x': zoomFactor},\r\n        duration: 300,\r\n        easing: \"easeOutSine\",\r\n        step: params => _zoom(params.x),\r\n        finish: state => canvas.fireEvent(\"zoomed\", {value: canvas.zoomFactor})\r\n      })\r\n    }\r\n    else {\r\n      _zoom(zoomFactor)\r\n      canvas.fireEvent(\"zoomed\", {value: canvas.zoomFactor})\r\n    }\r\n  }\r\n})\r\n","\r\n/**\r\n * @class\r\n *\r\n * The ClickConnectionCreatePolicy can be installed into the canvas to override the\r\n * default connection crate behaviour. Normally you can create connections by drag&drop a port.\r\n *\r\n * With this policy you can route the connection during creation.\r\n *\r\n * Creates a connection by clicking on a port.\r\n * <ul>\r\n *  <li> click on the first port</li>\r\n *  <li> click within the canvas to add additional vertices</li>\r\n *  <li> click on the target port to draw the connection</li>\r\n *  <li> press ESC to abort the operation (didn't work within this JSDoc)</li>\r\n * </ul>\r\n * <br>\r\n * <br>\r\n * <b>The generated connections didn't have any orthogonal constraints nor any other restrictions or guidance.</b>\r\n * <br>\r\n * <br>\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Override the default connection creation.\r\n *    //\r\n *    canvas.installEditPolicy( new draw2d.policy.connection.ClickConnectionCreatePolicy());\r\n *\r\n *    // create and add two Node which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start({x:50, y:50});\r\n *    var endNode   = new draw2d.shape.node.End({x:200, y:70});\r\n *\r\n *    // add the two nodes to the canvas\r\n *    //\r\n *    canvas.add( start);\r\n *    canvas.add( endNode);\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.connection.ConnectionCreatePolicy\r\n * @since 6.1.0\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.connection.ClickConnectionCreatePolicy = draw2d.policy.connection.ConnectionCreatePolicy.extend(\r\n    /** @lends draw2d.policy.connection.ClickConnectionCreatePolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.connection.ClickConnectionCreatePolicy\",\r\n    \r\n    /**\r\n     *\r\n     * Creates a new connection create policy instance\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super( attr, setter, getter);\r\n\r\n        this.port1 = null;\r\n        this.beeline = null;\r\n        this.pulse= null;\r\n        this.tempConnection = null;\r\n\r\n        this.vertices = [];\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Called by the canvas if the user click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} the figure under the click event. Can be null\r\n     * @param {Number} x the x coordinate of the mouse during the click event\r\n     * @param {Number} y the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 6.1.0\r\n     */\r\n    onClick: function(figure, x, y, shiftKey, ctrlKey)\r\n    {\r\n        var _this = this;\r\n        var port = figure;\r\n\r\n        if(port === null && this.port1 === null){\r\n            return;\r\n        }\r\n\r\n        // nothing found at all\r\n        //\r\n        if(port===null){\r\n            this.vertices.push(new draw2d.geo.Point(x,y));\r\n            this.beeline.setStartPosition(x,y);\r\n            this.tempConnection.setVertices(this.vertices);\r\n            if(this.pulse!==null) {\r\n                this.pulse.remove();\r\n                this.pulse = null;\r\n            }\r\n            this.ripple(x,y,0);\r\n            return;\r\n        }\r\n\r\n        //just consider ports\r\n        //\r\n        if(!(port instanceof draw2d.Port)){\r\n            return;\r\n        }\r\n\r\n        // start connection create by selection the start port\r\n        //\r\n        if(this.port1===null){\r\n            var canvas = port.getCanvas();\r\n            this.port1 = port;\r\n            this.vertices.push(port.getAbsolutePosition());\r\n            this.beeline = new draw2d.shape.basic.Line({\r\n                start: this.port1.getAbsolutePosition(),\r\n                end: this.port1.getAbsolutePosition(),\r\n                dasharray:\"- \",\r\n                color:\"#2C70FF\"\r\n            });\r\n\r\n            this.beeline.hide= function(){\r\n                _this.beeline.setCanvas(null);\r\n            };\r\n\r\n            this.beeline.show= function(canvas){\r\n                _this.beeline.setCanvas(canvas);\r\n                _this.beeline.shape.toFront();\r\n            };\r\n            this.beeline.show(canvas);\r\n\r\n            this.tempConnection = new draw2d.shape.basic.PolyLine({\r\n                start: this.port1.getAbsolutePosition(),\r\n                end: this.port1.getAbsolutePosition(),\r\n                stroke:2,\r\n                color:\"#2C70FF\"\r\n            });\r\n\r\n            this.tempConnection.hide= function(){\r\n                _this.tempConnection.setCanvas(null);\r\n            };\r\n\r\n            this.tempConnection.show= function(canvas){\r\n                _this.tempConnection.setCanvas(canvas);\r\n                _this.tempConnection.shape.toFront();\r\n            };\r\n            this.tempConnection.show(canvas);\r\n            this.tempConnection.setVertices([this.port1.getAbsolutePosition(),this.port1.getAbsolutePosition()]);\r\n\r\n            var a= function() {\r\n                _this.tempConnection.shape.animate({\"stroke-width\" : 2}, 800, b);\r\n            };\r\n            var b=function() {\r\n                _this.tempConnection.shape.animate({\"stroke-width\":1}, 800, a);\r\n            };\r\n            a();\r\n\r\n            var pos = port.getAbsolutePosition();\r\n            this.pulse =this.ripple(pos.x, pos.y, 1);\r\n            return;\r\n        }\r\n\r\n\r\n        var possibleTarget = port.delegateTarget(this.port1);\r\n\r\n        if(!(possibleTarget instanceof draw2d.Port)){\r\n            return; // silently\r\n        }\r\n\r\n        var request = new draw2d.command.CommandType(draw2d.command.CommandType.CONNECT);\r\n        request.source = this.port1;\r\n        request.target = port;\r\n\r\n        var command = null;\r\n        if(this.port1 instanceof draw2d.InputPort) {\r\n             command = this.port1.createCommand(request);\r\n        }\r\n        else{\r\n             command = port.createCommand(request);\r\n        }\r\n\r\n        if(command!==null){\r\n            this.vertices.push(port.getPosition());\r\n            command.setConnection( this.createConnection());\r\n            figure.getCanvas().getCommandStack().execute(command);\r\n            this.beeline.hide();\r\n            this.tempConnection.hide();\r\n            if(this.pulse!==null) {\r\n                this.pulse.remove();\r\n                this.pulse = null;\r\n            }\r\n            this.beeline = null;\r\n            this.port1=null;\r\n            this.vertices = [];\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseMove: function(canvas, x, y, shiftKey, ctrlKey)\r\n    {\r\n        if(this.beeline!==null){\r\n            this.beeline.setEndPosition(x,y);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Callback if the user press a key down\r\n     *\r\n     * @param {draw2d.Canvas} canvas the related canvas\r\n     * @param {Number} keyCode the pressed key\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     **/\r\n    onKeyDown: function(canvas, keyCode, shiftKey, ctrlKey)\r\n    {\r\n        var KEYCODE_ENTER = 13;\r\n        var KEYCODE_ESC = 27;\r\n        if (keyCode === KEYCODE_ESC && this.beeline!==null){\r\n            this.beeline.hide();\r\n            this.tempConnection.hide();\r\n            this.beeline = null;\r\n            this.port1=null;\r\n            this.vertices = [];\r\n            if(this.pulse!=null) {\r\n                this.pulse.remove();\r\n                this.pulse=null;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    createConnection: function()\r\n    {\r\n        var connection = this._super();\r\n        if(this.vertices.length===2){\r\n            connection.setRouter(new draw2d.layout.connection.DirectRouter());\r\n        }\r\n        else {\r\n            connection.setRouter(new draw2d.layout.connection.VertexRouter());\r\n            connection.setVertices(this.vertices);\r\n        }\r\n        connection.setRadius(10);\r\n        return connection;\r\n    }\r\n\r\n\r\n\r\n});\r\n\r\n","\r\n/**\r\n * @class\r\n * A composed connection create policy. Use this to install more than one\r\n * ConnectionCreatePolicy into the canvas. Normally it is not allowed to install\r\n * more than one policy from the same type.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.connection.ConnectionCreatePolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.connection.ComposedConnectionCreatePolicy = draw2d.policy.connection.ConnectionCreatePolicy.extend(\r\n    /** @lends draw2d.policy.connection.ComposedConnectionCreatePolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.connection.ComposedConnectionCreatePolicy\",\r\n\r\n    /**\r\n     *\r\n     * Creates a new connection create policy instance\r\n     *\r\n     * @param {array} policies the policies to use\r\n     */\r\n    init: function( policies )\r\n    {\r\n        this.policies = policies;\r\n        this._super();\r\n    },\r\n\r\n    onMouseDown: function()\r\n    {\r\n        let _arg = arguments;\r\n        this.policies.forEach((p)=>{\r\n            p.onMouseDown.apply(p,_arg);\r\n        });\r\n    },\r\n    onMouseDrag: function()\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onMouseDrag.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    onMouseUp: function()\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onMouseUp.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    onClick: function()\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onClick.apply(p,_arg);\r\n        });\r\n    },\r\n    onMouseMove: function()\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onMouseMove.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @inheritDoc\r\n     **/\r\n    onKeyUp: function(canvas, keyCode, shiftKey, ctrlKey)\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onKeyUp.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @inheritDoc\r\n     **/\r\n    onKeyDown: function(canvas, keyCode, shiftKey, ctrlKey)\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onKeyDown.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Called if the policy is installed into the canvas.\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     */\r\n    onInstall: function(canvas)\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onInstall.apply(p,_arg);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Called if the policy is deinstalled from the canvas\r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     */\r\n    onUninstall: function(canvas)\r\n    {\r\n      let _arg = arguments;\r\n      this.policies.forEach((p)=>{\r\n            p.onUninstall.apply(p,_arg);\r\n        });\r\n    }\r\n\r\n});\r\n\r\n","\r\n/**\r\n * @class\r\n * Base class for connection creation by user interaction.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.canvas.KeyboardPolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.connection.ConnectionCreatePolicy = draw2d.policy.canvas.KeyboardPolicy.extend(\r\n    /** @lends draw2d.policy.connection.ConnectionCreatePolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.connection.ConnectionCreatePolicy\",\r\n\r\n    /**\r\n     *\r\n     * Creates a new connection create policy instance\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super( attr,setter,getter);\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Factory method to create the connection to insert.\r\n     *\r\n     * @returns {draw2d.Connection}\r\n     * @template\r\n     */\r\n    createConnection:function()\r\n    {\r\n        return new draw2d.Connection({\r\n            router: new draw2d.layout.connection.DirectRouter()\r\n        });\r\n    },\r\n\r\n\r\n    ripple: function(x,y, type)\r\n    {\r\n        switch(type){\r\n            case 0:\r\n                var circle = this.canvas.paper.circle(x, y, 3, 3).attr({fill: null, stroke:\"#d0d0ff\"});\r\n                var anim = Raphael.animation(\r\n                    {transform: \"s6\", opacity:0.0, \"stroke-width\":3 },\r\n                    500,\r\n                    \"linear\",\r\n                    function(){circle.remove()}\r\n                );\r\n                circle.animate(anim);\r\n                // return an emmpty raphael.set. The circle removes itself after animation is done\r\n                //\r\n                return this.canvas.paper.set();\r\n                break;\r\n            case 1:\r\n                var circle1 = this.canvas.paper.circle(x, y, 3, 3).attr({fill: null, stroke:\"#3f72bf\"});\r\n                var circle2 = this.canvas.paper.circle(x, y, 3, 3).attr({fill: null, stroke:\"#ff0000\"});\r\n                var anim1 = Raphael.animation(\r\n                    {transform: \"s6\", opacity:0.0, \"stroke-width\":1 },\r\n                    1200,\r\n                    \"linear\"\r\n                ).repeat(Infinity);\r\n                circle1.animate(anim1);\r\n                var anim2 = Raphael.animation(\r\n                    {transform: \"s12\", opacity:0.0, \"stroke-width\":4 },\r\n                    500,\r\n                    \"linear\",\r\n                    function(){circle2.remove()}\r\n                );\r\n                circle2.animate(anim2);\r\n\r\n                // return the \"circle1\". This shape must be remove by the caller\r\n                // \"circle2\" is removed automaticly\r\n                //\r\n                return circle1;\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n});\r\n\r\n","\r\n/**\r\n * @class\r\n *\r\n * The DragConnectionCreatePolicy is the default configuration for connection creation.\r\n * You must drag a port and drop them onto another port to create connection.\r\n *\r\n * Creates a connection by drag&drop on a port.\r\n * <ul>\r\n *  <li> click on the first port</li>\r\n *  <li> drag it to the target port</li>\r\n *  <li> drop it onto the target</li>\r\n * </ul>\r\n * <br>\r\n * <br>\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Override the default connection creation.\r\n *    //\r\n *    canvas.installEditPolicy( new draw2d.policy.connection.DragConnectionCreatePolicy());\r\n *\r\n *    // create and add two Node which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start({x:50, y:50});\r\n *    var endNode   = new draw2d.shape.node.End({x:200, y:70});\r\n *\r\n *    // add the two nodes to the canvas\r\n *    //\r\n *    canvas.add( start);\r\n *    canvas.add( endNode);\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.connection.ConnectionCreatePolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.connection.DragConnectionCreatePolicy = draw2d.policy.connection.ConnectionCreatePolicy.extend(\r\n    /** @lends draw2d.policy.connection.DragConnectionCreatePolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.connection.DragConnectionCreatePolicy\",\r\n    \r\n    /**\r\n     *\r\n     * Creates a new connection create policy instance\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super(attr, setter, getter);\r\n\r\n        this.mouseDraggingElement =null;\r\n        this.currentDropTarget = null;\r\n        this.currentTarget = null;\r\n    },\r\n\r\n    /**\r\n     * \r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseDown: function(canvas, x, y, shiftKey, ctrlKey)\r\n    {\r\n        //just consider ports\r\n        //\r\n        var port = canvas.getBestFigure(x, y);\r\n\r\n\r\n        // nothing found at all\r\n        //\r\n        if(port===null){\r\n            return;\r\n        }\r\n\r\n        // may there is a resize handle below the port or another figure\r\n        // in this case the ResizeHandle has prio. and handled by another\r\n        // Policy\r\n        if(!(port instanceof draw2d.Port)){\r\n            return;\r\n        }\r\n\r\n        // this can happen if the user release the mouse button outside the window during a drag&drop\r\n        // operation. In this case we must fire the \"onDragEnd\" event postpond.\r\n        //\r\n        if(port.isInDragDrop===true){\r\n            port.onDragEnd( x, y, shiftKey, ctrlKey);\r\n            port.isInDragDrop=false;\r\n        }\r\n\r\n        // introspect the port only if it is draggable at all\r\n        //\r\n        if (port.isDraggable()) {\r\n            var canDragStart = port.onDragStart(x - port.getAbsoluteX(), y - port.getAbsoluteY(), shiftKey, ctrlKey);\r\n            if(canDragStart) {\r\n                port.fireEvent(\"dragstart\", {x: x - port.getAbsoluteX(), y: y - port.getAbsoluteY(), shiftKey: shiftKey, ctrlKey: ctrlKey});\r\n            }\r\n\r\n            // Element send a veto about the drag&drop operation\r\n            this.mouseDraggingElement = canDragStart===false ? null : port;\r\n            this.mouseDownElement = port;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * \r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} dx The x diff between start of dragging and this event\r\n     * @param {Number} dy The y diff between start of dragging and this event\r\n     * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n     * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n     * @template\r\n     */\r\n    onMouseDrag: function(canvas, dx, dy, dx2, dy2, shiftKey, ctrlKey)\r\n    {\r\n        try{\r\n            if (this.mouseDraggingElement !== null) {\r\n                var de = this.mouseDraggingElement;\r\n                var ct = this.currentTarget;\r\n\r\n                de.isInDragDrop = true;\r\n                de.onDrag(dx, dy, dx2, dy2, shiftKey, ctrlKey);\r\n\r\n                var target=canvas.getBestFigure(de.getAbsoluteX(),de.getAbsoluteY(), de);\r\n\r\n                // the hovering element has been changed\r\n                if(target!==ct){\r\n                    if(ct!==null){\r\n                        ct.onDragLeave(de);\r\n                        ct.fireEvent(\"dragLeave\",{draggingElement:de});\r\n                        de.editPolicy.each(function(i,e){\r\n                            if(e instanceof draw2d.policy.port.PortFeedbackPolicy){\r\n                                e.onHoverLeave(canvas, de, ct);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // possible hoverEnter event\r\n                    //\r\n                    if(target!==null){\r\n                        this.currentTarget= ct = target.delegateTarget(de);\r\n                        if(ct!==null){\r\n                            ct.onDragEnter(de); // legacy\r\n                            ct.fireEvent(\"dragEnter\",{draggingElement:de});\r\n                            de.editPolicy.each(function(i,e){\r\n                                if(e instanceof draw2d.policy.port.PortFeedbackPolicy){\r\n                                    e.onHoverEnter(canvas, de, ct);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else{\r\n                        this.currentTarget = null;\r\n                    }\r\n                }\r\n\r\n\r\n                var p = canvas.fromDocumentToCanvasCoordinate(canvas.mouseDownX + (dx/canvas.zoomFactor), canvas.mouseDownY + (dy/canvas.zoomFactor));\r\n                var target = canvas.getBestFigure(p.x, p.y,this.mouseDraggingElement);\r\n\r\n                if (target !== this.currentDropTarget) {\r\n                    if (this.currentDropTarget !== null) {\r\n                        this.currentDropTarget.onDragLeave(this.mouseDraggingElement);\r\n                        this.currentDropTarget.fireEvent(\"dragLeave\",{draggingElement:this.mouseDraggingElement});\r\n                        this.currentDropTarget = null;\r\n                    }\r\n                    if (target !== null) {\r\n                        this.currentDropTarget = target.delegateTarget(this.mouseDraggingElement);\r\n                        // inform all listener that the element has accept the dragEnter event\r\n                        //\r\n                        if( this.currentDropTarget !==null) {\r\n                            this.currentDropTarget.onDragEnter(this.mouseDraggingElement); // legacy\r\n                            this.currentDropTarget.fireEvent(\"dragEnter\", {draggingElement: this.mouseDraggingElement});\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch(exc){\r\n            console.log(exc);\r\n            debugger;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     *\r\n     * @param {draw2d.Figure} figure the shape below the mouse or null\r\n     * @param {Number} x the x-coordinate of the mouse down event\r\n     * @param {Number} y the y-coordinate of the mouse down event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onMouseUp: function(canvas, x, y, shiftKey, ctrlKey)\r\n    {\r\n        if (this.mouseDraggingElement !== null) {\r\n\r\n            var de = this.mouseDraggingElement;\r\n            var ct = this.currentTarget;\r\n            // start CommandStack transaction\r\n            canvas.getCommandStack().startTransaction();\r\n\r\n            de.onDragEnd(x, y, shiftKey, ctrlKey);\r\n            // notify all installed policies\r\n            //\r\n            if(ct){\r\n                de.editPolicy.each(function(i,e){\r\n                    if(e instanceof draw2d.policy.port.PortFeedbackPolicy){\r\n                        e.onHoverLeave(canvas, de, ct);\r\n                    }\r\n                });\r\n            }\r\n\r\n            de.editPolicy.each(function(i,e){\r\n                if(e instanceof draw2d.policy.figure.DragDropEditPolicy){\r\n                    e.onDragEnd(canvas, de, x, y, shiftKey, ctrlKey);\r\n                }\r\n            });\r\n\r\n            // Reset the drag&drop flyover information\r\n            //\r\n            this.currentTarget = null;\r\n            de.isInDragDrop =false;\r\n\r\n            // fire an event\r\n            // @since 5.3.3\r\n            de.fireEvent(\"dragend\",{x:x, y:y, shiftKey:shiftKey, ctrlKey:ctrlKey});\r\n\r\n\r\n            // check if we drop the port onto a valid\r\n            // drop target and create a connection if possible\r\n            //\r\n            if (this.currentDropTarget !== null) {\r\n                this.mouseDraggingElement.onDrop(this.currentDropTarget, x, y, shiftKey, ctrlKey);\r\n\r\n                this.currentDropTarget.onDragLeave(this.mouseDraggingElement);\r\n                this.currentDropTarget.fireEvent(\"dragLeave\", {draggingElement: this.mouseDraggingElement});\r\n\r\n                // Ports accepts only Ports as DropTarget\r\n                //\r\n                if(this.currentDropTarget instanceof draw2d.Port){\r\n                    var request = new draw2d.command.CommandType(draw2d.command.CommandType.CONNECT);\r\n                    request.source = this.currentDropTarget;\r\n                    request.target = this.mouseDraggingElement;\r\n                    var command = this.mouseDraggingElement.createCommand(request);\r\n\r\n                    if(command!==null){\r\n                        command.setConnection(this.createConnection());\r\n                        canvas.getCommandStack().execute(command);\r\n                        this.currentDropTarget.onCatch(this.mouseDraggingElement, x, y, shiftKey, ctrlKey);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // end command stack trans\r\n            canvas.getCommandStack().commitTransaction();\r\n            this.currentDropTarget = null;\r\n            this.mouseDraggingElement = null;\r\n        }\r\n    },\r\n\r\n\r\n    createConnection: function()\r\n    {\r\n        var connection = this._super();\r\n        connection.setRouter(new draw2d.layout.connection.DirectRouter());\r\n\r\n        return connection;\r\n    }\r\n\r\n\r\n});\r\n\r\n","\r\n/**\r\n * @class\r\n *\r\n * The OrthogonalConnectionCreatePolicy can be installed into the canvas to override the\r\n * default connection crate behaviour. Normaly you can create connections by drag&drop a port.\r\n *\r\n * With this policy you can route the connection during creation.\r\n *\r\n * Creates a connection by clicking on a port.\r\n * <ul>\r\n *  <li> click on the first port</li>\r\n *  <li> click within the canvas to add additional vertices</li>\r\n *  <li> click on the target port to draw the connection</li>\r\n *  <li> press ESC to abort the operation (didn't work within this JSDoc)</li>\r\n * </ul>\r\n * <br>\r\n * <br>\r\n * <b>The generated connection has always perpendicular segments.</b>\r\n * <br>\r\n * <br>\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Override the default connection creation.\r\n *    //\r\n *    canvas.installEditPolicy( new draw2d.policy.connection.OrthogonalConnectionCreatePolicy());\r\n *\r\n *    // create and add two Node which contains Ports (In and OUT)\r\n *    //\r\n *    var start = new draw2d.shape.node.Start({x:50, y:50});\r\n *    var endNode   = new draw2d.shape.node.End({x:200, y:70});\r\n *\r\n *    // add the two nodes to the canvas\r\n *    //\r\n *    canvas.add( start);\r\n *    canvas.add( endNode);\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.connection.ConnectionCreatePolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.connection.OrthogonalConnectionCreatePolicy = draw2d.policy.connection.ConnectionCreatePolicy.extend(\r\n    /** @lends draw2d.policy.connection.ClickConnectionCreatePolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.connection.ClickConnectionCreatePolicy\",\r\n\r\n    /**\r\n     *\r\n     * Creates a new connection create policy instance\r\n\r\n     */\r\n    init: function(attr, setter, getter)\r\n    {\r\n        this._super( attr, setter, getter);\r\n\r\n        this.port1 = null;\r\n        this.beeline = null;\r\n        this.pulse= null;\r\n        this.tempConnection = null;\r\n\r\n        this.vertices = new draw2d.util.ArrayList();\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Called by the canvas if the user click on a figure.\r\n     *\r\n     * @param {draw2d.Figure} the figure under the click event. Can be null\r\n     * @param {Number} x the x coordinate of the mouse during the click event\r\n     * @param {Number} y the y coordinate of the mouse during the click event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @since 6.1.0\r\n     *\r\n     * @template\r\n     */\r\n    onClick: function(figure, x, y, shiftKey, ctrlKey)\r\n    {\r\n        var UP   = draw2d.geo.Rectangle.DIRECTION_UP;\r\n        var RIGHT= draw2d.geo.Rectangle.DIRECTION_RIGHT;\r\n        var DOWN = draw2d.geo.Rectangle.DIRECTION_DOWN;\r\n        var LEFT = draw2d.geo.Rectangle.DIRECTION_LEFT;\r\n\r\n        var _this = this;\r\n        var port = figure;// .getCanvas().getBestFigure(x, y);\r\n\r\n        // nothing to do\r\n        if(port === null && this.port1 === null){\r\n            return;\r\n        }\r\n\r\n        // nothing found at all\r\n        //\r\n        if(port===null){\r\n            var canvas = this.port1.getCanvas();\r\n            var newPos = this.beeline.getEndPosition();\r\n            this.vertices.add(newPos);\r\n            this.beeline.setStartPosition(this.beeline.getEndPosition());\r\n            this.tempConnection.setVertices(this.vertices);\r\n            if(this.pulse!==null) {\r\n                this.pulse.remove();\r\n                this.pulse = null;\r\n            }\r\n            this.ripple(newPos.x, newPos.y, 0);\r\n            return;\r\n        }\r\n\r\n        // we just considering ports\r\n        //\r\n        if(!(port instanceof draw2d.Port)){\r\n            return;\r\n        }\r\n\r\n        // start connection create by selection the start port\r\n        //\r\n        if(this.port1===null){\r\n            var canvas = port.getCanvas();\r\n            this.port1 = port;\r\n            this.vertices.add(port.getAbsolutePosition());\r\n            this.beeline = new draw2d.shape.basic.Line({\r\n                start: this.port1.getAbsolutePosition(),\r\n                end: this.port1.getAbsolutePosition(),\r\n                dasharray:\"- \",\r\n                color:\"#2C70FF\"\r\n            });\r\n\r\n            this.beeline.hide= function(){\r\n                _this.beeline.setCanvas(null);\r\n            };\r\n\r\n            this.beeline.show= function(canvas){\r\n                _this.beeline.setCanvas(canvas);\r\n                _this.beeline.shape.toFront();\r\n            };\r\n            this.beeline.show(canvas);\r\n\r\n            this.tempConnection = new draw2d.shape.basic.PolyLine({\r\n                start: this.port1.getAbsolutePosition(),\r\n                end: this.port1.getAbsolutePosition(),\r\n                stroke:2,\r\n                color:\"#2C70FF\"\r\n            });\r\n\r\n            this.tempConnection.hide= function(){\r\n                _this.tempConnection.setCanvas(null);\r\n            };\r\n\r\n            this.tempConnection.show= function(canvas){\r\n                _this.tempConnection.setCanvas(canvas);\r\n                _this.tempConnection.shape.toFront();\r\n            };\r\n            this.tempConnection.show(canvas);\r\n            this.tempConnection.setVertices([this.port1.getAbsolutePosition(),this.port1.getAbsolutePosition()]);\r\n\r\n            var a= function() {\r\n                _this.tempConnection.shape.animate({\"stroke-width\" : 2}, 800, b);\r\n            };\r\n            var b=function() {\r\n                _this.tempConnection.shape.animate({\"stroke-width\":1}, 800, a);\r\n            };\r\n            a();\r\n\r\n            canvas.paper.setStart();\r\n\r\n            // delete the previews puls if the user press twice on the starting port\r\n            //\r\n            if(this.pulse!==null) {\r\n                this.pulse.remove();\r\n                this.pulse = null;\r\n            }\r\n\r\n            var pos = port.getAbsolutePosition();\r\n            this.ripple(pos.x, pos.y, 1);\r\n            this.pulse = canvas.paper.setFinish();\r\n        }\r\n        else {\r\n            var possibleTarget = port.delegateTarget(this.port1);\r\n\r\n            if (!(possibleTarget instanceof draw2d.Port)) {\r\n                return; // silently\r\n            }\r\n\r\n            // check whenever the target port allows a connection\r\n            //\r\n            var request = new draw2d.command.CommandType(draw2d.command.CommandType.CONNECT);\r\n            request.source = this.port1;\r\n            request.target = port;\r\n            var command = null;\r\n            if (this.port1 instanceof draw2d.InputPort) {\r\n                command = this.port1.createCommand(request);\r\n            }\r\n            else {\r\n                command = port.createCommand(request);\r\n            }\r\n\r\n            if (command !== null) {\r\n                var connection = this.createConnection();\r\n                command.setConnection(connection);\r\n                port.getCanvas().getCommandStack().execute(command);\r\n\r\n\r\n                this.beeline.hide();\r\n                this.tempConnection.hide();\r\n                if (this.pulse !== null) {\r\n                    this.pulse.remove();\r\n                    this.pulse = null;\r\n                }\r\n                this.beeline = null;\r\n                this.port1 = null;\r\n\r\n                // use the default routing if the user didn't add some\r\n                // vertices\r\n                if(this.vertices.getSize()<=2){\r\n                    return;\r\n                }\r\n\r\n                var MINDIST = command.getConnection().getRouter().MINDIST;\r\n                var beforeVertex = this.vertices.get(this.vertices.getSize()-2);\r\n                var lastVertex   = this.vertices.last();\r\n                var portPos      = port.getAbsolutePosition();\r\n                var lastSegmentDir = UP;\r\n                if(lastVertex.x === beforeVertex.x){\r\n                    lastSegmentDir = lastVertex.y< beforeVertex.y ? UP : DOWN;\r\n                }\r\n                else{\r\n                    lastSegmentDir = lastVertex.x< beforeVertex.x ? LEFT : RIGHT;\r\n                }\r\n\r\n                // CALCULATE THE LAST MILE OF THE CONNECTION\r\n                //\r\n                // ensure that we have a valid \"manhattan style\" connection.\r\n                // We must add or adjust some points or segments.\r\n                //\r\n                // The code below creates and adjust the points in that way that the\r\n                // DOTTED line is the calculated part to the user defined vertices.\r\n                // ==================================\r\n                //\r\n                switch(port.getConnectionDirection(this.port1)){\r\n                    case UP:\r\n                        switch(lastSegmentDir){\r\n                            case UP:\r\n                                //       o..................o lastVertex\r\n                                //       |         .        |\r\n                                //       |         .        |\r\n                                //       |    +----O----+   |\r\n                                // ------o    | portPos |   o------------\r\n                                //            |         |      beforeVertex\r\n                                //            +---------+\r\n                                //\r\n                                if(lastVertex.y<(portPos.y-MINDIST)) {\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x, lastVertex.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //        ...................\r\n                                //        .        .        .\r\n                                //        .   +----O----+   .\r\n                                //        o   | portPos |   o lastVertex\r\n                                //        |   |         |   |\r\n                                //        |   +---------+   |\r\n                                // -------o                 o------------\r\n                                //                            beforeVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.y = portPos.y-MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x, lastVertex.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case RIGHT:\r\n                                //  ..............................\r\n                                //  .                   .        .\r\n                                //  .                   .        .\r\n                                //  o------->o     +----O----+   o---------------->O\r\n                                //  |              | portPos |   | beforeVertex    lastVertex\r\n                                //  |              |         |   |\r\n                                //  |              +---------+\r\n                                if(lastVertex.y>(portPos.y-MINDIST)){\r\n                                    beforeVertex.y = portPos.y-MINDIST;\r\n                                    lastVertex.x = portPos.x;\r\n                                    lastVertex.y = beforeVertex.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //\r\n                                //                                beforeVertex   lastVertex\r\n                                // o---------->o..................o------------->O\r\n                                // |                     .        |\r\n                                // |                +----O----+   |\r\n                                // |                | portPos |   |\r\n                                // |                |         |   |\r\n                                //                  +---------+\r\n                                else{\r\n                                    lastVertex.x = portPos.x;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case DOWN:\r\n                                //                           beforeVertex\r\n                                // ------o..................o------------\r\n                                //       |         .        |\r\n                                //       |         .        |\r\n                                //       V    +----O----+   V\r\n                                //       o    | portPos |   o lastVertex\r\n                                //            |         |\r\n                                //            +---------+\r\n                                //\r\n                                if(lastVertex.y<(portPos.y-MINDIST)) {\r\n                                    beforeVertex.x = portPos.x;\r\n                                    lastVertex.setPosition(portPos);\r\n                                }\r\n                                //        ...................\r\n                                //        .        .        .\r\n                                //        .   +----O----+   . beforeVertex\r\n                                // -------o   | portPos |   o------------\r\n                                //        |   |         |   |\r\n                                //        V   +---------+   V\r\n                                //        o                 o\r\n                                //                            lastVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.y = portPos.y-MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x,lastVertex.y ));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case LEFT:\r\n                                //           ..................................\r\n                                //           .         .                       .\r\n                                //           .         .                       .\r\n                                // o<--------o    +----O----+   o<-------------O beforeVertex\r\n                                //           |    | portPos |    lastVertex    |\r\n                                //           |    |         |                  |\r\n                                //                +---------+\r\n                                if(lastVertex.y>(portPos.y-MINDIST)){\r\n                                    beforeVertex.y = portPos.y-MINDIST;\r\n                                    lastVertex.x = portPos.x;\r\n                                    lastVertex.y = beforeVertex.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //             |                               |\r\n                                //             |                               |\r\n                                //   o<--------o................o<-------------O\r\n                                //                      .        lastVertex     beforeVertex\r\n                                //                 +----O----+\r\n                                //                 | portPos |\r\n                                //                 |         |\r\n                                //                 +---------+\r\n                                else{\r\n                                    lastVertex.x = portPos.x;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case RIGHT:\r\n                        switch(lastSegmentDir){\r\n                            case UP:\r\n                                //                    o lastVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //  ------------------o beforeVertex\r\n                                //                    .\r\n                                //  +----------+      .\r\n                                //  |          |      .\r\n                                //  |  portPos O.......\r\n                                //  |          |      .\r\n                                //  +----------+      .\r\n                                //                    o lastVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //   -----------------o beforeVertex\r\n                                //\r\n                                if(lastVertex.x > (portPos.x+MINDIST)){\r\n                                    lastVertex.y = portPos.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //        lastVertex\r\n                                //      o...............\r\n                                //      |              .\r\n                                //      |              .\r\n                                //  ----o beforeVertex .\r\n                                //                     .\r\n                                //  +----------+       .\r\n                                //  |          |       .\r\n                                //  |  portPos O........\r\n                                //  |          |       .\r\n                                //  +----------+       .\r\n                                //      o...............\r\n                                //      | lastVertex\r\n                                //      |\r\n                                //------o\r\n                                //        beforeVertex\r\n                                //\r\n                                //\r\n                                else{\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x+MINDIST, lastVertex.y));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x+MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case RIGHT:\r\n                                //    beforeVertex     lastVertex\r\n                                //    o-------------->o\r\n                                //                    .\r\n                                //  +----------+      .\r\n                                //  |          |      .\r\n                                //  |  portPos O.......\r\n                                //  |          |      .\r\n                                //  +----------+      .\r\n                                //                    .\r\n                                //    o-------------->o\r\n                                //    beforeVertex     lastVertex\r\n                                //\r\n                                if(lastVertex.x > (portPos.x+MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                // beforeVertex  lastVertex\r\n                                // o------------>o.........\r\n                                //                         .\r\n                                //       +----------+      .\r\n                                //       |          |      .\r\n                                //       |  portPos O.......\r\n                                //       |          |      .\r\n                                //       +----------+      .\r\n                                //                         .\r\n                                //  o----------->o..........\r\n                                // beforeVertex  lastVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.x =  portPos.x+MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case DOWN:\r\n                                //    ----------------o beforeVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //                    o lastVertex\r\n                                //                    .\r\n                                //  +----------+      .\r\n                                //  |          |      .\r\n                                //  |  portPos O.......\r\n                                //  |          |      .\r\n                                //  +----------+      .\r\n                                //                    .\r\n                                //      --------------o beforeVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //                    o lastVertex\r\n                                //\r\n                                if(lastVertex.x > (portPos.x+MINDIST)){\r\n                                    lastVertex.y = portPos.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //    -----o beforeVertex\r\n                                //         |\r\n                                //         | lastVertex\r\n                                //         o...........\r\n                                //                    .\r\n                                //  +----------+      .\r\n                                //  |          |      .\r\n                                //  |  portPos O.......\r\n                                //  |          |      .\r\n                                //  +----------+      .\r\n                                //                    .\r\n                                // ----o beforeVertex .\r\n                                //     |              .\r\n                                //     | lastVertex   .\r\n                                //     o...............\r\n                                //\r\n                                else{\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x+MINDIST, lastVertex.y));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x+MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case LEFT:\r\n                                //                lastVertex      beforeVertex\r\n                                //               o<--------------o\r\n                                //               .\r\n                                //  +----------+ .\r\n                                //  |          | .\r\n                                //  |  portPos O..\r\n                                //  |          | .\r\n                                //  +----------+ .\r\n                                //               .\r\n                                //               o<--------------o\r\n                                //                lastVertex      beforeVertex\r\n                                //\r\n                                if(lastVertex.x > (portPos.x+MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                // lastVertex                beforeVertex\r\n                                // o<-----------------------o\r\n                                //                      .\r\n                                //       +----------+   .\r\n                                //       |          |   .\r\n                                //       |  portPos O....\r\n                                //       |          |   .\r\n                                //       +----------+   .\r\n                                //                      .\r\n                                //  o<----------------------o\r\n                                //  lastVertex               beforeVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.x =  portPos.x+MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case DOWN:\r\n                        switch(lastSegmentDir){\r\n                            case UP:\r\n                                //       o                  o lastVertex\r\n                                //       |                  |\r\n                                //       |                  |\r\n                                //       |    +---------+   |\r\n                                // ------o    |         |   o------------\r\n                                //       .    | portPos |   . beforeVertex\r\n                                //       .    +----O----+   .\r\n                                //       .         .        .\r\n                                //       ....................\r\n                                //\r\n                                if(lastVertex.y<(portPos.y+MINDIST)) {\r\n                                    lastVertex.y = portPos.y+MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x, lastVertex.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //            +---------+\r\n                                //            |         |\r\n                                //            | portPos |\r\n                                //            +----O----+\r\n                                //                 .\r\n                                //        o.................o lastVertex\r\n                                //        |                 |\r\n                                //        |                 |\r\n                                // -------o                 o------------\r\n                                //                            beforeVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.x   = portPos.x;\r\n                                    lastVertex.y   = portPos.y;\r\n                                    beforeVertex.x = portPos.x;\r\n                                }\r\n                                break;\r\n                            case RIGHT:\r\n                                //                 +---------+\r\n                                //                 |         |\r\n                                //                 | portPos |\r\n                                //  o------->o     +----O----+    o--------------->O\r\n                                //  |        .          .         | beforeVertex   . lastVertex\r\n                                //  |        .....................|.................\r\n                                //  |\r\n                                //\r\n                                //\r\n                                if(lastVertex.y<(portPos.y+MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y+MINDIST));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x, portPos.y+MINDIST));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //                  +---------+\r\n                                //                  |         |\r\n                                //                  | portPos |\r\n                                //                  +----O----+\r\n                                //                       .\r\n                                //             ...................................\r\n                                //             .                    beforeVertex . lastVertex\r\n                                // o---------->o                  o------------->O\r\n                                // |                              |\r\n                                // |                              |\r\n                                //\r\n                                else{\r\n                                    lastVertex.x = portPos.x;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case DOWN:\r\n                                //                           beforeVertex\r\n                                // ------o                  o------------\r\n                                //       |                  |\r\n                                //       |                  |\r\n                                //       V    +---------+   V\r\n                                //       o    |         |   o lastVertex\r\n                                //       .    | portPos |   .\r\n                                //       .    +----O----+   .\r\n                                //       .         .        .\r\n                                //       ....................\r\n                                //\r\n                                if(lastVertex.y<(portPos.y+MINDIST)) {\r\n                                    lastVertex.y = portPos.y+MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x,lastVertex.y ));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //\r\n                                //            +---------+     beforeVertex\r\n                                // -------o   | portPos |   o------------\r\n                                //        |   |         |   |\r\n                                //        V   +----O----+   V\r\n                                //        o        .        o\r\n                                //        ..................  lastVertex\r\n                                //\r\n                                else{\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x,lastVertex.y ));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case LEFT:\r\n                                //\r\n                                // o<--------o    +---------+   o<-------------O beforeVertex\r\n                                // .         |    |         |   . lastVertex   |\r\n                                // .         |    | portPos |   .              |\r\n                                // .              +----O----+   .\r\n                                // .                   .        .\r\n                                // ..............................\r\n                                //\r\n                                if(lastVertex.y<(portPos.y-MINDIST)){\r\n                                    beforeVertex.y = portPos.y-MINDIST;\r\n                                    lastVertex.x = portPos.x;\r\n                                    lastVertex.y = beforeVertex.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //\r\n                                //                +---------+\r\n                                //           |    |         |               |\r\n                                //           |    | portPos |               |\r\n                                //           |    +----O----+               |\r\n                                //           |         .                    |\r\n                                // o<--------o...................o<---------o\r\n                                //\r\n                                else{\r\n                                    lastVertex.x = portPos.x;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    case LEFT:\r\n                        switch(lastSegmentDir){\r\n                            case UP:\r\n                                //    ................o lastVertex\r\n                                //    .               |\r\n                                //    .               |\r\n                                //  --.---------------o beforeVertex\r\n                                //    .\r\n                                //    .   +----------+\r\n                                //    .   |          |\r\n                                //    ....o  portPos |\r\n                                //    .   |          |\r\n                                //    .   +----------+\r\n                                //    .\r\n                                //    ................o lastVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //   -----------------o beforeVertex\r\n                                //\r\n                                if(lastVertex.x >= (portPos.x-MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, lastVertex.y));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                               //\r\n                                //            +----------+\r\n                                //            |          |\r\n                                //      ......o  portPos |\r\n                                //      .     |          |\r\n                                //      .     +----------+\r\n                                //      o\r\n                                //      | lastVertex\r\n                                //      |\r\n                                //------o\r\n                                //        beforeVertex\r\n                                //\r\n                                //\r\n                                else if(lastVertex.y > portPos.y && lastVertex.x < (portPos.x-MINDIST)){\r\n                                    lastVertex.y = portPos.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //          lastVertex\r\n                                //      o..\r\n                                //      | .\r\n                                //      | .\r\n                                //  ----o .   beforeVertex\r\n                                //        .\r\n                                //        .   +----------+\r\n                                //        .   |          |\r\n                                //        ....o  portPos |\r\n                                //            |          |\r\n                                //            +----------+\r\n                                //\r\n                                else{\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, lastVertex.y));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case RIGHT:\r\n                                //    beforeVertex     lastVertex\r\n                                //    o-------------->o\r\n                                //                    .\r\n                                // ....................\r\n                                // .\r\n                                // .      +----------+\r\n                                // .      |          |\r\n                                // .......o  portPos |\r\n                                //        |          |\r\n                                //        +----------+\r\n                                //\r\n                                if(lastVertex.y<portPos.y && lastVertex.x > (portPos.x-MINDIST)){\r\n                                    var center = portPos.y-(portPos.y-lastVertex.y)/2;\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, center));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, center));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //        +----------+\r\n                                //        |          |\r\n                                // .......o  portPos |\r\n                                // .      |          |\r\n                                // .      +----------+\r\n                                // .\r\n                                // ....................\r\n                                //                    .\r\n                                //    o-------------->o\r\n                                //    beforeVertex     lastVertex\r\n                                //\r\n                                else if(lastVertex.y>portPos.y && lastVertex.x > (portPos.x-MINDIST)){\r\n                                    var center = portPos.y+(lastVertex.y-portPos.y)/2;\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, center));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, center));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                // beforeVertex  lastVertex\r\n                                // o------------>o\r\n                                //               .\r\n                                //               .   +----------+\r\n                                //               .   |          |\r\n                                //               ....o  portPos |\r\n                                //               .   |          |\r\n                                //               .   +----------+\r\n                                //               .\r\n                                //  o----------->o\r\n                                // beforeVertex  lastVertex\r\n                                //\r\n                                else{\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case DOWN:\r\n                                //         -----------o beforeVertex\r\n                                //                    |\r\n                                //                    |\r\n                                //                    V\r\n                                //    ................o lastVertex\r\n                                //    .\r\n                                //    .       +----------+\r\n                                //    .       |          |\r\n                                //    ........o portPos  |\r\n                                //    .       |          |\r\n                                //    .       +----------+\r\n                                //    .\r\n                                //    .        --------o beforeVertex\r\n                                //    .                |\r\n                                //    .                |\r\n                                //    .                V\r\n                                //    .................o lastVertex\r\n                                //\r\n                                if(lastVertex.x >= (portPos.x-MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, lastVertex.y));\r\n                                    this.vertices.add(new draw2d.geo.Point(portPos.x-MINDIST, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //    -----o beforeVertex\r\n                                //         |\r\n                                //         |\r\n                                //         o lastVertex\r\n                                //         .\r\n                                //         .       +----------+\r\n                                //         .       |          |\r\n                                //         ........o portPos  |\r\n                                //             .   |          |\r\n                                //             .   +----------+\r\n                                // beforeVertex.\r\n                                // ------------o\r\n                                //             |\r\n                                //             |\r\n                                // lastVertex  o\r\n                                //\r\n                                else{\r\n                                    lastVertex.y=portPos.y;\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                break;\r\n                            case LEFT:\r\n                                //   lastVertex      beforeVertex\r\n                                //    o<--------------o\r\n                                //    .\r\n                                //    .       +----------+\r\n                                //    .       |          |\r\n                                //    ....... o portPos  |\r\n                                //    .       |          |\r\n                                //    .       +----------+\r\n                                //    .\r\n                                //    o<--------------o\r\n                                //    lastVertex      beforeVertex\r\n                                //\r\n                                if(lastVertex.x < (portPos.x-MINDIST)){\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                                //         lastVertex                beforeVertex\r\n                                //  .......o<-----------------------o\r\n                                //  .\r\n                                //  .    +----------+\r\n                                //  .    |          |\r\n                                //  .....o portPos  |\r\n                                //  .    |          |\r\n                                //  .    +----------+\r\n                                //  .\r\n                                //  ........o<----------------------o\r\n                                //         lastVertex               beforeVertex\r\n                                //\r\n                                else{\r\n                                    lastVertex.x =  portPos.x-MINDIST;\r\n                                    this.vertices.add(new draw2d.geo.Point(lastVertex.x, portPos.y));\r\n                                    this.vertices.add(portPos);\r\n                                }\r\n                            break;\r\n                        }\r\n                    break;\r\n                }\r\n\r\n                if(this.vertices.getSize()>3) {\r\n                    connection._routingMetaData.routedByUserInteraction = true;\r\n                    connection.setVertices(this.vertices);\r\n                }\r\n                this.vertices.clear();\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     *\r\n     * @param {draw2d.Canvas} canvas\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     */\r\n    onMouseMove: function(canvas, x, y, shiftKey, ctrlKey)\r\n    {\r\n        if(this.beeline!==null){\r\n            this.beeline.setEndPosition(this.orthogonal(this.vertices.last(), {x:x,y:y}));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Callback if the user press a key down\r\n     *\r\n     * @param {draw2d.Canvas} canvas the related canvas\r\n     * @param {Number} keyCode the pressed key\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @private\r\n     **/\r\n    onKeyDown: function(canvas, keyCode, shiftKey, ctrlKey)\r\n    {\r\n        var KEYCODE_ENTER = 13;\r\n        var KEYCODE_ESC = 27;\r\n        if (keyCode === KEYCODE_ESC && this.beeline!==null){\r\n            this.beeline.hide();\r\n            this.tempConnection.hide();\r\n            this.beeline = null;\r\n            this.port1=null;\r\n            this.vertices.clear();\r\n            if(this.pulse!=null) {\r\n                this.pulse.remove();\r\n                this.pulse=null;\r\n            }\r\n        }\r\n    },\r\n\r\n    orthogonal: function(anchor, p)\r\n    {\r\n        // calculate vertical line distance\r\n        //\r\n        var xDiff = Math.abs(anchor.x- p.x)+10;\r\n        var xDist = draw2d.geo.Line.distance(anchor.x-xDiff, anchor.y, anchor.x+xDiff, anchor.y, p.x, p.y);\r\n\r\n        // calculate horizontal line distance\r\n        //\r\n        var yDiff = Math.abs(anchor.y- p.y)+10;\r\n        var yDist = draw2d.geo.Line.distance(anchor.x, anchor.y-yDiff, anchor.x, anchor.y+yDiff, p.x, p.y);\r\n\r\n        return yDist>xDist? {x: p.x, y:anchor.y}:{x: anchor.x, y: p.y};\r\n    },\r\n\r\n    createConnection: function()\r\n    {\r\n        var connection = this._super();\r\n        connection.attr({radius:7, stroke:3});\r\n        connection.setRouter(new draw2d.layout.connection.InteractiveManhattanConnectionRouter());\r\n        return connection;\r\n    }\r\n\r\n});\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Provide support for selecting and positioning a non-resizable figure.\r\n * Selection is indicated via rectangular handle that outlines the figure with a 1-pixel black\r\n * dotted line.\r\n *\r\n *\r\n * @example\r\n *\r\n *      circle =new draw2d.shape.basic.Circle({diameter:50, x:90, y:50});\r\n *      circle.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy());\r\n *      canvas.add(circle);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.AntSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.AntSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.AntSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {draw2d.Canvas} canvas the responsible canvas\r\n   * @param {draw2d.Figure} figure the figure to decorate with a selection feedback\r\n   * @param {Boolean} [isPrimarySelection]\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      let box = new draw2d.shape.basic.Rectangle({bgColor: null, dasharray: \"- \", color: \"#2C70FF\"})\r\n      box.hide = function () {\r\n        // IMPORTANT\r\n        // don't add/remove this rectangle to the canvas resizeHandles. This rect isn't responsible for any hitTest or\r\n        // dragDrop operation\r\n        //canvas.resizeHandles.remove(box);\r\n        box.setCanvas(null)\r\n      }\r\n      box.show = function (canvas) {\r\n        box.setCanvas(canvas)\r\n        // IMPORTANT\r\n        // don't add/remove this rectangle to the canvas resizeHandles. This rect isn't responsible for any hitTest or\r\n        // dragDrop operation\r\n        //canvas.resizeHandles.remove(box);\r\n        //canvas.resizeHandles.add(box);\r\n        box.shape.toFront()\r\n      }\r\n      box.show(canvas)\r\n      figure.selectionHandles.add(box)\r\n\r\n      // add a bee line to the parent if a parent is given and if the bounding box\r\n      // of the parent and the figure didn't have intersections\r\n      if (figure.getParent() !== null) {\r\n        let line = new draw2d.shape.basic.Line({opacity: 0.5, bgColor: null, dasharray: \"- \", color: \"#2C70FF\"})\r\n        //line.setStartPosition(figure.getBoundingBox().getCenter());\r\n        //line.setEndPosition(figure.getParent().getBoundingBox().getCenter());\r\n        line.show = (canvas) => line.setCanvas(canvas)\r\n        line.hide = () => line.setCanvas(null)\r\n        line.show(canvas)\r\n        figure.selectionHandles.add(line)\r\n        this._updateBeeLine(line, figure)\r\n      }\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback if the figure has been moved\r\n   *\r\n   * @param figure\r\n   *\r\n   * @template\r\n   */\r\n  moved: function (canvas, figure) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      return // silently\r\n    }\r\n\r\n    let margin = 2\r\n    let box = figure.selectionHandles.first()\r\n    box.setPosition(figure.getAbsolutePosition().translate(-margin, -margin))\r\n    box.setDimension(figure.getWidth() + margin*2, figure.getHeight() + margin*2)\r\n    box.setRotationAngle(figure.getRotationAngle())\r\n\r\n    if (figure.selectionHandles.getSize() > 1) {\r\n      this._updateBeeLine(figure.selectionHandles.get(1), figure)\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {draw2d.shape.basic.Line} line\r\n   * @param {draw2d.Figure} figure\r\n   * @private\r\n   */\r\n  _updateBeeLine: function (line, figure) {\r\n    let parent = figure.getParent()\r\n\r\n    if (parent === null) {\r\n      return\r\n    }\r\n\r\n    if (parent instanceof draw2d.shape.basic.Line) {\r\n      let center = figure.getBoundingBox().getCenter()\r\n      let projection = parent.pointProjection(center)\r\n      if (projection === null) {\r\n        let p1 = line.getStartPosition()\r\n        let p2 = line.getEndPosition()\r\n        let d1 = center.distance(p1)\r\n        let d2 = center.distance(p1)\r\n        projection = d1 < d2 ? p1 : p2\r\n      }\r\n      let intersection = figure.getBoundingBox().intersectionWithLine(center, projection)\r\n      if (intersection.getSize() > 0) {\r\n        line.setStartPosition(figure.getBoundingBox().intersectionWithLine(center, projection).get(0))\r\n          .setEndPosition(projection)\r\n      }\r\n      else {\r\n        line.setStartPosition(figure.getBoundingBox().getCenter())\r\n          .setEndPosition(projection)\r\n      }\r\n    }\r\n    else {\r\n      let rect1 = figure.getBoundingBox(),\r\n        rect2 = parent.getBoundingBox()\r\n\r\n      let center1 = rect1.getCenter()\r\n      let center2 = rect2.getCenter()\r\n      // the rectangle overlaps -> return the center of booth\r\n      if (rect1.intersects(rect2)) {\r\n        line.setStartPosition(center1)\r\n          .setEndPosition(center2)\r\n      }\r\n      // one rect is inside the other rect\r\n      //\r\n      else if (rect1.hitTest(center2) || rect2.hitTest(center1)) {\r\n        line.setStartPosition(center1)\r\n          .setEndPosition(center2)\r\n      }\r\n      else {\r\n        rect1.scale(3, 3)\r\n        rect2.scale(3, 3)\r\n\r\n        line.setStartPosition(rect1.intersectionWithLine(center1, center2).get(0))\r\n          .setEndPosition(rect2.intersectionWithLine(center1, center2).get(0))\r\n      }\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *      circle =new draw2d.shape.basic.Circle();\r\n *      circle.installEditPolicy(new draw2d.policy.figure.BigRectangleSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.BigRectangleSelectionFeedbackPolicy = draw2d.policy.figure.RectangleSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.BigRectangleSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.BigRectangleSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n\r\n  createResizeHandle: function (owner, type){\r\n    return new draw2d.ResizeHandle({ owner:owner, type:type, width:15, height:15 });\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.BusSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.BusSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.BusSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      let r2 = this.createResizeHandle(figure, 2) // 2 = CENTER_TOP\r\n      let r4 = this.createResizeHandle(figure, 4) // 4 = RIGHT_MIDDLE\r\n      let r6 = this.createResizeHandle(figure, 6) // 6 = CENTER_BOTTOM\r\n      let r8 = this.createResizeHandle(figure, 8) // 8 = LEFT_MIDDLE\r\n\r\n      figure.selectionHandles.add(r2, r4, r6, r8)\r\n\r\n      r2.setDraggable(figure.isResizeable())\r\n      r4.setDraggable(figure.isResizeable())\r\n      r6.setDraggable(figure.isResizeable())\r\n      r8.setDraggable(figure.isResizeable())\r\n\r\n      r2.show(canvas)\r\n      r4.show(canvas)\r\n      r6.show(canvas)\r\n      r8.show(canvas)\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback if the figure has been moved\r\n   *\r\n   * @param figure\r\n   *\r\n   * @template\r\n   */\r\n  moved: function (canvas, figure) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      return // silently\r\n    }\r\n    let r2 = figure.selectionHandles.find(handle => handle.type === 2)\r\n    let r4 = figure.selectionHandles.find(handle => handle.type === 4)\r\n    let r6 = figure.selectionHandles.find(handle => handle.type === 6)\r\n    let r8 = figure.selectionHandles.find(handle => handle.type === 8)\r\n\r\n    let objHeight = figure.getHeight()\r\n    let objWidth = figure.getWidth()\r\n    let xPos = figure.getX()\r\n    let yPos = figure.getY()\r\n\r\n    r2?.setPosition(xPos + (objWidth / 2) - (r2.getWidth() / 2), yPos - r2.getHeight())\r\n    r4?.setPosition(xPos + objWidth, yPos + (objHeight / 2) - (r4.getHeight() / 2))\r\n    r6?.setPosition(xPos + (objWidth / 2) - (r6.getWidth() / 2), yPos + objHeight)\r\n    r8?.setPosition(xPos - r8.getWidth(), yPos + (objHeight / 2) - (r8.getHeight() / 2))\r\n  },\r\n\r\n  createResizeHandle: function (owner, type){\r\n    return new draw2d.ResizeHandle({ owner:owner, type:type, width:10, height:10 });\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Called by the framework if the user edit the position of a figure with a drag drop operation.\r\n * Sub class like SelectionEditPolicy or RegionEditPolicy can adjust the position of the figure or the selections handles.\r\n *\r\n * @author  Andreas Herz\r\n * @extends draw2d.policy.figure.FigureEditPolicy\r\n */\r\ndraw2d.policy.figure.DragDropEditPolicy = draw2d.policy.figure.FigureEditPolicy.extend(\r\n  /** @lends draw2d.policy.figure.DragDropEditPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.figure.DragDropEditPolicy\",\r\n\r\n    /**\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super(attr, setter, getter)\r\n      this.moveCallback = (emitter, event) => {\r\n        this.moved(emitter.getCanvas(), emitter)\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called by the host if the policy has been installed.\r\n     *\r\n     * @param {draw2d.Canvas|draw2d.Figure} host\r\n     */\r\n    onInstall: function (host) {\r\n      this._super(host)\r\n      host.on(\"move\", this.moveCallback)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the host if the policy has been uninstalled.\r\n     *\r\n     * @param {draw2d.Canvas|draw2d.Figure} host\r\n     */\r\n    onUninstall: function (host) {\r\n      this._super(host)\r\n      host.off(this.moveCallback)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the related shape has init a drag&drop\r\n     * operation\r\n     *\r\n     * The Policy can send a veto to prevent the DragDrop operation\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @returns {Boolean} return <b>false</b> to send a veto to the drag operation\r\n     */\r\n    onDragStart: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n      figure.shape.attr({cursor: \"move\"})\r\n\r\n      // this happens if you drag&drop the shape outside of the screen and\r\n      // release the mouse button outside the window. We restore the alpha\r\n      // with the next drag&drop operation\r\n      if (figure.isMoving === true) {\r\n        figure.setAlpha(figure.originalAlpha)\r\n      }\r\n\r\n      figure.originalAlpha = figure.getAlpha()\r\n      figure.isMoving = false\r\n\r\n      // return value since 6.1.0\r\n      return true\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag a figure.\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @template\r\n     */\r\n    onDrag: function (canvas, figure) {\r\n      // enable the alpha blending of the first real move of the object\r\n      //\r\n      if (figure.isMoving === false) {\r\n        figure.isMoving = true\r\n        figure.setAlpha(figure.originalAlpha * 0.4)\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the drag drop operation ends.\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     * @template\r\n     */\r\n    onDragEnd: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n      figure.shape.attr({cursor: \"default\"})\r\n      figure.isMoving = false\r\n      figure.setAlpha(figure.originalAlpha)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Adjust the coordinates to the rectangle/region of this constraint.\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {Number|draw2d.geo.Point} x\r\n     * @param {Number} [y]\r\n     * @returns {draw2d.geo.Point} the constraint position of the figure\r\n     *\r\n     * @template\r\n     */\r\n    adjustPosition: function (figure, x, y) {\r\n      // do nothing per default implementation\r\n      if (x instanceof draw2d.geo.Point) {\r\n        return x\r\n      }\r\n\r\n      return new draw2d.geo.Point(x, y)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * ensure that the dimension didn't goes outside the given restrictions\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {Number} w\r\n     * @param {number} h\r\n     * @returns {draw2d.geo.Rectangle} the constraint position of the figure\r\n     */\r\n    adjustDimension: function (figure, w, h) {\r\n      return new draw2d.geo.Rectangle(0, 0, w, h)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Callback if the figure has moved\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     *\r\n     * @template\r\n     */\r\n    moved: function (canvas, figure) {\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Called by the framework if the user edit the position of a figure with a drag drop operation.\r\n * Sub class like SelectionEditPolicy or RegionEditPolicy can adjust the position of the figure\r\n * or the selections handles.\r\n *\r\n * @author  Andreas Herz\r\n * @extends draw2d.policy.EditPolicy\r\n * @since 4.4.0\r\n */\r\ndraw2d.policy.figure.FigureEditPolicy = draw2d.policy.EditPolicy.extend(\r\n  /** @lends draw2d.policy.figure.FigureEditPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.figure.FigureEditPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called if the user press the right mouse on the figure.<br>\r\n   * You can either override the \"onContextMenu\" method of the figure or install an editor policy and override this method.\r\n   * Booth is valid and possible.\r\n   *\r\n   * @param {draw2d.Figure|draw2d.shape.basic.Line} figure the figure below the mouse\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   * @since 4.4.0\r\n   */\r\n  onRightMouseDown: function (figure, x, y, shiftKey, ctrlKey) {\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *      circle =new draw2d.shape.basic.Circle();\r\n *      circle.installEditPolicy(new draw2d.policy.figure.GlowSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label(\"Click on the circle to see the selection feedback\"),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.GlowSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.GlowSelectionFeedbackPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.figure.GlowSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    figure.setGlow(true)\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Figure} figure the unselected figure\r\n   */\r\n  onUnselect: function (canvas, figure) {\r\n    this._super(canvas, figure)\r\n    figure.setGlow(false)\r\n  }\r\n\r\n})\r\n","\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.BusSelectionFeedbackPolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.figure.HBusSelectionFeedbackPolicy = draw2d.policy.figure.BusSelectionFeedbackPolicy.extend(\r\n    /** @lends draw2d.policy.figure.HBusSelectionFeedbackPolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.figure.HBusSelectionFeedbackPolicy\",\r\n    /**\r\n     * Creates a new Router object\r\n     */\r\n    init: function( attr, setter, getter)\r\n    {\r\n        this._super( attr, setter, getter);\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Callback if the figure has been moved\r\n     *\r\n     * @param figure\r\n     *\r\n     * @template\r\n     */\r\n    moved: function(canvas, figure){\r\n        if(figure.selectionHandles.isEmpty()){\r\n            return; // silently\r\n        }\r\n        var r4= figure.selectionHandles.find(function(handle){return handle.type===4});\r\n        var r8= figure.selectionHandles.find(function(handle){return handle.type===8});\r\n\r\n        r4.setDimension(r4.getWidth(), figure.getHeight());\r\n        r8.setDimension(r4.getWidth(), figure.getHeight());\r\n\r\n        this._super(canvas,figure);\r\n     }\r\n\r\n\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * An EditPolicy for use with Figures. With this edit policy you can move the shape only in a horizontal manner.\r\n *\r\n *\r\n * @example\r\n *      // add some demo figure to the canvas\r\n *      var circle =new draw2d.shape.basic.Circle({diameter:50, x:10, y:30});\r\n *      canvas.add(circle);\r\n *\r\n *      // add the edit policy to the shape. At this point you can move the shape only\r\n *      // horizontal\r\n *      circle.installEditPolicy(new draw2d.policy.figure.HorizontalEditPolicy());\r\n *\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.figure.HorizontalEditPolicy = draw2d.policy.figure.DragDropEditPolicy.extend(\r\n  /** @lends draw2d.policy.figure.HorizontalEditPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.figure.HorizontalEditPolicy\",\r\n\r\n    /**\r\n     * Creates a new constraint object\r\n     *\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super(attr, setter, getter)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * It is only possible to drag&drop the element in a horizontal line\r\n     *\r\n     * @param figure\r\n     * @param {Number|draw2d.geo.Point} x\r\n     * @param {number} [y]\r\n     *\r\n     * @returns {draw2d.geo.Point} the constraint position of the figure\r\n     */\r\n    adjustPosition: function (figure, x, y) {\r\n      return new draw2d.geo.Point(x, figure.getY())\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A SelectionFeedbackPolicy with resize handles (rectangles) on each side and corner of the shape\r\n *\r\n *\r\n * @example\r\n *\r\n *      circle =new draw2d.shape.basic.Circle({diameter:50});\r\n *      circle.installEditPolicy(new draw2d.policy.RectangleSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.RaftSelectionFeedbackPolicy = draw2d.policy.figure.RectangleSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.RaftSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.RaftSelectionFeedbackPolicy\",\r\n\r\n\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  createResizeHandle: function (owner, type){\r\n    return new draw2d.shape.composite.RaftResizeHandle({ owner:owner, type:type, width:10, height:10 });\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A SelectionFeedbackPolicy with resize handles (rectangles) on each side and corner of the shape\r\n *\r\n *\r\n * @example\r\n *\r\n *      circle =new draw2d.shape.basic.Circle({diameter:50});\r\n *      circle.installEditPolicy(new draw2d.policy.RectangleSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.RectangleSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.RectangleSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.RectangleSelectionFeedbackPolicy\",\r\n  /**\r\n   * Creates a selection feedback for a shape.\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      // Add a dotted line rectangle to the figure. Override the show/hide method of the standard\r\n      // figure to avoid adding these element to the hit test of the canvas. In this case the element\r\n      // is just visible but not part of the model or responsible for any drag/drop operation\r\n      // #2C70FF #2096fc\r\n      let box = new draw2d.shape.basic.Rectangle({bgColor: null, dashArray: \"- \", color: \"#2C70FF\", stroke: 0.5})\r\n      box.hide = function () {\r\n        // IMPORTANT\r\n        // don't add/remove this rectangle to the canvas resizeHandles. This rect isn't responsible for any hitTest or\r\n        // dragDrop operation\r\n        //canvas.resizeHandles.remove(box);\r\n        box.setCanvas(null)\r\n      }\r\n      box.show = function (canvas) {\r\n        box.setCanvas(canvas)\r\n        // IMPORTANT\r\n        // don't add/remove this rectangle to the canvas resizeHandles. This rect isn't responsible for any hitTest or\r\n        // dragDrop operation\r\n        //canvas.resizeHandles.remove(box);\r\n        //canvas.resizeHandles.add(box);\r\n        box.toFront(figure)\r\n      }\r\n\r\n      // create standard Resize handles for the figure\r\n      //\r\n      let r1 = this.createResizeHandle(figure, 1) // 1 = LEFT TOP\r\n      let r3 = this.createResizeHandle(figure, 3) // 3 = RIGHT_TOP\r\n      let r5 = this.createResizeHandle(figure, 5) // 5 = RIGHT_BOTTOM\r\n      let r7 = this.createResizeHandle(figure, 7) // 7 = LEFT_BOTTOM\r\n      figure.selectionHandles.add(r1, r3, r5, r7)\r\n      r1.show(canvas)\r\n      r3.show(canvas)\r\n      r5.show(canvas)\r\n      r7.show(canvas)\r\n\r\n\r\n      // change the look&feel of the corner resizehandles if the\r\n      // figure isn't resizeable\r\n      //\r\n      if (figure.isResizeable() === false) {\r\n        let attr = {bgColor: null, draggable:false}\r\n        r1.attr(attr)\r\n        r3.attr(attr)\r\n        r5.attr(attr)\r\n        r7.attr(attr)\r\n        r1.setDraggable(false)\r\n        r3.setDraggable(false)\r\n        r5.setDraggable(false)\r\n        r7.setDraggable(false)\r\n      }\r\n\r\n      // show only the additional resizehandles if the figure is resizeable and didn't care about\r\n      // the aspect ration\r\n      //\r\n      if ((!figure.getKeepAspectRatio()) && figure.isResizeable()) {\r\n        let r2 = this.createResizeHandle(figure, 2) // 2 = CENTER_TOP\r\n        let r4 = this.createResizeHandle(figure, 4) // 4 = RIGHT_MIDDLE\r\n        let r6 = this.createResizeHandle(figure, 6) // 6 = CENTER_BOTTOM\r\n        let r8 = this.createResizeHandle(figure, 8) // 8 = LEFT_MIDDLE\r\n        figure.selectionHandles.add(r2, r4, r6, r8)\r\n        r2.show(canvas)\r\n        r4.show(canvas)\r\n        r6.show(canvas)\r\n        r8.show(canvas)\r\n      }\r\n\r\n      // add the reference of the \"ant box\" to the figure as well. But wee add them\r\n      // to the end of the array because inherit classes expect the resizehandles\r\n      // on index 0-7.\r\n      //\r\n      figure.selectionHandles.add(box)\r\n\r\n      // call the box.show() at last to ensure that the resize handles are above the\r\n      // rectangle. The rectangle did a toFront(parentShape);\r\n      box.show(canvas)\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Callback if the figure has been moved. In this case we must update the position of the\r\n   * resize handles and the \"ant\" box.\r\n   *\r\n   * @param figure\r\n   *\r\n   * @template\r\n   */\r\n  moved: function (canvas, figure) {\r\n\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      return // silently\r\n    }\r\n\r\n    let margin = 3 * canvas.getZoom()\r\n    let objHeight = figure.getHeight()\r\n    let objWidth = figure.getWidth()\r\n    let xPos = figure.getAbsoluteX()\r\n    let yPos = figure.getAbsoluteY()\r\n\r\n    let r1 = figure.selectionHandles.find(handle => handle.type === 1)\r\n    let r3 = figure.selectionHandles.find(handle => handle.type === 3)\r\n    let r5 = figure.selectionHandles.find(handle => handle.type === 5)\r\n    let r7 = figure.selectionHandles.find(handle => handle.type === 7)\r\n\r\n    r1.setPosition(xPos-r1.getWidth(),yPos-r1.getHeight());\r\n    r3.setPosition(xPos+objWidth,yPos-r3.getHeight());\r\n    r5.setPosition(xPos+objWidth,yPos+objHeight);\r\n    r7.setPosition(xPos-r7.getWidth(),yPos+objHeight);\r\n\r\n    if (!figure.getKeepAspectRatio() && figure.isResizeable()) {\r\n      let r2 = figure.selectionHandles.find(handle => handle.type === 2)\r\n      let r4 = figure.selectionHandles.find(handle => handle.type === 4)\r\n      let r6 = figure.selectionHandles.find(handle => handle.type === 6)\r\n      let r8 = figure.selectionHandles.find(handle => handle.type === 8)\r\n\r\n      r2.setPosition(xPos+(objWidth/2)-(r2.getWidth()/2),yPos-r2.getHeight());\r\n      r4.setPosition(xPos+objWidth,yPos+(objHeight/2)-(r4.getHeight()/2));\r\n      r6.setPosition(xPos+(objWidth/2)-(r6.getWidth()/2),yPos+objHeight);\r\n      r8.setPosition(xPos-r8.getWidth(),yPos+(objHeight/2)-(r8.getHeight()/2));\r\n    }\r\n    let box = figure.selectionHandles.last()\r\n    box.attr({\r\n      x:xPos-margin,\r\n      y:yPos-margin,\r\n      width:objWidth + margin*2,\r\n      height: objHeight + margin*2,\r\n      stroke:canvas.getZoom()\r\n    })\r\n\r\n    box.setRotationAngle(figure.getRotationAngle())\r\n  },\r\n\r\n  createResizeHandle: function (owner, type){\r\n    return new draw2d.ResizeHandle({ owner:owner, type:type, width:10, height:10 });\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * An EditPolicy for use with Figures. The constraint for RegionEditPolicy is a Rectangle. It is\r\n * not possible to move the related figure outside this constrained area.\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.figure.RegionEditPolicy = draw2d.policy.figure.DragDropEditPolicy.extend(\r\n  /** @lends draw2d.policy.figure.RegionEditPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.figure.RegionEditPolicy\",\r\n\r\n    /**\r\n     * Creates a new constraint object\r\n     *\r\n     * @param {Number|draw2d.geo.Rectangle} x x coordinate or a rectangle as constraint for the assigned figure.\r\n     * @param {Number} y\r\n     * @param {Number} w\r\n     * @param {Number} h\r\n     */\r\n    init: function (x, y, w, h) {\r\n      this._super()\r\n      if (x instanceof draw2d.geo.Rectangle) {\r\n        this.constRect = x\r\n      } else if (typeof h === \"number\") {\r\n        this.constRect = new draw2d.geo.Rectangle(x, y, w, h)\r\n      } else {\r\n        throw \"Invalid parameter. RegionEditPolicy need a rectangle as parameter in the constructor\"\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Update the constraint bounding box for the policy.\r\n     *\r\n     * @param {draw2d.geo.Rectangle} boundingBox the constraint rectangle\r\n     * @since 4.8.2\r\n     * @returns {this}\r\n     */\r\n    setBoundingBox: function (boundingBox) {\r\n      this.constRect = boundingBox\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Returns the constraint bounding box for the policy.\r\n     *\r\n     * @returns {draw2d.geo.Rectangle}\r\n     */\r\n    getBoundingBox: function () {\r\n      return this.constRect\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Adjust the coordinates to the rectangle/region of this constraint.\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {Number|draw2d.geo.Point} x\r\n     * @param {Number} [y]\r\n     *\r\n     * @returns {draw2d.geo.Point} the constraint position of the figure\r\n     */\r\n    adjustPosition: function (figure, x, y) {\r\n      let r = null\r\n      if (x instanceof draw2d.geo.Point) {\r\n        r = new draw2d.geo.Rectangle(x.x, x.y, figure.getWidth(), figure.getHeight())\r\n      } else {\r\n        r = new draw2d.geo.Rectangle(x, y, figure.getWidth(), figure.getHeight())\r\n      }\r\n      r = this.constRect.moveInside(r)\r\n      return r.getTopLeft()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Adjust the dimension of the rectangle to fit into the region of the policy\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {Number} w\r\n     * @param {Number} h\r\n     * @returns {draw2d.geo.Rectangle} the constraint position of the figure\r\n     */\r\n    adjustDimension: function (figure, w, h) {\r\n      let diffW = (figure.getAbsoluteX() + w) - this.constRect.getRight()\r\n      let diffH = (figure.getAbsoluteY() + h) - this.constRect.getBottom()\r\n\r\n      if (diffW > 0) {\r\n        w = w - diffW\r\n      }\r\n      if (diffH > 0) {\r\n        h = h - diffH\r\n      }\r\n\r\n      return new draw2d.geo.Rectangle(0, 0, w, h)\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Selection feedback policy without \"marching ant lines\" or any other rectangle highlight. Just\r\n * some resize handles at each corner of the shape.\r\n *\r\n *\r\n * @example\r\n *      circle =new draw2d.shape.basic.Circle();\r\n *      circle.installEditPolicy(new draw2d.policy.ResizeSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @since 4.0.0\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n *\r\n */\r\ndraw2d.policy.figure.ResizeSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.ResizeSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.ResizeSelectionFeedbackPolicy\",\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the selected figure\r\n   * @param {Boolean} [isPrimarySelection]\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      // create standard Resize handles for the figure\r\n      //\r\n      var r1 = draw2d.Configuration.factory.createResizeHandle(figure, 1) // 1 = LEFT TOP\r\n      var r3 = draw2d.Configuration.factory.createResizeHandle(figure, 3) // 3 = RIGHT_TOP\r\n      var r5 = draw2d.Configuration.factory.createResizeHandle(figure, 5) // 5 = RIGHT_BOTTOM\r\n      var r7 = draw2d.Configuration.factory.createResizeHandle(figure, 7) // 7 = LEFT_BOTTOM\r\n      figure.selectionHandles.add(r1, r3, r5, r7)\r\n      r1.show(canvas)\r\n      r3.show(canvas)\r\n      r5.show(canvas)\r\n      r7.show(canvas)\r\n\r\n      // The corner ResizeHandles are only draggable fi the figure is\r\n      // resizeable. But the Resize handles are visible\r\n      //\r\n\r\n      // change the look&feel of the corner resizehandles if the\r\n      // figure isn't resizeable\r\n      //\r\n      if (figure.isResizeable() === false) {\r\n        r1.setBackgroundColor(null)\r\n        r3.setBackgroundColor(null)\r\n        r5.setBackgroundColor(null)\r\n        r7.setBackgroundColor(null)\r\n        r1.setDraggable(false)\r\n        r3.setDraggable(false)\r\n        r5.setDraggable(false)\r\n        r7.setDraggable(false)\r\n      }\r\n\r\n      // show only the additional resizehandles if the figure is resizeable\r\n      //\r\n      if ((!figure.getKeepAspectRatio()) && figure.isResizeable()) {\r\n        var r2 = draw2d.Configuration.factory.createResizeHandle(figure, 2) // 2 = CENTER_TOP\r\n        var r4 = draw2d.Configuration.factory.createResizeHandle(figure, 4) // 4 = RIGHT_MIDDLE\r\n        var r6 = draw2d.Configuration.factory.createResizeHandle(figure, 6) // 6 = CENTER_BOTTOM\r\n        var r8 = draw2d.Configuration.factory.createResizeHandle(figure, 8) // 8 = LEFT_MIDDLE\r\n        figure.selectionHandles.add(r2, r4, r6, r8)\r\n        r2.show(canvas)\r\n        r4.show(canvas)\r\n        r6.show(canvas)\r\n        r8.show(canvas)\r\n      }\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback if the figure has been moved. In this case we must update the position of the\r\n   * resize handles.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Figure} figure the moved figure\r\n   *\r\n   */\r\n  moved: function (canvas, figure) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      return // silently\r\n    }\r\n\r\n    var objHeight = figure.getHeight()\r\n    var objWidth = figure.getWidth()\r\n    var xPos = figure.getX()\r\n    var yPos = figure.getY()\r\n\r\n    var r1 = figure.selectionHandles.find(function (handle) {\r\n      return handle.type === 1\r\n    })\r\n    var r3 = figure.selectionHandles.find(function (handle) {\r\n      return handle.type === 3\r\n    })\r\n    var r5 = figure.selectionHandles.find(function (handle) {\r\n      return handle.type === 5\r\n    })\r\n    var r7 = figure.selectionHandles.find(function (handle) {\r\n      return handle.type === 7\r\n    })\r\n    r1.setPosition(xPos - r1.getWidth(), yPos - r1.getHeight())\r\n    r3.setPosition(xPos + objWidth, yPos - r3.getHeight())\r\n    r5.setPosition(xPos + objWidth, yPos + objHeight)\r\n    r7.setPosition(xPos - r7.getWidth(), yPos + objHeight)\r\n\r\n    if (!figure.getKeepAspectRatio()) {\r\n      var r2 = figure.selectionHandles.find(function (handle) {\r\n        return handle.type === 2\r\n      })\r\n      var r4 = figure.selectionHandles.find(function (handle) {\r\n        return handle.type === 4\r\n      })\r\n      var r6 = figure.selectionHandles.find(function (handle) {\r\n        return handle.type === 6\r\n      })\r\n      var r8 = figure.selectionHandles.find(function (handle) {\r\n        return handle.type === 8\r\n      })\r\n\r\n      r2.setPosition(xPos + (objWidth / 2) - (r2.getWidth() / 2), yPos - r2.getHeight())\r\n      r4.setPosition(xPos + objWidth, yPos + (objHeight / 2) - (r4.getHeight() / 2))\r\n      r6.setPosition(xPos + (objWidth / 2) - (r6.getWidth() / 2), yPos + objHeight)\r\n      r8.setPosition(xPos - r8.getWidth(), yPos + (objHeight / 2) - (r8.getHeight() / 2))\r\n    }\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *      circle =new draw2d.shape.basic.Circle();\r\n *      circle.installEditPolicy(new draw2d.policy.RoundRectangleSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.RectangleSelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.RoundRectangleSelectionFeedbackPolicy = draw2d.policy.figure.RectangleSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.RoundRectangleSelectionFeedbackPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.figure.RoundRectangleSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  createResizeHandle: function (owner, type) {\r\n    return new draw2d.ResizeHandle({owner: owner, type: type, width: 12, height: 12, radius: 4})\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A {@link  draw2d.policy.SelectionFeedbackPolicy} that is sensitive to the canvas selection. Subclasses will typically\r\n * decorate the {@link draw2d.Figure figure} with things like selection handles and/or focus feedback.\r\n * <br>\r\n * If you want to change the handle visibility for a figure, then you should use SelectionFeedbackPolicy to do that.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.figure.SelectionFeedbackPolicy = draw2d.policy.figure.SelectionPolicy.extend(\r\n  /** @lends draw2d.policy.figure.SelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.SelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Figure} figure the unselected figure\r\n   */\r\n  onUnselect: function (canvas, figure) {\r\n    this._super(canvas, figure)\r\n\r\n    figure.selectionHandles.each( (i, e) => e.hide())\r\n    figure.selectionHandles = new draw2d.util.ArrayList()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been installed.\r\n   *\r\n   * @param {draw2d.Figure} figure\r\n   */\r\n  onInstall: function (figure) {\r\n    this._super(figure)\r\n\r\n    let canvas = figure.getCanvas()\r\n    if (canvas !== null) {\r\n      if (canvas.getSelection().contains(figure)) {\r\n        this.onSelect(canvas, figure, true)\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called by the host if the policy has been uninstalled.\r\n   *\r\n   * @param {draw2d.Figure} figure\r\n   */\r\n  onUninstall: function (figure) {\r\n    this._super(figure)\r\n\r\n    figure.selectionHandles.each( (i, e) => e.hide())\r\n    figure.selectionHandles = new draw2d.util.ArrayList()\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A {@link  draw2d.policy.SelectionFeedbackPolicy} that is sensitive to the canvas selection. Subclasses will typically\r\n * decorate the {@link draw2d.Figure figure} with things like selection handles and/or focus feedback.\r\n * <br>\r\n * If you want to change the handle visibility for a figure, then you should use SelectionFeedbackPolicy to do that.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.figure.SelectionPolicy = draw2d.policy.figure.DragDropEditPolicy.extend(\r\n  /** @lends draw2d.policy.figure.SelectionPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.figure.SelectionPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @template\r\n   * @param figure\r\n   * @param isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {draw2d.Figure} figure the unselected figure\r\n   */\r\n  onUnselect: function (canvas, figure) {\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Add only very small resize handles to the figure.\r\n *\r\n *\r\n *\r\n * @example\r\n *      circle =new draw2d.shape.basic.Circle();\r\n *      circle.installEditPolicy(new draw2d.policy.SlimSelectionFeedbackPolicy());\r\n *      canvas.add(circle,90,50);\r\n *\r\n *      canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.RectangleSelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.SlimSelectionFeedbackPolicy = draw2d.policy.figure.RectangleSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.SlimSelectionFeedbackPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.figure.SlimSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  createResizeHandle: function (owner, type) {\r\n    return new draw2d.ResizeHandle({owner: owner, type: type, width: 6, height: 6, radius: 0})\r\n  }\r\n})\r\n","\r\n/**\r\n * @class\r\n *\r\n * Selection feedback policy for vertical bus figures.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.BusSelectionFeedbackPolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.figure.VBusSelectionFeedbackPolicy = draw2d.policy.figure.BusSelectionFeedbackPolicy.extend(\r\n    /** @lends draw2d.policy.figure.VBusSelectionFeedbackPolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.figure.VBusSelectionFeedbackPolicy\",\r\n    /**\r\n     * Creates a new Router object\r\n     */\r\n    init: function( attr, setter, getter)\r\n    {\r\n        this._super( attr, setter, getter);\r\n    },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      let r2 = this.createResizeHandle(figure, 2) // 2 = CENTER_TOP\r\n      let r6 = this.createResizeHandle(figure, 6) // 6 = CENTER_BOTTOM\r\n\r\n      figure.selectionHandles.add(r2, r6)\r\n\r\n      r2.setDraggable(figure.isResizeable())\r\n      r6.setDraggable(figure.isResizeable())\r\n\r\n      r2.show(canvas)\r\n      r6.show(canvas)\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n    /**\r\n     *\r\n     * Callback if the figure has been moved\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     *\r\n     **/\r\n    moved: function(canvas,figure)\r\n    {\r\n        if(figure.selectionHandles.isEmpty()){\r\n            return; // silently\r\n        }\r\n\r\n        var r2= figure.selectionHandles.find( handle => handle.type===2);\r\n        var r6= figure.selectionHandles.find( handle => handle.type===6);\r\n\r\n        var objWidth = figure.getWidth();\r\n        // adjust the resize handles on the left/right to the new dimension of the shape\r\n        //\r\n        r2.setDimension(objWidth, r2.getHeight());\r\n        r6.setDimension(objWidth, r6.getHeight());\r\n\r\n        this._super(canvas,figure);\r\n     }\r\n\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Called by the framework if the user edit the position of a figure with a drag drop operation.\r\n * Sub class like SelectionEditPolicy or RegionEditPolicy cam adjust th e position of the figure or the selections handles.\r\n *\r\n * @author  Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.VertexSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.VertexSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.VertexSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Connection} connection the selected figure\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, connection, isPrimarySelection) {\r\n//    \tthis._super(canvas, connection, isPrimarySelection);\r\n\r\n    let points = connection.getVertices()\r\n    for (let i = 0; i < points.getSize(); i++) {\r\n      let handle = new draw2d.shape.basic.VertexResizeHandle(connection, i)\r\n      connection.selectionHandles.add(handle)\r\n      handle.setDraggable(connection.isResizeable())\r\n      handle.show(canvas)\r\n\r\n      if (i !== 0) {\r\n        let handle = new draw2d.shape.basic.GhostVertexResizeHandle(connection, i - 1)\r\n        connection.selectionHandles.add(handle)\r\n        handle.setDraggable(connection.isResizeable())\r\n        handle.show(canvas)\r\n      }\r\n    }\r\n\r\n    this.moved(canvas, connection)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Callback method if the figure has been moved.\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   */\r\n  moved: function (canvas, figure) {\r\n    figure.selectionHandles.each( (i, e) => e.relocate())\r\n  }\r\n\r\n\r\n})\r\n","\r\n/**\r\n * @class\r\n *\r\n * An EditPolicy for use with Figures. With this edit policy you can move the shape only in a vertical manner.\r\n *\r\n *\r\n * @example\r\n *      // add some demo figure to the canvas\r\n *      var circle =new draw2d.shape.basic.Circle({diameter:50, x:10, y:30});\r\n *      canvas.add(circle);\r\n *\r\n *      // add the edit policy to the shape. At this point you can move the shape only\r\n *      // horizontal\r\n *      circle.installEditPolicy(new draw2d.policy.figure.VerticalEditPolicy());\r\n *\r\n *\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.policy.figure.VerticalEditPolicy = draw2d.policy.figure.DragDropEditPolicy.extend(\r\n    /** @lends draw2d.policy.figure.VerticalEditPolicy.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.policy.figure.VerticalEditPolicy\",\r\n\r\n    /**\r\n     * Creates a new constraint object\r\n     */\r\n    init: function( attr, setter, getter)\r\n    {\r\n        this._super( attr, setter, getter);\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * It is only possible to drag&drop the element in a vertical line\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @param {Number|draw2d.geo.Point} x\r\n     * @param {number} [y]\r\n     * @returns {draw2d.geo.Point} the constraint position of the figure\r\n     */\r\n    adjustPosition: function(figure, x, y)\r\n    {\r\n        return new draw2d.geo.Point(figure.getX(),y);\r\n    }\r\n\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * This selection shows only selection handles for the width. It is only possible to change the width\r\n * of an shaped. The height stays always the same or is recalculated by the figure itself.\r\n *\r\n * @example\r\n *      // add some demo figure to the canvas\r\n *      //\r\n *      let shape =new draw2d.shape.basic.Rectangle({width:50, height:100, x:10, y:30});\r\n *      canvas.add(shape);\r\n *\r\n *      // At this point you can only change the width of the shape\r\n *      //\r\n *      shape.installEditPolicy(new draw2d.policy.figure.WidthSelectionFeedbackPolicy());\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.figure.WidthSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.figure.BusSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.figure.BusSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {draw2d.Canvas} canvas the host of the diagram\r\n   * @param {draw2d.Figure} figure the figure to select\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      let r4 = new draw2d.ResizeHandle({owner: figure, type: 4}) // 4 = RIGHT_MIDDLE\r\n      let r8 = new draw2d.ResizeHandle({owner: figure, type: 8}) // 8 = LEFT_MIDDLE\r\n\r\n      r4.installEditPolicy(new draw2d.policy.figure.HorizontalEditPolicy())\r\n      r8.installEditPolicy(new draw2d.policy.figure.HorizontalEditPolicy())\r\n      figure.selectionHandles.add(r4, r8)\r\n\r\n      r4.setDraggable(figure.isResizeable())\r\n      r8.setDraggable(figure.isResizeable())\r\n\r\n      r4.show(canvas)\r\n      r8.show(canvas)\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Callback if the figure has been moved\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   *\r\n   * @template\r\n   */\r\n  moved: function (canvas, figure) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      return // silently\r\n    }\r\n    let r4 = figure.selectionHandles.find(handle => handle.type === 4)\r\n    let r8 = figure.selectionHandles.find(handle => handle.type === 8)\r\n\r\n    let objWidth = figure.getWidth()\r\n\r\n    let xPos = figure.getX()\r\n    let yPos = figure.getY()\r\n    r4.setDimension(r4.getWidth(), figure.getHeight())\r\n    r8.setDimension(r8.getWidth(), figure.getHeight())\r\n    r4.setPosition(xPos + objWidth, yPos)\r\n    r8.setPosition(xPos - r8.getWidth(), yPos)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.SelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.line.LineSelectionFeedbackPolicy = draw2d.policy.figure.SelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.line.LineSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.line.LineSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new selection feedback policy for a line or connection\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called by the framework of the Policy should show a resize handle for the given shape\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   * @param {Boolean} [isPrimarySelection]\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    if (figure.selectionHandles.isEmpty()) {\r\n      figure.selectionHandles.add(new draw2d.shape.basic.LineStartResizeHandle(figure))\r\n      figure.selectionHandles.add(new draw2d.shape.basic.LineEndResizeHandle(figure))\r\n\r\n      figure.selectionHandles.each( (i, e) => {\r\n        e.setDraggable(figure.isResizeable())\r\n        e.show(canvas)\r\n      })\r\n    }\r\n    this.moved(canvas, figure)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Callback method if the figure has been moved.\r\n   *\r\n   * @template\r\n   */\r\n  moved: function (canvas, figure) {\r\n    figure.selectionHandles.each( (i, e) => e.relocate())\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Feedback and edit policy for the InteractiveManhattanRouter.\r\n *\r\n * @author  Andreas Herz\r\n * @extends draw2d.policy.line.LineSelectionFeedbackPolicy\r\n */\r\n// do not delete them\r\nimport plugin from \"lib/jquery.contextmenu\"\r\nimport css from 'css/contextmenu.css'\r\n\r\ndraw2d.policy.line.OrthogonalSelectionFeedbackPolicy = draw2d.policy.line.LineSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.line.OrthogonalSelectionFeedbackPolicy.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.policy.line.OrthogonalSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    // The ResizeHandle for the Policy. This is inline to avoid that a user want to use them without\r\n    // the right installed policy.\r\n    //\r\n    this.ResizeHandle = draw2d.ResizeHandle.extend(\r\n      /** @lends draw2d.policy.line.OrthogonalSelectionFeedbackPolicy.ResizeHandle.prototype */\r\n      {\r\n      \r\n      NAME: \"draw2d.policy.line.OrthogonalSelectionFeedbackPolicy.ResizeHandle\",\r\n\r\n      init: function (owner, index) {\r\n        this._super({owner})\r\n        this.index = index\r\n      },\r\n\r\n\r\n      /**\r\n       * \r\n       * Called if a drag&drop operation starts.<br>\r\n       * @param {Number} x the x-coordinate of the mouse up event\r\n       * @param {Number} y the y-coordinate of the mouse up event\r\n       * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n       * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n       *\r\n       * @private\r\n       **/\r\n      onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n        this._super(x, y, shiftKey, ctrlKey)\r\n        this.command = this.getCanvas().getPrimarySelection().createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE_VERTICES))\r\n\r\n        // Vertex is a reference and not a copy of the point\r\n        this.vertex = this.owner.getVertex(this.index).clone()\r\n      },\r\n\r\n      /**\r\n       * \r\n       * Called from the framework during a drag&drop operation of the ResizeHandles\r\n       *\r\n       * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n       * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n       * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n       * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n       *\r\n       * @returns {Boolean}\r\n       **/\r\n      onDrag: function (dx, dy, dx2, dy2) {\r\n        if (this.command == null) {\r\n          return false\r\n        }\r\n\r\n        let MINDIST = this.owner.getRouter().MINDIST || 10\r\n\r\n        let fromDir = this.owner.getSource().getConnectionDirection(this.owner.getTarget())\r\n        let toDir = this.owner.getTarget().getConnectionDirection(this.owner.getSource())\r\n\r\n        this.vertex.translate(dx2, dy2)\r\n\r\n        let vertices = this.owner.getVertices()\r\n        let count = vertices.getSize()\r\n        //shortcut for math operations\r\n        let max = Math.max\r\n        let min = Math.min\r\n\r\n\r\n        // Keep in mind: \"p1\" is always the dragged handle in the coding below\r\n        //               marked with an '*' in the diagram\r\n        //\r\n\r\n        // FIRST handle of the connection\r\n        //\r\n        if (this.index === 1) {\r\n          let p0 = vertices.get(this.index - 1) // first vertex of the connection\r\n          let p1 = vertices.get(this.index) // dragged vertex\r\n          let p2 = vertices.get(this.index + 1) // additional neighbor\r\n\r\n          // vertex alignment to handle:\r\n          //\r\n          //      p0 +-----* p1       p1 *------+ p0\r\n          //               |             |\r\n          //               |             |\r\n          //               + p2       p2 +\r\n          if ((p1.x === p2.x) && (p0.y === p1.y)) {\r\n            switch (fromDir) {\r\n              case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n                // p0 is on the left of p1\r\n                //\r\n                this.owner.setVertex(1, max(p0.x + MINDIST, this.vertex.x), p1.y) // p1\r\n                this.owner.setVertex(2, max(p0.x + MINDIST, this.vertex.x), p2.y) // p2\r\n                break\r\n              // p0 is on the right of p2\r\n              //\r\n              case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n                this.owner.setVertex(1, min(p0.x - MINDIST, this.vertex.x), p1.y) // p1\r\n                this.owner.setVertex(2, min(p0.x - MINDIST, this.vertex.x), p2.y) // p2\r\n                break\r\n            }\r\n          }\r\n\r\n          // vertices alignment to handle:\r\n          //\r\n          //      p0 +              p1 *--------+ p2\r\n          //         |                 |\r\n          //         |                 |\r\n          //      p1 *-----+ p2     p0 +\r\n          else {\r\n            switch (fromDir) {\r\n              case draw2d.geo.Rectangle.DIRECTION_UP:\r\n                // p0 is below of p1\r\n                //\r\n                this.owner.setVertex(1, p1.x, min(p0.y - MINDIST, this.vertex.y)) // p1\r\n                this.owner.setVertex(2, p2.x, min(p0.y - MINDIST, this.vertex.y)) // p2\r\n                break\r\n              // p0 is above of p2\r\n              //\r\n              case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n                this.owner.setVertex(1, p1.x, max(p0.y + MINDIST, this.vertex.y)) // p1\r\n                this.owner.setVertex(2, p2.x, max(p0.y + MINDIST, this.vertex.y)) // p2\r\n                break\r\n            }\r\n          }\r\n        }\r\n\r\n        // LAST handle: Only the left hand side sibling can be changed\r\n        //\r\n        else if (this.index === (count - 2)) {\r\n          let p2 = vertices.get(this.index - 1)  // neighbor of the dragged vertex\r\n          let p1 = vertices.get(this.index)  // dragged vertex\r\n          let p0 = vertices.get(this.index + 1)  // last vertex of the connection\r\n\r\n          // vertices with this alignment.\r\n          //\r\n          //      p2 +-----* p1                 + p0\r\n          //               |                    |\r\n          //               |                    |\r\n          //               + p0     p2 +--------* p1\r\n          if ((p0.x === p1.x) && (p2.y === p1.y)) {\r\n            switch (toDir) {\r\n              // p0 is below of p1\r\n              case draw2d.geo.Rectangle.DIRECTION_UP:\r\n                this.owner.setVertex(count - 2, p1.x, min(p0.y - MINDIST, this.vertex.y)) // p1\r\n                this.owner.setVertex(count - 3, p2.x, min(p0.y - MINDIST, this.vertex.y)) // p2\r\n                break\r\n              // p0 is above p2\r\n              case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n                this.owner.setVertex(count - 2, p1.x, max(p0.y + MINDIST, this.vertex.y)) // p1\r\n                this.owner.setVertex(count - 3, p2.x, max(p0.y + MINDIST, this.vertex.y)) // p2\r\n                break\r\n            }\r\n          }\r\n\r\n          // vertices with this alignment.\r\n          //\r\n          //      p2 +              p0 +--------* p1\r\n          //         |                          |\r\n          //         |                          |\r\n          //      p1 *-----+ p0              p2 +\r\n          else {\r\n            switch (toDir) {\r\n              case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n                // p0 is on the left of p1\r\n                //\r\n                this.owner.setVertex(count - 2, max(p0.x + MINDIST, this.vertex.x), p1.y) // p1\r\n                this.owner.setVertex(count - 3, max(p0.x + MINDIST, this.vertex.x), p2.y) // p2\r\n                break\r\n              // p0 is on the right of p2\r\n              //\r\n              case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n                this.owner.setVertex(count - 2, min(p0.x - MINDIST, this.vertex.x), p1.y) // p1\r\n                this.owner.setVertex(count - 3, min(p0.x - MINDIST, this.vertex.x), p2.y) // p2\r\n                break\r\n            }\r\n          }\r\n        }\r\n        // The resize handle is in the middle of the connection.\r\n        // -> In this case the connection MUST HAVE at least 5 vertices\r\n        //\r\n        else {\r\n          let p_m1 = vertices.get(this.index - 2)\r\n          let p0 = vertices.get(this.index - 1)\r\n          let p1 = vertices.get(this.index)   // selected DragHandle\r\n          let p2 = vertices.get(this.index + 1)\r\n          let p3 = vertices.get(this.index + 2)\r\n\r\n          // vertices alignment to handle\r\n          //\r\n          //               .              .\r\n          //               .              .\r\n          //   p1 *------->+  p0      p0  +<---------* p1\r\n          //      |        .              .          |\r\n          //      |        .              .          |\r\n          //   p2 |                                  | p2\r\n          //   ...+...                         ......+.....\r\n          //\r\n          if ((p1.x === p2.x) && (p1.y === p0.y)) {\r\n            // Exception handling if the dragged handle (p1) is near by the start of the connection\r\n            // p_m1 is the start of the connection\r\n            // p0 must be the immediate neighbor of p_m1\r\n            //\r\n            if (this.index - 2 === 0) {\r\n              switch (fromDir) {\r\n                case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n                  this.owner.setVertex(this.index - 1, p0.x, max(this.vertex.y, p_m1.y - MINDIST))          // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, max(this.vertex.y, p_m1.y - MINDIST)) // p1\r\n                  this.owner.setVertex(this.index + 1, this.vertex.x, p2.y)                         // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n                  this.owner.setVertex(this.index - 1, p0.x, min(this.vertex.y, p_m1.y + MINDIST))          // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, this.vertex.y) // p1\r\n                  this.owner.setVertex(this.index + 1, this.vertex.x, p2.y)                         // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_UP:\r\n                  this.owner.setVertex(this.index - 1, p0.x, min(this.vertex.y, p_m1.y - MINDIST))          // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, min(this.vertex.y, p_m1.y - MINDIST)) // p1\r\n                  this.owner.setVertex(this.index + 1, this.vertex.x, p2.y)                         // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n                  this.owner.setVertex(this.index - 1, p0.x, max(this.vertex.y, p_m1.y + MINDIST))          // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, max(this.vertex.y, p_m1.y + MINDIST)) // p1\r\n                  this.owner.setVertex(this.index + 1, this.vertex.x, p2.y)                        // p2\r\n                  break\r\n              }\r\n            }\r\n            // Exception handling if the dragged handle (p1L) near by the end of the connection\r\n            // p3 is the end of the connection\r\n            //\r\n            else if ((this.index - count + 3) === 0) {\r\n              switch (toDir) {\r\n                case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n                  this.owner.setVertex(this.index - 1, p0.x, this.vertex.y)                       // p0\r\n                  this.owner.setVertex(this.index, max(this.vertex.x, p3.x + MINDIST), this.vertex.y) // p1\r\n                  this.owner.setVertex(this.index + 1, max(this.vertex.x, p3.x + MINDIST), p2.y)          // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n                  this.owner.setVertex(this.index - 1, p0.x, this.vertex.y)                       // p0\r\n                  this.owner.setVertex(this.index, min(this.vertex.x, p3.x - MINDIST), this.vertex.y) // p1\r\n                  this.owner.setVertex(this.index + 1, min(this.vertex.x, p3.x - MINDIST), p2.y)          // p2\r\n                  break\r\n              }\r\n            }\r\n            else {\r\n              this.owner.setVertex(this.index - 1, p0.x, this.vertex.y)                          // p0\r\n              this.owner.setVertex(this.index, this.vertex)                                 // p1\r\n              this.owner.setVertex(this.index + 1, this.vertex.x, p2.y)                          // p2\r\n            }\r\n          }\r\n          // vertices alignment to handle\r\n          //\r\n          //  ...+...                            ...+...\r\n          //  p0 |                        .         | p0\r\n          //     |          .             .         |\r\n          //     |          .             .         |\r\n          //  p1 *----------+ p2      p2  +---------* p1\r\n          //                .             .\r\n          //                .             .\r\n          else if ((p0.x === p1.x) && (p1.y === p2.y)) {\r\n            // p_m1 is the start of the analyzed segment\r\n            // p0 must be the immediate neighbor of p_m1\r\n            //\r\n            if (this.index - 2 === 0) {\r\n              switch (fromDir) {\r\n                case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n                  this.owner.setVertex(this.index - 1, max(this.vertex.x, p_m1.x + MINDIST), p0.y)          // p0\r\n                  this.owner.setVertex(this.index, max(this.vertex.x, p_m1.x + MINDIST), this.vertex.y) // p1\r\n                  this.owner.setVertex(this.index + 1, p2.x, this.vertex.y)                              // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n                  this.owner.setVertex(this.index - 1, min(this.vertex.x, p_m1.x - MINDIST), p0.y)          // p0\r\n                  this.owner.setVertex(this.index, min(this.vertex.x, p_m1.x - MINDIST), this.vertex.y) // p1\r\n                  this.owner.setVertex(this.index + 1, p2.x, this.vertex.y)                              // p2\r\n                  break\r\n              }\r\n            }\r\n            // p3 is the end point\r\n            //\r\n            else if ((this.index - count + 3) === 0) {\r\n              switch (toDir) {\r\n                case draw2d.geo.Rectangle.DIRECTION_UP:\r\n                  this.owner.setVertex(this.index - 1, this.vertex.x, max(this.vertex.y, p0.y))      // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, min(this.vertex.y, p3.y - MINDIST))   // p1\r\n                  this.owner.setVertex(this.index + 1, p2.x, min(this.vertex.y, p3.y - MINDIST))   // p2\r\n                  break\r\n                case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n                  this.owner.setVertex(this.index - 1, this.vertex.x, p0.y)                // p0\r\n                  this.owner.setVertex(this.index, this.vertex.x, max(this.vertex.y, p3.y + MINDIST))   // p1\r\n                  this.owner.setVertex(this.index + 1, p2.x, max(this.vertex.y, p3.y + MINDIST))   // p2\r\n                  break\r\n              }\r\n            }\r\n            // just any element in the middle of the connection\r\n            //\r\n            else {\r\n              this.owner.setVertex(this.index - 1, this.vertex.x, p0.y)                  // p0\r\n              this.owner.setVertex(this.index, this.vertex)                  // p1\r\n              this.owner.setVertex(this.index + 1, p2.x, this.vertex.y)                  // p2\r\n            }\r\n          }\r\n        }\r\n\r\n        this.relocate()\r\n\r\n        // update the command for the undo/redo stuff\r\n        //\r\n        if (this.command !== null) {\r\n          this.command.updateVertices(this.owner.getVertices().clone())\r\n        }\r\n\r\n        // note that the user has changed the routing manually.\r\n        // This skips the automatic routing.\r\n        this.owner._routingMetaData.routedByUserInteraction = true\r\n        return true\r\n      },\r\n\r\n      /**\r\n       *  Called after a drag and drop action.<br>\r\n       *        Sub classes can override this method to implement additional stuff. Don't forget to call the super implementation via <code>this._super();</code>\r\n       *\r\n       * @param {Number} x the x-coordinate of the mouse event\r\n       * @param {Number} y the y-coordinate of the mouse event\r\n       * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n       * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n       *\r\n       * @returns {Boolean}\r\n       */\r\n      onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n        let stack = this.getCanvas().getCommandStack()\r\n\r\n        stack.execute(this.command)\r\n        this.command = null\r\n        return true\r\n      },\r\n\r\n\r\n      /**\r\n       * \r\n       * Controls the location of the resize handle\r\n       *\r\n       * @template\r\n       **/\r\n      relocate: function () {\r\n\r\n        let resizeWidthHalf = this.getWidth() / 2\r\n        let resizeHeightHalf = this.getHeight() / 2\r\n\r\n        let anchor = this.owner.getVertices().get(this.index)\r\n        if (anchor)\r\n          this.setPosition(anchor.x - resizeWidthHalf, anchor.y - resizeHeightHalf)\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @template\r\n   * @param {draw2d.Connection} connection the selected figure\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, connection, isPrimarySelection) {\r\n    this._super(canvas, connection, isPrimarySelection)\r\n\r\n    let points = connection.getVertices()\r\n    let i = 1\r\n    for (; i < (points.getSize() - 1); i++) {\r\n      let handle = new this.ResizeHandle(connection, i)\r\n      connection.selectionHandles.add(handle)\r\n      handle.setDraggable(connection.isResizeable())\r\n      handle.show(canvas)\r\n    }\r\n\r\n    this.moved(canvas, connection)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * remove the segment with the given index.\r\n   * You must check if it possible to remove the segment before. The method didn'T do any consistency checks.\r\n   *\r\n   * @param conn\r\n   * @param segmentIndex\r\n   */\r\n  removeSegment: function (conn, segmentIndex) {\r\n    let PADDING = 10\r\n\r\n    let segmentCount = conn.getVertices().getSize() - 1\r\n\r\n    let fromPt = conn.getStartPoint()\r\n    let fromDir = conn.getSource().getConnectionDirection(conn.getTarget())\r\n\r\n    let toPt = conn.getEndPoint()\r\n    let toDir = conn.getTarget().getConnectionDirection(conn.getSource())\r\n\r\n    let p0 = conn.getVertex(segmentIndex - 1)\r\n    let p1 = conn.getVertex(segmentIndex)\r\n    let p2 = conn.getVertex(segmentIndex + 1)\r\n    let p3 = conn.getVertex(segmentIndex + 2)\r\n\r\n    //                                             p0 .\r\n    // Es wird ein Horizontales Segment               .\r\n    // geloescht. Es muessen somit die Punkte         .\r\n    // p0 und p3 neu gesetzt werden.               p1 +------*-----+ p2\r\n    // Ihre neue X-Koordinate ist somit in der               ^     .\r\n    // Mitte des geloeschten Segmentes                      newX   .\r\n    //                                                             . p3\r\n    //\r\n    if (p1.y === p2.y) {\r\n      let newX = (p1.x + p2.x) / 2\r\n      // Die neue X-Koordinate muss auf jeden Falls zwischen p-1 und p4 liegen\r\n      //\r\n      if (segmentIndex === 1) {\r\n        switch (fromDir) {\r\n          case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n            newX = Math.max(newX, fromPt.x + PADDING)\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n            newX = Math.min(newX, fromPt.x - PADDING)\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_UP:\r\n            newX = fromPt.x\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n            newX = fromPt.x\r\n            break\r\n        }\r\n      }\r\n\r\n      if (segmentIndex === segmentCount - 2) {\r\n        switch (fromDir) {\r\n          case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n            newX = Math.max(newX, toPt.x + PADDING)\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n            newX = Math.min(newX, toPt.x - PADDING)\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_UP:\r\n            newX = toPt.x\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n            newX = toPt.x\r\n            break\r\n        }\r\n      }\r\n\r\n      conn.setVertex(segmentIndex - 1, new draw2d.geo.Point(newX, p0.y))\r\n      conn.setVertex(segmentIndex + 2, new draw2d.geo.Point(newX, p3.y))\r\n\r\n      conn.removeVertexAt(segmentIndex)\r\n      conn.removeVertexAt(segmentIndex)\r\n      conn._routingMetaData.routedByUserInteraction = true\r\n    }\r\n\r\n    //                                                         p2       p3\r\n    // Es wird ein vertikales Segment                        +..........+\r\n    // geloescht. Es muessen somit die Punkte                |\r\n    // p0 und p3 neu gesetzt werden.                         |\r\n    // Ihre neue Y-Koordinate ist somit in der               |\r\n    // Mitte des geloeschten Segmentes              p0       | p1\r\n    //                                              +........+\r\n    //\r\n    else if (p1.x === p2.x) {\r\n      let newY = (p1.y + p2.y) / 2\r\n      // Die neue Y-Koordinate muss auf jeden Falls zwischen p-1 und p4 liegen\r\n      //\r\n      if (segmentIndex === 1) {\r\n        switch (fromDir) {\r\n          case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n          case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n            newY = fromPt.y\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_UP:\r\n          case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n            debugger // newX is newer read....why did I calculate them?!\r\n            newX = fromPt.x\r\n            break\r\n        }\r\n      }\r\n      if (segmentIndex === segmentCount - 2) {\r\n        switch (toDir) {\r\n          case draw2d.geo.Rectangle.DIRECTION_RIGHT:\r\n          case draw2d.geo.Rectangle.DIRECTION_LEFT:\r\n            newY = toPt.y\r\n            break\r\n          case draw2d.geo.Rectangle.DIRECTION_UP:\r\n          case draw2d.geo.Rectangle.DIRECTION_DOWN:\r\n            debugger // newX is newer read....why did I calculate them?!\r\n            newX = toPt.x\r\n            break\r\n        }\r\n      }\r\n\r\n      conn.setVertex(segmentIndex - 1, new draw2d.geo.Point(p0.x, newY))\r\n      conn.setVertex(segmentIndex + 2, new draw2d.geo.Point(p3.x, newY))\r\n\r\n      conn.removeVertexAt(segmentIndex)\r\n      conn.removeVertexAt(segmentIndex)\r\n      conn._routingMetaData.routedByUserInteraction = true\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * split the segment with the given index and insert a new segment.\r\n   *\r\n   * @param conn\r\n   * @param segmentIndex\r\n   */\r\n  splitSegment: function (conn, segmentIndex, x, y) {\r\n    let segmentCount = conn.getVertices().getSize() - 1\r\n    let p1 = conn.getVertex(segmentIndex)\r\n    let p2 = conn.getVertex(segmentIndex + 1)\r\n    let length = 40\r\n\r\n    // the selected segment is vertical\r\n    //\r\n    if (p1.x === p2.x) {\r\n      conn._routingMetaData.routedByUserInteraction = true\r\n      // edge case of an ManhattanRouter: One segment. This happens if the source/target on the same x - coordinate\r\n      //\r\n      if (segmentCount === 1) {\r\n        //     + p1\r\n        //     |\r\n        // np1 +-----+ np2\r\n        //           |\r\n        //           |\r\n        // np3 +-----+ np3\r\n        //     |\r\n        //     |\r\n        //     + p2\r\n        //\r\n        let newSegLength = (p1.getDistance(p2) / 4) / 2\r\n        let np1 = new draw2d.geo.Point(p1.x, y - newSegLength)\r\n        let np2 = new draw2d.geo.Point(p2.x + length, y - newSegLength)\r\n        let np3 = new draw2d.geo.Point(p2.x + length, y + newSegLength)\r\n        let np4 = new draw2d.geo.Point(p2.x, y + newSegLength)\r\n\r\n        conn.insertVertexAt(segmentIndex + 1, np1)\r\n        conn.insertVertexAt(segmentIndex + 2, np2)\r\n        conn.insertVertexAt(segmentIndex + 3, np3)\r\n        conn.insertVertexAt(segmentIndex + 4, np4)\r\n      }\r\n      else {\r\n        let np1 = new draw2d.geo.Point(0, 0)\r\n        let np2 = new draw2d.geo.Point(0, 0)\r\n        //       p2 +\r\n        //          .\r\n        // np1 +----+ np2\r\n        //     .\r\n        //     .\r\n        //     + p1\r\n        // p1 ist der Startpunkt und darf somit nicht verschoben werden\r\n        //\r\n        if (segmentIndex === 0) {\r\n          np1.y = y\r\n          np1.x = p1.x\r\n          np2.y = y\r\n          np2.x = p2.x + length\r\n          conn.setVertex(segmentIndex + 1, new draw2d.geo.Point(np2.x, p2.y))\r\n        }\r\n        // p2 ist der Schlusspunkt und darf somit nicht veaendert werden\r\n        //\r\n        else if (segmentIndex === segmentCount - 1) {\r\n          np1.y = y\r\n          np1.x = p1.x - length\r\n          np2.y = y\r\n          np2.x = p2.x\r\n          conn.setVertex(segmentIndex, new draw2d.geo.Point(np1.x, p1.y))\r\n        }\r\n        else {\r\n          np1.y = y\r\n          np1.x = p1.x - (length / 2)\r\n          np2.y = y\r\n          np2.x = p2.x + (length / 2)\r\n          conn.setVertex(segmentIndex, new draw2d.geo.Point(np1.x, p1.y))\r\n          conn.setVertex(segmentIndex + 1, new draw2d.geo.Point(np2.x, p2.y))\r\n        }\r\n\r\n        conn.insertVertexAt(segmentIndex + 1, np1)\r\n        conn.insertVertexAt(segmentIndex + 2, np2)\r\n      }\r\n    }\r\n    // the selected segment is horizontal\r\n    //\r\n    else if (p1.y == p2.y) {\r\n      conn._routingMetaData.routedByUserInteraction = true\r\n      // edge case of an ManhattanRouter: One segment. This happens if the source/target on the same y - coordinate\r\n      //\r\n      if (segmentCount === 1) {\r\n        //     np2 +---------+ np3\r\n        //         |         |\r\n        // --------+np1   np4+--------\r\n        //\r\n        let newSegLength = (p1.getDistance(p2) / 4) / 2\r\n        let np1 = new draw2d.geo.Point(x - newSegLength, p1.y)\r\n        let np2 = new draw2d.geo.Point(x - newSegLength, p1.y - length)\r\n        let np3 = new draw2d.geo.Point(x + newSegLength, p1.y - length)\r\n        let np4 = new draw2d.geo.Point(x + newSegLength, p1.y)\r\n\r\n        conn.insertVertexAt(segmentIndex + 1, np1)\r\n        conn.insertVertexAt(segmentIndex + 2, np2)\r\n        conn.insertVertexAt(segmentIndex + 3, np3)\r\n        conn.insertVertexAt(segmentIndex + 4, np4)\r\n      }\r\n      else {\r\n        //     p1        np1\r\n        //   +.........+\r\n        //             |\r\n        //             |\r\n        //             | np2       p2\r\n        //             +.........+\r\n        let np1 = new draw2d.geo.Point(0, 0)\r\n        let np2 = new draw2d.geo.Point(0, 0)\r\n\r\n        // p1 ist der Startpunkt und darf somit nicht verschoben werden\r\n        //\r\n        if (segmentIndex === 0) {\r\n          np1.x = x\r\n          np1.y = p1.y\r\n          np2.x = x\r\n          np2.y = p2.y + length\r\n          conn.setVertex(segmentIndex + 1, new draw2d.geo.Point(p2.x, np2.y))\r\n        }\r\n        // p2 ist der Schlusspunkt und darf somit nicht veaendert werden\r\n        //\r\n        else if (segmentIndex === segmentCount - 1) {\r\n          np1.x = x\r\n          np1.y = p1.y - length\r\n          np2.x = x\r\n          np2.y = p2.y\r\n          conn.setVertex(segmentIndex, new draw2d.geo.Point(p1.x, np1.y))\r\n        }\r\n        else {\r\n          np1.x = x\r\n          np1.y = p1.y - (length / 2)\r\n          np2.x = x\r\n          np2.y = p2.y + (length / 2)\r\n          conn.setVertex(segmentIndex, new draw2d.geo.Point(p1.x, np1.y))\r\n          conn.setVertex(segmentIndex + 1, new draw2d.geo.Point(p2.x, np2.y))\r\n        }\r\n        conn.insertVertexAt(segmentIndex + 1, np1)\r\n        conn.insertVertexAt(segmentIndex + 2, np2)\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called if the user press the right mouse on the figure.<br>\r\n   * You can either override the \"onContextMenu\" method of the figure or install an editor policy and override this method.\r\n   * Booth is valid and possible.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} conn the polyline below the mouse\r\n   * @param {Number} x the x-coordinate of the mouse down event\r\n   * @param {Number} y the y-coordinate of the mouse down event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   * @since 4.4.0\r\n   */\r\n  onRightMouseDown: function (conn, x, y, shiftKey, ctrlKey) {\r\n    let segment = conn.hitSegment(x, y)\r\n    let items = {\"split\": {name: draw2d.Configuration.i18n.menu.addSegment}}\r\n\r\n    if (segment === null) {\r\n      return\r\n    }\r\n\r\n    if (conn.getRouter().canRemoveSegmentAt(conn, segment.index)) {\r\n      items.remove = {name: draw2d.Configuration.i18n.menu.deleteSegment}\r\n    }\r\n\r\n    $.contextMenu({\r\n      selector: 'body',\r\n      events:\r\n        {\r\n          hide: function () {\r\n            $.contextMenu('destroy')\r\n          }\r\n        },\r\n      callback: (key, options) => {\r\n        switch (key) {\r\n          case \"remove\": {\r\n            // deep copy of the vertices of the connection for the command stack to avoid side effects\r\n            let originalVertices = conn.getVertices().clone(true)\r\n            this.removeSegment(conn, segment.index)\r\n            let newVertices = conn.getVertices().clone(true)\r\n            conn.getCanvas().getCommandStack().execute(new draw2d.command.CommandReplaceVertices(conn, originalVertices, newVertices))\r\n            }\r\n            break\r\n          case \"split\": {\r\n            // deep copy of the vertices of the connection for the command stack to avoid side effects\r\n            let originalVertices = conn.getVertices().clone(true)\r\n            this.splitSegment(conn, segment.index, x, y)\r\n            let newVertices = conn.getVertices().clone(true)\r\n            conn.getCanvas().getCommandStack().execute(new draw2d.command.CommandReplaceVertices(conn, originalVertices, newVertices))\r\n            }\r\n            break\r\n          default:\r\n            break\r\n        }\r\n\r\n      },\r\n      x: x,\r\n      y: y,\r\n      items: items\r\n    })\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Feedback and edit policy for the VertexRouter.\r\n *\r\n * @author  Andreas Herz\r\n * @extends draw2d.policy.line.LineSelectionFeedbackPolicy\r\n */\r\ndraw2d.policy.line.VertexSelectionFeedbackPolicy = draw2d.policy.line.LineSelectionFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.line.VertexSelectionFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.line.VertexSelectionFeedbackPolicy\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   *\r\n   * @param {draw2d.Canvas} canvas the related canvas\r\n   * @param {draw2d.Connection} figure the selected figure\r\n   * @param {Boolean} isPrimarySelection\r\n   */\r\n  onSelect: function (canvas, figure, isPrimarySelection) {\r\n    let startHandle = new draw2d.shape.basic.LineStartResizeHandle(figure)\r\n    let endHandle = new draw2d.shape.basic.LineEndResizeHandle(figure)\r\n    figure.selectionHandles.add(startHandle)\r\n    figure.selectionHandles.add(endHandle)\r\n\r\n    let points = figure.getVertices()\r\n    let count = points.getSize() - 1\r\n    let i = 1\r\n    for (; i < count; i++) {\r\n      figure.selectionHandles.add(new draw2d.shape.basic.VertexResizeHandle(figure, i))\r\n      figure.selectionHandles.add(new draw2d.shape.basic.GhostVertexResizeHandle(figure, i - 1))\r\n    }\r\n\r\n    figure.selectionHandles.add(new draw2d.shape.basic.GhostVertexResizeHandle(figure, i - 1))\r\n\r\n    figure.selectionHandles.each( (i, e) => {\r\n      e.setDraggable(figure.isResizeable())\r\n      e.show(canvas)\r\n    })\r\n\r\n    this.moved(canvas, figure)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A draw2d.policy.SelectionFeedbackPolicy that is sensitive to the canvas selection. Subclasses will typically\r\n * decorate the {@link draw2d.Figure figure} with things like selection handles and/or focus feedback.\r\n * <br>\r\n * If you want to change the handle visibility for a figure, then you should use SelectionFeedbackPolicy to do that.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.port.ElasticStrapFeedbackPolicy = draw2d.policy.port.PortFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.port.ElasticStrapFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.port.ElasticStrapFeedbackPolicy\",\r\n\r\n  /**\r\n   * Creates a new Router object\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n    this.connectionLine = null\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called by the framework if the related shape has init a drag&drop\r\n   * operation\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean} return <b>false</b> to send a veto to the drag operation\r\n   */\r\n  onDragStart: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n    this.connectionLine = new draw2d.shape.basic.Line()\r\n    this.connectionLine.setCanvas(canvas)\r\n    this.connectionLine.getShapeElement()\r\n\r\n    this.onDrag(canvas, figure)\r\n\r\n    return true\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework during drag a figure.\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   */\r\n  onDrag: function (canvas, figure) {\r\n    let x1 = figure.ox + figure.getParent().getAbsoluteX()\r\n    let y1 = figure.oy + figure.getParent().getAbsoluteY()\r\n\r\n    this.connectionLine.setStartPosition(x1, y1)\r\n    this.connectionLine.setEndPosition(figure.getAbsoluteX(), figure.getAbsoluteY())\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called by the framework if the drag drop operation ends.\r\n   *\r\n   * @param {draw2d.Canvas} canvas The host canvas\r\n   * @param {draw2d.Figure} figure The related figure\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onDragEnd: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n    this.connectionLine.setCanvas(null)\r\n    this.connectionLine = null\r\n  },\r\n\r\n  onHoverEnter: function (canvas, draggedFigure, hoverFiger) {\r\n    this.connectionLine.setGlow(true)\r\n    hoverFiger.setGlow(true)\r\n  },\r\n\r\n  onHoverLeave: function (canvas, draggedFigure, hoverFiger) {\r\n    hoverFiger.setGlow(false)\r\n    this.connectionLine.setGlow(false)\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\nimport {Tweenable} from \"shifty\"\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.port.IntrusivePortsFeedbackPolicy = draw2d.policy.port.PortFeedbackPolicy.extend(\r\n  /** @lends draw2d.policy.port.IntrusivePortsFeedbackPolicy.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.policy.port.IntrusivePortsFeedbackPolicy\",\r\n\r\n    /**\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super(attr, setter, getter)\r\n      this.connectionLine = null\r\n      this.tweenable = null\r\n      this.growFactor = 2\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the related shape has init a drag&drop\r\n     * operation\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onDragStart: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n      let allPorts = canvas.getAllPorts().clone()\r\n\r\n      // filter all candidates for the DropEvent\r\n      //\r\n      allPorts.grep(function (p) {\r\n        return (p.NAME !== figure.NAME && p.parent !== figure.parent && p.getSemanticGroup() === figure.getSemanticGroup())\r\n          || (p instanceof draw2d.HybridPort)\r\n          || (figure instanceof draw2d.HybridPort)\r\n      })\r\n\r\n      let start = 0\r\n      allPorts.each(function (i, element) {\r\n        if (typeof element.__beforeInflate === \"undefined\") {\r\n          element.__beforeInflate = element.getWidth()\r\n        }\r\n        start = element.__beforeInflate\r\n      })\r\n\r\n      // Animate the ports for a visual feedback\r\n      //\r\n      this.tweenable = new Tweenable()\r\n      this.tweenable.tween({\r\n        from: {'size': start},\r\n        to: {'size': start* this.growFactor},\r\n        duration: 200,\r\n        easing: \"easeOutSine\",\r\n        step: function (params) {\r\n          allPorts.each(function (i, element) {\r\n            // IMPORTANT shortcut to avoid rendering errors!!\r\n            // performance shortcut to avoid a lot of events and recalculate/routing of all related connections\r\n            // for each setDimension call. Additional the connection is following a port during Drag&Drop operation\r\n            element.shape.attr({rx: params.size/2, ry: params.size/2})\r\n            element.width = element.height = params.size\r\n            element.fireEvent(\"resize\")\r\n          })\r\n        }\r\n      })\r\n\r\n      this.connectionLine = new draw2d.shape.basic.Line()\r\n      this.connectionLine.setCanvas(canvas)\r\n      this.connectionLine.getShapeElement()\r\n      this.connectionLine.setDashArray(\"- \")\r\n      this.connectionLine.setColor(\"#30c48a\")\r\n\r\n      this.onDrag(canvas, figure)\r\n\r\n      return true\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag a figure.\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @template\r\n     */\r\n    onDrag: function (canvas, figure) {\r\n      let x1 = figure.ox + figure.getParent().getAbsoluteX()\r\n      let y1 = figure.oy + figure.getParent().getAbsoluteY()\r\n\r\n      this.connectionLine.setStartPosition(x1, y1)\r\n      this.connectionLine.setEndPosition(figure.getAbsoluteX(), figure.getAbsoluteY())\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework if the drag drop operation ends.\r\n     *\r\n     * @param {draw2d.Canvas} canvas The host canvas\r\n     * @param {draw2d.Figure} figure The related figure\r\n     * @param {Number} x the x-coordinate of the mouse event\r\n     * @param {Number} y the y-coordinate of the mouse event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     */\r\n    onDragEnd: function (canvas, figure, x, y, shiftKey, ctrlKey) {\r\n      if (this.tweenable) {\r\n        this.tweenable.stop(true)\r\n        this.tweenable.dispose()\r\n        this.tweenable = null\r\n      }\r\n\r\n      let allPorts = canvas.getAllPorts().clone()\r\n      // filter all candidates for the DropEvent\r\n      //\r\n      allPorts.grep(function (p) {\r\n        return p.__beforeInflate\r\n      })\r\n\r\n      allPorts.each(function (i, element) {\r\n        // IMPORTANT shortcut to avoid rendering errors!!\r\n        // performance shortcut to avoid a lot of events and recalculate/routing of all related connections\r\n        // for each setDimension call. Additional the connection is following a port during Drag&Drop operation\r\n        element.shape.attr({rx: element.__beforeInflate / 2, ry: element.__beforeInflate / 2})\r\n        element.width = element.height = element.__beforeInflate\r\n        delete element.__beforeInflate\r\n      })\r\n      this.connectionLine.setCanvas(null)\r\n      this.connectionLine = null\r\n    },\r\n\r\n    onHoverEnter: function (canvas, draggedFigure, hoverFigure) {\r\n      this.connectionLine.setGlow(true)\r\n      hoverFigure.setGlow(true)\r\n    },\r\n\r\n    onHoverLeave: function (canvas, draggedFigure, hoverFigure) {\r\n      hoverFigure.setGlow(false)\r\n      if (this.connectionLine === null) {\r\n        debugger\r\n      }\r\n      this.connectionLine.setGlow(false)\r\n    }\r\n\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Base class for all port feedback policies. Used for grow, highlight or\r\n * other decorations during drag&drop and connecting of ports.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.policy.figure.DragDropEditPolicy\r\n */\r\ndraw2d.policy.port.PortFeedbackPolicy = draw2d.policy.figure.DragDropEditPolicy.extend(\r\n  /** @lends draw2d.policy.port.PortFeedbackPolicy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.policy.port.PortFeedbackPolicy\",\r\n\r\n  /**\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called if the dragged port hove another port\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {draw2d.Port}   draggedFigure\r\n   * @param {draw2d.Figure} hoverFigure\r\n   */\r\n  onHoverEnter: function (canvas, draggedFigure, hoverFigure) {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Fired if the dragged figures leaves the hover figure\r\n   *\r\n   * @param {draw2d.Canvas} canvas\r\n   * @param {draw2d.Port}   draggedFigure\r\n   * @param {draw2d.Figure} hoverFigure\r\n   */\r\n  onHoverLeave: function (canvas, draggedFigure, hoverFigure) {\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Hand drawn arrow which points down left\r\n *\r\n *\r\n * @example\r\n *    let figure =  new draw2d.shape.analog.OpAmp({x:10, y:10});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.analog.OpAmp = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.analog.OpAmp.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.analog.OpAmp\",\r\n\r\n  // custom locator for the special design of the OpAmp Input area\r\n  MyInputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, port) {\r\n      let parent = port.getParent()\r\n      let calcY = (8 + 18.5 * index) * parent.scaleY\r\n      this.applyConsiderRotation(port, 1, calcY)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({stroke: 0, bgColor: \"#f0f0ff\"}, attr), setter, getter)\r\n\r\n    this.inputLocator = new this.MyInputPortLocator()\r\n\r\n    this.createPort(\"input\", this.inputLocator)\r\n    this.createPort(\"input\", this.inputLocator)\r\n\r\n    this.createPort(\"output\")\r\n\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getSVG: function () {\r\n    return '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"50\"  height=\"50\">' +\r\n      '<path d=\"m8.2627,0l0,35.36035l31.23926,-17.76025l-31.23926,-17.60011l0,0l0,0.00001zm2.27832,27.36719l4.08105,0m-2.10449,-2.20703l0,4.27979m2.26367,-21.35938l-4.15918,0\"  stroke=\"#1B1B1B\" fill=\"none\"/>' +\r\n      '<line x1=\"0.53516\"  y1=\"8\"  x2=\"8.21191\"  y2=\"8\"  stroke=\"#010101\"/>' +\r\n      '<line x1=\"39.14941\" y1=\"18\" x2=\"45.81055\" y2=\"18\" stroke=\"#010101\" />' +\r\n      '<line x1=\"0.53516\"  y1=\"27\" x2=\"8.21191\"  y2=\"27\" stroke=\"#010101\" />' +\r\n      '</svg>'\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    // redirect the backgroundColor to an internal SVG node.\r\n    // In this case only a small part of the shape are filled with the background color\r\n    // and not the complete rectangle/bounding box\r\n    //\r\n    attributes[\"fill\"] = \"none\"\r\n    if (this.bgColor != null) {\r\n      this.svgNodes[0].attr({fill: this.bgColor.rgba()})\r\n    }\r\n\r\n    this._super(attributes)\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.analog.ResistorBridge({x:10, y:10});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.analog.ResistorBridge = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.analog.ResistorBridge.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.analog.ResistorBridge\",\r\n\r\n  // custom locator for the special design of the ResistorBridge Input area\r\n  MyInputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      let h = figure.getParent().getHeight()\r\n      this.applyConsiderRotation(figure, w / 2 + 1, h * index)\r\n    }\r\n  }),\r\n\r\n  // custom locator for the special design of the ResistorBridge Input area\r\n  MyOutputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      let h = figure.getParent().getHeight()\r\n\r\n      this.applyConsiderRotation(figure, w * (index - 2), h / 2)\r\n    }\r\n  }),\r\n\r\n\r\n  /**\r\n   * Create a new instance\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n\r\n    this.inputLocator = new this.MyInputPortLocator()\r\n    this.outputLocator = new this.MyOutputPortLocator()\r\n\r\n    this.createPort(\"hybrid\", this.inputLocator)\r\n    this.createPort(\"hybrid\", this.inputLocator)\r\n\r\n    this.createPort(\"hybrid\", this.outputLocator)\r\n    this.createPort(\"hybrid\", this.outputLocator)\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getSVG: function () {\r\n    return '<svg  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\r\n      '<path fill=\"#010101\" stroke=\"#010101\" stroke-miterlimit=\"14.3\" id=\"path12322\" d=\"m47.62207,22.71094l0,0c0.73145,0.73242 0.71777,1.93359 -0.03027,2.68164c-0.74805,0.74951 -1.94922,0.76123 -2.68073,0.0293c-0.73138,-0.73242 -0.71967,-1.93211 0.03033,-2.68115c0.74707,-0.74803 1.94727,-0.76219 2.68066,-0.02979l0,0z\"/>' +\r\n      '<path fill=\"#010101\" stroke=\"#010101\" stroke-miterlimit=\"14.3\" id=\"path12324\" d=\"m25.84082,0.93115l0,0c0.73145,0.73096 0.71875,1.93359 -0.02832,2.68066c-0.75,0.74951 -1.94922,0.76123 -2.68164,0.0293c-0.73242,-0.73241 -0.71973,-1.93164 0.0293,-2.68065c0.74805,-0.74756 1.94922,-0.76172 2.68066,-0.0293l0,0l0,-0.00002z\"/>' +\r\n      '<path fill=\"#010101\" stroke=\"#010101\" stroke-miterlimit=\"14.3\" id=\"path12326\" d=\"m25.75098,44.58203l0,0c0.73145,0.73193 0.71875,1.93311 -0.02832,2.68115c-0.75,0.74902 -1.94922,0.76074 -2.68262,0.0293c-0.73145,-0.73193 -0.71973,-1.93262 0.03033,-2.68164c0.74707,-0.74756 1.94922,-0.76123 2.68066,-0.02879l0,0l-0.00006,-0.00002z\"/>' +\r\n      '<path fill=\"#010101\" stroke=\"#010101\" stroke-miterlimit=\"14.3\" id=\"path12328\" d=\"m3.9707,22.80127l0,0c0.73242,0.73193 0.71777,1.93359 -0.0293,2.68115c-0.74902,0.74951 -1.94922,0.76172 -2.68164,0.0293c-0.73145,-0.73242 -0.71973,-1.93164 0.03027,-2.68115c0.74707,-0.74707 1.94922,-0.76074 2.68066,-0.0293l0,0z\"/>' +\r\n      '<polyline fill=\"none\" stroke=\"#010101\" id=\"polyline12334\" points=\"24.908203125,45.49267578125 31.71875,38.68310546875 31.2119140625,36.98876953125 34.892578125,37.95703125 33.953125,34.22265625 37.6650390625,35.18359375 36.6767578125,31.52490234375 40.3759765625,32.47314453125 39.873046875,30.52783203125 45.884765625,24.51708984375 \" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"#010101\" id=\"polyline12338\" points=\"36.3408203125,23.98876953125 38.146484375,29.55810546875 33.630859375,29.55810546875 35.435546875,23.98779296875 \"/>' +\r\n      '<line fill=\"none\" stroke=\"#010101\" id=\"line12340\" y2=\"28.90967\" x2=\"35.8877\" y1=\"41.13428\" x1=\"35.88867\" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"none\" stroke=\"#010101\" id=\"polyline12346\" points=\"3.2109375,23.79248046875 10.01953125,16.98388671875 9.513671875,15.2890625 13.193359375,16.25732421875 12.251953125,12.5234375 15.9658203125,13.48486328125 14.9775390625,9.82568359375 18.6767578125,10.7734375 18.173828125,8.82958984375 24.185546875,2.81787109375 \" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"#010101\" id=\"polyline12350\" points=\"13.126953125,23.80419921875 11.3212890625,18.236328125 15.8369140625,18.236328125 14.0322265625,23.806640625 \"/>' +\r\n      '<line fill=\"none\" stroke=\"#010101\" id=\"line12352\" y2=\"18.8833\" x2=\"13.58008\" y1=\"6.65967\" x1=\"13.5791\" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"none\" stroke=\"#010101\" id=\"polyline12358\" points=\"46.65625,24.33642578125 39.84765625,17.52783203125 38.154296875,18.033203125 39.1220703125,14.353515625 35.3876953125,15.29345703125 36.34765625,11.58056640625 32.689453125,12.56884765625 33.6376953125,8.86865234375 31.6923828125,9.373046875 24.322265625,2.00341796875 \" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"#010101\" id=\"polyline12362\" points=\"36.578125,1.87109375 38.3828125,7.439453125 33.8681640625,7.439453125 35.6728515625,1.869140625 \"/>' +\r\n      '<line fill=\"none\" stroke=\"#010101\" id=\"line12364\" y2=\"6.7915\" x2=\"36.125\" y1=\"19.01758\" x1=\"36.125\" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"none\" stroke=\"#010101\" id=\"polyline12370\" points=\"24.494140625,46.49951171875 17.685546875,39.69091796875 15.9921875,40.1953125 16.958984375,36.515625 13.2265625,37.45556640625 14.185546875,33.7421875 10.52734375,34.73193359375 11.474609375,31.03125 9.529296875,31.53515625 2.1611328125,24.166015625 \" stroke-miterlimit=\"14.3\"/>' +\r\n      '<polyline fill=\"#010101\" id=\"polyline12374\" points=\"12.150390625,44.80029296875 10.34765625,39.23193359375 14.861328125,39.23095703125 13.0556640625,44.80224609375 \"/>' +\r\n      '<line fill=\"none\" stroke=\"#010101\" id=\"line12376\" y2=\"39.87891\" x2=\"12.60352\" y1=\"27.6543\" x1=\"12.60352\" stroke-miterlimit=\"14.3\"/>' +\r\n      '</svg>'\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.analog.ResistorVertical({x:10, y:10});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.analog.ResistorVertical = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.analog.ResistorVertical.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.analog.ResistorVertical\",\r\n\r\n  // custom locator for the special design of the Input area\r\n  MyInputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      let h = figure.getParent().getHeight()\r\n      this.applyConsiderRotation(figure, w / 2, h)\r\n    }\r\n  }),\r\n\r\n  // custom locator for the special design of the Output area\r\n  MyOutputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      this.applyConsiderRotation(figure, w / 2, 0)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this._super(extend({width: 30, height: 50, bgColor: null}, attr), setter, getter)\r\n\r\n    this.inputLocator = new this.MyInputPortLocator()\r\n    this.outputLocator = new this.MyOutputPortLocator()\r\n\r\n    this.createPort(\"hybrid\", this.inputLocator)\r\n    this.createPort(\"hybrid\", this.outputLocator)\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createSet: function () {\r\n    let set = this._super()\r\n\r\n    set.push(this.canvas.paper.path(\"M15,0 L15,5 L0,7.5 L30,10 L0,15 L30,20 L0,25 L30,30 L15,32.5 L15,40\"))\r\n\r\n    return set\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.analog.VoltageSupplyHorizontal({x:10, y:10});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.analog.VoltageSupplyHorizontal = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.analog.VoltageSupplyHorizontal.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.analog.VoltageSupplyHorizontal\",\r\n\r\n  // custom locator for the special design of the Input area\r\n  MyInputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let h = figure.getParent().getHeight()\r\n      this.applyConsiderRotation(figure, 0, h / 2)\r\n    }\r\n  }),\r\n\r\n  // custom locator for the special design of the Output area\r\n  MyOutputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      let h = figure.getParent().getHeight()\r\n      this.applyConsiderRotation(figure, w, h / 2)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 30}, attr), setter, getter)\r\n\r\n    this.createPort(\"hybrid\", new this.MyInputPortLocator())  // GND\r\n    this.createPort(\"hybrid\", new this.MyOutputPortLocator()) // VCC\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getSVG: function () {\r\n    return '<svg width=\"49\" height=\"28\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\r\n      '<path d=\"m24.99933,18.95592l0,-9.54576m-5.78374,-9.40907l0,28.35939m-5.78718,-9.40457l0,-9.54576m-5.78374,-9.40907l0,28.35939\" id=\"path10566\" stroke-miterlimit=\"14.3\" stroke=\"#010101\" fill=\"none\"/>' +\r\n      '<path d=\"m26.79878,14.13039l6.90583,0m-33.22691,0l6.90583,0\" id=\"path10568\" stroke-miterlimit=\"14.3\" stroke-linecap=\"square\" stroke=\"#010101\" fill=\"none\"/>' +\r\n      '</svg>'\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.analog.VoltageSupplyVertical({x:10, y:10});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.analog.VoltageSupplyVertical = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.analog.VoltageSupplyVertical.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.analog.VoltageSupplyVertical\",\r\n\r\n  // custom locator for the special design of the Input area\r\n  MyInputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      let h = figure.getParent().getHeight()\r\n      this.applyConsiderRotation(figure, w / 2, h)\r\n    }\r\n  }),\r\n\r\n  // custom locator for the special design of the Output area\r\n  MyOutputPortLocator: draw2d.layout.locator.PortLocator.extend({\r\n    init: function () {\r\n      this._super()\r\n    },\r\n    relocate: function (index, figure) {\r\n      let w = figure.getParent().getWidth()\r\n      this.applyConsiderRotation(figure, w / 2, 0)\r\n    }\r\n  }),\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 30, height: 50}, attr), setter, getter)\r\n\r\n    this.inputLocator = new this.MyInputPortLocator()\r\n    this.outputLocator = new this.MyOutputPortLocator()\r\n\r\n    this.createPort(\"hybrid\", this.inputLocator) // GND\r\n    this.createPort(\"hybrid\", this.outputLocator)// VCC\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getSVG: function () {\r\n    return '<svg  xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\r\n      '<path d=\"m19.62398,12.37594l-9.87926,0m-9.74355,8.22145l29.36289,0m-9.74007,8.22469l-9.87927,0m-9.74355,8.22145l29.36289,0\" id=\"path10560\" stroke-miterlimit=\"14.3\" stroke=\"#010101\" fill=\"none\"/>' +\r\n      '<path d=\"m14.63157,9.81646l0,-9.81646m0,47.2328l0,-9.81646\" id=\"path10562\" stroke-miterlimit=\"14.3\" stroke-linecap=\"square\" stroke=\"#010101\" fill=\"none\"/>' +\r\n      '</svg>'\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Hand drawn arrow which points down left\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.arrow.CalligrapherArrowDownLeft({x:10,y:10, color:\"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.arrow.CalligrapherArrowDownLeft = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.arrow.CalligrapherArrowDownLeft.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.arrow.CalligrapherArrowDownLeft\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr)\r\n  },\r\n\r\n\r\n  getSVG: function () {\r\n    return '<svg width=\"180\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\r\n      '     <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3084\" d=\"m 159.63578,17.846597 c 0.43137,9.44641 -0.0636,18.88035 -0.8284,28.30165 c -1.73211,18.38336 -4.05381,36.71698 -6.08253,55.075313 c -1.61738,13.7075 -3.03402,27.43467 -3.97611,41.19113 c -1.09101,11.16584 -1.31019,22.36559 -1.28541,33.56466 c -0.1328,4.82188 0.3218,9.6468 0.14332,14.46812 c -0.0888,2.39977 -0.28315,3.73625 -0.55012,6.12095 c -0.85848,4.73147 -2.27416,9.40019 -4.7769,13.68272 c -1.47003,2.51544 -3.78493,5.6647 -5.47739,8.05048 c -5.02888,6.66256 -11.08555,12.65652 -18.10552,17.75963 c -4.23302,3.07716 -7.74942,5.12065 -12.22081,7.86298 c -13.253319,6.72606 -25.889792,15.11686 -40.84124,18.60576 c -3.016829,0.7039 -4.431417,0.8157 -7.450859,1.2076 c -6.983246,0.5774 -14.009174,0.3375 -21.010676,0.2509 c -3.278795,-0.033 -6.55749,0.01 -9.835897,0.045 c 0,0 20.838833,-13.2364 20.838833,-13.2364 l 0,0 c 3.147056,0.093 6.294483,0.1852 9.443646,0.2007 c 6.966697,0.011 13.971433,0.1301 20.897176,-0.6344 c 3.732439,-0.5577 7.321215,-1.2431 10.881203,-2.4145 c 1.517208,-0.4992 5.830867,-2.43339 4.487902,-1.6386 c -6.098183,3.6088 -25.104875,12.8748 -9.52514,5.223 c 4.40875,-2.5927 8.262057,-4.7459 12.425175,-7.65986 c 6.839117,-4.78709 12.633657,-10.50427 17.500607,-16.86761 c 2.53518,-3.56692 5.24684,-7.12748 7.07617,-11.03446 c 1.42357,-3.0404 2.21532,-6.28727 2.91146,-9.50152 c 0.91919,-6.88822 1.03991,-13.81392 1.25118,-20.74151 c 0.47683,-11.27871 0.96259,-22.55877 1.61689,-33.83062 c 1.21127,-14.03392 3.64191,-27.94339 5.46543,-41.92167 c 2.26899,-18.186603 4.6835,-36.384373 5.4487,-54.679643 c 0.0788,-2.46092 0.23808,-4.92087 0.23618,-7.38276 c -0.005,-6.45916 -0.62194,-13.00218 -2.13821,-19.32664 c 0,0 23.48134,-10.73998 23.48134,-10.73998 z\" inkscape:connector-curvature=\"0\" />' +\r\n      '     <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3086\" d=\"m 41.271518,252.40239 c 2.465518,-0.7264 4.879503,-1.7726 7.145328,-2.9859 c 0.955597,-0.5117 3.736822,-2.1986 2.791991,-1.6673 c -5.218817,2.9348 -10.409826,5.9187 -15.61474,8.878 c 5.366557,-3.4898 10.227818,-7.6685 14.119927,-12.75576 c 3.507157,-5.09382 4.097613,-11.17122 4.301158,-17.17644 c 0.02635,-3.95844 -0.31227,-7.90612 -0.635377,-11.84752 c 0,0 19.920693,-10.3059 19.920693,-10.3059 l 0,0 c 0.171761,4.05015 0.409899,8.09777 0.50079,12.15101 c -0.185739,6.23619 -0.347804,12.66862 -3.492579,18.24747 c -0.503375,0.75197 -0.961922,1.53596 -1.510126,2.25591 c -3.478528,4.56826 -8.226837,8.04586 -12.757403,11.47443 c -7.345206,4.3297 -14.671333,8.692 -22.035619,12.9891 c -3.551305,2.0723 -7.368692,3.8726 -11.394645,4.7773 c 0,0 18.660602,-14.0344 18.660602,-14.0344 z\" inkscape:connector-curvature=\"0\" />' +\r\n      '     <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3088\" d=\"m 37.815923,255.49919 c 3.41111,0.1581 6.814569,0.2213 10.182693,0.8184 c 6.92998,2.6928 13.533527,6.2357 20.043462,9.8162 c 3.912139,2.1362 7.91195,4.4644 10.690321,8.0298 c 1.039962,1.2802 1.510411,2.7604 1.893523,4.3313 c 0,0 -20.370847,10.9259 -20.370847,10.9259 l 0,0 c -0.225419,-1.2711 -0.55067,-2.4558 -1.329618,-3.5184 c -2.332229,-3.3633 -5.869056,-5.6279 -9.247191,-7.8233 c -6.335066,-3.7106 -12.98611,-7.1834 -20.232784,-8.6836 c -3.497247,-0.3814 -7.011372,-0.4307 -10.521829,-0.1703 c 0,0 18.89227,-13.726 18.89227,-13.726 z\" inkscape:connector-curvature=\"0\" />' +\r\n      '</svg>'\r\n  },\r\n\r\n  /**\r\n   *\r\n   * propagate all attributes like color, stroke,... to the shape element\r\n   **/\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    this.svgNodes?.attr({fill: this.color.rgba()})\r\n\r\n    this._super(attributes)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Hand drawn arrow to the left.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.arrow.CalligrapherArrowLeft({x:10, y:10, color:\"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure);\r\n *\r\n * @extends draw2d.SVGFigure\r\n */\r\ndraw2d.shape.arrow.CalligrapherArrowLeft = draw2d.SVGFigure.extend(\r\n  /** @lends draw2d.shape.arrow.CalligrapherArrowLeft.prototype */\r\n  {\r\n  NAME: \"draw2d.shape.arrow.CalligrapherArrowLeft\",\r\n\r\n  /**\r\n   * Creates a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr)\r\n  },\r\n\r\n\r\n  getSVG: function () {\r\n    return '<svg width=\"230\" height=\"60\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">' +\r\n      '  <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3024\" d=\"m 218.87943,27.464763 c -1.21088,-0.0563 -2.42064,-0.14616 -3.63262,-0.16893 c -5.82495,-0.10948 -18.61676,-0.0226 -22.97385,0.0122 c -7.12848,0.057 -14.25673,0.14021 -21.38495,0.22333 c -9.03765,0.10539 -18.07511,0.22813 -27.11266,0.3422 c -10.2269,0.11878 -20.4538,0.23756 -30.6807,0.35634 c -35.488759,0.4089 -70.975849,0.82793 -106.4669238,0.95195 c 0,0 7.9718628,-5.70244 7.9718628,-5.70244 l 0,0 c 6.374241,0.28694 12.745594,0.64561 19.122722,0.86083 c 28.09499,0.94816 56.21338,0.92473 84.315959,0.32205 c 10.51273,-0.32805 21.0288,-0.56402 31.53819,-0.98412 c 27.47361,-1.09824 54.91405,-2.91665 82.28177,-5.53697 c 0,0 -12.9788,9.32351 -12.9788,9.32351 z\" inkscape:connector-curvature=\"0\" />' +\r\n      '  <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3026\" d=\"m 100.75066,1.6309831 c -7.165239,3.9571 -14.284929,7.47866 -22.036659,10.2707299 c -5.00195,1.80163 -10.10374,3.31886 -15.2402,4.79424 c -8.25878,2.37815 -16.55626,4.65805 -24.9012,6.79479 c -2.89107,0.71593 -5.74687,1.56407 -8.66266,2.20424 c -3.211679,0.70512 -6.49468,1.17333 -9.752959,1.6747 c -5.447101,0.92112 -10.9044008,1.81762 -16.3983488,2.50082 c -1.608931,0.0814 -0.850754,0.10697 -2.275834,-0.0365 C 20.004071,21.041553 19.256899,21.517873 32.515691,19.216243 c 6.21537,-1.05913 12.34875,-2.37668 18.3945,-4.03234 c 8.12719,-2.02803 16.23765,-4.1157 24.26421,-6.4321199 c 5.23574,-1.55053 10.41682,-3.15473 15.46857,-5.12875 c 1.38953,-0.54295 2.7579,-1.12682 4.12253,-1.71603 c 0.98421,-0.42496 3.86537,-1.81801999 2.92296,-1.32600999 C 93.642191,2.6934931 89.529511,4.7073031 85.450031,6.7704531 l 15.300629,-5.1394 z\" inkscape:connector-curvature=\"0\" sodipodi:nodetypes=\"csccsccccccsssccc\" />' +\r\n      '  <path style=\"fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none\" id=\"path3028\" d=\"m 80.764281,58.068863 c -2.45498,-3.50762 -6.58178,-6.10525 -10.40324,-8.66732 c -4.30614,-2.72676 -7.93958,-6.28283 -12.6021,-8.28702 c -7.39912,-4.50257 -11.70055,-7.85592 -20.85866,-9.23429 c -4.9257,-0.85706 -17.294247,-1.32043 -22.226462,-2.15427 c -3.445882,-0.42869 -6.2035918,0.70541 -9.6845138,0.57715 c -1.496337,-0.0586 -2.99355,-0.0965 -4.491229,-0.12472 l 13.9525278,-6.24562 l 3.25,-1.17153 c 1.441459,0.0813 -1.116338,0.15309 0.325505,0.23016 c 3.574557,0.17902 7.211864,0.0695 10.712655,0.73822 c 4.723107,1.08097 9.443947,2.1624 14.234177,3.05317 c 2.76739,0.64203 3.92627,0.87082 6.64127,1.66289 c 4.42146,1.28993 8.60075,3.01513 12.86503,4.58129 c 1.90199,0.73446 5.05193,1.93181 6.89302,2.7216 c 4.92005,2.11061 9.5916,4.57045 13.9716,7.31023 c 4.16708,2.62011 8.48023,5.20033 11.72012,8.56863 z\" inkscape:connector-curvature=\"0\" sodipodi:nodetypes=\"ccccccccccccscsccc\" />' +\r\n      '</svg>'\r\n  },\r\n\r\n  /**\r\n   *\r\n   * propagate all attributes like color, stroke,... to the shape element\r\n   **/\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n\r\n    if (this.svgNodes !== null) {\r\n      this.svgNodes.attr({fill: this.color.rgba()})\r\n    }\r\n\r\n    this._super(attributes)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * Oval figure.\r\n * @example\r\n *\r\n *    let arc =  new draw2d.shape.basic.Arc({diameter:150, x:50, y:10, startAngle:0, endAngle:45});\r\n *\r\n *    canvas.add(arc);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.basic.Arc = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.basic.Arc.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.Arc\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.startAngle = 180\r\n    this.endAngle = 360\r\n\r\n    this._super({width: 80, height: 50, bgColor: null, color: \"#1B1B1B\", ...attr}, setter, getter)\r\n    this.strokeScale = false // scale the stroke width of the children nodes if the parent resize\r\n  },\r\n\r\n\r\n  /**\r\n   * @template\r\n   **/\r\n  createSet: function () {\r\n    this.canvas.paper.setStart()\r\n\r\n\r\n    let flag = (this.endAngle - this.startAngle) > 180\r\n    let a1 = (this.startAngle % 360) * Math.PI / 180\r\n    let a2 = (this.endAngle % 360) * Math.PI / 180\r\n\r\n    let w2 = this.getWidth() / 2\r\n    let h2 = this.getHeight() / 2\r\n\r\n    this.canvas.paper.path([\r\n      [\"M\", w2, h2,\r\n        \"l\", w2 * Math.cos(a1), h2 * Math.sin(a1),\r\n        \"A\", w2, h2, 0, +flag, 1, w2 + w2 * Math.cos(a2), h2 + h2 * Math.sin(a2),\r\n        \"z\"]\r\n    ].join(\"\")).attr({\"fill\": \"#fff0f0\"})\r\n\r\n    return this.canvas.paper.setFinish()\r\n\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * A circle figure with basic background and stroke API. <br>\r\n * A circle can not be streched. <strong>The aspect ration is always 1:1</strong>.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let shape =  new draw2d.shape.basic.Circle({x:40,y:10, stroke:3, color:\"#3d3d3d\", bgColor:\"#3dff3d\"});\r\n *\r\n *    canvas.add(shape);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Oval\r\n */\r\ndraw2d.shape.basic.Circle = draw2d.shape.basic.Oval.extend(\r\n  /** @lends draw2d.shape.basic.Circle.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.basic.Circle\",\r\n\r\n    /**\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     * @param {Object} [setter] add or replace setter methods\r\n     * @param {Object} [getter] add or replace getter methods\r\n     **/\r\n    init: function (attr, setter, getter) {\r\n      this._super(\r\n        attr,\r\n        {\r\n          // @attr {Number} diameter the diameter of the circle */\r\n          diameter: this.setDiameter,\r\n          // @attr {Number} radius the radius of the circle */\r\n          radius: this.setRadius,\r\n          ...setter},\r\n        {\r\n          diameter: this.getDiameter,\r\n          radius: this.getRadius,\r\n          ...getter\r\n        }\r\n      )\r\n\r\n      this.setKeepAspectRatio(true)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the diameter of the circle. The center of the circle will be retained.\r\n     *\r\n     * @param {Number} d The new diameter of the circle.\r\n     * @since 4.0.0\r\n     * @returns {this}\r\n     **/\r\n    setDiameter: function (d) {\r\n      let center = this.getCenter()\r\n      this.setDimension(d, d)\r\n      this.setCenter(center)\r\n      this.fireEvent(\"change:diameter\", {value: d})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the diameter of the circle.\r\n     *\r\n     * @since 4.0.0\r\n     * @returns {Number} the diameter of the circle\r\n     **/\r\n    getDiameter: function () {\r\n      return this.getWidth()\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the radius of the circle. The center of the circle will be retained.\r\n     *\r\n     * @param {Number} r The new radius of the circle.\r\n     * @since 4.0.0\r\n     * @returns {this}\r\n     **/\r\n    setRadius: function (r) {\r\n      this.setDiameter(r * 2)\r\n      this.fireEvent(\"change:radius\", {value: r})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * Get the radius of the circle\r\n     *\r\n     * @returns {Number} the radius of the circle\r\n     */\r\n    getRadius: function(){\r\n      return this.getWidth()/2\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     * @returns {Object}\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n      // delete the radius attribute of the parent. Because the \"radius\" is the corner radius\r\n      // of the shape and not the \"radius\" of the circle. Design flaw.  :-/\r\n      delete memento.radius\r\n\r\n      return memento\r\n    }\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A Diamond Figure.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let d1 =  new draw2d.shape.basic.Diamond({x:10,y:10});\r\n *    let d2 =  new draw2d.shape.basic.Diamond({x:100,y:10, bgColor:\"#f0f000\", alpha:0.7, width:100, height:60});\r\n *\r\n *    canvas.add(d1);\r\n *    canvas.add(d2);\r\n *\r\n *    canvas.setCurrentSelection(d2);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.basic.Diamond = draw2d.shape.basic.Polygon.extend(\r\n  /** @lends draw2d.shape.basic.Diamond.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.basic.Diamond\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({bgColor: \"#00a3f6\", color: \"#1B1B1B\"}, attr), setter, getter)\r\n\r\n    let pos = this.getPosition()\r\n\r\n    this.resetVertices()\r\n\r\n    let box = this.getBoundingBox()\r\n    this.addVertex(box.w / 2, 0)       // Go to the top center..\r\n    this.addVertex(box.w, box.h / 2) // ...draw line to the right middle\r\n    this.addVertex(box.w / 2, box.h)   // ...bottom center...\r\n    this.addVertex(0, box.h / 2) // ...left middle...\r\n\r\n    // override the selection handler from the polygon. Because the vertices of\r\n    // the diamond are not selectable and modifiable\r\n    //\r\n    this.installEditPolicy(new draw2d.policy.figure.RectangleSelectionFeedbackPolicy())\r\n\r\n    this.setPosition(pos)\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * ResizeHandle for a vertex edit policy. Click of this kind of resize handles\r\n * adds a new vertex to the polyline or polygon.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.LineResizeHandle\r\n */\r\ndraw2d.shape.basic.GhostVertexResizeHandle = draw2d.shape.basic.LineResizeHandle.extend(\r\n  /** @lends draw2d.shape.basic.GhostVertexResizeHandle.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.basic.GhostVertexResizeHandle\",\r\n\r\n    /**\r\n     *\r\n     *\r\n     */\r\n    init: function (owner, precursorIndex) {\r\n    this.maxOpacity = 0.35\r\n    this.precursorIndex = precursorIndex\r\n\r\n    this._super({owner: owner, opacity: this.maxOpacity})\r\n  },\r\n\r\n  createShapeElement: function () {\r\n    let shape = this._super()\r\n\r\n    shape.attr({\"cursor\": \"pointer\"})\r\n\r\n    return shape\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the alpha blending of this figure.\r\n   *\r\n   * @param {Number} percent Value between [0..1].\r\n   * @template\r\n   **/\r\n  setAlpha: function (percent) {\r\n    this._super(Math.min(this.maxOpacity, Math.max(0, parseFloat(percent))))\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called when a user clicks on the element\r\n   *\r\n   * @template\r\n   */\r\n  onClick: function () {\r\n    let cmd = new draw2d.command.CommandAddVertex(this.owner, this.precursorIndex + 1, this.getAbsoluteX() + this.getWidth() / 2, this.getAbsoluteY() + this.getHeight() / 2)\r\n    this.getCanvas().getCommandStack().execute(cmd)\r\n  },\r\n\r\n  /**\r\n   * Called if the drag and drop action begins. You can return [false] if you\r\n   * want avoid the that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @type {Boolean}\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called from the framework during a drag&drop operation\r\n   *\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @returns {Boolean}\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *  Called after a drag and drop action.<br>\r\n   *        Sub classes can override this method to implement additional stuff. Don't forget to call the super implementation via <code>this._super();</code>\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean}\r\n   */\r\n  onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragend\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n    return true\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Controls the location of the resize handle\r\n   *\r\n   * @template\r\n   **/\r\n  relocate: function () {\r\n    let p1 = this.owner.getVertices().get(this.precursorIndex)\r\n    let p2 = this.owner.getVertices().get(this.precursorIndex + 1)\r\n\r\n    this.setPosition(\r\n      ((p2.x - p1.x) / 2 + p1.x - this.getWidth() / 2),\r\n      ((p2.y - p1.y) / 2 + p1.y - this.getHeight() / 2)\r\n    )\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Simple Image shape.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.node.Node\r\n */\r\ndraw2d.shape.basic.Image = draw2d.shape.node.Node.extend(\r\n  /** @lends draw2d.shape.basic.Image.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.Image\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(\r\n      attr,\r\n      {\r\n        // @attr {String} path the image path (absolute or relative) of the shape */\r\n        path: this.setPath,\r\n        ...setter\r\n      },\r\n      {\r\n        path: this.getPath,\r\n        ...getter\r\n      })\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the image path attribute of the Image shape and repaint them.\r\n   * The path can be relative or absolute\r\n   *\r\n   * @param path\r\n   * @since 2.8.0\r\n   */\r\n  setPath: function (path) {\r\n    this.path = path\r\n\r\n    this.shape?.attr({src: this.path})\r\n    this.fireEvent(\"change:path\", {value: this.path})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the image path attribute of the shape.\r\n   *\r\n   * @returns {String}\r\n   * @since 2.8.0\r\n   */\r\n  getPath: function () {\r\n    return this.path\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    attributes.x = this.getAbsoluteX()\r\n    attributes.y = this.getAbsoluteY()\r\n    attributes.width = this.getWidth()\r\n    attributes.height = this.getHeight()\r\n    attributes.src = this.path\r\n\r\n    // propagate the width/height and the display:inline-block as CSS attribute as well because Chrome\r\n    // did some \"flickering\" in some versions and sometimes the image disappear complete\r\n    $(this.shape.node).css({display: \"inline-block\", \"width\": attributes.width, \"height\": attributes.height})\r\n\r\n    this._super(attributes)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    return this.canvas.paper.image(this.path, this.getX(), this.getY(), this.getWidth(), this.getHeight())\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    return {\r\n      ...this._super(),\r\n      path: this.path\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n    if (typeof memento.path !== \"undefined\") {\r\n      this.setPath(memento.path)\r\n    }\r\n  }\r\n\r\n})\r\n\r\n","import draw2d from '../../packages'\r\nimport jsonUtil from '../../util/JSONUtil'\r\n\r\n/**\r\n * @class\r\n * Implements a simple text label.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let shape =  new draw2d.shape.basic.Label({text:\"This is a simple label\", x:40, y:10});\r\n *\r\n *    canvas.add(shape);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.SetFigure\r\n */\r\ndraw2d.shape.basic.Label = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.basic.Label.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.basic.Label\",\r\n\r\n    FONT_FALLBACK: {\r\n      'Georgia': 'Georgia, serif',\r\n      'Palatino Linotype': '\"Palatino Linotype\", \"Book Antiqua\", Palatino, serif',\r\n      'Times New Roman': '\"Times New Roman\", Times, serif',\r\n      'Arial': 'Arial, Helvetica, sans-serif',\r\n      'Arial Black': '\"Arial Black\", Gadget, sans-serif',\r\n      'Comic Sans MS': '\"Comic Sans MS\", cursive, sans-serif',\r\n      'Impact': 'Impact, Charcoal, sans-serif',\r\n      'Lucida Sans Unicode': '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\r\n      'Tahoma, Geneva': 'Tahoma, Geneva, sans-seri',\r\n      'Trebuchet MS': '\"Trebuchet MS\", Helvetica, sans-serif',\r\n      'Verdana': 'Verdana, Geneva, sans-serif',\r\n      'Courier New': '\"Courier New\", Courier, monospace',\r\n      'Lucida Console': '\"Lucida Console\", Monaco, monospace'\r\n    },\r\n\r\n\r\n    /**\r\n     * Creates a new text element.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n\r\n      this.text = \"\"\r\n      // for performance reasons\r\n      //\r\n      this.cachedWidth = null\r\n      this.cachedHeight = null\r\n      this.cachedMinWidth = null\r\n      this.cachedMinHeight = null\r\n\r\n      // appearance of the shape\r\n      //\r\n      this.fontSize = 12\r\n      this.fontColor = new draw2d.util.Color(\"#080808\")\r\n      this.fontFamily = null\r\n      this.padding = {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n      this.outlineStroke = 0\r\n      this.outlineColor = new draw2d.util.Color(null)\r\n\r\n      this.textAlign = \"start\";\r\n\r\n      this.bold = false\r\n\r\n      // behavior of the shape\r\n      //\r\n      this.editor = null\r\n\r\n      this._super(\r\n        {stroke: 1, width: 1, height: 1, resizeable: false, ...attr},\r\n        {\r\n          // @attr {String} text the text to show */\r\n          text: this.setText,\r\n          // @attr {String} set the editor to use see {@link draw2d.ui.LabelEditor} */\r\n          editor: this.installEditor,\r\n          // @attr {Number} outlineStroke the line width of the text to draw. Fill color and outline of the text can be different. */\r\n          outlineStroke: this.setOutlineStroke,\r\n          // @attr {String|draw2d.util.Color} outlineColor the outline color of the text */\r\n          outlineColor: this.setOutlineColor,\r\n          // @attr {String} fontFamily the font to use*/\r\n          fontFamily: this.setFontFamily,\r\n          // @attr {Number} fontSize the font size to use */\r\n          fontSize: this.setFontSize,\r\n          // @attr {String|draw2d.util.Color} fontColor the font color */\r\n          fontColor: this.setFontColor,\r\n          // @attr {Number} padding the padding in pixel around the text */\r\n          padding: this.setPadding,\r\n          // @attr {Boolean} bold indicator if bold text should be used*/\r\n          bold: this.setBold,\r\n\r\n          textAlign: this.textAlign,\r\n          ...setter},\r\n        {\r\n          text: this.getText,\r\n          outlineStroke: this.getOutlineStroke,\r\n          outlineColor: this.getOutlineColor,\r\n          fontFamily: this.getFontFamily,\r\n          fontSize: this.getFontSize,\r\n          fontColor: this.getFontColor,\r\n          padding: this.getPadding,\r\n          bold: this.isBold,\r\n          textAlign: this.textAlign,\r\n          ...getter\r\n        }\r\n      )\r\n\r\n      this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy())\r\n      // some performance improvements\r\n      this.lastAppliedLabelRotation = \"\"\r\n      this.lastAppliedTextAttributes = {}\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Creates the shape object for a text node.\r\n     *\r\n     * @private\r\n     **/\r\n    createSet: function () {\r\n      return this.canvas.paper.set([this.canvas.paper.text(0, 0, this.text)])\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the canvas element of this figures.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the new parent of the figure or null\r\n     * @private\r\n     */\r\n    setCanvas: function (canvas) {\r\n      this.clearCache()\r\n      this._super(canvas)\r\n      this.clearCache()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Trigger the repaint of the element and transport all style properties to the visual representation.<br>\r\n     * Called by the framework.\r\n     *\r\n     * @private\r\n     **/\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null || (this.parent && this.parent.repaintBlocked === true)) {\r\n        return\r\n      }\r\n\r\n      // style the label\r\n      let lattr = this.calculateTextAttr()\r\n      lattr.text = this.text\r\n\r\n      let attrDiff = jsonUtil.flatDiff(lattr, this.lastAppliedTextAttributes)\r\n      this.lastAppliedTextAttributes = lattr\r\n\r\n      // the two \"attr\" calls takes 2/3 of the complete method call (chrome performance check).\r\n      // now we check if any changes happens and call this method only if necessary.\r\n      if (Object.getOwnPropertyNames(attrDiff).length > 0) {\r\n        this.svgNodes.attr(lattr)\r\n        // set of the x/y must be done AFTER the font-size and bold has been set.\r\n        // Reason: the getBBox method needs the font attributes for calculation\r\n        this.svgNodes.attr({\r\n          x: (this.padding.left + this.stroke),\r\n          y: (this.svgNodes.getBBox(true).height / 2 + this.padding.top + this.getStroke())\r\n        })\r\n      }\r\n      this._super(attributes)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    calculateTextAttr: function () {\r\n      let lattr = {\r\n        \"text-anchor\": this.textAlign,\r\n        \"font-size\": this.fontSize,\r\n        \"font-weight\": (this.bold === true) ? \"bold\" : \"normal\",\r\n        fill: this.fontColor.rgba(),\r\n        stroke: this.outlineColor.rgba(),\r\n        \"stroke-width\": this.outlineStroke,\r\n      }\r\n      if (this.fontFamily !== null) {\r\n        lattr[\"font-family\"] = this.fontFamily\r\n      }\r\n      return lattr\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @returns {this}\r\n     */\r\n    applyTransformation: function () {\r\n      let ts = \"R\" + this.rotationAngle\r\n      this.shape.transform(ts)\r\n      this.lastAppliedLabelRotation = ts\r\n\r\n      this.svgNodes.transform(\r\n        \"R\" + this.rotationAngle +\r\n        \"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the new font size in [pt].\r\n     *\r\n     * @returns {this}\r\n     * @param {Number} size The new font size in <code>pt</code>\r\n     **/\r\n    setFontSize: function (size) {\r\n      this.clearCache()\r\n      this.fontSize = size\r\n\r\n      this.repaint()\r\n\r\n      this.fireEvent(\"change:fontSize\", {value: this.fontSize})\r\n      this.fireEvent(\"resize\")\r\n\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each( (i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the current used font size in px.\r\n     *\r\n     * @returns {Number}\r\n     * @since 4.0.1\r\n     */\r\n    getTextAlign: function () {\r\n      return this.textAlign\r\n    },\r\n\r\n     /**\r\n     *\r\n     * Set the new text align in [pt].\r\n     *\r\n     * @returns {this}\r\n     * @param {String} textAlign The new textAlign in <code>pt</code>\r\n     **/\r\n     setTextAlign: function (textAlign) {\r\n      this.clearCache()\r\n      this.textAlign = textAlign\r\n\r\n      this.repaint()\r\n\r\n      this.fireEvent(\"change:textAlign\", {value: this.textAlign})\r\n      this.fireEvent(\"resize\")\r\n\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each( (i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the label to <b>bold</b> or <b>normal</b> font weight.\r\n     *\r\n     * @param {Boolean} bold The bold flag for the label\r\n     * @since 2.4.1\r\n     * @returns {this}\r\n     **/\r\n    setBold: function (bold) {\r\n      this.clearCache()\r\n      this.bold = bold\r\n      this.repaint()\r\n\r\n      this.fireEvent(\"change:bold\", {value: this.bold})\r\n      this.fireEvent(\"resize\")\r\n\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the \"bold\" attribute of the label\r\n     *\r\n     * @since 5.0.0\r\n     * @returns {Boolean}\r\n     */\r\n    isBold: function () {\r\n      return this.bold\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the outline color of the font.\r\n     *\r\n     * @param {draw2d.util.Color/String} color The new color of the line.\r\n     * @since 4.2.1\r\n     * @returns {this}\r\n     **/\r\n    setOutlineColor: function (color) {\r\n      this.outlineColor = new draw2d.util.Color(color)\r\n      this.repaint()\r\n      this.fireEvent(\"change:outlineColor\", {value: this.outlineColor})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The outline color of the text\r\n     *\r\n     * @returns {draw2d.util.Color}\r\n     * @since 4.2.1\r\n     */\r\n    getOutlineColor: function () {\r\n      return this.outlineColor\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the stroke of the text to use.\r\n     *\r\n     * @param {Number} w The new line width of the figure\r\n     * @since 4.2.1\r\n     * @returns {this}\r\n     **/\r\n    setOutlineStroke: function (w) {\r\n      this.outlineStroke = w\r\n      this.repaint()\r\n      this.fireEvent(\"change:outlineStroke\", {value: this.outlineStroke})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The used outline line width.\r\n     *\r\n     * @type {Number}\r\n     * @since 4.2.1\r\n     **/\r\n    getOutlineStroke: function () {\r\n      return this.outlineStroke\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the color of the font.\r\n     *\r\n     * @param {draw2d.util.Color|String} color The new color of the line.\r\n     * @returns {this}\r\n     **/\r\n    setFontColor: function (color) {\r\n      this.fontColor = new draw2d.util.Color(color)\r\n      this.repaint()\r\n      this.fireEvent(\"change:fontColor\", {value: this.fontColor})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The current used font color\r\n     *\r\n     * @returns {draw2d.util.Color}\r\n     */\r\n    getFontColor: function () {\r\n      return this.fontColor\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the padding of the element\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     //\r\n     *     // set the padding for top,left,bottom,right in one call\r\n     *     figure.attr({\r\n     *       padding: 3\r\n     *     });\r\n     *\r\n     *     // update the padding left and top\r\n     *     figure.attr({\r\n     *       padding: {left:3, top:30}\r\n     *     });\r\n     *\r\n     * @param {Number|Object} padding The new padding\r\n     * @returns {this}\r\n     **/\r\n    setPadding: function (padding) {\r\n      this.clearCache()\r\n      if (typeof padding === \"number\") {\r\n        this.padding = {top: padding, right: padding, bottom: padding, left: padding}\r\n      } else {\r\n        this.padding = {...this.padding, ...padding}\r\n      }\r\n      this.repaint()\r\n      this.fireEvent(\"change:padding\", {value: this.padding})\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Get the padding of the element.\r\n     *\r\n     * @since 4.0.1\r\n     **/\r\n    getPadding: function () {\r\n      return this.padding\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the font family to use. If you use the shown font names the typical fallback\r\n     * font are installed as well.\r\n     *\r\n     * <b>Serif Fonts</b>\r\n     * <ul>\r\n     *  <li><span style=\"font-family:'Georgia'\">Georgia</span></li>\r\n     *  <li><span style=\"font-family:'Palatino Linotype'\">Palatino Linotype</span></li>\r\n     *  <li><span style=\"font-family:'Times New Roman'\">Times New Roman</span></li>\r\n     * </ul>\r\n     *\r\n     * <b>Sans-Serif Fonts</b>\r\n     * <ul>\r\n     *  <li><span style=\"font-family:'Arial'\">Arial</span></li>\r\n     *  <li><span style=\"font-family:'Arial Black'\">Arial Black</span></li>\r\n     *  <li><span style=\"font-family:'Comic Sans MS'\">Comic Sans MS</span></li>\r\n     *  <li><span style=\"font-family:'Impact, Charcoal'\">Impact, Charcoal</span></li>\r\n     *  <li><span style=\"font-family:'Lucida Sans Unicode'\">Lucida Sans Unicode</span></li>\r\n     *  <li><span style=\"font-family:'Tahoma, Geneva'\">Tahoma, Geneva</span></li>\r\n     *  <li><span style=\"font-family:'Trebuchet MS'\">Trebuchet MS</span> </li>\r\n     *  <li><span style=\"font-family:'Verdana'\">Verdana</span></li>\r\n     * </ul>\r\n     *\r\n     * <b>Monospace Fonts</b>\r\n     * <ul>\r\n     *  <li><span style=\"font-family:'Courier New'\">Courier New</span></li>\r\n     *  <li><span style=\"font-family:'Lucida Console'\">Lucida Console</span></li>\r\n     * </ul>\r\n     *\r\n     * @param {String} font The font to use\r\n     * @returns {this}\r\n     **/\r\n    setFontFamily: function (font) {\r\n      this.clearCache()\r\n\r\n      // check for fallback\r\n      //\r\n      if ((typeof font !== \"undefined\") && font !== null && typeof this.FONT_FALLBACK[font] !== \"undefined\") {\r\n        font = this.FONT_FALLBACK[font]\r\n      }\r\n\r\n      this.fontFamily = font\r\n      this.repaint()\r\n      this.fireEvent(\"change:fontFamily\", {value: this.fontFamily})\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the used font family of the label.\r\n     *\r\n     * @returns {String}\r\n     */\r\n    getFontFamily: function () {\r\n      return this.fontFamily\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * A Label did have \"autosize\". Do nothing at all.\r\n     *\r\n     * @returns {this}\r\n     **/\r\n    setDimension: function (w, h) {\r\n      this.clearCache()\r\n\r\n      this._super(w, h)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * clear the internal cache for width/height precalculation\r\n     * @private\r\n     */\r\n    clearCache: function () {\r\n      this.portRelayoutRequired = true\r\n      this.cachedMinWidth = null\r\n      this.cachedMinHeight = null\r\n      this.cachedWidth = null\r\n      this.cachedHeight = null\r\n      this.lastAppliedTextAttributes = {}\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * This value is relevant for the interactive resize of the figure.\r\n     *\r\n     * @returns {Number} Returns the min. width of this object.\r\n     */\r\n    getMinWidth: function () {\r\n      if (this.shape === null) {\r\n        return 0\r\n      }\r\n\r\n      this.cachedMinWidth ??= (this.svgNodes.getBBox(true).width + this.padding.left+ this.padding.right + 2*this.getStroke())\r\n\r\n      return this.cachedMinWidth\r\n    },\r\n\r\n    /**\r\n     *\r\n     * This value is relevant for the interactive resize of the figure.\r\n     *\r\n     * @returns {Number} Returns the min. width of this object.\r\n     */\r\n    getMinHeight: function () {\r\n      if (this.shape === null) {\r\n        return 0\r\n      }\r\n      this.cachedMinHeight ??= (this.svgNodes.getBBox(true).height+ this.padding.top+ this.padding.bottom+ 2*this.getStroke())\r\n\r\n      return this.cachedMinHeight\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the calculate width of the set. This calculates the bounding box of all elements.\r\n     *\r\n     * @returns {Number} the calculated width of the label\r\n     **/\r\n    getWidth: function () {\r\n      if (this.shape === null) {\r\n        return 0\r\n      }\r\n\r\n      if (this.cachedWidth === null) {\r\n        if (this.resizeable === true) {\r\n          this.cachedWidth = Math.max(this.width, this.getMinWidth())\r\n        } else {\r\n          this.cachedWidth = this.getMinWidth()\r\n        }\r\n      }\r\n\r\n\r\n      return this.cachedWidth\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the calculated height of the set. This calculates the bounding box of all elements.\r\n     *\r\n     * @returns {Number} the calculated height of the label\r\n     */\r\n    getHeight: function () {\r\n      if (this.shape === null) {\r\n        return 0\r\n      }\r\n\r\n      this.cachedHeight ??= Math.max(this.height, this.getMinHeight())\r\n\r\n      return this.cachedHeight\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set an editor for the label. This can be a dialog or inplace editor for the\r\n     * Text.<br>\r\n     * The editor will be activated if you doubleClick on the label.\r\n     *\r\n     * @param {draw2d.ui.LabelEditor|String} editor\r\n     */\r\n    installEditor: function (editor) {\r\n      if (typeof editor === \"string\") {\r\n        editor = Function(`return new ${editor}()`)()\r\n      }\r\n      this.editor = editor\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called when a user dbl clicks on the element\r\n     *\r\n     */\r\n    onDoubleClick: function () {\r\n        this.editor?.start(this)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns the current text of the label.\r\n     *\r\n     * @returns the current display text of the label\r\n     * @type {String}\r\n     **/\r\n    getText: function () {\r\n      return this.text\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the text for the label. Use \\n for multiline text.\r\n     *\r\n     * @param {String} text The new text for the label.\r\n     * @returns {this}\r\n     **/\r\n    setText: function (text) {\r\n      this.clearCache()\r\n      this.text = text\r\n\r\n      this.repaint()\r\n      // Update the resize handles if the user change the position of the element via an API call.\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.moved(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      this.fireEvent(\"resize\")\r\n      this.fireEvent(\"change:text\", {value: this.text})\r\n\r\n      this.parent?.repaint()\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Detect whenever the hands over coordinate is inside the figure.\r\n     * The default implementation is a simple bounding box test.\r\n     *\r\n     * @param {Number} iX\r\n     * @param {Number} iY\r\n     * @param {Number} [corona]\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    hitTest: function (x, y, corona) {\r\n\r\n      // apply a simple bounding box test if the label isn'T rotated\r\n      //\r\n      if (this.rotationAngle === 0) {\r\n        return this._super(x, y, corona)\r\n      }\r\n\r\n      let boundingBox = this.getBoundingBox()\r\n      if (typeof corona === \"number\") {\r\n        boundingBox.scale(corona, corona)\r\n      }\r\n\r\n      // rotate the box with the current matrix of the\r\n      // shape\r\n      let matrix = this.shape.matrix\r\n      let points = boundingBox.getVertices()\r\n      points.each( (i, point) => {\r\n        point.x = matrix.x(point.x, point.y)\r\n        point.y = matrix.y(point.x, point.y)\r\n      })\r\n\r\n      let polySides = 4\r\n\r\n      let j = polySides - 1\r\n      let oddNodes = false\r\n\r\n      for (let i = 0; i < polySides; i++) {\r\n        let pi = points.get(i)\r\n        let pj = points.get(j)\r\n        if ((pi.y < y && pj.y >= y\r\n          || pj.y < y && pi.y >= y)\r\n          && (pi.x <= x || pj.x <= x)) {\r\n          if (pi.x + (y - pi.y) / (pj.y - pi.y) * (pj.x - pi.x) < x) {\r\n            oddNodes = !oddNodes\r\n          }\r\n        }\r\n        j = i\r\n      }\r\n      return oddNodes\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return an objects with all important attributes for XML or JSON serialization\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n\r\n      memento.text = this.text\r\n      memento.outlineStroke = this.outlineStroke\r\n      memento.outlineColor = this.outlineColor.rgba()\r\n      memento.fontSize = this.fontSize\r\n      memento.fontColor = this.fontColor.rgba()\r\n      memento.fontFamily = this.fontFamily\r\n      memento.bold = this.bold\r\n\r\n      if (this.editor !== null) {\r\n        memento.editor = this.editor.NAME\r\n      }\r\n      return memento\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Apply all attributes from the serialized properties to the shape.\r\n     * Used during JSON serialisation.\r\n     *\r\n     * @param {Object} memento\r\n     * @returns {this}\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this._super(memento)\r\n      if (typeof memento.text !== \"undefined\") {\r\n        this.setText(memento.text)\r\n      }\r\n      if (typeof memento.outlineStroke !== \"undefined\") {\r\n        this.setOutlineStroke(memento.outlineStroke)\r\n      }\r\n      if (typeof memento.outlineColor !== \"undefined\") {\r\n        this.setOutlineColor(memento.outlineColor)\r\n      }\r\n      if (typeof memento.fontFamily !== \"undefined\") {\r\n        this.setFontFamily(memento.fontFamily)\r\n      }\r\n      if (typeof memento.fontSize !== \"undefined\") {\r\n        this.setFontSize(memento.fontSize)\r\n      }\r\n      if (typeof memento.fontColor !== \"undefined\") {\r\n        this.setFontColor(memento.fontColor)\r\n      }\r\n      if (typeof memento.bold !== \"undefined\") {\r\n        this.setBold(memento.bold)\r\n      }\r\n\r\n      if (typeof memento.editor === \"string\") {\r\n        this.installEditor(Function(`return new ${memento.editor}()`)())\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * The base class for all visible elements inside a canvas.\r\n *\r\n *\r\n * @example\r\n *\r\n *    // Create the line and modify the start/end after inserting them into\r\n *    // the canvas\r\n *    let line1 =  new draw2d.shape.basic.Line({startX:30, startY:30, endX:100, endY:80});\r\n *\r\n *    canvas.add(line1);\r\n *\r\n *    // Create the line with a given start/end coordinate in the constructor\r\n *    //\r\n *    let line2 = new draw2d.shape.basic.Line({\r\n *          startX:20,\r\n *          startY:80,\r\n *          endX:200,\r\n *          endY:150,\r\n *          stroke:3,\r\n *          color:\"#1d1dff\"\r\n *     });\r\n *    canvas.add(line2);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.Figure\r\n */\r\ndraw2d.shape.basic.Line = draw2d.Figure.extend(\r\n  /** @lends draw2d.shape.basic.Line.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.Line\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(0, 0, 0),\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas witht he given start and\r\n   * end coordinate.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // click area for the line hit test\r\n    this.corona = 10\r\n    this.isGlowing = false\r\n    this.lineColor = this.DEFAULT_COLOR\r\n    this.stroke = 1\r\n    this.outlineStroke = 0\r\n    this.outlineColor = new draw2d.util.Color(null)\r\n    this.outlineVisible = false\r\n\r\n    this.draggedSegment = null\r\n\r\n    this.dasharray = null\r\n    this.dasharrayOffset = null;\r\n    this.animate = false;\r\n    this.animateDirection = false;\r\n\r\n    this.start = new draw2d.geo.Point(30, 30)\r\n    this.end = new draw2d.geo.Point(100, 100)\r\n\r\n    this.glowColor = new draw2d.util.Color(\"#3f72bf\")\r\n    this.glowStrokeSize = this.stroke * 2.5;\r\n\r\n    this.vertices = new draw2d.util.ArrayList()\r\n    this.vertices.add(this.start.clone())\r\n    this.vertices.add(this.end.clone())\r\n\r\n    this._super(\r\n      {\r\n        deleteable: false,\r\n        selectable: true,\r\n        ...attr},\r\n       {\r\n        // @attr {Number} start the  coordinates of the start point */\r\n        start: this.setStartPosition,\r\n        // @attr {Number} startX the x coordinate of the start point */\r\n        startX: this.setStartX,\r\n        // @attr {Number} startY the y coordinate of the start point */\r\n        startY: this.setStartY,\r\n        // @attr {Number} end the coordinates of the end point */\r\n        end: this.setEndPosition,\r\n        // @attr {Number} endX the x coordinate of the end */\r\n        endX: this.setEndX,\r\n        // @attr {Number} endY the y coordinate of the end */\r\n        endY: this.setEndY,\r\n        // @attr {Number} vertices the x coordinate of the start point */\r\n        vertices: this.setVertices,\r\n        // @attr {String | draw2d.util.Color} outlineColor the outline color of the line */\r\n        outlineColor: this.setOutlineColor,\r\n        // @attr {Number} outlineStroke the line width of the outline */\r\n        outlineStroke: this.setOutlineStroke,\r\n        // @attr {String|draw2d.util.Color} color the color of the line */\r\n        color: this.setColor,\r\n        // @attr {Number} stroke the line width of the color */\r\n        stroke: this.setStroke,\r\n        corona: this.setCorona,\r\n        // @attr {String} dasharray the line pattern see {@link draw2d.shape.basic.Line#setDashArray} for more information*/\r\n        dasharray: this.setDashArray,\r\n        // @attr {Boolean} glow the glow flag for the shape. The representation of the \"glow\" depends on the shape */\r\n        glow: this.setGlow,\r\n        glowStrokeSize: this.setGlowStrokeSize,\r\n        animate: this.setAnmiate,\r\n        animateDirection: this.setAnimateDirection,\r\n        dasharrayOffset: this.setDasharrayOffset,\r\n\r\n        ...setter},\r\n      {\r\n        start: this.getStartPosition,\r\n        end: this.getEndPosition,\r\n        outlineColor: this.getOutlineColor,\r\n        outlineStroke: this.getOutlineStroke,\r\n        stroke: this.getStroke,\r\n        corona: this.getCorona,\r\n        color: this.getColor,\r\n        dasharray: this.getDashArray,\r\n        vertices: this.getVertices,\r\n        glowStrokeSize: this.getGlowStrokeSize,\r\n        animate: this.getAnmiate,\r\n        animateDirection: this.getAnimateDirection,\r\n        dasharrayOffset: this.getDasharrayOffset,\r\n        \r\n        ...getter})\r\n\r\n    // some router installs a edit policy. In this case we want delete them\r\n    //\r\n    if (this.editPolicy.getSize() === 0) {\r\n      this.installEditPolicy(new draw2d.policy.line.LineSelectionFeedbackPolicy())\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the outline color of the line.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       outlineColor: color\r\n   *     });\r\n   *\r\n   * @param {draw2d.util.Color/String} color The new color of the line.\r\n   * @since 4.2.1\r\n   **/\r\n  setOutlineColor: function (color) {\r\n    this.outlineColor = new draw2d.util.Color(color)\r\n    this.repaint()\r\n    this.fireEvent(\"change:outlineColor\", {value: this.outlineColor})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * The outline color of the text\r\n   *\r\n   * @returns {draw2d.util.Color}\r\n   * @since 4.2.1\r\n   */\r\n  getOutlineColor: function () {\r\n    return this.outlineColor\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the outline stroke of the line to use.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       outlineStroke: w\r\n   *     });\r\n   *\r\n   * @param {Number} w The new outline width of the line\r\n   * @since 4.2.1\r\n   **/\r\n  setOutlineStroke: function (w) {\r\n    this.outlineStroke = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:outlineStroke\", {value: this.outlineStroke})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * The used outline line width.\r\n   *\r\n   * @returns {Number}\r\n   * @since 4.2.1\r\n   **/\r\n  getOutlineStroke: function () {\r\n    return this.outlineStroke\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called if the drag and drop action begins. You can return [false] if you\r\n   * want avoid that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean} true if the figure accepts dragging\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey, isFaked) {\r\n    let result = this._super(x, y, shiftKey, ctrlKey)\r\n\r\n    if (result === true && isFaked !== true) {\r\n      this.draggedSegment = {index: 0, start: this.start, end: this.end}\r\n    }\r\n    return result\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Don't call them manually. This will be done by the framework.<br>\r\n   * Will be called if the object are moved via drag and drop.\r\n   * Sub classes can override this method to implement additional stuff. Don't forget to call\r\n   * the super implementation via <code>this._super(dx, dy, dx2, dy2);</code>\r\n   * @private\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    if (this.command === null) {\r\n      return\r\n    }\r\n\r\n    this.vertices.each(function (i, e) {\r\n      e.translate(dx2, dy2)\r\n    })\r\n    this.command.updateVertices(this.vertices.clone())\r\n\r\n    // start/end are separate draw2d.geo.Point objects. Required for routing and determining if a node is dragged away\r\n    // from the connection. In this case we must modify the start/end by hand\r\n    this.start.translate(dx2, dy2)\r\n    this.end.translate(dx2, dy2)\r\n\r\n\r\n    this.svgPathString = null\r\n    this._super(dx, dy, dx2, dy2)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n    // Element ist zwar schon an seine Position, das Command muss aber trotzdem\r\n    // in dem CommandStack gelegt werden damit das Undo funktioniert.\r\n    //\r\n    this.isInDragDrop = false\r\n    this.draggedSegment = null\r\n\r\n    if (this.command === null) {\r\n      return\r\n    }\r\n\r\n    this.canvas.getCommandStack().execute(this.command)\r\n    this.command = null\r\n    this.isMoving = false\r\n\r\n    // notify all installed policies\r\n    //\r\n    this.editPolicy.each( (i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.onDragEnd(this.canvas, this, x, y, shiftKey, ctrlKey)\r\n      }\r\n    })\r\n\r\n    // inform all other listener\r\n    this.fireEvent(\"move\", {figure: this, dx: 0, dy: 0})\r\n\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragend\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the position of the object.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       x: x,\r\n   *       y: y\r\n   *     });\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x The new x coordinate of the figure or the x/y coordinate if it is an draw2d.geo.Point\r\n   * @param {Number} [y] The new y coordinate of the figure\r\n   **/\r\n  setPosition: function (x, y) {\r\n    if (typeof x === \"undefined\") {\r\n      debugger\r\n    }\r\n\r\n    // get the top left corner of the Line\r\n    let topLeft = {x: this.getX(), y: this.getY()}\r\n    let diff = {x:0 , y:0}\r\n\r\n    if (x instanceof draw2d.geo.Point) {\r\n      diff.x = x.x - topLeft.x\r\n      diff.y = x.y - topLeft.y\r\n    } else {\r\n      diff.x = x - topLeft.x\r\n      diff.y = y - topLeft.y\r\n    }\r\n    this.translate(diff.x, diff.y)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called when a user clicks on the element.\r\n   *\r\n   *     // Alternatively you can register for this event with\r\n   *     figure.on(\"click\", function(emitterFigure){\r\n   *         alert(\"clicked\");\r\n   *     });\r\n   *\r\n   * @template\r\n   * @since 4.0.0\r\n   */\r\n  onClick: function () {\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the line style for this object.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       dasharray: dashPattern\r\n   *     });\r\n   *\r\n   * @param {String} dashPattern Can be one of this [\"\", \"-\", \".\", \"-.\", \"-..\", \". \", \"- \", \"--\", \"- .\", \"--.\", \"--..\"]\r\n   */\r\n  setDashArray: function (dashPattern) {\r\n    this.dasharray = dashPattern\r\n    this.repaint()\r\n\r\n    this.fireEvent(\"change:dashArray\", {value: this.dasharray})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Get the line style for this object.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr(\"dasharray\");\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  getDashArray: function () {\r\n    return this.dasharray\r\n  },\r\n\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework. Don't call them manually.\r\n   *\r\n   * @private\r\n   **/\r\n  createShapeElement: function () {\r\n    let set = this.canvas.paper.set()\r\n\r\n    // the drop shadow or border line\r\n    set.push(this.canvas.paper.path(\"M\" + this.start.x + \" \" + this.start.y + \"L\" + this.end.x + \" \" + this.end.y))\r\n    // the main path\r\n    set.push(this.canvas.paper.path(\"M\" + this.start.x + \" \" + this.start.y + \"L\" + this.end.x + \" \" + this.end.y))\r\n    set.node = set.items[1].node\r\n\r\n    // indicate that the outline is visible at the moment\r\n    // the repaint update the status correct and set the attributes for\r\n    // the first time\r\n    this.outlineVisible = true//this.outlineStroke>0;\r\n\r\n    return set\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   *\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    // don't override existing values\r\n    //\r\n    if (typeof attributes === \"undefined\") {\r\n      attributes = {\r\n        \"stroke\": this.lineColor.rgba(),\r\n        \"stroke-width\": this.stroke,\r\n        \"path\": [\"M\", this.start.x, this.start.y, \"L\", this.end.x, this.end.y].join(\" \")\r\n      }\r\n    }\r\n    else {\r\n      // may a router has calculate another path. don't override them.\r\n      if (typeof attributes.path === \"undefined\") {\r\n        attributes.path = [\"M\", this.start.x, this.start.y, \"L\", this.end.x, this.end.y].join(\" \")\r\n      }\r\n      attributes.stroke??=this.lineColor.rgba()\r\n      attributes[\"stroke-width\"]??=this.stroke\r\n    }\r\n\r\n    attributes[\"stroke-dasharray\"]??=this.dasharray\r\n \r\n    this._super(attributes)\r\n\r\n \r\n    if (this.outlineStroke > 0) {\r\n      this.shape.items[0].attr({\r\n        \"stroke-width\": (this.outlineStroke + this.stroke),\r\n        \"stroke\": this.outlineColor.rgba()\r\n      })\r\n      if (this.outlineVisible === false)\r\n        this.shape.items[0].show()\r\n      this.outlineVisible = true\r\n    }\r\n    else if (this.outlineVisible === true) {\r\n      // reset them once\r\n      this.shape.items[0].attr({\"stroke-width\": 0, \"stroke\": \"none\"})\r\n      this.shape.items[0].hide()\r\n      this.outlineVisible = false\r\n    }\r\n    if(this.animate) {\r\n      $(this.shape.items[1].node).css({\"stroke-dashoffset\": this.animateDirection ? \"200\" : \"-200\", \"animation\": \"lineAnimation 5s linear infinite\"});\r\n    }\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Moves the element to the background. Additional\r\n   * the internal model changed as well.\r\n   *\r\n   * @since 4.7.2\r\n   */\r\n  toBack: function (figure) {\r\n    this._super(figure)\r\n\r\n    if (this.outlineVisible === true) {\r\n      this.shape.items[0].insertBefore(this.shape.items[1])\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  setGlowColor: function (w) {\r\n    this.glowColor = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:glowColor\", {value: this.glowColor})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  getGlowStrokeSize: function () {\r\n    return this.glowStrokeSize\r\n  },\r\n\r\n  setGlowStrokeSize: function (w) {\r\n    this.glowStrokeSize = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:glowStrokeSize\", {value: this.glowStrokeSize})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  getGlowColor: function () {\r\n    return this.glowColor\r\n  },\r\n\r\n  getDasharrayOffset: function () {\r\n    return this.dasharrayOffset\r\n  },\r\n\r\n  setDasharrayOffset: function (w) {\r\n    this.dasharrayOffset = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:dasharrayOffset\", {value: this.dasharrayOffset})\r\n\r\n    return this\r\n  },\r\n\r\n  getAnimate: function () {\r\n    return this.animate\r\n  },\r\n\r\n  setAnimate: function (w) {\r\n    this.animate = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:animate\", {value: this.animate})\r\n\r\n    return this\r\n  },\r\n\r\n  getAnimateDirection: function () {\r\n    return this.animateDirection\r\n  },\r\n\r\n  setAnimateDirection: function (w) {\r\n    this.animateDirection = w\r\n    this.repaint()\r\n    this.fireEvent(\"change:animateDirection\", {value: this.animateDirection})\r\n\r\n    return this\r\n  },\r\n  \r\n  /**\r\n   *\r\n   * Highlight the element or remove the highlighting\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       glow: flag\r\n   *     });\r\n   *\r\n   * @param {Boolean} flag indicates glow/noGlow\r\n   * @template\r\n   */\r\n  setGlow: function (flag) {\r\n    if (this.isGlowing === flag) {\r\n      return\r\n    }\r\n\r\n    if (flag === true) {\r\n      // store old values for restore\r\n      this._lineColor = this.lineColor\r\n      this._stroke = this.stroke\r\n\r\n      this.setColor(this.glowColor) \r\n      this.setStroke(this.glowStrokeSize)\r\n    }\r\n    else {\r\n      this.setColor(this._lineColor)\r\n      this.setStroke(this._stroke)\r\n    }\r\n\r\n    this.isGlowing = flag\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * You can't drag&drop the resize handles if the line not resizeable.\r\n   * @returns boolean\r\n   **/\r\n  isResizeable: function () {\r\n    return true\r\n  },\r\n\r\n\r\n  /**\r\n   * Set the line width. This enforce a repaint of the line.\r\n   * This method fires a <i>document dirty</i> event.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       stroke: w\r\n   *     });\r\n   *\r\n   * @param {Number} w The new line width of the figure.\r\n   **/\r\n  setStroke: function (w) {\r\n    this.stroke = parseFloat(w)\r\n\r\n    this.repaint()\r\n    this.fireEvent(\"change:stroke\", {value: this.stroke})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * The used line width.\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getStroke: function () {\r\n    return this.stroke\r\n  },\r\n\r\n\r\n\r\n    /**\r\n     *  click area for the line hit test.\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       corona: w\r\n     *     });\r\n     *\r\n     * @param {Number} w The new click hit offset\r\n     **/\r\n    setCorona: function (w) {\r\n      this.corona = parseFloat(w)\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * The used corona hitTest area.\r\n     *\r\n     * @returns {Number}\r\n     **/\r\n    getCorona: function () {\r\n      return this.corona\r\n    },\r\n\r\n  /**\r\n   *\r\n   * Set the color of the line.\r\n   * This method fires a <i>document dirty</i> event.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       color: color\r\n   *     });\r\n   *\r\n   * @param {draw2d.util.Color|String} color The new color of the line.\r\n   **/\r\n  setColor: function (color) {\r\n    this.lineColor = new draw2d.util.Color(color)\r\n    this.repaint()\r\n    this.fireEvent(\"change:color\", {value: this.lineColor})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the current paint color.\r\n   *\r\n   * @returns {draw2d.util.Color} The paint color of the line.\r\n   **/\r\n  getColor: function () {\r\n    return this.lineColor\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Translate the line with the given x/y offset.\r\n   *\r\n   * @param {Number} dx The new x translate offset\r\n   * @param {Number} dy The new y translate offset\r\n   * @since 4.1.0\r\n   **/\r\n  translate: function (dx, dy) {\r\n    this.vertices.each(function (i, e) {\r\n      e.translate(dx, dy)\r\n    })\r\n\r\n    // update start/end if the first or last vertex has been changed\r\n    //\r\n    this.start = this.vertices.first().clone()\r\n    this.end = this.vertices.last().clone()\r\n\r\n    let _this = this\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * return the bounding box of the line or polygon\r\n   *\r\n   * TODO: precalculate or cache this values\r\n   *\r\n   * @returns {draw2d.geo.Rectangle}\r\n   * @since 4.8.2\r\n   */\r\n  getBoundingBox: function () {\r\n    let minX = Math.min(...this.vertices.asArray().map(n => n.x))\r\n    let minY = Math.min(...this.vertices.asArray().map(n => n.y))\r\n    let maxX = Math.max(...this.vertices.asArray().map(n => n.x))\r\n    let maxY = Math.max(...this.vertices.asArray().map(n => n.y))\r\n    let width = maxX - minX\r\n    let height = maxY - minY\r\n\r\n    return new draw2d.geo.Rectangle(minX, minY, width, height)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Set the start point of the line.\r\n   * This method fires a <i>document dirty</i> event.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       startX: x,\r\n   *       startY: y\r\n   *     });\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x the x coordinate of the start point\r\n   * @param {Number} [y] the y coordinate of the start point\r\n   **/\r\n  setStartPosition: function (x, y) {\r\n    let pos = new draw2d.geo.Point(x, y)\r\n    if (this.start.equals(pos)) {\r\n      return this\r\n    }\r\n\r\n    this.start.setPosition(pos)\r\n    this.vertices.first().setPosition(pos)\r\n    this.repaint()\r\n\r\n    let _this = this\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n    this.fireEvent(\"change:start\", {value: this.start})\r\n\r\n    return this\r\n  },\r\n  /** @deprecated */\r\n  setStartPoint: function (x, y) {\r\n    return this.setStartPosition(x, y)\r\n  },\r\n\r\n  setStartX: function (x) {\r\n    this.setStartPosition(x, this.start.y)\r\n  },\r\n\r\n  setStartY: function (y) {\r\n    this.setStartPosition(this.start.x, y)\r\n  },\r\n\r\n  setEndX: function (x) {\r\n    this.setEndPosition(x, this.end.y)\r\n  },\r\n\r\n  setEndY: function (y) {\r\n    this.setEndPosition(this.end.x, y)\r\n  },\r\n\r\n  /**\r\n   * Set the end point of the line.\r\n   * This method fires a <i>document dirty</i> event.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       endX: 3,\r\n   *       endY: 10\r\n   *     });\r\n   *\r\n   *     // or\r\n   *     figure.attr({\r\n   *       end: {x:3, y:10}\r\n   *     });\r\n   * @param {Number|draw2d.geo.Point} x the x coordinate or a draw2d.geo.Point of the end point\r\n   * @param {Number} [y] the y coordinate of the end point\r\n   **/\r\n  setEndPosition: function (x, y) {\r\n    let pos = new draw2d.geo.Point(x, y)\r\n    if (this.end.equals(pos)) {\r\n      return this\r\n    }\r\n\r\n    this.end.setPosition(pos)\r\n    this.vertices.last().setPosition(pos)\r\n    this.repaint()\r\n\r\n    this.editPolicy.each((i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n\r\n    this.fireEvent(\"change:end\", {value: this.end})\r\n\r\n    return this\r\n  },\r\n  /** @deprecated **/\r\n  setEndPoint: function (x, y) {\r\n    return this.setEndPosition(x, y)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the x coordinate of the start.\r\n   * @returns {Number}\r\n   **/\r\n  getStartX: function () {\r\n    return this.start.x\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the y coordinate of the start.\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getStartY: function () {\r\n    return this.start.y\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the start point.\r\n   *\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  getStartPosition: function () {\r\n    return this.start.clone()\r\n  },\r\n  /** @deprecated **/\r\n  getStartPoint: function () {\r\n    return this.getStartPosition()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the x coordinate of the end point\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getEndX: function () {\r\n    return this.end.x\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the y coordinate of the end point.\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getEndY: function () {\r\n    return this.end.y\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the end point.\r\n   *\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  getEndPosition: function () {\r\n    return this.end.clone()\r\n  },\r\n  /**\r\n   * @deprecated use `getEndPosition`\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  getEndPoint: function () {\r\n    return this.getEndPosition()\r\n  },\r\n\r\n  /**\r\n   *\r\n   * The x-offset related to the parent figure or canvas.\r\n   *\r\n   * @returns {Number} the x-offset to the parent figure\r\n   **/\r\n  getX: function () {\r\n    return this.getBoundingBox().x\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * The x-offset related to the parent figure or canvas.\r\n   *\r\n   * @returns {Number} the x-offset to the parent figure\r\n   **/\r\n  getY: function () {\r\n    return this.getBoundingBox().y\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the Vertex with the given index.\r\n   *\r\n   * @param {Number} index the index of the vertex to return\r\n   */\r\n  getVertex: function (index) {\r\n    return this.vertices.get(index)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Update the vertex at the give position with the new coordinate\r\n   *\r\n   * @param {Number} index the index of the vertex to update\r\n   * @param {Number|draw2d.geo.Point} x the x coordinate or the draw2d.geo.Point object\r\n   * @param {Number} [y] the y coordinate or undefined of the second argument is a point\r\n   *\r\n   * @since 4.0.0\r\n   */\r\n  setVertex: function (index, x, y) {\r\n    if (x instanceof draw2d.geo.Point) {\r\n      y = x.y\r\n      x = x.x\r\n    }\r\n\r\n    let vertex = this.vertices.get(index)\r\n\r\n    // invalid point or nothing to do\r\n    //\r\n    if (vertex === null || (vertex.x === x && vertex.y === y)) {\r\n      return\r\n    }\r\n\r\n    vertex.x = parseFloat(x)\r\n    vertex.y = parseFloat(y)\r\n\r\n    // update start/end if the first or last vertex has been changed\r\n    //\r\n    this.start = this.vertices.first().clone()\r\n    this.end = this.vertices.last().clone()\r\n\r\n    this.svgPathString = null\r\n    this.routingRequired = true\r\n    this.repaint()\r\n\r\n    this.editPolicy.each((i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the vertices of the connection\r\n   *\r\n   * @returns {draw2d.util.ArrayList} an draw2d.util.ArrayList of type draw2d.Point\r\n   **/\r\n  getVertices: function () {\r\n    return this.vertices\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Update the vertices of the object. The given array is copied and assigned.\r\n   *\r\n   * @param {draw2d.util.ArrayList|Array} vertices the new vertices of the polyline.\r\n   *\r\n   * @since 4.0.1\r\n   */\r\n  setVertices: function (vertices) {\r\n\r\n    // convert json document/array to draw2d ArrayList\r\n    //\r\n    if (Array.isArray(vertices)) {\r\n      this.vertices = new draw2d.util.ArrayList()\r\n      vertices.forEach(element => {\r\n        this.vertices.add(new draw2d.geo.Point(element))\r\n      })\r\n    }\r\n    // use the given ArrayList\r\n    //\r\n    else if (vertices instanceof draw2d.util.ArrayList) {\r\n      this.vertices = vertices.clone(true)\r\n    }\r\n    else {\r\n      throw \"invalid argument for Line.setVertices\"\r\n    }\r\n\r\n    // can happen if the given vertices array is empty\r\n    //\r\n    if (this.vertices.getSize() > 1) {\r\n      this.start = this.vertices.first().clone()\r\n      this.end = this.vertices.last().clone()\r\n    }\r\n\r\n    // update the UI and the segment parts\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    // align the SelectionHandles to the new situation\r\n    // This is a Hack....normally this should be done below and the Line shouldn't know\r\n    // something about this issue....this is complete a \"EditPolicy\" domain to handle this.\r\n    if (!this.selectionHandles.isEmpty()) {\r\n      this.editPolicy.each((i, e) =>{\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(this.canvas, this)\r\n          e.onSelect(this.canvas, this)\r\n        }\r\n      })\r\n    }\r\n\r\n    // notify the listener about the changes\r\n    this.editPolicy.each( (i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the segments of the line with {start:s, end: e} JSON array list\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  getSegments: function () {\r\n    let result = new draw2d.util.ArrayList()\r\n    result.add({start: this.getStartPosition(), end: this.getEndPosition()})\r\n\r\n    return result\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the length of the line.\r\n   *\r\n   * @returns {Number}\r\n   **/\r\n  getLength: function () {\r\n    return Math.sqrt((this.start.x - this.end.x) * (this.start.x - this.end.x) + (this.start.y - this.end.y) * (this.start.y - this.end.y))\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the angle of the line in degree.\r\n   *\r\n   * <pre>\r\n   *                                270°\r\n   *                              |\r\n   *                              |\r\n   *                              |\r\n   *                              |\r\n   * 180° -------------------------+------------------------> +X\r\n   *                              |                        0°\r\n   *                              |\r\n   *                              |\r\n   *                              |\r\n   *                              V +Y\r\n   *                             90°\r\n   * </pre>\r\n   * @returns {Number}\r\n   **/\r\n  getAngle: function () {\r\n    let length = this.getLength()\r\n    let angle = -(180 / Math.PI) * Math.asin((this.start.y - this.end.y) / length)\r\n\r\n    if (angle < 0) {\r\n      if (this.end.x < this.start.x) {\r\n        angle = Math.abs(angle) + 180\r\n      }\r\n      else {\r\n        angle = 360 - Math.abs(angle)\r\n      }\r\n    }\r\n    else {\r\n      if (this.end.x < this.start.x) {\r\n        angle = 180 - angle\r\n      }\r\n    }\r\n    return angle\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the Command to perform the specified Request or null if the shape want cancel the\r\n   * operation or it can't operate the command.\r\n   *\r\n   * @param {draw2d.command.CommandType} request describes the Command being requested\r\n   * @returns {draw2d.command.Command} null or a Command\r\n   * @private\r\n   **/\r\n  createCommand: function (request) {\r\n    if (request.getPolicy() === draw2d.command.CommandType.MOVE) {\r\n      if (this.isDraggable()) {\r\n        return new draw2d.command.CommandMoveVertices(this)\r\n      }\r\n    }\r\n\r\n    if (request.getPolicy() === draw2d.command.CommandType.DELETE) {\r\n      if (this.isDeleteable()) {\r\n        return new draw2d.command.CommandDelete(this)\r\n      }\r\n    }\r\n\r\n    if (request.getPolicy() === draw2d.command.CommandType.MOVE_BASEPOINT) {\r\n      if (this.isDraggable()) {\r\n        return new draw2d.command.CommandMoveVertex(this)\r\n      }\r\n    }\r\n\r\n    return null\r\n  },\r\n\r\n  installEditPolicy: function (policy) {\r\n    if (!(policy instanceof draw2d.policy.line.LineSelectionFeedbackPolicy) && policy instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n      return// silently\r\n    }\r\n\r\n    this._super(policy)\r\n\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Checks if the hands over coordinate close to the line. The 'corona' is considered\r\n   * for this test. This means the point isn't direct on the line. Is it only close to the\r\n   * line!\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {Boolean}\r\n   **/\r\n  hitTest: function (px, py) {\r\n    return draw2d.shape.basic.Line.hit(this.corona + this.stroke, this.start.x, this.start.y, this.end.x, this.end.y, px, py)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the projection of the point on the line.\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  pointProjection: function (px, py) {\r\n    let pt = new draw2d.geo.Point(px, py)\r\n    let p1 = this.getStartPosition()\r\n    let p2 = this.getEndPosition()\r\n    return draw2d.geo.Line.pointProjection(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Returns the point onto the line which has the 'percentage' position onto the line.\r\n   *\r\n   * @param {Number} percentage value between [0..1]\r\n   * @returns {*}\r\n   */\r\n  lerp: function (percentage) {\r\n    let p1 = this.getStartPosition()\r\n    let p2 = this.getEndPosition()\r\n    percentage = Math.min(1, Math.max(0, percentage))\r\n    return new draw2d.geo.Point(p1.x + (p2.x - p1.x) * percentage, p1.y + (p2.y - p1.y) * percentage)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return all intersection points between the given Line.\r\n   *\r\n   * @param {draw2d.shape.basic.Line} other\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  intersection: function (other) {\r\n    let result = new draw2d.util.ArrayList()\r\n\r\n    // empty result. the lines are equal...infinit array\r\n    if (other === this) {\r\n      return result\r\n    }\r\n\r\n    let segments1 = this.getSegments()\r\n    let segments2 = other.getSegments()\r\n\r\n    segments1.each(function (i, s1) {\r\n      segments2.each(function (j, s2) {\r\n        let p = draw2d.shape.basic.Line.intersection(s1.start, s1.end, s2.start, s2.end)\r\n        if (p !== null) {\r\n          result.add(p)\r\n        }\r\n      })\r\n    })\r\n    return result\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return an objects with all important attributes for XML or JSON serialization\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function () {\r\n    let memento = this._super()\r\n    delete memento.x\r\n    delete memento.y\r\n    delete memento.width\r\n    delete memento.height\r\n\r\n    memento.stroke = this.stroke\r\n    memento.color = this.getColor().rgba()\r\n    memento.outlineStroke = this.outlineStroke\r\n    memento.outlineColor = this.outlineColor.rgba()\r\n    if (this.dasharray !== null) {\r\n      memento.dasharray = this.dasharray\r\n    }\r\n\r\n    if (this.editPolicy.getSize() > 0) {\r\n      memento.policy = this.editPolicy.first().NAME\r\n    }\r\n\r\n    // the attribute \"vertex\" will be overridden by a router if the element is a\r\n    // \"PolyLine\" instance and has the correct router. Connections mainly ignore this\r\n    // attribute because the start/end is defined by the ports and the vertices in between are\r\n    // calculated by a router.\r\n    memento.vertex = []\r\n    this.getVertices().each( (i, e) => {\r\n      memento.vertex.push({x: e.x, y: e.y})\r\n    })\r\n\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Read all attributes from the serialized properties and transfer them into the shape.\r\n   *\r\n   * @param {Object} memento\r\n   * @returns {this}\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.dasharray === \"string\") {\r\n      this.dasharray = memento.dasharray\r\n    }\r\n    if (typeof memento.stroke !== \"undefined\") {\r\n      this.setStroke(parseFloat(memento.stroke))\r\n    }\r\n    if (typeof memento.color !== \"undefined\") {\r\n      this.setColor(memento.color)\r\n    }\r\n    if (typeof memento.outlineStroke !== \"undefined\") {\r\n      this.setOutlineStroke(memento.outlineStroke)\r\n    }\r\n    if (typeof memento.outlineColor !== \"undefined\") {\r\n      this.setOutlineColor(memento.outlineColor)\r\n    }\r\n    if (typeof memento.policy !== \"undefined\") {\r\n      try {\r\n        this.installEditPolicy(Function(`return new ${memento.policy}()`)())\r\n      }\r\n      catch (exc) {\r\n        debug.warn(\"Unable to install edit policy '\" + memento.policy + \"' forced by \" + this.NAME + \".setPersistentAttributes. Using default.\")\r\n      }\r\n    }\r\n\r\n    // restore the vertex of the connection/line if any are given\r\n    //\r\n    // it makes no sense to restore vertices with only zero or one vertex. This\r\n    // isn't a \"line\" at all.\r\n    if (Array.isArray(memento.vertex) && memento.vertex.length > 1) {\r\n      this.setVertices(memento.vertex)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\r\n\r\n/**\r\n * see: http://en.wikipedia.org/wiki/Line-line_intersection\r\n *\r\n * @param {draw2d.geo.Point} a1\r\n * @param {draw2d.geo.Point} a2\r\n * @param {draw2d.geo.Point} b1\r\n * @param {draw2d.geo.Point} b2\r\n *\r\n * @static\r\n * @private\r\n * @returns {draw2d.geo.Point}\r\n */\r\ndraw2d.shape.basic.Line.intersection = function (a1, a2, b1, b2) {\r\n  let result = null\r\n\r\n  let ua_t = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x)\r\n  let ub_t = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x)\r\n  let u_b = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y)\r\n\r\n  if (u_b !== 0) {\r\n    let ua = ua_t / u_b\r\n    let ub = ub_t / u_b\r\n\r\n    if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n      result = new draw2d.geo.Point((a1.x + ua * (a2.x - a1.x)) | 0, (a1.y + ua * (a2.y - a1.y)) | 0)\r\n\r\n      // determine if the lines are crossing or just touching\r\n      //\r\n      result.justTouching = (0 === ua || ua === 1 || 0 === ub || ub === 1)\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n\r\n/**\r\n * Static util function to determine is a point(px,py) on the line(x1,y1,x2,y2)\r\n * A simple hit test.\r\n *\r\n * @returns {Boolean}\r\n * @static\r\n * @private\r\n * @param {Number} coronaWidth the accepted corona for the hit test\r\n * @param {Number} X1 x coordinate of the start point of the line\r\n * @param {Number} Y1 y coordinate of the start point of the line\r\n * @param {Number} X2 x coordinate of the end point of the line\r\n * @param {Number} Y2 y coordinate of the end point of the line\r\n * @param {Number} px x coordinate of the point to test\r\n * @param {Number} py y coordinate of the point to test\r\n **/\r\ndraw2d.shape.basic.Line.hit = function (coronaWidth, X1, Y1, X2, Y2, px, py) {\r\n  return draw2d.geo.Line.distance(X1, Y1, X2, Y2, px, py) < coronaWidth\r\n}\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Selection handle for connections and normal lines.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.LineResizeHandle\r\n */\r\ndraw2d.shape.basic.LineEndResizeHandle = draw2d.shape.basic.LineResizeHandle.extend(\r\n  /** @lends draw2d.shape.basic.LineEndResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.LineEndResizeHandle\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (figure) {\r\n    this._super({owner: figure, index: figure.getVertices().getSize() - 1})\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the Port assigned to this ResizeHandle if the line is an instance of draw2d.Connection\r\n   *\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getRelatedPort: function () {\r\n    if (this.owner instanceof draw2d.Connection) {\r\n      return this.owner.getTarget()\r\n    }\r\n\r\n    return null\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the peer Port assigned to this ResizeHandle if the line is an instance of draw2d.Connection\r\n   *\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getOppositePort: function () {\r\n    if (this.owner instanceof draw2d.Connection) {\r\n      return this.owner.getSource()\r\n    }\r\n\r\n    return null\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called from the framework during a drag&drop operation\r\n   *\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @returns {Boolean}\r\n   * @private\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    this._super(dx, dy, dx2, dy2)\r\n\r\n    let objPos = this.owner.getEndPoint().clone()\r\n    objPos.translate(dx2, dy2)\r\n\r\n    if (this.command !== null) {\r\n      this.command.updatePosition(objPos)\r\n    }\r\n\r\n    this.owner.setEndPoint(objPos)\r\n\r\n    this.owner.isMoving = true\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Resizehandle has been drop on a InputPort/OutputPort.\r\n   *\r\n   * @param {draw2d.Figure} dropTarget\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onDrop: function (dropTarget, x, y, shiftKey, ctrlKey) {\r\n    this.owner.isMoving = false\r\n\r\n    if (this.owner instanceof draw2d.Connection && this.command !== null) {\r\n      this.command.setNewPorts(this.owner.getSource(), dropTarget)\r\n      this.getCanvas().getCommandStack().execute(this.command)\r\n    }\r\n    this.command = null\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Controls the location of the resize handle\r\n   *\r\n   **/\r\n  relocate: function () {\r\n\r\n    let resizeWidthHalf = this.getWidth() / 2\r\n    let resizeHeightHalf = this.getHeight() / 2\r\n\r\n    let anchor = this.owner.getEndPoint()\r\n\r\n    this.setPosition(anchor.x - resizeWidthHalf, anchor.y - resizeHeightHalf)\r\n\r\n    return this\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Base class for selection handle for connections and normal lines.\r\n *\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Circle\r\n */\r\ndraw2d.shape.basic.LineResizeHandle = draw2d.shape.basic.Circle.extend(\r\n  /** @lends draw2d.shape.basic.LineResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.LineResizeHandle\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (attr, setter, getter) {\r\n\r\n    this.zoomCallback = () => {\r\n      this.attr({\r\n        width: this.origWidth * this.getCanvas().getZoom(),\r\n        height: this.origHeight * this.getCanvas().getZoom(),\r\n        stroke: this.origStroke * this.getCanvas().getZoom()\r\n      })\r\n      // size of the ResizeHandle has changed. Force a reposition of handle\r\n      //\r\n      if (!this.blockEvent)\r\n        this.owner.fireEvent(\"move\", {})\r\n    }\r\n\r\n    this._super(\r\n     {\r\n        bgColor: \"#5bcaff\",\r\n        stroke: 1,\r\n        width: 10,\r\n        height: 10,\r\n        minWidth: 0.3,\r\n        minHeight: 0.3,\r\n        selectable: false,\r\n        ...attr},\r\n      {\r\n        owner: this.setOwner,\r\n        index: this.setIndex,\r\n        ...setter},\r\n      {\r\n        owner: this.getOwner,\r\n        index: this.getIndex,\r\n        ...getter})\r\n\r\n    // required in the SelectionEditPolicy to indicate the type of figure\r\n    // which the user clicks\r\n    this.isResizeHandle = true\r\n    this.currentTarget = null\r\n\r\n    this.origWidth = this.width\r\n    this.origHeight = this.height\r\n    this.origStroke = this.stroke\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the current used SVG as string\r\n   *\r\n   * @returns {String}\r\n   */\r\n  getOwner: function () {\r\n    return this.owner\r\n  },\r\n\r\n  setOwner: function (owner) {\r\n    this.owner = owner\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns the index of the selection. In case of a PlyLine the count is dynamic.\r\n   *\r\n   * @returns {Number}\r\n   */\r\n  getIndex: function () {\r\n    return this.index\r\n  },\r\n\r\n  setIndex: function (index) {\r\n    this.index = index\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    let shape = this._super()\r\n\r\n    shape.attr({\"cursor\": \"move\"})\r\n    return shape\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   **/\r\n  setBackgroundColor: function (color) {\r\n    color = new draw2d.util.Color(color)\r\n\r\n    this.bgGradient = \"r(.4,.3)\" + color.hash() + \"-\" + color.darker(0.1).hash() + \":60-\" + color.darker(0.2).hash()\r\n    this._super(color)\r\n    this.setColor(color.darker(0.3))\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the port below the ResizeHandle.\r\n   *\r\n   * @template\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getRelatedPort: function () {\r\n    return null\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the port of the other side of the related connection.\r\n   *\r\n   * @template\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getOppositePort: function () {\r\n    return null\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n\r\n    if (this.bgColor.hash() === \"none\") {\r\n      attributes.fill = this.bgColor.rgba()\r\n    }\r\n    else if (this.getAlpha() < 0.9) {\r\n      attributes.fill = this.bgColor.rgba()\r\n    }\r\n    else {\r\n      attributes.fill = this.bgGradient\r\n    }\r\n\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n  /**\r\n   * Called if the drag and drop action begins. You can return [false] if you\r\n   * want avoid the that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @type {Boolean}\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n    this.command = this.owner.createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE_BASEPOINT))\r\n    // no drag&drop allowed if we didn'T have a valid command.\r\n    // This is one way to send a veto for Connection reconnect\r\n    if (this.command !== null) {\r\n      this.command.setIndex(this.index)\r\n    }\r\n\r\n    this.setAlpha(0.2)\r\n    this.shape.attr({\"cursor\": \"crosshair\"})\r\n\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragstart\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n    return true\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called from the framework during a drag&drop operation\r\n   *\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @returns {Boolean}\r\n   * @private\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    this.setPosition(this.x + dx2, this.y + dy2)\r\n\r\n    let port = this.getOppositePort()\r\n\r\n    let target = port !== null ? port.getCanvas().getBestFigure(this.getX(), this.getY(), [this, this.owner]) : null\r\n\r\n    // the hovering element has been changed\r\n    if (target !== this.currentTarget) {\r\n\r\n      if (this.currentTarget !== null) {\r\n        this.currentTarget.onDragLeave(port)\r\n        this.currentTarget.setGlow(false)\r\n        this.currentTarget.fireEvent(\"dragLeave\", {draggingElement: port})\r\n      }\r\n\r\n      if (target !== null) {\r\n        this.currentTarget = target.delegateTarget(port)\r\n        if (this.currentTarget !== null) {\r\n          this.currentTarget.setGlow(true)\r\n          this.currentTarget.onDragEnter(port) // legacy\r\n          this.currentTarget.fireEvent(\"dragEnter\", {draggingElement: port})\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *  Called after a drag and drop action.<br>\r\n   *        Sub classes can override this method to implement additional stuff. Don't forget to call the super implementation via <code>this._super();</code>\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean}\r\n   */\r\n  onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n    if (!this.isDraggable()) {\r\n      return false\r\n    }\r\n\r\n    this.shape.attr({\"cursor\": \"move\"})\r\n\r\n    let port = this.getOppositePort()\r\n    if (port !== null) {\r\n      if (this.currentTarget !== null) {\r\n\r\n        this.onDrop(this.currentTarget, x, y, shiftKey, ctrlKey)\r\n        this.currentTarget.onDragLeave(port)\r\n        this.currentTarget.setGlow(false)\r\n        this.currentTarget.fireEvent(\"dragLeave\", {draggingElement: port})\r\n        this.currentTarget.onCatch(this, x, y, shiftKey, ctrlKey)\r\n        this.currentTarget = null\r\n      }\r\n    }\r\n\r\n    this.owner.isMoving = false\r\n    // A Connection is stuck to the corresponding ports. So we must reset the position\r\n    // to the origin port if we doesn't drop the ResizeHandle on a other port.\r\n    //\r\n    if (this.owner instanceof draw2d.Connection) {\r\n      if (this.command !== null) {\r\n        this.command.cancel()\r\n      }\r\n    }\r\n    //\r\n    else {\r\n      // An non draggable resizeHandle doesn't create a move/resize command.\r\n      // This happens if the selected figure has set \"isResizeable=false\".\r\n      //\r\n      if (this.command !== null) {\r\n        this.getCanvas().getCommandStack().execute(this.command)\r\n      }\r\n    }\r\n    this.command = null\r\n\r\n    this.setAlpha(1)\r\n\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragend\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Controls the position of the ResizeHandle\r\n   * Called by the framework.\r\n   *\r\n   **/\r\n  relocate: function () {\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * The LineResizeHandle didn't support the SnapToHelper feature if the\r\n   * corresponding object is an Connection. A Connection is always bounded to\r\n   * Port. In this case it makes no sense to use a Grid or Geometry for snapping.\r\n   *\r\n   * @returns {Boolean} return false if the corresponding object didn't support snapTo\r\n   **/\r\n  supportsSnapToHelper: function () {\r\n    if (this.owner instanceof draw2d.Connection) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Show the ResizeHandle and add it to the canvas.<br>\r\n   * Additional bring it in to the front of other figures.\r\n   *\r\n   * @param {draw2d.Canvas} canvas the canvas to use\r\n   * @param {Number} x the x-position\r\n   * @param {Number} y the y-position\r\n   **/\r\n  show: function (canvas, x, y) {\r\n    if (x)\r\n      debugger\r\n    // don't call the parent function. The parent functions make this object selectable/deleteable\r\n    // and a resize handle can't be deleted.\r\n    this.setCanvas(canvas)\r\n    try {\r\n      this.blockEvent = true\r\n      this.zoomCallback()\r\n    }\r\n    finally {\r\n      this.blockEvent = false\r\n    }\r\n\r\n    //     this.setPosition(x,y);\r\n    this.shape.toFront()\r\n    this.canvas.resizeHandles.add(this)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Hide the resize handle and remove it from the canvas.\r\n   *\r\n   **/\r\n  hide: function () {\r\n    // don't call the parent function. The parent functions delete this object\r\n    // and a resize handle shouldn't be deleted.\r\n    if (this.shape === null) {\r\n      return\r\n    }\r\n\r\n    this.canvas.resizeHandles.remove(this)\r\n    this.setCanvas(null)\r\n  },\r\n\r\n\r\n  setCanvas: function (canvas) {\r\n\r\n    if (this.canvas !== null) {\r\n      this.canvas.off(this.zoomCallback)\r\n    }\r\n\r\n    this._super(canvas)\r\n\r\n    if (this.canvas !== null) {\r\n      this.canvas.on(\"zoom\", this.zoomCallback)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Override this method and redirect them to the canvas. A ResizeHandle didn't support\r\n   * Keyboard interaction at the moment.\r\n   *\r\n   * @param {Number} keyCode the id of the pressed key\r\n   * @param {Boolean} ctrl true if the user has pressed the CTRL/STRG key as well.\r\n   **/\r\n  onKeyDown: function (keyCode, ctrl) {\r\n    // don't call the parent function. The parent functions delete this object\r\n    // and a resize handle can't be deleted.\r\n    this.canvas.onKeyDown(keyCode, ctrl)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Selection handle for connections and normal lines.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.LineResizeHandle\r\n */\r\ndraw2d.shape.basic.LineStartResizeHandle = draw2d.shape.basic.LineResizeHandle.extend(\r\n  /** @lends draw2d.shape.basic.LineStartResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.LineStartResizeHandle\",\r\n\r\n  /**\r\n   *\r\n   */\r\n  init: function (figure) {\r\n    this._super({owner: figure, index: 0})\r\n  },\r\n\r\n  /**\r\n   * Returns the Port below the ResizeHandle\r\n   *\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getRelatedPort: function () {\r\n    if (this.owner instanceof draw2d.Connection)\r\n      return this.owner.getSource()\r\n\r\n    return null\r\n  },\r\n\r\n  /**\r\n   * Returns the Port on the opposite side of the ResizeHandle\r\n   *\r\n   * @returns {draw2d.Port}\r\n   */\r\n  getOppositePort: function () {\r\n    if (this.owner instanceof draw2d.Connection)\r\n      return this.owner.getTarget()\r\n\r\n    return null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called from the framework during a drag&drop operation\r\n   *\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @returns {Boolean}\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    this._super(dx, dy, dx2, dy2)\r\n\r\n    let objPos = this.owner.getStartPoint()\r\n    objPos.translate(dx2, dy2)\r\n\r\n    if (this.command !== null) {\r\n      this.command.updatePosition(objPos)\r\n\r\n    }\r\n    this.owner.setStartPoint(objPos)\r\n\r\n    this.owner.isMoving = true\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Resize handle has been drop on a InputPort/OutputPort.\r\n   *\r\n   * @param {draw2d.Port} dropTarget\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   **/\r\n  onDrop: function (dropTarget, x, y, shiftKey, ctrlKey) {\r\n    this.owner.isMoving = false\r\n\r\n    // The ResizeHandle of a Connection has been dropped on a Port\r\n    // This will enforce a ReconnectCommand\r\n    if (this.owner instanceof draw2d.Connection && this.command !== null) {\r\n      this.command.setNewPorts(dropTarget, this.owner.getTarget())\r\n      this.getCanvas().getCommandStack().execute(this.command)\r\n    }\r\n    this.command = null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Controls the location of the resize handle\r\n   **/\r\n  relocate: function () {\r\n    let resizeWidthHalf = this.getWidth() / 2\r\n    let resizeHeightHalf = this.getHeight() / 2\r\n\r\n    let anchor = this.owner.getStartPoint()\r\n\r\n    this.setPosition(anchor.x - resizeWidthHalf, anchor.y - resizeHeightHalf)\r\n\r\n    return this\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * Oval figure.\r\n *\r\n * @example\r\n *\r\n *    let oval =  new draw2d.shape.basic.Oval({width:150, height:100, x:50, y:10});\r\n *\r\n *    canvas.add(oval);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.basic.Oval = draw2d.VectorFigure.extend(\r\n  /** @lends draw2d.shape.basic.Oval.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.basic.Oval\",\r\n\r\n    /**\r\n     *\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super(\r\n        {\r\n          bgColor: \"#C02B1D\",\r\n          color: \"#1B1B1B\",\r\n          ...attr\r\n        },\r\n        {\r\n          center: this.setCenter,\r\n          ...setter\r\n        },\r\n        getter)\r\n    },\r\n\r\n\r\n    /**\r\n     * @template\r\n     **/\r\n    createShapeElement: function () {\r\n      let halfW = this.getWidth() / 2\r\n      let halfH = this.getHeight() / 2\r\n\r\n      return this.canvas.paper.ellipse(this.getAbsoluteX() + halfW, this.getAbsoluteY() + halfH, halfW, halfH)\r\n    },\r\n\r\n\r\n    /**\r\n    * @inheritdoc\r\n    */\r\n    applyTransformation: function applyTransformation() {\r\n        var ts = \"R\" + this.rotationAngle;\r\n\r\n        this.shape.transform(ts);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Get the center of the figure\r\n     *\r\n     */\r\n    getCenter: function () {\r\n      let w2 = this.getWidth() / 2\r\n      let h2 = this.getHeight() / 2\r\n\r\n      return this.getPosition().translated(w2, h2)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the center of the figure.\r\n     *\r\n     * @param {Number|draw2d.geo.Point} x the new x coordinate of the center or a draw2d.geo.Point object with the center\r\n     * @param {Number} [y] the y coordinate of the new center of the first argument isn't a draw2d.geo.Point object\r\n     */\r\n    setCenter: function (x, y) {\r\n      let pos = new draw2d.geo.Point(x, y)\r\n      let w2 = this.getWidth() / 2\r\n      let h2 = this.getHeight() / 2\r\n\r\n      pos.translate(-w2, -h2)\r\n      this.setPosition(pos)\r\n\r\n      this.fireEvent(\"change:center\", {value: {x: x, y: y}})\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * @template\r\n     **/\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null) {\r\n        return\r\n      }\r\n\r\n      attributes ??= {}\r\n\r\n\r\n      // don't override cx/cy if inherited class has set the center already.\r\n      if (typeof attributes.rx === \"undefined\") {\r\n        attributes.rx = this.width / 2\r\n        attributes.ry = this.height / 2\r\n      }\r\n\r\n      // don't override cx/cy if inherited class has set the center already.\r\n      if (typeof attributes.cx === \"undefined\") {\r\n        attributes.cx = this.getAbsoluteX() + attributes.rx\r\n        attributes.cy = this.getAbsoluteY() + attributes.ry\r\n      }\r\n\r\n      this._super(attributes)\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     *   NOTE: Rotation will need to be added to this function\r\n     *\r\n     **/\r\n    intersectionWithLine: function (a1, a2) {\r\n      let rx = this.getWidth() / 2\r\n      let ry = this.getHeight() / 2\r\n\r\n      let result = new draw2d.util.ArrayList()\r\n\r\n      let origin = new draw2d.geo.Point(a1.x, a1.y)\r\n      let dir = a2.subtract(a1)\r\n      let center = new draw2d.geo.Point(this.getAbsoluteX() + rx, this.getAbsoluteY() + ry)\r\n      let diff = origin.subtract(center)\r\n      let mDir = new draw2d.geo.Point(dir.x / (rx * rx), dir.y / (ry * ry))\r\n      let mDiff = new draw2d.geo.Point(diff.x / (rx * rx), diff.y / (ry * ry))\r\n\r\n      let a = dir.dot(mDir)\r\n      let b = dir.dot(mDiff)\r\n      let c = diff.dot(mDiff) - 1.0\r\n      let d = b * b - a * c\r\n\r\n      if (d < 0) {\r\n        // \"Outside\"\r\n      } else if (d > 0) {\r\n        let root = Math.sqrt(d)\r\n        let t_a = (-b - root) / a\r\n        let t_b = (-b + root) / a\r\n\r\n        if ((t_a < 0 || 1 < t_a) && (t_b < 0 || 1 < t_b)) {\r\n          if ((t_a < 0 && t_b < 0) || (t_a > 1 && t_b > 1)) {\r\n            //\"Outside\";\r\n          } else {\r\n            //\"Inside\";\r\n          }\r\n        } else {\r\n          if (0 <= t_a && t_a <= 1)\r\n            result.add(a1.lerp(a2, t_a))\r\n          if (0 <= t_b && t_b <= 1)\r\n            result.add(a1.lerp(a2, t_b))\r\n        }\r\n      } else {\r\n        let t = -b / a\r\n        if (0 <= t && t <= 1) {\r\n          result.add(a1.lerp(a2, t))\r\n        } else {\r\n          //\"Outside\";\r\n        }\r\n      }\r\n\r\n      return result\r\n    }\r\n\r\n  })\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A PolyLine is a line with more than 2 points.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let line = new draw2d.shape.basic.PolyLine();\r\n *    line.setVertices([{x:10,y:10},{x:80,y:70},{x:100,y:110}]);\r\n *    canvas.add(line);\r\n *\r\n *\r\n *    canvas.setCurrentSelection(line);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Line\r\n */\r\ndraw2d.shape.basic.PolyLine = draw2d.shape.basic.Line.extend(\r\n  /** @lends draw2d.shape.basic.PolyLine.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.PolyLine\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // internal status handling for performance reasons\r\n    //\r\n    this.svgPathString = null\r\n    this.oldPoint = null\r\n\r\n    this.router = null\r\n    this.routingRequired = true\r\n    this.lineSegments = new draw2d.util.ArrayList()\r\n\r\n    this.radius = \"\"\r\n\r\n    this._super(\r\n      {router: new draw2d.layout.connection.VertexRouter(), ...attr},\r\n      {\r\n        router: this.setRouter,\r\n        radius: this.setRadius,\r\n        ...setter,\r\n      },\r\n      {\r\n        router: this.getRouter,\r\n        radius: this.getRadius,\r\n        ...getter\r\n      }\r\n    )\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Sets the corner radius of the edges.\r\n   *\r\n   * @param {Number} radius the corner radius\r\n   * @since 4.2.1\r\n   */\r\n  setRadius: function (radius) {\r\n    this.radius = radius\r\n    this.svgPathString = null\r\n    this.repaint()\r\n    this.fireEvent(\"change:radius\", {value: this.radius})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  setOutlineStroke: function (w) {\r\n    if (this.outlineStroke !== w) {\r\n      this.svgPathString = null\r\n      this.routingRequired = true\r\n    }\r\n    this._super(w)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Get the corner radius of the edges.\r\n   *\r\n   * @returns {Number}\r\n   * @since 4.2.1\r\n   */\r\n  getRadius: function () {\r\n    return this.radius\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the start point of the line.\r\n   *\r\n   * @param {Number} x the x coordinate of the start point\r\n   * @param {Number} y the y coordinate of the start point\r\n   **/\r\n  setStartPoint: function (x, y) {\r\n    if (this.vertices.getSize() > 0) {\r\n      this.vertices.first().setPosition(x, y)\r\n    }\r\n    else {\r\n      this.vertices.add(new draw2d.geo.Point(x, y))\r\n    }\r\n    this.start = this.vertices.first().clone()\r\n    //     if(this.isInDragDrop===false)\r\n    this.calculatePath({startMoved: true, endMoved: false})\r\n\r\n    this.repaint()\r\n\r\n    this.editPolicy.each( (i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n\r\n    this.fireEvent(\"change:start\", {value: this.start})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the end point of the line.\r\n   *\r\n   * @param {Number} x the x coordinate of the end point\r\n   * @param {Number} y the y coordinate of the end point\r\n   */\r\n  setEndPoint: function (x, y) {\r\n    if (this.vertices.getSize() > 1) {\r\n      this.vertices.last().setPosition(x, y)\r\n    }\r\n    else {\r\n      this.vertices.add(new draw2d.geo.Point(x, y))\r\n    }\r\n    this.end = this.vertices.last().clone()\r\n\r\n    if (this.isInDragDrop === false)\r\n      this.calculatePath({startMoved: false, endMoved: true})\r\n\r\n    this.repaint()\r\n\r\n\r\n    this.editPolicy.each( (i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n    this.fireEvent(\"change:end\", {value: this.end})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Inserts the draw2d.geo.Point object into the vertex list of the polyline just after the object with the given index.\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x the x coordinate or the draw2d.geo.Point object\r\n   * @param {Number} [y] the y coordinate or undefined of the second argument is a point\r\n   *\r\n   * @since 4.0.0\r\n   */\r\n  addVertex: function (x, y) {\r\n    this.vertices.add(new draw2d.geo.Point(x, y))\r\n\r\n    this.start = this.vertices.first().clone()\r\n    this.end = this.vertices.last().clone()\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    if (!this.selectionHandles.isEmpty()) {\r\n\r\n      this.editPolicy.each( (i, e) => {\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(this.canvas, this)\r\n          e.onSelect(this.canvas, this)\r\n        }\r\n      })\r\n    }\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Inserts the draw2d.geo.Point object into the vertex list of the polyline just after the object with the given index.\r\n   *\r\n   * @param {Number} index the insert index\r\n   * @param {Number|draw2d.geo.Point} x the x coordinate or the draw2d.geo.Point object\r\n   * @param {Number} [y] the y coordinate or undefined of the second argument is a point\r\n   *\r\n   * @since 4.0.0\r\n   */\r\n  insertVertexAt: function (index, x, y) {\r\n    let vertex = new draw2d.geo.Point(x, y)\r\n\r\n    this.vertices.insertElementAt(vertex, index)\r\n\r\n    this.start = this.vertices.first().clone()\r\n    this.end = this.vertices.last().clone()\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    if (!this.selectionHandles.isEmpty()) {\r\n      this.editPolicy.each( (i, e) => {\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(this.canvas, this)\r\n          e.onSelect(this.canvas, this)\r\n        }\r\n      })\r\n    }\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Remove a vertex from the polyline and return the removed point. The current installed connection router\r\n   * can send an veto for this operation.\r\n   *\r\n   * @param index\r\n   * @returns {draw2d.geo.Point} the removed point or null of the current router decline this operation\r\n   * @since 4.0.0\r\n   */\r\n  removeVertexAt: function (index) {\r\n    let removedPoint = this.vertices.removeElementAt(index)\r\n\r\n    this.start = this.vertices.first().clone()\r\n    this.end = this.vertices.last().clone()\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    if (!this.selectionHandles.isEmpty()) {\r\n      this.editPolicy.each( (i, e) => {\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(this.canvas, this)\r\n          e.onSelect(this.canvas, this)\r\n        }\r\n      })\r\n    }\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return removedPoint\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the router for this connection.\r\n   *\r\n   * @param {draw2d.layout.connection.ConnectionRouter} [router] the new router for this connection or null if the connection should use the default routing\r\n   **/\r\n  setRouter: function (router) {\r\n    if (this.router !== null) {\r\n      this.router.onUninstall(this)\r\n    }\r\n\r\n    this.router = router ?? new draw2d.layout.connection.DirectRouter()\r\n\r\n    this.router.onInstall(this)\r\n\r\n    this.routingRequired = true\r\n\r\n    // repaint the connection with the new router\r\n    this.repaint()\r\n\r\n    this.fireEvent(\"change:router\", {value: this.router})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the current active router of this connection.\r\n   *\r\n   * @returns draw2d.layout.connection.ConnectionRouter\r\n   **/\r\n  getRouter: function () {\r\n    return this.router\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Calculate the path of the polyline\r\n   *\r\n   * @param {Object} [routingHints] some helper attributes for the router\r\n   * @param {Boolean} routingHints.startMoved is true if just the start location has moved\r\n   * @param {Boolean} routingHints.endMoved is true if the destination location has changed\r\n   * @param {Boolean} routingHints.oldVertices store old vertices for after processing\r\n   *\r\n   * @private\r\n   */\r\n  calculatePath: function (routingHints) {\r\n    routingHints ??= {}\r\n\r\n    if (this.shape === null) {\r\n      return\r\n    }\r\n\r\n    this.svgPathString = null\r\n\r\n    routingHints.oldVertices = this.vertices\r\n\r\n    // cleanup the routing cache\r\n    //\r\n    this.oldPoint = null\r\n    this.lineSegments = new draw2d.util.ArrayList()\r\n    this.vertices = new draw2d.util.ArrayList()\r\n\r\n    // Use the internal router\r\n    //\r\n    this.router.route(this, routingHints)\r\n    this.routingRequired = false\r\n    this.fireEvent(\"routed\")\r\n    this.fireEvent(\"change:route\", {})\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n\r\n    if (this.svgPathString === null || this.routingRequired === true) {\r\n      this.calculatePath()\r\n    }\r\n\r\n    // It is important, that we keep the original \"attributes\" object and mutating them\r\n    // Maybe the caller needs the modified 'attributes' object. The \"electra.academy designer\"\r\n    // uses this pattern\r\n    //\r\n    // Won't work: attributes = {...attributes ,  path: this.svgPathString})\r\n    //\r\n\r\n    attributes??={}\r\n    attributes.path = this.svgPathString\r\n    // set some good defaults\r\n    attributes[\"stroke-linecap\"] ??= \"round\"\r\n    attributes[\"stroke-linejoin\"]??= \"round\"\r\n\r\n    return this._super(attributes)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return all line segments of the polyline.\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  getSegments: function () {\r\n    return this.lineSegments\r\n  },\r\n\r\n\r\n    /**\r\n     * used for the router to add the calculated points\r\n     *\r\n     * @param p\r\n     * @param y\r\n     */\r\n  addPoint: function ( p, y) {\r\n    if (typeof y !== \"undefined\") {\r\n      p = new draw2d.geo.Point(p, y)\r\n    }\r\n    this.vertices.add(p)\r\n\r\n    if (this.oldPoint !== null) {\r\n      // store the painted line segment for the \"mouse selection test\"\r\n      // (required for user interaction)\r\n      this.lineSegments.add({\r\n        start: this.oldPoint,\r\n        end: p\r\n      })\r\n    }\r\n    this.svgPathString = null\r\n    this.oldPoint = p\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called if the drag and drop action begins. You can return [false] if you\r\n   * want avoid that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean} true if the figure accepts dragging\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey, isFaked) {\r\n    let result = this._super(x, y, shiftKey, ctrlKey, isFaked)\r\n\r\n    if (result === true && isFaked !== true) {\r\n      this.draggedSegment = this.hitSegment(x, y)\r\n    }\r\n    return result\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the length of the polyline.\r\n   *\r\n   * @returns {Number}\r\n   * @since 6.1.43\r\n   **/\r\n  getLength: function () {\r\n    let result = 0\r\n    this.lineSegments.each( segment => {\r\n      let p1 = segment.start\r\n      let p2 = segment.end\r\n      result += Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y))\r\n    })\r\n    return result\r\n  },\r\n\r\n  setVertices: function (vertices) {\r\n    // inform the router tha the vertices has set outside. This switch some\r\n    // router from full autoroute to half autoroute\r\n    this.router.verticesSet(this)\r\n\r\n    this._super(vertices)\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Returns the projection of the point on the line.\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {draw2d.geo.Point}\r\n   **/\r\n  pointProjection: function (px, py) {\r\n    let result = null,\r\n      projection = null,\r\n      p1 = null,\r\n      p2 = null,\r\n      segment = null\r\n    let lastDist = Number.MAX_SAFE_INTEGER\r\n    let pt = new draw2d.geo.Point(px, py)\r\n    this.lineSegments.each( segment => {\r\n      p1 = segment.start\r\n      p2 = segment.end\r\n      projection = draw2d.geo.Line.pointProjection(p1.x, p1.y, p2.x, p2.y, pt.x, pt.y)\r\n      if (projection !== null) {\r\n        let dist = projection.distance(pt)\r\n        if (result == null || dist < lastDist) {\r\n          result = projection\r\n          result.index = i\r\n          lastDist = dist\r\n        }\r\n      }\r\n    })\r\n\r\n    if (result !== null) {\r\n      let length = 0\r\n      this.lineSegments.each( segment => {\r\n        length += segment.start.distance(segment.end)\r\n      })\r\n      let segment = this.lineSegments.get(result.index)\r\n      p1 = segment.start\r\n      p2 = segment.end\r\n      length += p1.distance(p2) * draw2d.geo.Line.inverseLerp(p2.x, p2.y, p1.x, p1.y, result.x, result.y)\r\n      result.percentage = (1.0 / this.getLength()) * length\r\n    }\r\n    return result\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the point onto the line which has the relative 'percentage' position onto the line.\r\n   *\r\n   * @param {Number} percentage the relative position between [0..1]\r\n   * @returns {draw2d.geo.Point}\r\n   */\r\n  lerp: function (percentage) {\r\n    let length = this.getLength() * percentage\r\n    let lastValidLength = length\r\n    let segment = null, p1 = null, p2 = null\r\n    for (let i = 0; i < this.lineSegments.getSize(); i++) {\r\n      segment = this.lineSegments.get(i)\r\n      p1 = segment.start\r\n      p2 = segment.end\r\n      length = length - p1.distance(p2)\r\n      if (length <= 0) {\r\n        percentage = 1.0 / p1.distance(p2) * lastValidLength\r\n        return new draw2d.geo.Point(p1.x + (p2.x - p1.x) * percentage, p1.y + (p2.y - p1.y) * percentage)\r\n      }\r\n      lastValidLength = length\r\n    }\r\n    return p2\r\n  },\r\n\r\n  /**\r\n   * \r\n   * get the best segment of the line which is below the given coordinate or null if\r\n   * all segment are not below the coordinate. <br>\r\n   * The 'corona' property of the polyline is considered for this test. This means\r\n   * the point isn't direct on the line. Is it only close to the line!\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {Object}\r\n   * @since 4.4.0\r\n   **/\r\n  hitSegment: function (px, py) {\r\n    for (let i = 0; i < this.lineSegments.getSize(); i++) {\r\n      let segment = this.lineSegments.get(i)\r\n      if (draw2d.shape.basic.Line.hit(this.corona + this.stroke, segment.start.x, segment.start.y, segment.end.x, segment.end.y, px, py)) {\r\n        return {index: i, start: segment.start, end: segment.end}\r\n      }\r\n    }\r\n    return null\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Checks if the hands over coordinate close to the line. The 'corona' property of the polyline\r\n   * is considered for this test. This means the point isn't direct on the line. Is it only close to the\r\n   * line!\r\n   *\r\n   * @param {Number} px the x coordinate of the test point\r\n   * @param {Number} py the y coordinate of the test point\r\n   * @returns {Boolean}\r\n   **/\r\n  hitTest: function (px, py) {\r\n    return this.hitSegment(px, py) !== null\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createCommand: function (request) {\r\n\r\n    if (request.getPolicy() === draw2d.command.CommandType.DELETE) {\r\n      if (this.isDeleteable() === true) {\r\n        return new draw2d.command.CommandDelete(this)\r\n      }\r\n    }\r\n    else if (request.getPolicy() === draw2d.command.CommandType.MOVE_VERTEX) {\r\n      if (this.isResizeable() === true) {\r\n        return new draw2d.command.CommandMoveVertex(this)\r\n      }\r\n    }\r\n    else if (request.getPolicy() === draw2d.command.CommandType.MOVE_VERTICES) {\r\n      if (this.isResizeable() === true) {\r\n        return new draw2d.command.CommandMoveVertices(this)\r\n      }\r\n    }\r\n\r\n    return this._super(request)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    return this.router.getPersistentAttributes(this, {...this._super(), \r\n      router: this.router.NAME,\r\n      radius: this.radius\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.router !== \"undefined\") {\r\n      try {\r\n        this.setRouter(Function(`return new ${memento.router}()`)())\r\n      }\r\n      catch (exc) {\r\n        debug.warn(\"Unable to install router '\" + memento.router + \"' forced by \" + this.NAME + \".setPersistentAttributes. Using default\")\r\n      }\r\n    }\r\n\r\n    if (typeof memento.radius !== \"undefined\") {\r\n      this.setRadius(memento.radius)\r\n    }\r\n\r\n    this.router.setPersistentAttributes(this, memento)\r\n\r\n    if (this.vertices.getSize() > 1) {\r\n      this.start = this.vertices.first().clone()\r\n      this.end = this.vertices.last().clone()\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\nimport jsonUtil from '../../util/JSONUtil'\r\n\r\n\r\n/**\r\n * @class\r\n * A Polygon figure.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let p1 =  new draw2d.shape.basic.Polygon({width:100, height:100});\r\n *    let p2 =  new draw2d.shape.basic.Polygon({width:100, height:60});\r\n *\r\n *    canvas.add(p1,10,10);\r\n *    canvas.add(p2,100,10);\r\n *\r\n *    p2.attr({color:\"#f0f000\", alpha:0.7});\r\n *\r\n *    canvas.setCurrentSelection(p2);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.basic.Polygon = draw2d.VectorFigure.extend(\r\n  /** @lends draw2d.shape.basic.Polygon.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.Polygon\",\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.minX = 0\r\n    this.minY = 0\r\n    this.maxX = 0\r\n    this.maxY = 0\r\n    this.vertices = new draw2d.util.ArrayList()\r\n\r\n    this._super(attr, setter, getter)\r\n\r\n    // we must cache the initial width/height because the width/height of the shape\r\n    // is recalculated in the addVertex method. After the first call this values are 0/0\r\n    if (this.vertices.getSize() === 0) {\r\n      let w = this.width\r\n      let h = this.height\r\n      let pos = this.getPosition()\r\n      this.addVertex(new draw2d.geo.Point(0, 0))\r\n      this.addVertex(new draw2d.geo.Point(w, 0))\r\n      this.addVertex(new draw2d.geo.Point(w, h))\r\n\r\n      this.setPosition(pos)\r\n    }\r\n\r\n    this.svgPathString = null\r\n\r\n    this.installEditPolicy(new draw2d.policy.figure.VertexSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setRadius: function (radius) {\r\n    this.svgPathString = null\r\n\r\n    this._super(radius)\r\n    this.fireEvent(\"change:radius\", {value: radius})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    // return some good default...\r\n    return this.canvas.paper.path(\"M0 10L100 100\")\r\n  },\r\n\r\n  /**\r\n   * \r\n   * calculate the path of the polygon\r\n   *\r\n   */\r\n  calculatePath: function () {\r\n    let radius = this.getRadius()\r\n    let path = []\r\n    // hard corners\r\n    //\r\n    if (radius === 0) {\r\n      let length = this.vertices.getSize()\r\n      let p = this.vertices.get(0)\r\n      path.push(\"M\", p.x, \" \", p.y)\r\n      for (let i = 1; i < length; i++) {\r\n        p = this.vertices.get(i)\r\n        path.push(\"L\", p.x, \" \", p.y)\r\n      }\r\n      path.push(\"Z\")\r\n    }\r\n    // soften/round corners\r\n    //\r\n    else {\r\n      length = this.vertices.getSize()\r\n      let start = this.vertices.first()\r\n      let end = this.vertices.last()\r\n      if (start.equals(end)) {\r\n        length = length - 1\r\n        end = this.vertices.get(length - 1)\r\n      }\r\n      let begin = draw2d.geo.Util.insetPoint(start, end, radius)\r\n      path.push(\"M\", begin.x, \",\", begin.y)\r\n      for (let i = 0; i < length; i++) {\r\n        start = this.vertices.get(i)\r\n        end = this.vertices.get((i + 1) % length)\r\n        let modStart = draw2d.geo.Util.insetPoint(start, end, radius)\r\n        let modEnd = draw2d.geo.Util.insetPoint(end, start, radius)\r\n        path.push(\"Q\", start.x, \",\", start.y, \" \", modStart.x, \", \", modStart.y)\r\n        path.push(\"L\", modEnd.x, \",\", modEnd.y)\r\n      }\r\n    }\r\n    this.svgPathString = path.join(\"\")\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    if (this.svgPathString === null) {\r\n      this.calculatePath()\r\n    }\r\n    //\r\n    attributes??={}\r\n    attributes.path ??= this.svgPathString\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Translate the figure with the given x/y offset. This method modifies all\r\n   * vertices and the bounding box.\r\n   *\r\n   * @param {Number} dx The new x translate offset\r\n   * @param {Number} dy The new y translate offset\r\n   **/\r\n  translate: function (dx, dy) {\r\n    let _this = this\r\n\r\n    // TODO: This is not good. If the polygon part of an \"Composite\" I should call\r\n    //       the adjustPosition. IF we DragDrap the composition the figures inside should follow\r\n    //       without modify the dx/dy.\r\n    //\r\n    dx = this.x + dx\r\n    dy = this.y + dy\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        let newPos = e.adjustPosition(_this, dx, dy)\r\n        dx = newPos.x\r\n        dy = newPos.y\r\n      }\r\n    })\r\n    dx = dx - this.x\r\n    dy = dy - this.y\r\n\r\n\r\n    this.vertices.each(function (i, e) {\r\n      e.translate(dx, dy)\r\n    })\r\n    this.svgPathString = null\r\n    this.updateBoundingBox()\r\n\r\n    this.repaint()\r\n\r\n\r\n    // Update the resize handles if the user change the position of the\r\n    // element via an API call.\r\n    //\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n\r\n    this.fireEvent(\"move\", {figure: this, dx: dx, dy: dy})\r\n    this.fireEvent(\"change:x\", {value: this.x})\r\n    this.fireEvent(\"change:y\", {value: this.y})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Change the position of the polygon. This method updates all vertices.\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x\r\n   * @param {Number} [y]\r\n   */\r\n  setPosition: function (x, y) {\r\n    if (x instanceof draw2d.geo.Point) {\r\n      y = x.y\r\n      x = x.x\r\n    }\r\n    this.svgPathString = null\r\n\r\n    let dx = x - this.minX\r\n    let dy = y - this.minY\r\n\r\n    this.translate(dx, dy)\r\n\r\n    this.x = x\r\n    this.y = y\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    let oldWidth = this.width\r\n    let oldHeight = this.height\r\n\r\n    this._super(w, h)\r\n\r\n    let fracWidth = (1 / oldWidth) * this.width\r\n    let fracHeight = (1 / oldHeight) * this.height\r\n\r\n    let thisX = this.x\r\n    let thisY = this.y\r\n    this.vertices.each(function (i, e) {\r\n      // calculate difference between point and figure origin\r\n      let diffX = (e.getX() - thisX) * fracWidth\r\n      let diffY = (e.getY() - thisY) * fracHeight\r\n      e.setPosition(thisX + diffX, thisY + diffY)\r\n    })\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n    this.fireEvent(\"change:dimension\", {value: {width: this.width, height: this.height}})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return all vertices of the polygon.\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  getVertices: function () {\r\n    return this.vertices\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the Vertex with the given index.\r\n   *\r\n   * @param {Number} index the index of the vertex to return\r\n   * @since 5.0.2\r\n   */\r\n  getVertex: function (index) {\r\n    return this.vertices.get(index)\r\n  },\r\n\r\n\r\n  resetVertices: function () {\r\n    this.vertices = new draw2d.util.ArrayList()\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    this.updateBoundingBox()\r\n\r\n    this.editPolicy.each((i, e) => {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(this.canvas, this)\r\n      }\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Update the vertex at the given index. The method call didn't have any effect\r\n   * if the vertex didn't exists.\r\n   *\r\n   * @param {Number} index\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   */\r\n  setVertex: function (index, x, y) {\r\n    let vertex = this.vertices.get(index)\r\n\r\n    // invalid point or nothing to do\r\n    //\r\n    if (vertex === null || (vertex.x === x && vertex.y === y)) {\r\n      return this\r\n    }\r\n\r\n    vertex.x = parseFloat(x)\r\n    vertex.y = parseFloat(y)\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    this.updateBoundingBox()\r\n\r\n    let _this = this\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Append a new vertex to the polygon.\r\n   *\r\n   * @param {Number | draw2d.geo.Point} x\r\n   * @param {Number} [y]\r\n   */\r\n  addVertex: function (x, y) {\r\n    this.vertices.add(new draw2d.geo.Point(x, y))\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    this.updateBoundingBox()\r\n\r\n    let _this = this\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Insert a new vertex at the given index. All vertices will be shifted to\r\n   * free the requested index.\r\n   *\r\n   * @param {Number} index\r\n   * @param {Number} x\r\n   * @param {Number} y\r\n   */\r\n  insertVertexAt: function (index, x, y) {\r\n    this.vertices.insertElementAt(new draw2d.geo.Point(x, y), index)\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    this.updateBoundingBox()\r\n\r\n    if (!this.selectionHandles.isEmpty()) {\r\n      let _this = this\r\n      this.editPolicy.each(function (i, e) {\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(_this.canvas, _this)\r\n          e.onSelect(_this.canvas, _this)\r\n        }\r\n      })\r\n    }\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Remove a vertex from the polygon and return the removed point.\r\n   *\r\n   * @param {Number} index\r\n   *\r\n   * @returns {draw2d.geo.Point} the removed vertex\r\n   */\r\n  removeVertexAt: function (index) {\r\n    // a polygon need at least 3 vertices\r\n    //\r\n    if (this.vertices.getSize() <= 3) {\r\n      return null\r\n    }\r\n\r\n    let vertex = this.vertices.removeElementAt(index)\r\n\r\n    this.svgPathString = null\r\n    this.repaint()\r\n\r\n    this.updateBoundingBox()\r\n\r\n    if (!this.selectionHandles.isEmpty()) {\r\n      let _this = this\r\n      this.editPolicy.each(function (i, e) {\r\n        if (e instanceof draw2d.policy.figure.SelectionFeedbackPolicy) {\r\n          e.onUnselect(_this.canvas, _this)\r\n          e.onSelect(_this.canvas, _this)\r\n        }\r\n      })\r\n    }\r\n    this.fireEvent(\"change:vertices\", {value: this.vertices})\r\n\r\n    return vertex\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setRotationAngle: function (angle) {\r\n    this.rotationAngle = 360 % angle\r\n\r\n    // The different to the other figures is, the the vertices must rotated instead of\r\n    // transform the shape with SVG matrix.\r\n    //\r\n    // Reason: the vertices are selectable and in this case the coordinates must transform\r\n    //         and not only the resulting SVG shape.\r\n    //\r\n    let radian = angle / (180 / Math.PI)\r\n    let center = this.getBoundingBox().getCenter()\r\n    let rotate = function (x, y, xm, ym, radian) {\r\n      let cos = Math.cos,\r\n        sin = Math.sin\r\n      return {\r\n        x: (x - xm) * cos(radian) - (y - ym) * sin(radian) + xm,\r\n        y: (x - xm) * sin(radian) + (y - ym) * cos(radian) + ym\r\n      }\r\n    }\r\n\r\n    this.vertices.each(function (i, e) {\r\n      let rot = rotate(e.x, e.y, center.x, center.y, radian)\r\n      e.setPosition(rot.x, rot.y)\r\n    })\r\n\r\n    this.updateBoundingBox()\r\n\r\n\r\n    // Update the resize handles if the user change the position of the element via an API call.\r\n    //\r\n    let _this = this\r\n    this.editPolicy.each(function (i, e) {\r\n      if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n        e.moved(_this.canvas, _this)\r\n      }\r\n    })\r\n\r\n    this.repaint()\r\n    this.fireEvent(\"change:angle\", {value: this.rotationAngle})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Calculate the bounding box of the shape and store them in an internal\r\n   * variable for fast access.\r\n   *\r\n   * @private\r\n   */\r\n  updateBoundingBox: function () {\r\n    if (this.vertices.isEmpty()) {\r\n      this.minX = this.x\r\n      this.minY = this.y\r\n      this.maxX = this.x + this.width\r\n      this.maxY = this.y + this.height\r\n    }\r\n    else {\r\n      this.minX = this.x = Math.min(...this.vertices.asArray().map(n => n.x))\r\n      this.minY = this.y = Math.min(...this.vertices.asArray().map(n => n.y))\r\n      this.maxX = Math.max(...this.vertices.asArray().map(n => n.x))\r\n      this.maxY = Math.max(...this.vertices.asArray().map(n => n.y))\r\n      this.width = this.maxX - this.minX\r\n      this.height = this.maxY - this.minY\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createCommand: function (request) {\r\n\r\n    if (request.getPolicy() === draw2d.command.CommandType.MOVE_VERTEX) {\r\n      if (this.isResizeable() === true) {\r\n        return new draw2d.command.CommandMoveVertex(this)\r\n      }\r\n    }\r\n\r\n    return this._super(request)\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    let memento = this._super()\r\n\r\n    memento.vertices = []\r\n\r\n    this.vertices.each(function (i, e) {\r\n      memento.vertices.push({x: e.x, y: e.y})\r\n    })\r\n\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    // restore the points from the JSON data and add them to the polyline\r\n    //\r\n    if (typeof memento.vertices !== \"undefined\") {\r\n      this.vertices = new draw2d.util.ArrayList()\r\n      memento.vertices.forEach(point => {\r\n        this.addVertex(point)\r\n      })\r\n    }\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * A Rectangle Figure.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let rect1 =  new draw2d.shape.basic.Rectangle({\r\n *    \tx:10,\r\n *     y:10\r\n *    });\r\n *\r\n *    let rect2 =  new draw2d.shape.basic.Rectangle({\r\n *      x: 100,\r\n *      y: 10,\r\n *      bgColor: \"#f0f000\",\r\n *      alpha  : 0.7,\r\n *      width: 100,\r\n *      height: 60,\r\n *      radius: 10\r\n *    });\r\n *\r\n *    canvas.add(rect1);\r\n *    canvas.add(rect2);\r\n *\r\n *    canvas.setCurrentSelection(rect2);\r\n *\r\n * @author Andreas Herz\r\n * @param {Object} [attr] the configuration of the shape\r\n * @param {Object} [setter] add or replace setter methods\r\n * @param {Object} [getter] add or replace getter methods\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.basic.Rectangle = draw2d.VectorFigure.extend(\r\n  /** @lends draw2d.shape.basic.Rectangle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.Rectangle\",\r\n\r\n  init: function (attr, setter, getter) {\r\n    this.dasharray = null\r\n\r\n    this._super(\r\n      {\r\n        bgColor: \"#a0a0a0\", color: \"#1B1B1B\",\r\n        ...attr},\r\n      {\r\n        dash: this.setDashArray,\r\n        dasharray: this.setDashArray,\r\n        ...setter,\r\n      },\r\n      { \r\n        dash: this.getDashArray,\r\n        dasharray: this.getDashArray,\r\n        ...getter\r\n      }\r\n    )\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   **/\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??={}\r\n    attributes.width  ??= this.getWidth()\r\n    attributes.height ??= this.getHeight()\r\n    attributes.r      ??= this.getRadius()\r\n    if (this.dasharray !== null) {\r\n      attributes[\"stroke-dasharray\"] = this.dasharray\r\n    }\r\n\r\n    this._super(attributes)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  applyTransformation: function () {\r\n    let ts = \"R\" + this.rotationAngle\r\n\r\n    if (this.getRotationAngle() === 90 || this.getRotationAngle() === 270) {\r\n      let ratio = this.getHeight() / this.getWidth()\r\n      ts = ts + \"S\" + ratio + \",\" + 1 / ratio + \",\" + (this.getAbsoluteX() + this.getWidth() / 2) + \",\" + (this.getAbsoluteY() + this.getHeight() / 2)\r\n    }\r\n\r\n    this.shape.transform(ts)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    return this.canvas.paper.rect(this.getAbsoluteX(), this.getAbsoluteY(), this.getWidth(), this.getHeight())\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Set the line style for dot/dash styling. Possible values are\r\n   * [\"\", \"-\", \".\", \"-.\", \"-..\", \". \", \"- \", \"--\", \"- .\", \"--.\", \"--..\"]\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr({\r\n   *       dash: pattern\r\n   *     });\r\n   *\r\n   * @param {String} pattern the string with the dot/dash pattern. valid values: [\"\", \"-\", \".\", \"-.\", \"-..\", \". \", \"- \", \"--\", \"- .\", \"--.\", \"--..\"]\r\n   */\r\n  setDashArray: function (pattern) {\r\n    this.dasharray = pattern\r\n    this.repaint()\r\n    this.fireEvent(\"change:dashArray\", {value: this.dasharray})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Get the line style for this object.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     figure.attr(\"dash\");\r\n   *\r\n   * @since 5.1.0\r\n   */\r\n  getDashArray: function () {\r\n    return this.dasharray\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    let memento = this._super()\r\n\r\n    if (this.dasharray !== null) {\r\n      memento.dasharray = this.dasharray\r\n    }\r\n\r\n    return memento\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.dasharray === \"string\") {\r\n      this.dasharray = memento.dasharray\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Implements a simple text with word wrapping.<br>The height of the element is automatic calculated. The width of\r\n * the element is changeable by the user and respect the minWidth constraint.\r\n * <br>\r\n *\r\n *\r\n * @example\r\n *\r\n *    let shape =  new draw2d.shape.basic.Text({text:\"This is a simple text with some loooooong word in.\"});\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n * @author Andreas Herz\r\n * @since 4.2.3\r\n * @extends draw2d.shape.basic.Label\r\n */\r\ndraw2d.shape.basic.Text = draw2d.shape.basic.Label.extend(\r\n  /** @lends draw2d.shape.basic.Text.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.basic.Text\",\r\n\r\n    /**\r\n     * Creates a new text element.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.cachedWrappedAttr = null\r\n\r\n      this._super({ width: 100, height: 50, resizeable: true,...attr}, setter, getter)\r\n\r\n      this.installEditPolicy(new draw2d.policy.figure.WidthSelectionFeedbackPolicy())\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null) {\r\n        return\r\n      }\r\n\r\n      // style the label\r\n      this.svgNodes.attr({...this.calculateTextAttr(), ...this.wrappedTextAttr(this.text, this.getWidth() - this.padding.left - this.padding.right)})\r\n\r\n      // set of the x/y must be done AFTER the font-size and bold has been set.\r\n      // Reason: the getHeight method needs the font-size for calculation because\r\n      //         it redirects the calculation to the SVG element.\r\n      this.svgNodes.attr({x: this.padding.left, y: this.getHeight() / 2})\r\n\r\n      // this is an exception call. Don't call the super method (Label) to avoid\r\n      // the calculation in this method.\r\n      draw2d.SetFigure.prototype.repaint.call(this, attributes)\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setDimension: function (w, h) {\r\n      this.clearCache()\r\n      let attr = this.wrappedTextAttr(this.text, w)\r\n\r\n      this.cachedMinWidth = Math.max(w, attr.width)\r\n      this.cachedMinHeight = attr.height\r\n\r\n      draw2d.shape.node.Node.prototype.setDimension.call(this, this.cachedMinWidth, this.cachedMinHeight)\r\n      //  this._super(Math.min(w,attr.width),attr.height);\r\n      this.fireEvent(\"change:dimension\", {value: {width: this.cachedMinWidth, height: this.cachedMinHeight}})\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * clear the internal cache for width/height precalculation\r\n     * @private\r\n     */\r\n    clearCache: function () {\r\n      this._super()\r\n      this.cachedWrappedAttr = null\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    getMinWidth: function () {\r\n      if (this.shape === null) {\r\n        return 0\r\n      }\r\n\r\n      if (this.cachedMinWidth === null) {\r\n        // get the longest word in the text\r\n        //\r\n        let longestWord = this.text.split(\" \").reduce( (arg1, arg2)=>arg1.length>arg2.length?arg1:arg2)\r\n        let svgText = this.canvas.paper\r\n          .text(0, 0, longestWord)\r\n          .attr({...this.calculateTextAttr(), text: longestWord})\r\n        this.cachedMinWidth = svgText.getBBox(true).width + this.padding.left + this.padding.right + 2 * this.getStroke()\r\n        svgText.remove()\r\n      }\r\n\r\n      return this.cachedMinWidth\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * calculates the attributes (wrapped text and width, height) with the given parameter\r\n     *\r\n     * @private\r\n     */\r\n    wrappedTextAttr: function (text, width) {\r\n      let words = text.split(\" \")\r\n      if (this.canvas === null || words.length === 0) {\r\n        return {text: text, width: width, height: 20}\r\n      }\r\n\r\n      if (this.cachedWrappedAttr === null) {\r\n        let abc = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n        let svgText = this.canvas.paper.text(0, 0, \"\")\r\n        \r\n        svgText.attr({ ...this.calculateTextAttr(), text: abc})\r\n\r\n        // get a good estimation of a letter width...not correct but this is working for the very first draft implementation\r\n        let letterWidth = svgText.getBBox(true).width / abc.length\r\n\r\n        let s = [words[0]], x = s[0].length * letterWidth\r\n        let w = null\r\n        for (let i = 1; i < words.length; i++) {\r\n          w = words[i]\r\n          let l = w.length * letterWidth\r\n          if ((x + l) > width) {\r\n            s.push(\"\\n\")\r\n            x = l\r\n          } else {\r\n            s.push(\" \")\r\n            x += l\r\n          }\r\n          s.push(w)\r\n        }\r\n        // set the wrapped text and get the resulted bounding box\r\n        //\r\n        svgText.attr({text: s.join(\"\")})\r\n        let bbox = svgText.getBBox(true)\r\n        svgText.remove()\r\n        this.cachedWrappedAttr = {\r\n          text: s.join(\"\"),\r\n          width: (Math.max(width, bbox.width) + this.padding.left + this.padding.right),\r\n          height: (bbox.height + this.padding.top + this.padding.bottom)\r\n        }\r\n      }\r\n      return this.cachedWrappedAttr\r\n    }\r\n  })\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Selection handle for polyline vertices.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.ResizeHandle\r\n */\r\ndraw2d.shape.basic.VertexResizeHandle = draw2d.ResizeHandle.extend(\r\n  /** @lends draw2d.shape.basic.VertexResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.basic.VertexResizeHandle\",\r\n\r\n  SNAP_THRESHOLD: 3,\r\n  LINE_COLOR: \"#1387E6\",\r\n  FADEOUT_DURATION: 300,\r\n\r\n  init: function (owner, index) {\r\n    this._super({owner})\r\n    this.index = index\r\n    this.isDead = false\r\n  },\r\n\r\n\r\n  /**\r\n   * Called when a user double clicks on the element\r\n   *\r\n   * @template\r\n   */\r\n  onDoubleClick: function () {\r\n    let cmd = new draw2d.command.CommandRemoveVertex(this.owner, this.index)\r\n    this.getCanvas().getCommandStack().execute(cmd)\r\n\r\n    this.isDead = true\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called if a drag&drop operation starts.<br>\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @private\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n    if (this.isDead === true) {\r\n      return\r\n    }\r\n\r\n    this._super()\r\n    this.command = this.getCanvas().getPrimarySelection().createCommand(new draw2d.command.CommandType(draw2d.command.CommandType.MOVE_VERTEX))\r\n    if (this.command != null) {\r\n      this.command.setIndex(this.index)\r\n      this.setAlpha(0.2)\r\n      this.shape.attr({\"cursor\": \"crosshair\"})\r\n    }\r\n\r\n    // Vertex is a reference and not a copy of the point\r\n    this.vertex = this.owner.getVertex(this.index).clone()\r\n\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragstart\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n\r\n    return true\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called from the framework during a drag&drop operation\r\n   *\r\n   * @param {Number} dx the x difference between the start of the drag drop operation and now\r\n   * @param {Number} dy the y difference between the start of the drag drop operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   **/\r\n  onDrag: function (dx, dy, dx2, dy2) {\r\n    if (this.isDead === true || this.command == null) {\r\n      return\r\n    }\r\n\r\n    this.setPosition(this.x + dx2, this.y + dy2)\r\n\r\n    // update the polyline for immediately  drag&drop feedback\r\n    //\r\n    this.vertex.translate(dx2, dy2)\r\n    let newPos = this.vertex.clone()\r\n    // Adjust the new location if the object can snap to a helper\r\n    // like grid, geometry, ruler,...\r\n    //\r\n    if (this.getCanSnapToHelper()) {\r\n      newPos = this.getCanvas().snapToHelper(this, newPos)\r\n    }\r\n\r\n    this.owner.setVertex(this.index, newPos.x, newPos.y)\r\n\r\n    // update the command for the undo/redo stuff\r\n    //\r\n    this.command.updatePosition(this.vertex.x, this.vertex.y)\r\n  },\r\n\r\n  /**\r\n   *  Called after a drag and drop action.<br>\r\n   *        Sub classes can override this method to implement additional stuff. Don't forget to call the super implementation via <code>this._super();</code>\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse event\r\n   * @param {Number} y the y-coordinate of the mouse event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   */\r\n  onDragEnd: function (x, y, shiftKey, ctrlKey) {\r\n    if (this.isDead === true || this.command === null) {\r\n      return\r\n    }\r\n\r\n    this.shape.attr({\"cursor\": \"move\"})\r\n\r\n    let stack = this.getCanvas().getCommandStack()\r\n\r\n    let transactionCommand = new draw2d.command.CommandCollection()\r\n\r\n    try {\r\n      transactionCommand.add(this.command)\r\n      this.command = null\r\n      if (this.getEnclosingAngle() > 178) {\r\n        transactionCommand.add(new draw2d.command.CommandRemoveVertex(this.owner, this.index))\r\n      }\r\n    }\r\n    finally {\r\n      stack.execute(transactionCommand)\r\n    }\r\n\r\n    this.setAlpha(1)\r\n\r\n    // fire an event\r\n    // @since 5.3.3\r\n    this.fireEvent(\"dragend\", {x: x, y: y, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Controls the location of the resize handle\r\n   *\r\n   * @template\r\n   **/\r\n  relocate: function () {\r\n    let resizeWidthHalf = this.getWidth() / 2\r\n    let resizeHeightHalf = this.getHeight() / 2\r\n\r\n    let anchor = this.owner.getVertex(this.index)\r\n\r\n    this.setPosition(anchor.x - resizeWidthHalf, anchor.y - resizeHeightHalf)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Calculates the angle between the siblings\r\n   *\r\n   * @returns {Number}\r\n   */\r\n  getEnclosingAngle: function () {\r\n    // calculate the angle between the siblings\r\n    let points = this.owner.getVertices()\r\n    let trans = this.vertex.getScaled(-1)\r\n    let size = points.getSize()\r\n    let left = points.get((this.index - 1 + size) % size).translated(trans) // % is just to ensure the [0, size] interval\r\n    let right = points.get((this.index + 1) % size).translated(trans)       // % is just to ensure the [0, size] interval\r\n\r\n    let dot = left.dot(right)\r\n\r\n    let acos = Math.acos(dot / (left.length() * right.length()))\r\n    return acos * 180 / Math.PI\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Base interface for the composite shapes\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Rectangle\r\n * @since 4.7.2\r\n */\r\ndraw2d.shape.composite.Composite = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.composite.Composite.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.composite.Composite\",\r\n\r\n    /**\r\n     * Creates a new composite element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super({stroke: 1, \"color\": \"#f0f0f0\",...attr}, setter, getter)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called when a user dbl clicks on the element\r\n     *\r\n     * @template\r\n     */\r\n    onDoubleClick: function () {\r\n      // do nothing per default. no rotation of the shape.\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Delegate method to calculate if a figure is selectable. A composite has the right to override the\r\n     * initial selectable flag of the figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to test\r\n     * @param {Boolean} selectable the initial selectable flag of the figure\r\n     * @returns {Boolean} returns `selectable`. A figure in a composite is per default selectable if the figure itself allows it.\r\n     *\r\n     */\r\n    isMemberSelectable: function (figure, selectable) {\r\n      return selectable\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Delegate method to calculate if a figure is draggable. A composite has the right to override the\r\n     * initial draggable flag of the figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to test\r\n     * @param {Boolean} draggable the initial draggable flag of the figure\r\n     * @returns {Boolean} returns `draggable`. A figure in a composite is per default draggable if the figure itself allows it.\r\n     *\r\n     */\r\n    isMemberDraggable: function (figure, draggable) {\r\n      return draggable\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the canvas element of this figures. This can be used to determine whenever an element\r\n     * is added or removed to the canvas.\r\n     *\r\n     * @param {draw2d.Canvas} canvas the new parent of the figure or null\r\n     * @returns {this}\r\n     */\r\n    setCanvas: function (canvas) {\r\n      this._super(canvas)\r\n\r\n      // an composite shape goes always in the background\r\n      //\r\n      if (canvas !== null) {\r\n        this.toBack()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A group is a figure that acts as a transparent container for other figures. A group\r\n * is a StrongComposite node that controls a set of child figures. The bounding rectangle of\r\n * a group is the union of the bounds of its children. Child nodes cannot be selected or\r\n * manipulated individually.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.composite.StrongComposite\r\n * @since 4.8.0\r\n */\r\ndraw2d.shape.composite.Group = draw2d.shape.composite.StrongComposite.extend(\r\n  /** @lends draw2d.shape.composite.Group.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.composite.Group\",\r\n\r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this._super(extend({bgColor: null, color: null, resizeable: false}, attr), setter, getter)\r\n\r\n      // used during figure assignment/unassignment. The Group is resizing during figure assignment\r\n      // and we want avoid that already assigned figures are moving during this resize.\r\n      //\r\n      this.stickFigures = false\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Delegate method to calculate if a figure is selectable. A composite has the right to override the\r\n     * initial selectable flag of the figure.\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to test\r\n     * @param {Boolean} selectable the initial selectable flag of the figure\r\n     * @returns {Boolean} returns false because it is not possible toselect single figures in the group\r\n     */\r\n    isMemberSelectable: function (figure, selectable) {\r\n      return false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Delegate method to calculate if a figure is draggable. A composite has the right to override the\r\n     * initial draggable flag of the figure.\r\n     * <br>\r\n     * Returns false because only the complete group is draggable\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to test\r\n     * @param {Boolean} draggable the initial draggable flag of the figure\r\n     * @returns {Boolean} returns always false because it is not possible to drag&drop single figures in a group\r\n     *\r\n     */\r\n    isMemberDraggable: function (figure, draggable) {\r\n      return false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the position of the object.\r\n     *\r\n     * @param {Number/draw2d.geo.Point} x The new x coordinate of the figure\r\n     * @param {Number} [y] The new y coordinate of the figure\r\n     * @returns {this}\r\n     **/\r\n    setPosition: function (x, y) {\r\n      let oldX = this.x\r\n      let oldY = this.y\r\n\r\n\r\n      this._super(x, y)\r\n\r\n      let dx = this.x - oldX\r\n      let dy = this.y - oldY\r\n\r\n      if (dx === 0 && dy === 0) {\r\n        return this\r\n      }\r\n\r\n      if (this.stickFigures === false) {\r\n        this.assignedFigures.each(function (i, figure) {\r\n          figure.translate(dx, dy)\r\n        })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Assign a figure to the given group.\r\n     * The bounding box of the group is recalculated and the union of the current bounding box with the\r\n     * figure bounding box.\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     * @returns {this}\r\n     */\r\n    assignFigure: function (figure) {\r\n      if (!this.assignedFigures.contains(figure)) {\r\n        let _this = this\r\n        this.stickFigures = true\r\n        if (this.assignedFigures.isEmpty() === true) {\r\n          this.setBoundingBox(figure.getBoundingBox())\r\n        } else {\r\n          this.setBoundingBox(this.getBoundingBox().merge(figure.getBoundingBox()))\r\n        }\r\n        this.assignedFigures.add(figure)\r\n        figure.setComposite(this)\r\n        // the selection adapter defines which figure should be selected if the user clicks on\r\n        // \"figure\". The \"group\" redirects to the group instead to allowing select the child.\r\n        figure.setSelectionAdapter(function () {\r\n          return _this\r\n        })\r\n        this.stickFigures = false\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Remove the given figure from the group assignment\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to remove\r\n     * @returns {this}\r\n     */\r\n    unassignFigure: function (figure) {\r\n      if (this.assignedFigures.contains(figure)) {\r\n        this.stickFigures = true\r\n        figure.setComposite(null)\r\n        figure.setSelectionAdapter(null)\r\n        this.assignedFigures.remove(figure)\r\n        if (!this.assignedFigures.isEmpty()) {\r\n          let box = this.assignedFigures.first().getBoundingBox()\r\n          this.assignedFigures.each(function (i, figure) {\r\n            box.merge(figure.getBoundingBox())\r\n          })\r\n          this.setBoundingBox(box)\r\n        }\r\n        this.stickFigures = false\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    createCommand: function (request) {\r\n      if (request === null) {\r\n        return null\r\n      }\r\n\r\n      if (request.getPolicy() === draw2d.command.CommandType.DELETE) {\r\n        if (!this.isDeleteable()) {\r\n          return null\r\n        }\r\n        return new draw2d.command.CommandDeleteGroup(this)\r\n      }\r\n\r\n      return this._super(request)\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A Jailhouse is a figure that acts as a container for other figures. A Jailhouse\r\n * is a StrongComposite node that controls a set of child figures. Child nodes can't\r\n * moved outside of the composite.<br>\r\n * Objects in a jailhouse have the same Z-order, which can be relatively controlled with\r\n * respect to other figures.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.composite.StrongComposite\r\n * @since 4.8.0\r\n */\r\ndraw2d.shape.composite.Jailhouse = draw2d.shape.composite.StrongComposite.extend(\r\n  /** @lends draw2d.shape.composite.Jailhouse.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.composite.Jailhouse\",\r\n\r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.policy = new draw2d.policy.figure.RegionEditPolicy(0, 0, 10, 10)\r\n      this._super(extend({bgColor: \"#f0f0f0\", color: \"#333333\"}, attr), setter, getter)\r\n\r\n      this.stickFigures = false\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the new width and height of the figure and update the constraint policy for the assigned\r\n     * figures..\r\n     *\r\n     * @param {Number} w The new width of the figure\r\n     * @param {Number} h The new height of the figure\r\n     **/\r\n    setDimension: function (w, h) {\r\n      this._super(w, h)\r\n      this.policy.setBoundingBox(this.getAbsoluteBounds())\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Set the position of the object.\r\n     *\r\n     * @param {Number/draw2d.geo.Point} x The new x coordinate of the figure\r\n     * @param {Number} [y] The new y coordinate of the figure\r\n     **/\r\n    setPosition: function (x, y) {\r\n      let oldX = this.x\r\n      let oldY = this.y\r\n\r\n\r\n      this._super(x, y)\r\n\r\n      let dx = this.x - oldX\r\n      let dy = this.y - oldY\r\n\r\n      if (dx === 0 && dy === 0) {\r\n        return this\r\n      }\r\n      this.policy.getBoundingBox().setPosition(x,y)\r\n\r\n      if (this.stickFigures === false) {\r\n        this.assignedFigures.each(function (i, figure) {\r\n          figure.translate(dx, dy)\r\n        })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Assign a figure to the given group.\r\n     * The bounding box of the group is recalculated and the union of the current bounding box with the\r\n     * figure bounding box.\r\n     *\r\n     * @param {draw2d.Figure} figure\r\n     */\r\n    assignFigure: function (figure) {\r\n      if (!this.assignedFigures.contains(figure) && figure !== this) {\r\n        this.stickFigures = true\r\n        this.setBoundingBox(this.getBoundingBox().merge(figure.getBoundingBox()))\r\n        this.assignedFigures.add(figure)\r\n        figure.setComposite(this)\r\n        figure.installEditPolicy(this.policy)\r\n        figure.toFront(this)\r\n        this.stickFigures = false\r\n      }\r\n      return this\r\n    },\r\n\r\n    getAssignedFigures: function () {\r\n      return this.assignedFigures\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Remove the given figure from the group assignment\r\n     *\r\n     * @param {draw2d.Figure} figure the figure to remove\r\n     *\r\n     */\r\n    unassignFigure: function (figure) {\r\n      if (this.assignedFigures.contains(figure)) {\r\n        this.stickFigures = true\r\n        figure.setComposite(null)\r\n        figure.uninstallEditPolicy(this.policy)\r\n        this.assignedFigures.remove(figure)\r\n        if (!this.assignedFigures.isEmpty()) {\r\n          let box = this.assignedFigures.first().getBoundingBox()\r\n          this.assignedFigures.each(function (i, figure) {\r\n            box.merge(figure.getBoundingBox())\r\n          })\r\n          this.setBoundingBox(box)\r\n        }\r\n        this.stickFigures = false\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    onCatch: function (droppedFigure, x, y, shiftKey, ctrlKey) {\r\n      this.getCanvas().getCommandStack().execute(new draw2d.command.CommandAssignFigure(droppedFigure, this))\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Return the minWidth of the jailhouse. The minWidth is calculated by care the assigned figures.\r\n     *\r\n     * @returns {Number} the minimum width for the figure\r\n     */\r\n    getMinWidth: function () {\r\n      let width = 0\r\n      this.assignedFigures.each(function (i, figure) {\r\n        width = Math.max(width, figure.getBoundingBox().getRight())\r\n      })\r\n      return width - this.getAbsoluteX()\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {Number} the minimum height of the figure\r\n     */\r\n    getMinHeight: function () {\r\n      let height = 0\r\n      this.assignedFigures.each(function (i, figure) {\r\n        height = Math.max(height, figure.getBoundingBox().getBottom())\r\n      })\r\n      return height - this.getAbsoluteY()\r\n    }\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * Raft figures are shapes, which aggregate multiple figures. It works like a real raft. Aboard figures are\r\n * moved if the raft figures moves.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let rect1 =  new draw2d.shape.composite.Raft({width:200, height:100});\r\n *    let rect2 =  new draw2d.shape.basic.Rectangle({width:50, height:50});\r\n *\r\n *    canvas.add(rect1,10,10);\r\n *    canvas.add(rect2,20,20);\r\n *\r\n *    rect2.attr({bgColor:\"#f0f000\", width:50, height:50, radius:10});\r\n *\r\n *    canvas.setCurrentSelection(rect1);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.composite.WeakComposite\r\n * @since 4.7.0\r\n */\r\ndraw2d.shape.composite.Raft = draw2d.shape.composite.WeakComposite.extend(\r\n  /** @lends draw2d.shape.composite.Raft.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.composite.Raft\",\r\n\r\n    /**\r\n     * Creates a new figure element which are not assigned to any canvas.\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n\r\n      this.aboardFigures = new draw2d.util.ArrayList()\r\n\r\n      this._super({bgColor: \"#f0f0f0\", color: \"#1B1B1B\",...attr}, setter, getter)\r\n      // install default selection handler. Can be overridden or replaced\r\n\r\n      this.installEditPolicy(new draw2d.policy.figure.RaftSelectionFeedbackPolicy())\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Will be called if the drag and drop action begins. You can return [false] if you\r\n     * want avoid that the figure can be move.\r\n     *\r\n     * @param {Number} x the x-coordinate of the mouse up event\r\n     * @param {Number} y the y-coordinate of the mouse up event\r\n     * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n     * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n     *\r\n     * @returns {Boolean} true if the figure accepts dragging\r\n     **/\r\n    onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n      this._super(x, y, shiftKey, ctrlKey)\r\n\r\n      this.aboardFigures = new draw2d.util.ArrayList()\r\n      // force the recalculation of the aboard figures if the shape is in a drag&drop operation\r\n      this.getAboardFigures(this.isInDragDrop)\r\n\r\n      return true\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the position of the object.\r\n     *\r\n     * @param {Number/draw2d.geo.Point} x The new x coordinate of the figure\r\n     * @param {Number} [y] The new y coordinate of the figure\r\n     * @param {boolean} [dontApplyToChildren] don't move the children if this flag is set.\r\n     **/\r\n    setPosition: function (x, y, dontApplyToChildren) {\r\n      let oldX = this.x\r\n      let oldY = this.y\r\n\r\n      // we need the figures before the composite has moved. Otherwise some figures are fall out of the raft\r\n      //\r\n      let aboardedFigures = (dontApplyToChildren) ? draw2d.util.ArrayList.EMPTY_LIST : this.getAboardFigures(this.isInDragDrop === false)\r\n\r\n      this._super(x, y)\r\n\r\n      let dx = this.x - oldX\r\n      let dy = this.y - oldY\r\n\r\n      if (dx === 0 && dy === 0) {\r\n        return this\r\n      }\r\n\r\n      // we must move circuits with \"user routed\" elements as well if the start/target is withing\r\n      // the raft. Some segments stay still because some coordinates has a fixed position\r\n      //\r\n      if (this.canvas !== null) {\r\n        aboardedFigures = aboardedFigures.clone()\r\n        this.canvas.getLines().each( (i, line) => {\r\n          if (line instanceof draw2d.Connection) {\r\n            if (aboardedFigures.contains(line.getSource().getRoot()) && aboardedFigures.contains(line.getTarget().getRoot())) {\r\n              aboardedFigures.add(line)\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      aboardedFigures.each( (i, figure) => { figure.translate(dx, dy) })\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    onDrag: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n\r\n      // apply all EditPolicy for DragDrop Operations\r\n      //\r\n      this.editPolicy.each( (i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          let newPos = e.adjustPosition(this, this.ox + dx, this.oy + dy)\r\n          if (newPos) {\r\n            dx = newPos.x - this.ox\r\n            dy = newPos.y - this.oy\r\n          }\r\n        }\r\n      })\r\n\r\n      let newPos = new draw2d.geo.Point(this.ox + dx, this.oy + dy)\r\n\r\n      // Adjust the new location if the object can snap to a helper\r\n      // like grid, geometry, ruler,...\r\n      //\r\n      if (this.getCanSnapToHelper()) {\r\n        newPos = this.getCanvas().snapToHelper(this, newPos)\r\n      }\r\n\r\n      // push the shiftKey to the setPosition method and avoid to move the children objects\r\n      // if the user press the shift key\r\n      this.setPosition(newPos.x, newPos.y, shiftKey)\r\n\r\n      // notify all installed policies\r\n      //\r\n      this.editPolicy.each((i, e) => {\r\n        if (e instanceof draw2d.policy.figure.DragDropEditPolicy) {\r\n          e.onDrag(this.canvas, this)\r\n        }\r\n      })\r\n\r\n      // fire an event\r\n      // @since 5.3.3\r\n      this.fireEvent(\"drag\", {dx: dx, dy: dy, dx2: dx2, dy2: dy2, shiftKey: shiftKey, ctrlKey: ctrlKey})\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return all figures which are aboard of this shape. These shapes are moved as well if the raft\r\n     * is moving.\r\n     *\r\n     * @returns {draw2d.util.ArrayList}\r\n     */\r\n    getAboardFigures: function (recalculate) {\r\n      if (recalculate === true && this.canvas !== null) {\r\n        let raftBoundingBox = this.getBoundingBox()\r\n        let zIndex = this.getZOrder()\r\n        this.aboardFigures = new draw2d.util.ArrayList()\r\n\r\n        let _this = this\r\n        this.getCanvas().getFigures().each(function (i, figure) {\r\n          if (figure !== _this && figure.isSelectable() === true && figure.getBoundingBox().isInside(raftBoundingBox)) {\r\n            // Don't add the figure if it is already catched by another composite with a higher z-index\r\n            //\r\n            if (_this.getNextComposite(figure) !== _this) {\r\n              return\r\n            }\r\n            // only add the shape if it is in front of the raft\r\n            if (figure.getZOrder() > zIndex) {\r\n              _this.aboardFigures.add(figure)\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return this.aboardFigures\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return the next potential composite parent figure\r\n     *\r\n     * @param {draw2d.Figure} figureToTest\r\n     * @returns {draw2d.Figure}\r\n     */\r\n    getNextComposite: function (figureToTest) {\r\n      let nextComposite = null\r\n      this.getCanvas().getFigures().each( (i, figure) => {\r\n        if (figureToTest === figure) {\r\n          return\r\n        }\r\n        if (figure instanceof draw2d.shape.composite.Composite) {\r\n          if (nextComposite !== null && nextComposite.getZOrder() > figure.getZOrder()) {\r\n            return\r\n          }\r\n\r\n          if (figure.getBoundingBox().contains(figureToTest.getBoundingBox())) {\r\n            nextComposite = figure\r\n          }\r\n        }\r\n      })\r\n\r\n      return nextComposite\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from 'packages'\r\n\r\n/**\r\n * @class\r\n * The Resizehandles for Figures.\r\n\r\n * <pre>\r\n * Possible Type:\r\n *\r\n *   1             2               3\r\n *    O-----------O-------------O\r\n *    |                         |\r\n *    |                         |\r\n *   8 O           + 9           O 4\r\n *    |                         |\r\n *    |                         |\r\n *    O-----------O-------------O\r\n *   7             6               5\r\n * </pre>\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.ResizeHandle\r\n */\r\ndraw2d.shape.composite.RaftResizeHandle = draw2d.ResizeHandle.extend(\r\n  /** @lends draw2d.shape.composite.RaftResizeHandle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.composite.RaftResizeHandle\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {draw2d.Figure} the owner if the resize handle\r\n   * @param {Number} type the type of the ResizeHandle.\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr,setter,getter)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Called by the framework if the figure is moved by user interaction.\r\n   *\r\n   * @param {Number} dx the move x offset\r\n   * @param {Number} dy the move y offset\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   */\r\n  onDrag: function (dx, dy, dx2, dy2, shiftKey, ctrlKey) {\r\n    if (this.isDraggable() === false) {\r\n      return\r\n    }\r\n\r\n    let oldX = this.getAbsoluteX()\r\n    let oldY = this.getAbsoluteY()\r\n\r\n    // call the super.drag method with all snapTo### handler and adjustments\r\n    draw2d.shape.basic.Rectangle.prototype.onDrag.call(this,dx, dy, dx2, dy2); //DON'T call the super implementation!!!\r\n\r\n    let diffX = this.getAbsoluteX() - oldX\r\n    let diffY = this.getAbsoluteY() - oldY\r\n\r\n    let obj = this.owner\r\n    let objPosX = obj.getAbsoluteX()\r\n    let objPosY = obj.getAbsoluteY()\r\n    let objWidth = obj.getWidth()\r\n    let objHeight = obj.getHeight()\r\n\r\n    let newX = null\r\n    let newY = null\r\n    let corrPos = null\r\n    // declare new var just to make the semantic behind the flag more clear\r\n    let dontMoveChildren = shiftKey===true\r\n\r\n    /*\r\n    *   1             2               3\r\n    *    O-----------O-------------O\r\n    *    |                         |\r\n    *    |                         |\r\n    *   8 O           + 9           O 4\r\n    *    |                         |\r\n    *    |                         |\r\n    *    O-----------O-------------O\r\n    *   7             6               5\r\n    */\r\n    switch (this.type) {\r\n      case 1:\r\n        obj.setDimension(objWidth - diffX, objHeight - diffY)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY,dontMoveChildren)\r\n        break\r\n      case 2:\r\n        obj.setDimension(objWidth, objHeight - diffY)\r\n        newX = objPosX\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY,dontMoveChildren)\r\n        break\r\n      case 3:\r\n        obj.setDimension(objWidth + diffX, objHeight - diffY)\r\n        newX = objPosX\r\n        newY = objPosY + (objHeight - obj.getHeight())\r\n        obj.setPosition(newX, newY,dontMoveChildren)\r\n        break\r\n      case 4:\r\n        obj.setDimension(objWidth + diffX, objHeight)\r\n        break\r\n      case 5:\r\n        obj.setDimension(objWidth + diffX, objHeight + diffY)\r\n        break\r\n      case 6:\r\n        obj.setDimension(objWidth, objHeight + diffY)\r\n        break\r\n      case 7:\r\n        obj.setDimension(objWidth - diffX, objHeight + diffY)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY\r\n        obj.setPosition(newX, newY,dontMoveChildren)\r\n        break\r\n      case 8:\r\n        obj.setDimension(objWidth - diffX, objHeight)\r\n        newX = objPosX + (objWidth - obj.getWidth())\r\n        newY = objPosY\r\n        debugger\r\n        obj.setPosition(newX, newY,dontMoveChildren)\r\n        break\r\n    }\r\n\r\n    if (newX !== null) {\r\n      // may the setPosition has changed regarding any constraint or edit policies. In this case\r\n      // we must adjust the dimension with the related correction\r\n      //\r\n      corrPos = obj.getPosition()\r\n      if (corrPos.x !== newX || corrPos.y !== newY) {\r\n        obj.setDimension(obj.getWidth() - (corrPos.x - newX), obj.getHeight() - (corrPos.y - newY))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A StrongComposite is a composite figure with strong assignment of the children and the composite.\r\n * The child knows everything about the assigned composite and receives events about assignment to a\r\n * composite.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.composite.Composite\r\n * @since 4.8.0\r\n */\r\ndraw2d.shape.composite.StrongComposite = draw2d.shape.composite.Composite.extend(\r\n  /** @lends draw2d.shape.composite.StrongComposite.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.composite.StrongComposite\",\r\n\r\n  /**\r\n   * Creates a new strong composite element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.assignedFigures = new draw2d.util.ArrayList()\r\n\r\n    this._super(attr, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Check to see if a figure is a descendant of another figure.\r\n   * <br>\r\n   * The contains() method returns true if the figure provided by the argument is a descendant of this figure,\r\n   * whether it is a direct child or nested more deeply. Otherwise, it returns false.\r\n   *\r\n   * @param {draw2d.Figure} containedFigure The figure that may be contained by (a descendant of) this figure.\r\n   * @since 5.5.4\r\n   */\r\n  contains: function (containedFigure) {\r\n    for (let i = 0, len = this.assignedFigures.getSize(); i < len; i++) {\r\n      let child = this.assignedFigures.get(i)\r\n      if (child === containedFigure || child.contains(containedFigure)) {\r\n        return true\r\n      }\r\n    }\r\n    return this._super(containedFigure)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Assign a figure to the composite.\r\n   *\r\n   * @param {draw2d.Figure} figure\r\n   * @template\r\n   */\r\n  assignFigure: function (figure) {\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Remove the given figure from the group assignment\r\n   *\r\n   * @param {draw2d.Figure} figure the figure to remove\r\n   * @template\r\n   */\r\n  unassignFigure: function (figure) {\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return all assigned figures of the composite\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  getAssignedFigures: function () {\r\n    return this.assignedFigures\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Called if the user drop this element onto the dropTarget. This event is ONLY fired if the\r\n   * shape return \"this\" in the onDragEnter method.\r\n   *\r\n   *\r\n   * @param {draw2d.Figure} dropTarget The drop target.\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   * @since  4.7.4\r\n   **/\r\n  onDrop: function (dropTarget, x, y, shiftKey, ctrlKey) {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called if the user dropped an figure onto this element. This event is ONLY fired if the\r\n   * shape return \"this\" in the onDragEnter method.\r\n   *\r\n   *\r\n   * @param {draw2d.Figure} droppedFigure The dropped figure.\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   * @template\r\n   * @since 4.7.4\r\n   **/\r\n  onCatch: function (droppedFigure, x, y, shiftKey, ctrlKey) {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Moves the element so it is the closest to the viewer’s eyes, on top of other elements. Additional\r\n   * the internal model changed as well.\r\n   *\r\n   * Optional: Inserts current object in front of the given one.\r\n   *\r\n   * @param {draw2d.Figure} [figure] move current object in front of the given one.\r\n   */\r\n  toFront: function (figure) {\r\n    this._super(figure)\r\n    // ensure that all assigned figures are in front of the composite\r\n    //\r\n    let figures = this.getAssignedFigures().clone()\r\n    figures.sort(function (a, b) {\r\n      // return 1  if a before b\r\n      // return -1 if b before a\r\n      return a.getZOrder() > b.getZOrder() ? -1 : 1\r\n    })\r\n    let _this = this\r\n    figures.each(function (i, f) {\r\n      f.toFront(_this)\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Moves the element to the background. Additional\r\n   * the internal model changed as well.\r\n   *\r\n   * @since 4.7.2\r\n   */\r\n  toBack: function (figure) {\r\n    this._super(figure)\r\n    // ensure that all assigned figures are in front of the composite\r\n    //\r\n    let figures = this.getAssignedFigures().clone()\r\n    figures.sort(function (a, b) {\r\n      // return 1  if a before b\r\n      // return -1 if b before a\r\n      return a.getZOrder() > b.getZOrder() ? -1 : 1\r\n    })\r\n\r\n    let _this = this\r\n    figures.each(function (i, f) {\r\n      f.toBack(_this)\r\n    })\r\n\r\n    return this\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A WeakComposite is a composite figure with loose coupling of the children and the composite.\r\n * The child didn't know anything about the assigned composite nor did they receive any events\r\n * about assignment to a composite.\r\n *\r\n * Assignment without obligation.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.composite.Composite\r\n * @since 4.8.0\r\n */\r\ndraw2d.shape.composite.WeakComposite = draw2d.shape.composite.Composite.extend(\r\n  /** @lends draw2d.shape.composite.WeakComposite.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.composite.WeakComposite\",\r\n\r\n  /**\r\n   * Creates a new weak composite element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Base class for all diagrams.\r\n *\r\n * @param {Object} [attr] the configuration of the shape\r\n * @extends draw2d.SetFigure\r\n */\r\ndraw2d.shape.diagram.Diagram = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.diagram.Diagram */\r\n  {\r\n\r\n  init: function (attr, setter, getter) {\r\n    this.data = []\r\n    this.cache = {}\r\n\r\n    this._super(\r\n      {\r\n        data: [], \r\n        bgColor: \"#8dabf2\", \r\n        stroke: 1, \r\n        color: \"#f0f0f0\", \r\n        radius: 2, \r\n        resizeable: true,\r\n        ...attr},\r\n      {\r\n        // @attr {Array} data the data to display in the diagram */\r\n        data: this.setData,\r\n        ...setter\r\n      },\r\n      {\r\n        data: this.getData,\r\n        ...getter\r\n      }\r\n    )\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the data for the chart/diagram element\r\n   *\r\n   * @param {Array} data\r\n   *\r\n   */\r\n  setData: function (data) {\r\n    this.data = data\r\n    this.cache = {}\r\n\r\n\r\n    if (this.svgNodes !== null) {\r\n      this.svgNodes.remove()\r\n      this.svgNodes = this.createSet()\r\n    }\r\n\r\n    this.repaint()\r\n    this.fireEvent(\"change:data\", {value: data})\r\n\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the data of the diagram\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  getData: function () {\r\n    return this.data\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the dimension of the diagram and reset the cached calculation\r\n   *\r\n   * @since 5.0.0\r\n   */\r\n  setDimension: function (w, h) {\r\n    this.cache = {}\r\n    this._super(w, h)\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the calculate width of the set. This calculates the bounding box of all elements.\r\n   *\r\n   * @returns {Number} the calculated width of the label\r\n   **/\r\n  getWidth: function () {\r\n    return this.width\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the calculated height of the set. This calculates the bounding box of all elements.\r\n   *\r\n   * @returns {Number} the calculated height of the label\r\n   */\r\n  getHeight: function () {\r\n    return this.height\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param attributes\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape == null) {\r\n      return this\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    attributes.fill ??= \"none\"\r\n\r\n    return this._super(attributes)\r\n  },\r\n\r\n  applyTransformation: function () {\r\n    if (this.isResizeable() === true) {\r\n      this.svgNodes.transform(\"S\" + this.scaleX + \",\" + this.scaleY + \",\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY() + \"t\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n    }\r\n    else {\r\n      this.svgNodes.transform(\"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Small data pie chart.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let pie = new draw2d.shape.diagram.Pie({\r\n *       diameter:80,\r\n *       data:[30,60,122,4],\r\n *       x:100,\r\n *       y:60\r\n *    });\r\n *\r\n *    canvas.add( pie);\r\n *\r\n * @param {Object} [attr] the configuration of the shape\r\n * @extends draw2d.shape.diagram.Diagram\r\n */\r\ndraw2d.shape.diagram.Pie = draw2d.shape.diagram.Diagram.extend(\r\n  /** @lends draw2d.shape.diagram.Pie */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.diagram.Pie\",\r\n  COLORS: ['#00A8F0', '#b9dd69', '#f3546a', '#4DA74D', '#9440ED'],\r\n  TWO_PI: Math.PI * 2,\r\n\r\n  init: function (attr, setter, getter) {\r\n\r\n\r\n    this._super(\r\n      {\r\n        stroke: 0,\r\n        ...attr\r\n      },\r\n      {\r\n        // @attr {Number} diameter the diameter of the pie chart */\r\n        diameter: this.setDiameter,\r\n        // @attr {Number} radius the radius of the pie chart */\r\n        radius: this.setRadius,\r\n        ...setter\r\n      },\r\n      {\r\n        diameter: this.getDiameter,\r\n        radius: this.getRadius,\r\n        ...getter\r\n      })\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the diameter of the circle. The center of the circle will be retained.\r\n   *\r\n   * @param {Number} d The new diameter of the circle.\r\n   * @since 4.0.0\r\n   **/\r\n  setDiameter: function (d) {\r\n    let center = this.getCenter()\r\n    this.setDimension(d, d)\r\n    this.setCenter(center)\r\n    this.fireEvent(\"change:diameter\", {value: this.width})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Get the diameter of the circle.\r\n   *\r\n   * @since 4.0.0\r\n   **/\r\n  getDiameter: function () {\r\n    return this.getWidth()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Set the radius of the circle. The center of the circle will be retained.\r\n   *\r\n   * @param {Number} r The new radius of the circle.\r\n   * @since 4.0.0\r\n   **/\r\n  setRadius: function (r) {\r\n    this.setDiameter(r * 2)\r\n    this.fireEvent(\"change:radius\", {value: this.width / 2})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Get the center of the circle\r\n   *\r\n   */\r\n  getCenter: function () {\r\n    let d2 = this.getDiameter() / 2\r\n    return this.getPosition().translate(d2, d2)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the center of the circle.\r\n   *\r\n   * @param {Number|draw2d.geo.Point} x the new x coordinate of the center or a draw2d.geo.Point object with the center\r\n   * @param {Number} y the y coordinate of the new center of the first argument isn't a draw2d.geo.Point object\r\n   */\r\n  setCenter: function (x, y) {\r\n    let pos = new draw2d.geo.Point(x, y)\r\n    let d2 = this.getDiameter() / 2\r\n    pos.translate(-d2, -d2)\r\n    this.setPosition(pos)\r\n    this.fireEvent(\"change:center\", {value: {x: x, y: y}})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setData: function (data) {\r\n\r\n    // Normalize the Data.\r\n    // The SUM must be == 1.\r\n    this.sum = 0\r\n    data.forEach(val => {\r\n      this.sum += val\r\n    })\r\n    let _sum = 1 / this.sum\r\n    data.forEach((val, i) => {\r\n      data[i] = _sum * val\r\n    })\r\n\r\n    //  pass the normalize data to the base implementation\r\n    //\r\n    this._super(data)\r\n    this.fireEvent(\"change:data\", {value: data})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createSet: function () {\r\n    let radius = this.getWidth() / 2\r\n    let length = this.data.length\r\n\r\n    let pie = this.canvas.paper.set()\r\n\r\n    let offsetAngle = 0\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      // angle is percent of TWO_PI\r\n      let angle = this.TWO_PI * this.data[i]\r\n      let color = this.COLORS[i % length]\r\n      let seg = this.drawSegment(radius, angle, offsetAngle, 0.1)\r\n      seg.attr({stroke: this.color.rgba(), fill: color})\r\n      pie.push(seg)\r\n      offsetAngle += angle\r\n    }\r\n    return pie\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    // keep the aspect ration\r\n    //\r\n    if (w > h) {\r\n      this._super(w, w)\r\n    }\r\n    else {\r\n      this._super(h, h)\r\n    }\r\n\r\n    // we must recreate the diagram if we change the size.\r\n    // low performance. Better: transfor/scale the set. Can be done in the next release\r\n    //\r\n    if (this.svgNodes !== null) {\r\n      this.svgNodes.remove()\r\n      this.svgNodes = this.createSet()\r\n    }\r\n\r\n    this.repaint()\r\n\r\n    return this\r\n  },\r\n\r\n  polarPath: function (radius, theta, rotation) {\r\n    let x, y\r\n    x = radius * Math.cos(theta + rotation) + radius\r\n    y = radius * Math.sin(theta + rotation) + radius\r\n    return \"L \" + x + \" \" + y + \" \"\r\n  },\r\n\r\n  drawSegment: function (radius, value, rotation, resolution) {\r\n    let path = \"M \" + radius + \" \" + radius\r\n\r\n    for (let i = 0; i < value; i += resolution) {\r\n      path += this.polarPath(radius, i, rotation)\r\n    }\r\n    path += this.polarPath(radius, value, rotation)\r\n\r\n    path += \"L \" + radius + \" \" + radius\r\n    return this.getCanvas().paper.path(path)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  applyTransformation: function () {\r\n    this.svgNodes.transform(\"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * Small data line diagram.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let testData = [];\r\n *    for(let i=0;i<100;i++) {\r\n *      testData.push(Math.floor(Math.random() * 100));\r\n *    }\r\n *\r\n *    let sparkline = new draw2d.shape.diagram.Sparkline({\r\n *    \tdata: testData,\r\n *     width:150,\r\n *     height:50,\r\n *     x:100,\r\n *     y:60\r\n *    });\r\n *\r\n *    canvas.add( sparkline);\r\n *\r\n * @param {Object} [attr] the configuration of the shape\r\n * @extends draw2d.shape.diagram.Diagram\r\n */\r\ndraw2d.shape.diagram.Sparkline = draw2d.shape.diagram.Diagram.extend(\r\n  /** @lends draw2d.shape.diagram.Sparkline */\r\n  {\r\n\r\n  NAME : \"draw2d.shape.diagram.Sparkline\",\r\n\r\n  init: function (attr, setter, getter) {\r\n    this.min = 0\r\n    this.max = 10\r\n    this.padding = 4\r\n\r\n    this._super({width: 180, height: 50,...attr}, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setData: function (data) {\r\n    if (data.length > 0) {\r\n      // get the min/max from an array and not only from two elements..\r\n      this.min = Math.min(...data)\r\n      this.max = Math.max(...data)\r\n    }\r\n    else {\r\n      this.min = 0\r\n      this.max = 1\r\n    }\r\n\r\n    if (this.max === this.min) {\r\n      this.max = this.min + 1\r\n    }\r\n\r\n    this._super(data)\r\n    this.fireEvent(\"change:data\", {value: data})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M0 0 l0 0\")\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    attributes.fill = \"90-#000:5-#4d4d4d:95\"\r\n\r\n    let padding = this.padding\r\n    let width = this.getWidth() - 2 * padding\r\n    let height = this.getHeight() - 2 * padding\r\n    let length = this.data.length\r\n    let min = this.min\r\n    let max = this.max\r\n    let toCoords = function (value, idx) {\r\n      let step = 1\r\n      // avoid divisionByZero\r\n      if (length > 1) {\r\n        step = (width / (length - 1))\r\n      }\r\n\r\n      return {\r\n        y: -((value - min) / (max - min) * height) + height + padding,\r\n        x: padding + idx * step\r\n      }\r\n    }\r\n\r\n    if (this.svgNodes !== null && (typeof this.cache.pathString === \"undefined\")) {\r\n      let prev_pt = null\r\n      this.data.forEach((item, idx) => {\r\n        let pt = toCoords(item, idx)\r\n        if (prev_pt === null) {\r\n          this.cache.pathString = [\"M\", pt.x, pt.y].join(\" \")\r\n        }\r\n        else {\r\n          this.cache.pathString = [this.cache.pathString, \"L\", pt.x, pt.y].join(\" \")\r\n        }\r\n        prev_pt = pt\r\n      })\r\n\r\n      this.svgNodes.attr({path: this.cache.pathString, stroke: \"#f0f0f0\"})\r\n\r\n    }\r\n    this._super(attributes)\r\n\r\n    return this\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A Rectangle Figure in a dimetric perspective.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let d1 =  new draw2d.shape.dimetric.Rectangle({x:10,y:10});\r\n *    let d2 =  new draw2d.shape.dimetric.Rectangle({x:100,y:10, bgColor:\"#f0f000\", alpha:0.7, width:100, height:60});\r\n *\r\n *    canvas.add(d1);\r\n *    canvas.add(d2);\r\n *\r\n *    canvas.setCurrentSelection(d2);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Polygon\r\n */\r\ndraw2d.shape.dimetric.Rectangle = draw2d.shape.basic.Polygon.extend(\r\n  /** @lends draw2d.shape.dimetric.Rectangle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.dimetric.Rectangle\",\r\n\r\n  /**\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({bgColor: \"#00a3f6\", color: \"#1B1B1B\"}, attr), setter, getter)\r\n\r\n    let pos = this.getPosition()\r\n\r\n    this.resetVertices()\r\n\r\n    let angle26 = Math.atan(.5)\r\n    let cos30 = Math.cos(angle26)\r\n    let sin30 = Math.sin(angle26)\r\n\r\n    let box = this.getBoundingBox()\r\n    let w = box.w\r\n    let h = box.h\r\n\r\n    this.addVertex(0, 0) // topLeft\r\n    this.addVertex(cos30 * w, sin30 * w) // topRight\r\n    this.addVertex(cos30 * w - cos30 * h, sin30 * w + sin30 * h) // bottomRight\r\n    this.addVertex(-cos30 * h, sin30 * h) // bottomLeft\r\n\r\n    // override the selection handler from the polygon. Because the vertices of\r\n    // the diamond are not selectable and modifiable\r\n    //\r\n    this.installEditPolicy(new draw2d.policy.figure.RectangleSelectionFeedbackPolicy())\r\n\r\n    this.setPosition(pos)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Typical flowchart <b>Document</b> shape\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure = new draw2d.shape.flowchart.Document({\r\n *       x:100,\r\n *       y:60\r\n *    });\r\n *\r\n *    canvas.add( figure);\r\n *\r\n * @extends draw2d.VectorFigure\r\n */\r\ndraw2d.shape.flowchart.Document = draw2d.VectorFigure.extend(\r\n  /** @lends draw2d.shape.flowchart.Document.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.flowchart.Document\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.amplitude = 0.08 // percentage of height\r\n\r\n    this._super(extend({\r\n      width: 80,\r\n      height: 50,\r\n      bgColor: \"#2196f3\",\r\n      color: \"#1B1B1B\",\r\n      stroke: 1\r\n    }, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  createShapeElement: function () {\r\n    return this.canvas.paper.path(this.calcPath())\r\n  },\r\n\r\n  calcPath: function () {\r\n    let w = this.getWidth()\r\n    let h = this.getHeight()\r\n    let w2 = w / 2\r\n    let w4 = w / 4\r\n    let h2 = (h * this.amplitude) | 0\r\n\r\n\r\n    return [\r\n      \"M\", this.getAbsoluteX(), \",\", this.getAbsoluteY(),\r\n      \"l\", w, \",\", 0,\r\n      \"l\", 0, \",\", h - h2,\r\n      \"q\", -w4, \",\", -h2, -w2, \",\", 0,\r\n      \"q\", -w4, \",\", h2, -w2, \",\", 0,\r\n      \"z\"].join(\" \")\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   **/\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes = extend({}, {\r\n      path: this.calcPath()\r\n    }, attributes)\r\n\r\n    this._super(attributes)\r\n\r\n    return this\r\n  }\r\n  /*\r\n    function draw_curve(Ax, Ay, Bx, By, M) {\r\n\r\n    // Find midpoint J\r\n    let Jx = Ax + (Bx - Ax) / 2\r\n    let Jy = Ay + (By - Ay) / 2\r\n\r\n    // We need a and b to find theta, and we need to know the sign of each to make sure that the orientation is correct.\r\n    let a = Bx - Ax\r\n    let asign = (a < 0 ? -1 : 1)\r\n    let b = By - Ay\r\n    let bsign = (b < 0 ? -1 : 1)\r\n    let theta = Math.atan(b / a)\r\n\r\n    // Find the point that's perpendicular to J on side\r\n    let costheta = asign * Math.cos(theta)\r\n    let sintheta = asign * Math.sin(theta)\r\n\r\n    // Find c and d\r\n    let c = M * sintheta\r\n    let d = M * costheta\r\n\r\n    // Use c and d to find Kx and Ky\r\n    let Kx = Jx - c\r\n    let Ky = Jy + d\r\n\r\n    return \"M\" + Ax + \",\" + Ay +\r\n           \"Q\" + Kx + \",\" + Ky +\r\n           \" \" + Bx + \",\" + By\r\n   }*/\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Acw();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Acw = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Acw.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Acw\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M19.275,3.849l1.695,8.56l1.875-1.642c2.311,3.59,1.72,8.415-1.584,11.317c-2.24,1.96-5.186,2.57-7.875,1.908l-0.84,3.396c3.75,0.931,7.891,0.066,11.02-2.672c4.768-4.173,5.521-11.219,1.94-16.279l2.028-1.775L19.275,3.849zM8.154,20.232c-2.312-3.589-1.721-8.416,1.582-11.317c2.239-1.959,5.186-2.572,7.875-1.909l0.842-3.398c-3.752-0.93-7.893-0.067-11.022,2.672c-4.765,4.174-5.519,11.223-1.939,16.283l-2.026,1.772l8.26,2.812l-1.693-8.559L8.154,20.232z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Alarm();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Alarm = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Alarm.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Alarm\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M8.179,20.115c-0.478,0.277-0.642,0.889-0.365,1.366c0.275,0.479,0.889,0.642,1.365,0.366c0.479-0.275,0.643-0.888,0.367-1.367C9.27,20.004,8.658,19.84,8.179,20.115zM9.18,12.239c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,13.126,9.657,12.516,9.18,12.239zM8.625,17.043c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,18.043,8.624,17.596,8.625,17.043zM16.312,3.957V3.031h1c0.275,0,0.5-0.225,0.5-0.5v-0.5c0-0.275-0.225-0.5-0.5-0.5h-3.625c-0.275,0-0.5,0.225-0.5,0.5v0.5c0,0.275,0.225,0.5,0.5,0.5h1v0.926C7.819,4.381,2.376,10.068,2.374,17.042C2.376,24.291,8.251,30.166,15.5,30.169c7.249-0.003,13.124-5.878,13.125-13.127C28.624,10.067,23.181,4.38,16.312,3.957zM15.5,27.166C9.909,27.157,5.385,22.633,5.375,17.042C5.385,11.451,9.909,6.927,15.5,6.917c5.59,0.01,10.115,4.535,10.124,10.125C25.615,22.633,21.091,27.157,15.5,27.166zM12.062,22.998c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,23.887,12.54,23.275,12.062,22.998zM12.062,11.088c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,11.2,11.584,11.364,12.062,11.088zM22.822,13.971c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,14.083,22.344,14.247,22.822,13.971zM15.501,23.92c-0.552,0-1,0.447-1,1c0,0.552,0.448,1,1,1s1-0.448,1-1C16.501,24.367,16.053,23.92,15.501,23.92zM19.938,9.355c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,10.245,20.418,9.632,19.938,9.355zM23.378,16.042c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,16.492,23.929,16.042,23.378,16.042zM22.823,20.115c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.091,0.367,1.367c0.477,0.275,1.089,0.112,1.365-0.366C23.464,21.004,23.3,20.391,22.823,20.115zM15.501,8.167c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.366c0.275,0.479,0.889,0.642,1.365,0.366l3.305-1.676c0.055,0.006,0.109,0.017,0.166,0.017c0.828,0,1.5-0.672,1.5-1.5l-0.5-7.876C16.501,8.614,16.053,8.167,15.501,8.167zM18.939,22.998c-0.479,0.276-0.643,0.888-0.366,1.367c0.275,0.477,0.888,0.642,1.366,0.365c0.478-0.276,0.642-0.889,0.366-1.365C20.028,22.886,19.417,22.723,18.939,22.998zM11.197,3.593c-0.836-1.04-2.103-1.718-3.541-1.718c-2.52,0-4.562,2.042-4.562,4.562c0,0.957,0.297,1.843,0.8,2.576C5.649,6.484,8.206,4.553,11.197,3.593zM27.106,9.014c0.503-0.733,0.8-1.619,0.8-2.576c0-2.52-2.043-4.562-4.562-4.562c-1.438,0-2.704,0.678-3.541,1.717C22.794,4.553,25.351,6.484,27.106,9.014z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Anonymous();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Anonymous = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Anonymous.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Anonymous\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h26.954C28.977,26.709,29.039,24.332,28.523,23.813zM16.618,13.693c-0.398-0.251-0.783-1.211-0.783-1.64c0-0.133,0-0.236,0-0.236c-0.105-0.106-0.574-0.096-0.67,0c0,0,0,0.104,0,0.236c0,0.429-0.385,1.389-0.783,1.64c-0.399,0.251-1.611,0.237-2.084-0.236c-0.473-0.473-0.524-1.663-0.643-1.78c-0.118-0.119-0.185-0.185-0.185-0.185l0.029-0.414c0,0,0.842-0.207,1.699-0.207s1.803,0.502,1.803,0.502c0.231-0.074,0.784-0.083,0.996,0c0,0,0.945-0.502,1.803-0.502s1.699,0.207,1.699,0.207l0.029,0.414c0,0-0.066,0.066-0.185,0.185c-0.118,0.118-0.169,1.308-0.643,1.78C18.229,13.93,17.018,13.944,16.618,13.693z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Apple();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Apple = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Apple.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Apple\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.32,10.85c-1.743,1.233-2.615,2.719-2.615,4.455c0,2.079,1.078,3.673,3.232,4.786c-0.578,1.677-1.416,3.134-2.514,4.375c-1.097,1.241-2.098,1.862-3.004,1.862c-0.427,0-1.009-0.143-1.748-0.423l-0.354-0.138c-0.725-0.281-1.363-0.423-1.92-0.423c-0.525,0-1.1,0.11-1.725,0.331l-0.445,0.16l-0.56,0.229c-0.441,0.176-0.888,0.264-1.337,0.264c-1.059,0-2.228-0.872-3.507-2.616c-1.843-2.498-2.764-5.221-2.764-8.167c0-2.095,0.574-3.781,1.725-5.061c1.149-1.279,2.673-1.92,4.568-1.92c0.709,0,1.371,0.13,1.988,0.389l0.423,0.172l0.445,0.183c0.396,0.167,0.716,0.251,0.959,0.251c0.312,0,0.659-0.072,1.04-0.217l0.582-0.229l0.435-0.16c0.693-0.251,1.459-0.377,2.297-0.377C21.512,8.576,23.109,9.334,24.32,10.85zM19.615,3.287c0.021,0.267,0.033,0.473,0.033,0.617c0,1.317-0.479,2.473-1.438,3.467s-2.075,1.49-3.347,1.49c-0.038-0.297-0.058-0.51-0.058-0.639c0-1.12,0.445-2.171,1.337-3.153c0.891-0.982,1.922-1.558,3.096-1.725C19.32,3.329,19.447,3.311,19.615,3.287z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Apps();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Apps = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Apps.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Apps\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.359,18.424l-2.326,1.215c0.708,1.174,1.384,2.281,1.844,3.033l2.043-1.066C25.538,20.822,24.966,19.652,24.359,18.424zM19.143,14.688c0.445,0.84,1.342,2.367,2.274,3.926l2.414-1.261c-0.872-1.769-1.72-3.458-2.087-4.122c-0.896-1.621-1.982-3.108-3.454-5.417c-1.673-2.625-3.462-5.492-4.052-4.947c-1.194,0.384,1.237,4.094,1.876,5.715C16.73,10.147,17.991,12.512,19.143,14.688zM26.457,22.673l-1.961,1.022l1.982,4.598c0,0,0.811,0.684,1.92,0.213c1.104-0.469,0.81-1.706,0.81-1.706L26.457,22.673zM24.35,15.711c0.168,0.339,2.924,5.93,2.924,5.93h1.983v-5.93H24.35zM18.34,15.704h-4.726l-3.424,5.935h11.66C21.559,21.159,18.771,16.479,18.34,15.704zM3.231,21.613l3.437-5.902H2.083v5.93h1.133L3.231,21.613zM15.048,10.145c0-0.93-0.754-1.685-1.685-1.685c-0.661,0-1.231,0.381-1.507,0.936l2.976,1.572C14.97,10.725,15.048,10.444,15.048,10.145zM14.343,12.06l-3.188-1.684L9.62,13.012l3.197,1.689L14.343,12.06zM3.192,26.886l-0.384,1.108v0.299l0.298-0.128l0.725-0.896l2.997-2.354l-3.137-1.651L3.192,26.886zM9.02,14.044l-4.757,8.17l3.23,1.706l4.728-8.186L9.02,14.044z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowDown();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowDown = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowDown.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ArrowDown\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M5.318,6.684L15.5,24.316L25.682,6.684H5.318z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowLeft();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowLeft = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowLeft.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ArrowLeft\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.316,5.318L6.684,15.5l17.632,10.182V5.318L24.316,5.318z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowLeft2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowLeft2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowLeft2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ArrowLeft2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.871,9.814 15.684,16.001 21.871,22.188 18.335,25.725 8.612,16.001 18.335,6.276z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowRight();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowRight = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowRight.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ArrowRight\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M6.684,25.682L24.316,15.5L6.684,5.318V25.682z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowRight2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowRight2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowRight2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ArrowRight2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.129,22.186 16.316,15.999 10.129,9.812 13.665,6.276 23.389,15.999 13.665,25.725z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ArrowUp();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ArrowUp = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ArrowUp.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.ArrowUp\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.682,24.316L15.5,6.684L5.318,24.316H25.682z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Aumade();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Aumade = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Aumade.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Aumade\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.513,24.52c-0.131-0.217-0.14-0.481-0.022-0.711l1.987-3.844l0,0c0.186-0.357,0.625-0.497,0.981-0.312c0.357,0.188,0.498,0.625,0.312,0.982l-1.801,3.48l2.228,3.699h12.269l-14.8-25.631L6.433,18.178c0.434,0.242,0.909,0.479,1.391,0.654c0.571,0.211,1.148,0.342,1.658,0.342c0.276,0,0.579-0.078,0.916-0.238c0.337-0.158,0.7-0.396,1.073-0.688c0.749-0.582,1.527-1.354,2.334-2.021c0.539-0.442,1.091-0.844,1.706-1.099c0.352-0.145,0.729-0.239,1.128-0.239c0.622,0,1.174,0.214,1.622,0.5c0.449,0.287,0.813,0.646,1.11,0.995c0.59,0.697,0.902,1.359,0.924,1.394l0,0c0.18,0.361,0.021,0.801-0.341,0.977c-0.356,0.176-0.798,0.021-0.978-0.34c0-0.002-0.002-0.004-0.004-0.007c-0.002-0.011-0.008-0.021-0.018-0.034c-0.018-0.033-0.043-0.082-0.078-0.146c-0.07-0.125-0.179-0.305-0.312-0.496c-0.271-0.391-0.668-0.845-1.092-1.104c-0.281-0.178-0.561-0.272-0.844-0.272c-0.216,0-0.479,0.069-0.788,0.229c-0.309,0.153-0.653,0.396-1.016,0.688c-0.727,0.584-1.511,1.362-2.351,2.033c-0.562,0.445-1.15,0.853-1.809,1.103c-0.375,0.143-0.776,0.229-1.195,0.229c-0.749,0-1.48-0.181-2.164-0.433c-0.58-0.219-1.125-0.482-1.613-0.764L0.86,27.816h15.63L14.513,24.52zM18.214,22.242c0.222-0.557,0.537-1.217,0.963-1.848c0.427-0.627,0.957-1.232,1.646-1.646c0.379-0.229,0.812-0.391,1.282-0.438l-0.604-0.934l0,0c-0.22-0.339-0.123-0.789,0.215-1.009c0.341-0.219,0.789-0.123,1.013,0.216l1.545,2.391c0.184,0.274,0.147,0.646-0.075,0.893c-0.228,0.247-0.591,0.305-0.886,0.145c-0.354-0.191-0.646-0.258-0.901-0.258c-0.291,0-0.562,0.084-0.845,0.25c-0.277,0.164-0.562,0.414-0.813,0.719c-0.519,0.607-0.937,1.422-1.185,2.055c-0.111,0.285-0.387,0.466-0.678,0.466c-0.092,0-0.183-0.021-0.271-0.056C18.249,23.039,18.064,22.615,18.214,22.242z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.BarChart();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.BarChart = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.BarChart.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.BarChart\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.25,8.375V28h6.5V8.375H21.25zM12.25,28h6.5V4.125h-6.5V28zM3.25,28h6.5V12.625h-6.5V28z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.BioHazard();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.BioHazard = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.BioHazard.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.BioHazard\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.154,13.988c-0.96-0.554-1.982-0.892-3.019-1.032c0.396-0.966,0.616-2.023,0.616-3.131c0-4.399-3.438-8.001-7.772-8.264c3.245,0.258,5.803,2.979,5.803,6.292c0,3.373-2.653,6.123-5.983,6.294v1.292c0.908,0.144,1.605,0.934,1.605,1.883c0,0.232-0.043,0.454-0.118,0.66l1.181,0.683c1.826-2.758,5.509-3.658,8.41-1.981c2.896,1.672,3.965,5.299,2.506,8.254C31.386,21.038,29.992,16.204,26.154,13.988zM4.122,16.587c2.92-1.686,6.628-0.764,8.442,2.034l1.141-0.657c-0.072-0.2-0.109-0.417-0.109-0.642c0-0.909,0.638-1.67,1.489-1.859v-1.319c-3.3-0.202-5.92-2.94-5.92-6.292c0-3.297,2.532-6.007,5.757-6.286c-4.312,0.285-7.729,3.875-7.729,8.258c0,1.078,0.206,2.106,0.581,3.05c-1.004,0.147-1.999,0.481-2.931,1.02c-3.812,2.201-5.209,6.985-3.264,10.87C0.174,21.823,1.251,18.244,4.122,16.587zM11.15,11.452c0.114,0.139,0.235,0.271,0.362,0.398c0.126,0.126,0.259,0.247,0.397,0.361c0.102,0.084,0.211,0.16,0.318,0.236c0.93-0.611,2.045-0.969,3.244-0.969c1.201,0,2.312,0.357,3.242,0.969c0.107-0.077,0.217-0.152,0.318-0.236c0.139-0.114,0.271-0.235,0.397-0.361c0.127-0.127,0.248-0.259,0.362-0.398c0.113-0.138,0.222-0.283,0.323-0.431c-1.307-0.956-2.908-1.528-4.643-1.528c-0.042,0-0.083-0.001-0.124,0c-0.019,0-0.04-0.001-0.06,0c-1.666,0.038-3.201,0.605-4.462,1.528C10.929,11.17,11.037,11.314,11.15,11.452zM9.269,16.787c-0.168-0.062-0.338-0.117-0.512-0.164c-0.173-0.047-0.348-0.083-0.525-0.113c-0.177-0.03-0.355-0.053-0.535-0.065c-0.175,1.609,0.13,3.282,0.998,4.786c0.868,1.503,2.164,2.606,3.645,3.259c0.079-0.162,0.15-0.328,0.212-0.496c0.063-0.169,0.118-0.338,0.164-0.512c0.047-0.173,0.087-0.349,0.115-0.525c0.022-0.13,0.034-0.262,0.046-0.394c-0.993-0.5-1.86-1.286-2.461-2.325c-0.6-1.04-0.847-2.182-0.783-3.294C9.512,16.889,9.392,16.833,9.269,16.787zM18.122,22.657c0.014,0.132,0.024,0.263,0.046,0.394c0.03,0.177,0.067,0.352,0.113,0.524c0.047,0.174,0.102,0.346,0.165,0.514c0.062,0.169,0.132,0.333,0.212,0.495c1.48-0.653,2.777-1.755,3.644-3.257c0.868-1.504,1.176-3.179,1.001-4.788c-0.18,0.013-0.358,0.035-0.535,0.065c-0.177,0.029-0.353,0.067-0.525,0.113s-0.345,0.101-0.513,0.163c-0.124,0.047-0.241,0.105-0.362,0.16c0.063,1.11-0.183,2.253-0.784,3.292C19.984,21.373,19.116,22.157,18.122,22.657zM20.569,27.611c-2.92-1.687-3.977-5.358-2.46-8.329l-1.192-0.689c-0.349,0.389-0.854,0.634-1.417,0.634c-0.571,0-1.086-0.254-1.436-0.653l-1.146,0.666c1.475,2.96,0.414,6.598-2.488,8.272c-2.888,1.668-6.552,0.791-8.386-1.935c2.38,3.667,7.249,4.87,11.079,2.658c0.929-0.535,1.711-1.227,2.339-2.018c0.64,0.832,1.45,1.554,2.416,2.112c3.835,2.213,8.709,1.006,11.086-2.671C27.132,28.396,23.463,29.282,20.569,27.611z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Book();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Book = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Book.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Book\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.754,4.626c-0.233-0.161-0.536-0.198-0.802-0.097L12.16,9.409c-0.557,0.213-1.253,0.316-1.968,0.316c-0.997,0.002-2.029-0.202-2.747-0.48C7.188,9.148,6.972,9.04,6.821,8.943c0.056-0.024,0.12-0.05,0.193-0.075L18.648,4.43l1.733,0.654V3.172c0-0.284-0.14-0.554-0.374-0.714c-0.233-0.161-0.538-0.198-0.802-0.097L6.414,7.241c-0.395,0.142-0.732,0.312-1.02,0.564C5.111,8.049,4.868,8.45,4.872,8.896c0,0.012,0.004,0.031,0.004,0.031v17.186c0,0.008-0.003,0.015-0.003,0.021c0,0.006,0.003,0.01,0.003,0.016v0.017h0.002c0.028,0.601,0.371,0.983,0.699,1.255c1.034,0.803,2.769,1.252,4.614,1.274c0.874,0,1.761-0.116,2.583-0.427l12.796-4.881c0.337-0.128,0.558-0.448,0.558-0.809V5.341C26.128,5.057,25.988,4.787,25.754,4.626zM5.672,11.736c0.035,0.086,0.064,0.176,0.069,0.273l0.004,0.054c0.016,0.264,0.13,0.406,0.363,0.611c0.783,0.626,2.382,1.08,4.083,1.093c0.669,0,1.326-0.083,1.931-0.264v1.791c-0.647,0.143-1.301,0.206-1.942,0.206c-1.674-0.026-3.266-0.353-4.509-1.053V11.736zM10.181,24.588c-1.674-0.028-3.266-0.354-4.508-1.055v-2.712c0.035,0.086,0.065,0.176,0.07,0.275l0.002,0.053c0.018,0.267,0.13,0.408,0.364,0.613c0.783,0.625,2.381,1.079,4.083,1.091c0.67,0,1.327-0.082,1.932-0.262v1.789C11.476,24.525,10.821,24.588,10.181,24.588z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Bookmark();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Bookmark = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Bookmark.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Bookmark\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M17.396,1.841L6.076,25.986l7.341-4.566l1.186,8.564l11.32-24.146L17.396,1.841zM19.131,9.234c-0.562-0.264-0.805-0.933-0.541-1.495c0.265-0.562,0.934-0.805,1.496-0.541s0.805,0.934,0.541,1.496S19.694,9.498,19.131,9.234z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Books();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Books = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Books.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Books\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.679,7.858c-0.176-0.138-0.404-0.17-0.606-0.083l-9.66,4.183c-0.42,0.183-0.946,0.271-1.486,0.271c-0.753,0.002-1.532-0.173-2.075-0.412c-0.194-0.083-0.356-0.176-0.471-0.259c0.042-0.021,0.09-0.042,0.146-0.064l8.786-3.804l1.31,0.561V6.612c0-0.244-0.106-0.475-0.283-0.612c-0.176-0.138-0.406-0.17-0.605-0.083l-9.66,4.183c-0.298,0.121-0.554,0.268-0.771,0.483c-0.213,0.208-0.397,0.552-0.394,0.934c0,0.01,0.003,0.027,0.003,0.027v14.73c0,0.006-0.002,0.012-0.002,0.019c0,0.005,0.002,0.007,0.002,0.012v0.015h0.002c0.021,0.515,0.28,0.843,0.528,1.075c0.781,0.688,2.091,1.073,3.484,1.093c0.66,0,1.33-0.1,1.951-0.366l9.662-4.184c0.255-0.109,0.422-0.383,0.422-0.692V8.471C26.961,8.227,26.855,7.996,26.679,7.858zM20.553,5.058c-0.017-0.221-0.108-0.429-0.271-0.556c-0.176-0.138-0.404-0.17-0.606-0.083l-9.66,4.183C9.596,8.784,9.069,8.873,8.53,8.873C7.777,8.874,6.998,8.699,6.455,8.46C6.262,8.378,6.099,8.285,5.984,8.202C6.026,8.181,6.075,8.16,6.13,8.138l8.787-3.804l1.309,0.561V3.256c0-0.244-0.106-0.475-0.283-0.612c-0.176-0.138-0.407-0.17-0.606-0.083l-9.66,4.183C5.379,6.864,5.124,7.011,4.907,7.227C4.693,7.435,4.51,7.779,4.513,8.161c0,0.011,0.003,0.027,0.003,0.027v14.73c0,0.006-0.001,0.013-0.001,0.019c0,0.005,0.001,0.007,0.001,0.012v0.016h0.002c0.021,0.515,0.28,0.843,0.528,1.075c0.781,0.688,2.091,1.072,3.485,1.092c0.376,0,0.754-0.045,1.126-0.122V11.544c-0.01-0.7,0.27-1.372,0.762-1.856c0.319-0.315,0.708-0.564,1.19-0.756L20.553,5.058z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Bubble();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Bubble = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Bubble.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Bubble\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,5.333c-7.732,0-14,4.701-14,10.5c0,1.982,0.741,3.833,2.016,5.414L2,25.667l5.613-1.441c2.339,1.317,5.237,2.107,8.387,2.107c7.732,0,14-4.701,14-10.5C30,10.034,23.732,5.333,16,5.333z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Bug();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Bug = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Bug.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Bug\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.589,10.903l-5.828,1.612c-0.534-1.419-1.338-2.649-2.311-3.628l3.082-5.44c0.271-0.48,0.104-1.092-0.38-1.365c-0.479-0.271-1.09-0.102-1.36,0.377l-2.924,5.162c-0.604-0.383-1.24-0.689-1.9-0.896c-0.416-1.437-1.652-2.411-3.058-2.562c-0.001-0.004-0.002-0.008-0.003-0.012c-0.061-0.242-0.093-0.46-0.098-0.65c-0.005-0.189,0.012-0.351,0.046-0.479c0.037-0.13,0.079-0.235,0.125-0.317c0.146-0.26,0.34-0.43,0.577-0.509c0.023,0.281,0.142,0.482,0.352,0.601c0.155,0.088,0.336,0.115,0.546,0.086c0.211-0.031,0.376-0.152,0.496-0.363c0.105-0.186,0.127-0.389,0.064-0.607c-0.064-0.219-0.203-0.388-0.414-0.507c-0.154-0.087-0.314-0.131-0.482-0.129c-0.167,0.001-0.327,0.034-0.481,0.097c-0.153,0.063-0.296,0.16-0.429,0.289c-0.132,0.129-0.241,0.271-0.33,0.426c-0.132,0.234-0.216,0.496-0.25,0.783c-0.033,0.286-0.037,0.565-0.009,0.84c0.017,0.16,0.061,0.301,0.094,0.449c-0.375-0.021-0.758,0.002-1.14,0.108c-0.482,0.133-0.913,0.36-1.28,0.653c-0.052-0.172-0.098-0.344-0.18-0.518c-0.116-0.249-0.263-0.486-0.438-0.716c-0.178-0.229-0.384-0.41-0.618-0.543C9.904,3.059,9.737,2.994,9.557,2.951c-0.18-0.043-0.352-0.052-0.516-0.027s-0.318,0.08-0.463,0.164C8.432,3.172,8.318,3.293,8.23,3.445C8.111,3.656,8.08,3.873,8.136,4.092c0.058,0.221,0.181,0.384,0.367,0.49c0.21,0.119,0.415,0.138,0.611,0.056C9.31,4.556,9.451,4.439,9.539,4.283c0.119-0.21,0.118-0.443-0.007-0.695c0.244-0.055,0.497-0.008,0.757,0.141c0.081,0.045,0.171,0.115,0.27,0.208c0.097,0.092,0.193,0.222,0.286,0.388c0.094,0.166,0.179,0.368,0.251,0.608c0.013,0.044,0.023,0.098,0.035,0.146c-0.911,0.828-1.357,2.088-1.098,3.357c-0.582,0.584-1.072,1.27-1.457,2.035l-5.16-2.926c-0.48-0.271-1.092-0.102-1.364,0.377C1.781,8.404,1.95,9.016,2.43,9.289l5.441,3.082c-0.331,1.34-0.387,2.807-0.117,4.297l-5.828,1.613c-0.534,0.147-0.846,0.699-0.698,1.231c0.147,0.53,0.697,0.843,1.231,0.694l5.879-1.627c0.503,1.057,1.363,2.28,2.371,3.443l-3.194,5.639c-0.272,0.481-0.104,1.092,0.378,1.363c0.239,0.137,0.512,0.162,0.758,0.094c0.248-0.068,0.469-0.229,0.604-0.471l2.895-5.109c2.7,2.594,5.684,4.123,5.778,1.053c1.598,2.56,3.451-0.338,4.502-3.976l5.203,2.947c0.24,0.138,0.514,0.162,0.762,0.094c0.246-0.067,0.467-0.229,0.603-0.471c0.272-0.479,0.104-1.091-0.377-1.362l-5.701-3.229c0.291-1.505,0.422-2.983,0.319-4.138l5.886-1.627c0.53-0.147,0.847-0.697,0.696-1.229C29.673,11.068,29.121,10.756,28.589,10.903z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Calendar();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Calendar = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Calendar.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Calendar\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M11.758,15.318c0.312-0.3,0.408-0.492,0.408-0.492h0.024c0,0-0.012,0.264-0.012,0.528v5.469h-1.871v1.031h4.87v-1.031H13.33v-7.436h-1.055l-2.027,1.967l0.719,0.744L11.758,15.318zM16.163,21.207c0,0.205,0.024,0.42,0.06,0.647h5.457v-1.031h-4.197c0.023-1.931,4.065-2.362,4.065-5.146c0-1.463-1.114-2.436-2.674-2.436c-1.907,0-2.675,1.607-2.675,1.607l0.875,0.587c0,0,0.6-1.08,1.716-1.08c0.887,0,1.522,0.563,1.522,1.403C20.312,17.754,16.163,18.186,16.163,21.207zM12,3.604h-2v3.335h2V3.604zM23,4.77v3.17h-4V4.77h-6v3.168H9.002V4.77H6.583v21.669h18.833V4.77H23zM24.417,25.438H7.584V10.522h16.833V25.438zM22,3.604h-2v3.335h2V3.604z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cart();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cart = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cart.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Cart\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.02,11.754L8.416,9.473L7.16,4.716C7.071,4.389,6.772,4.158,6.433,4.158H3.341C3.114,3.866,2.775,3.667,2.377,3.667c-0.686,0-1.242,0.556-1.242,1.242c0,0.686,0.556,1.242,1.242,1.242c0.399,0,0.738-0.201,0.965-0.493h2.512l5.23,19.8c-0.548,0.589-0.891,1.373-0.891,2.242c0,1.821,1.473,3.293,3.293,3.293c1.82,0,3.294-1.472,3.297-3.293c0-0.257-0.036-0.504-0.093-0.743h5.533c-0.056,0.239-0.092,0.486-0.092,0.743c0,1.821,1.475,3.293,3.295,3.293s3.295-1.472,3.295-3.293c0-1.82-1.473-3.295-3.295-3.297c-0.951,0.001-1.801,0.409-2.402,1.053h-7.136c-0.601-0.644-1.451-1.052-2.402-1.053c-0.379,0-0.738,0.078-1.077,0.196l-0.181-0.685H26.81c1.157-0.027,2.138-0.83,2.391-1.959l1.574-7.799c0.028-0.145,0.041-0.282,0.039-0.414C30.823,12.733,30.051,11.86,29.02,11.754zM25.428,27.994c-0.163,0-0.295-0.132-0.297-0.295c0.002-0.165,0.134-0.297,0.297-0.297s0.295,0.132,0.297,0.297C25.723,27.862,25.591,27.994,25.428,27.994zM27.208,20.499l0.948-0.948l-0.318,1.578L27.208,20.499zM12.755,11.463l1.036,1.036l-1.292,1.292l-1.292-1.292l1.087-1.087L12.755,11.463zM17.253,11.961l0.538,0.538l-1.292,1.292l-1.292-1.292l0.688-0.688L17.253,11.961zM9.631,14.075l0.868-0.868l1.292,1.292l-1.292,1.292l-0.564-0.564L9.631,14.075zM9.335,12.956l-0.328-1.24L9.792,12.5L9.335,12.956zM21.791,16.499l-1.292,1.292l-1.292-1.292l1.292-1.292L21.791,16.499zM21.207,14.5l1.292-1.292l1.292,1.292l-1.292,1.292L21.207,14.5zM18.5,15.791l-1.293-1.292l1.292-1.292l1.292,1.292L18.5,15.791zM17.791,16.499L16.5,17.791l-1.292-1.292l1.292-1.292L17.791,16.499zM14.499,15.791l-1.292-1.292l1.292-1.292l1.292,1.292L14.499,15.791zM13.791,16.499l-1.292,1.291l-1.292-1.291l1.292-1.292L13.791,16.499zM10.499,17.207l1.292,1.292l-0.785,0.784l-0.54-2.044L10.499,17.207zM11.302,20.404l1.197-1.197l1.292,1.292L12.5,21.791l-1.131-1.13L11.302,20.404zM13.208,18.499l1.291-1.292l1.292,1.292L14.5,19.791L13.208,18.499zM16.5,19.207l1.292,1.292L16.5,21.79l-1.292-1.291L16.5,19.207zM17.208,18.499l1.292-1.292l1.291,1.292L18.5,19.79L17.208,18.499zM20.499,19.207l1.292,1.292L20.5,21.79l-1.292-1.292L20.499,19.207zM21.207,18.499l1.292-1.292l1.292,1.292l-1.292,1.292L21.207,18.499zM23.207,16.499l1.292-1.292l1.292,1.292l-1.292,1.292L23.207,16.499zM25.207,14.499l1.292-1.292L27.79,14.5l-1.291,1.292L25.207,14.499zM24.499,13.792l-1.156-1.156l2.082,0.23L24.499,13.792zM21.791,12.5l-1.292,1.292L19.207,12.5l0.29-0.29l2.253,0.25L21.791,12.5zM14.5,11.791l-0.152-0.152l0.273,0.03L14.5,11.791zM10.5,11.792l-0.65-0.65l1.171,0.129L10.5,11.792zM14.5,21.207l1.205,1.205h-2.409L14.5,21.207zM18.499,21.207l1.206,1.206h-2.412L18.499,21.207zM22.499,21.207l1.208,1.207l-2.414-0.001L22.499,21.207zM23.207,20.499l1.292-1.292l1.292,1.292l-1.292,1.292L23.207,20.499zM25.207,18.499l1.292-1.291l1.291,1.291l-1.291,1.292L25.207,18.499zM28.499,17.791l-1.291-1.292l1.291-1.291l0.444,0.444l-0.429,2.124L28.499,17.791zM29.001,13.289l-0.502,0.502l-0.658-0.658l1.016,0.112C28.911,13.253,28.956,13.271,29.001,13.289zM13.487,27.994c-0.161,0-0.295-0.132-0.295-0.295c0-0.165,0.134-0.297,0.295-0.297c0.163,0,0.296,0.132,0.296,0.297C13.783,27.862,13.651,27.994,13.487,27.994zM26.81,22.414h-1.517l1.207-1.207l0.93,0.93C27.243,22.306,27.007,22.428,26.81,22.414z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ccw();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ccw = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ccw.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ccw\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.249,15.499c-0.009,4.832-3.918,8.741-8.75,8.75c-2.515,0-4.768-1.064-6.365-2.763l2.068-1.442l-7.901-3.703l0.744,8.694l2.193-1.529c2.244,2.594,5.562,4.242,9.26,4.242c6.767,0,12.249-5.482,12.249-12.249H24.249zM15.499,6.75c2.516,0,4.769,1.065,6.367,2.764l-2.068,1.443l7.901,3.701l-0.746-8.693l-2.192,1.529c-2.245-2.594-5.562-4.245-9.262-4.245C8.734,3.25,3.25,8.734,3.249,15.499H6.75C6.758,10.668,10.668,6.758,15.499,6.75z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Chat();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Chat = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Chat.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Chat\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.985,5.972c-7.563,0-13.695,4.077-13.695,9.106c0,2.877,2.013,5.44,5.147,7.108c-0.446,1.479-1.336,3.117-3.056,4.566c0,0,4.015-0.266,6.851-3.143c0.163,0.04,0.332,0.07,0.497,0.107c-0.155-0.462-0.246-0.943-0.246-1.443c0-3.393,3.776-6.05,8.599-6.05c3.464,0,6.379,1.376,7.751,3.406c1.168-1.34,1.847-2.892,1.847-4.552C29.68,10.049,23.548,5.972,15.985,5.972zM27.68,22.274c0-2.79-3.401-5.053-7.599-5.053c-4.196,0-7.599,2.263-7.599,5.053c0,2.791,3.403,5.053,7.599,5.053c0.929,0,1.814-0.116,2.637-0.319c1.573,1.597,3.801,1.744,3.801,1.744c-0.954-0.804-1.447-1.713-1.695-2.534C26.562,25.293,27.68,23.871,27.68,22.274z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Check();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Check = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Check.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Check\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M2.379,14.729 5.208,11.899 12.958,19.648 25.877,6.733 28.707,9.561 12.958,25.308z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Chrome();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Chrome = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Chrome.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Chrome\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.318,7.677c0.071-0.029,0.148-0.046,0.229-0.046h11.949c-2.533-3.915-6.938-6.506-11.949-6.506c-5.017,0-9.428,2.598-11.959,6.522l4.291,7.431C8.018,11.041,11.274,7.796,15.318,7.677zM28.196,8.84h-8.579c2.165,1.357,3.605,3.763,3.605,6.506c0,1.321-0.334,2.564-0.921,3.649c-0.012,0.071-0.035,0.142-0.073,0.209l-5.973,10.347c7.526-0.368,13.514-6.587,13.514-14.205C29.77,13.002,29.201,10.791,28.196,8.84zM15.547,23.022c-2.761,0-5.181-1.458-6.533-3.646c-0.058-0.046-0.109-0.103-0.149-0.171L2.89,8.855c-1,1.946-1.565,4.153-1.565,6.492c0,7.624,5.999,13.846,13.534,14.205l4.287-7.425C18.073,22.698,16.848,23.022,15.547,23.022zM9.08,15.347c0,1.788,0.723,3.401,1.894,4.573c1.172,1.172,2.785,1.895,4.573,1.895c1.788,0,3.401-0.723,4.573-1.895s1.895-2.785,1.895-4.573c0-1.788-0.723-3.4-1.895-4.573c-1.172-1.171-2.785-1.894-4.573-1.894c-1.788,0-3.401,0.723-4.573,1.894C9.803,11.946,9.081,13.559,9.08,15.347z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Clip();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Clip = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Clip.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Clip\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.898,6.135c-1.571-1.125-3.758-0.764-4.884,0.808l-8.832,12.331c-0.804,1.122-0.546,2.684,0.577,3.488c1.123,0.803,2.684,0.545,3.488-0.578l6.236-8.706l-0.813-0.583l-6.235,8.707h0c-0.483,0.672-1.42,0.828-2.092,0.347c-0.673-0.481-0.827-1.419-0.345-2.093h0l8.831-12.33l0.001-0.001l-0.002-0.001c0.803-1.119,2.369-1.378,3.489-0.576c1.12,0.803,1.379,2.369,0.577,3.489v-0.001l-9.68,13.516l0.001,0.001c-1.124,1.569-3.316,1.931-4.885,0.808c-1.569-1.125-1.93-3.315-0.807-4.885l7.035-9.822l-0.813-0.582l-7.035,9.822c-1.447,2.02-0.982,4.83,1.039,6.277c2.021,1.448,4.831,0.982,6.278-1.037l9.68-13.516C25.83,9.447,25.47,7.261,23.898,6.135z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Clock();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Clock = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Clock.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Clock\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,2.374C8.251,2.375,2.376,8.251,2.374,15.5C2.376,22.748,8.251,28.623,15.5,28.627c7.249-0.004,13.124-5.879,13.125-13.127C28.624,8.251,22.749,2.375,15.5,2.374zM15.5,25.623C9.909,25.615,5.385,21.09,5.375,15.5C5.385,9.909,9.909,5.384,15.5,5.374c5.59,0.01,10.115,4.535,10.124,10.125C25.615,21.09,21.091,25.615,15.5,25.623zM8.625,15.5c-0.001-0.552-0.448-0.999-1.001-1c-0.553,0-1,0.448-1,1c0,0.553,0.449,1,1,1C8.176,16.5,8.624,16.053,8.625,15.5zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.887,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM22.822,12.428c0.478-0.275,0.643-0.888,0.366-1.366c-0.275-0.478-0.89-0.642-1.366-0.366c-0.479,0.278-0.642,0.89-0.366,1.367C21.732,12.54,22.344,12.705,22.822,12.428zM12.062,21.455c-0.478-0.275-1.089-0.111-1.366,0.367c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.277,1.091,0.111,1.365-0.365C12.704,22.344,12.54,21.732,12.062,21.455zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM22.823,18.572c-0.48-0.275-1.092-0.111-1.367,0.365c-0.275,0.479-0.112,1.092,0.367,1.367c0.477,0.275,1.089,0.113,1.365-0.365C23.464,19.461,23.3,18.848,22.823,18.572zM19.938,7.813c-0.477-0.276-1.091-0.111-1.365,0.366c-0.275,0.48-0.111,1.091,0.366,1.367s1.089,0.112,1.366-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM23.378,14.5c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1c0.551,0,1-0.447,1-1C24.378,14.949,23.929,14.5,23.378,14.5zM15.501,6.624c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.889-0.365,1.365c0.275,0.479,0.889,0.643,1.365,0.367l3.305-1.676C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876C16.501,7.072,16.053,6.624,15.501,6.624zM15.501,22.377c-0.552,0-1,0.447-1,1s0.448,1,1,1s1-0.447,1-1S16.053,22.377,15.501,22.377zM18.939,21.455c-0.479,0.277-0.643,0.889-0.366,1.367c0.275,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.889,0.366-1.365C20.028,21.344,19.417,21.18,18.939,21.455z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cloud();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cloud = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cloud.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Cloud\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h15.875c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cloud2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cloud2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cloud2.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Cloud2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M7.562,24.812c-3.313,0-6-2.687-6-6l0,0c0.002-2.659,1.734-4.899,4.127-5.684l0,0c0.083-2.26,1.937-4.064,4.216-4.066l0,0c0.73,0,1.415,0.19,2.01,0.517l0,0c1.266-2.105,3.57-3.516,6.208-3.517l0,0c3.947,0.002,7.157,3.155,7.248,7.079l0,0c2.362,0.804,4.062,3.034,4.064,5.671l0,0c0,3.313-2.687,6-6,6l0,0H7.562L7.562,24.812zM24.163,14.887c-0.511-0.095-0.864-0.562-0.815-1.079l0,0c0.017-0.171,0.027-0.336,0.027-0.497l0,0c-0.007-2.899-2.352-5.245-5.251-5.249l0,0c-2.249-0.002-4.162,1.418-4.911,3.41l0,0c-0.122,0.323-0.406,0.564-0.748,0.63l0,0c-0.34,0.066-0.694-0.052-0.927-0.309l0,0c-0.416-0.453-0.986-0.731-1.633-0.731l0,0c-1.225,0.002-2.216,0.993-2.22,2.218l0,0c0,0.136,0.017,0.276,0.045,0.424l0,0c0.049,0.266-0.008,0.54-0.163,0.762l0,0c-0.155,0.223-0.392,0.371-0.657,0.414l0,0c-1.9,0.313-3.352,1.949-3.35,3.931l0,0c0.004,2.209,1.792,3.995,4.001,4.001l0,0h15.874c2.209-0.006,3.994-1.792,3.999-4.001l0,0C27.438,16.854,26.024,15.231,24.163,14.887L24.163,14.887\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.CloudDown();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.CloudDown = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.CloudDown.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.CloudDown\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h3.404l-0.707-0.707c-0.377-0.377-0.585-0.879-0.585-1.413c0-0.533,0.208-1.035,0.585-1.412l0.556-0.557c0.4-0.399,0.937-0.628,1.471-0.628c0.027,0,0.054,0,0.08,0.002v-0.472c0-1.104,0.898-2.002,2-2.002h3.266c1.103,0,2,0.898,2,2.002v0.472c0.027-0.002,0.054-0.002,0.081-0.002c0.533,0,1.07,0.229,1.47,0.63l0.557,0.552c0.78,0.781,0.78,2.05,0,2.828l-0.706,0.707h2.403c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z M21.033,20.986l-0.556-0.555c-0.39-0.389-0.964-0.45-1.276-0.137c-0.312,0.312-0.568,0.118-0.568-0.432v-1.238c0-0.55-0.451-1-1-1h-3.265c-0.55,0-1,0.45-1,1v1.238c0,0.55-0.256,0.744-0.569,0.432c-0.312-0.313-0.887-0.252-1.276,0.137l-0.556,0.555c-0.39,0.389-0.39,1.024-0.001,1.413l4.328,4.331c0.194,0.194,0.451,0.291,0.707,0.291s0.512-0.097,0.707-0.291l4.327-4.331C21.424,22.011,21.423,21.375,21.033,20.986z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.CloudUp();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.CloudUp = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.CloudUp.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.CloudUp\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.345,13.904c0.019-0.195,0.03-0.392,0.03-0.591c0-3.452-2.798-6.25-6.25-6.25c-2.679,0-4.958,1.689-5.847,4.059c-0.589-0.646-1.429-1.059-2.372-1.059c-1.778,0-3.219,1.441-3.219,3.219c0,0.21,0.023,0.415,0.062,0.613c-2.372,0.391-4.187,2.436-4.187,4.918c0,2.762,2.239,5,5,5h2.312c-0.126-0.266-0.2-0.556-0.2-0.859c0-0.535,0.208-1.04,0.587-1.415l4.325-4.329c0.375-0.377,0.877-0.585,1.413-0.585c0.54,0,1.042,0.21,1.417,0.587l4.323,4.329c0.377,0.373,0.585,0.878,0.585,1.413c0,0.304-0.073,0.594-0.2,0.859h1.312c2.762,0,5-2.238,5-5C28.438,16.362,26.672,14.332,24.345,13.904z M16.706,17.916c-0.193-0.195-0.45-0.291-0.706-0.291s-0.512,0.096-0.707,0.291l-4.327,4.33c-0.39,0.389-0.389,1.025,0.001,1.414l0.556,0.555c0.39,0.389,0.964,0.449,1.276,0.137s0.568-0.119,0.568,0.432v1.238c0,0.549,0.451,1,1,1h3.265c0.551,0,1-0.451,1-1v-1.238c0-0.551,0.256-0.744,0.569-0.432c0.312,0.312,0.887,0.252,1.276-0.137l0.556-0.555c0.39-0.389,0.39-1.025,0.001-1.414L16.706,17.916z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cloudy();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cloudy = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cloudy.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Cloudy\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.378,6.781c0.41,0.988,1.938,0.346,1.524-0.648C15.708,5.667,15.515,5.2,15.32,4.734c-0.289-0.695-0.875-3.233-2.042-2.747c-1.03,0.433-0.128,1.846,0.142,2.494C13.739,5.248,14.059,6.015,14.378,6.781M20.8,7.223c1.094,0.453,1.538-1.551,1.813-2.216c0.281-0.677,1.478-2.565,0.357-3.029c-1.092-0.453-1.537,1.548-1.813,2.216C20.876,4.872,19.68,6.757,20.8,7.223M18.137,6.692c1.183,0,0.829-2.019,0.829-2.742c0-0.732,0.383-2.935-0.829-2.935c-1.183,0-0.828,2.019-0.828,2.742C17.309,4.49,16.926,6.692,18.137,6.692M23.058,8.729c0.852,0.85,2.142-0.972,2.659-1.49c0.512-0.513,2.187-1.687,1.352-2.524c-0.834-0.836-2.013,0.843-2.522,1.353C24.028,6.585,22.198,7.874,23.058,8.729M24.565,10.986c0.448,1.091,2.183-0.01,2.849-0.286c0.676-0.28,2.858-0.771,2.394-1.89c-0.455-1.091-2.181,0.008-2.849,0.285C26.281,9.377,24.102,9.866,24.565,10.986M12.036,8.742c0.752,0.75,1.932-0.415,1.17-1.173c-0.253-0.347-0.646-0.645-0.949-0.946c-0.541-0.539-2.162-2.799-3.068-1.889c-0.79,0.791,0.586,1.755,1.083,2.25C10.859,7.57,11.447,8.156,12.036,8.742M29.365,17.397c-0.768-0.317-1.534-0.635-2.302-0.952c-0.646-0.268-2.07-1.169-2.495-0.135c-0.481,1.168,2.054,1.747,2.751,2.035c0.455,0.188,0.911,0.377,1.367,0.565C29.7,19.331,30.379,17.816,29.365,17.397M29.942,12.817c-0.83,0-1.66,0-2.49,0c-0.701,0-2.357-0.288-2.355,0.83c0,1.262,2.567,0.827,3.319,0.827c0.493,0,0.986,0,1.479-0.001C30.99,14.473,31.043,12.815,29.942,12.817M24.234,18.568c-0.673-0.673-1.773,0.189-1.281,1.007c-0.295-0.264-0.614-0.499-0.961-0.69c3.894-2.866,3.328-9.006-1.021-11.107c-2.024-0.978-4.481-0.828-6.368,0.394c-0.871,0.564-1.603,1.336-2.119,2.236c-0.262,0.456-0.468,0.943-0.612,1.449c-0.074,0.258-0.131,0.521-0.172,0.786c-0.083,0.534-0.109,0.553-0.553,0.871c-0.182-0.957-1.64-0.675-2.326-0.674c-0.815,0.001-1.963-0.217-2.752,0.046c-0.867,0.289-0.652,1.615,0.263,1.613c0.324,0.052,0.701-0.001,1.028-0.001c0.904-0.001,1.809-0.002,2.713-0.003c-0.308,0.352-0.496,0.969-0.94,0.77c-0.467-0.209-0.978-0.319-1.49-0.319c-0.951,0-1.877,0.375-2.561,1.036c-0.681,0.658-1.088,1.569-1.123,2.516c-0.944,0.31-1.791,0.891-2.421,1.658c-2.756,3.354-0.265,8.554,4.058,8.554v-0.002c3.597,0,7.194,0,10.792,0c1.341,0,2.843,0.167,4.168-0.113c3.652-0.772,5.361-5.21,3.133-8.229c0.548,0.547,1.096,1.094,1.644,1.641c0.183,0.183,0.364,0.424,0.575,0.574c0.552,0.552,1.524,0.066,1.403-0.713c-0.097-0.622-1.042-1.267-1.448-1.673C25.319,19.652,24.776,19.11,24.234,18.568M18.137,8.787c4.559,0.009,6.576,5.979,2.912,8.734c-0.637-3.505-4.161-5.824-7.629-5.03C13.943,10.367,15.852,8.792,18.137,8.787M22.895,24.08c-0.633,3.346-4.149,2.879-6.68,2.879c-3.017,0-6.033,0-9.049,0c-0.767,0-1.62,0.084-2.373-0.095c-2.274-0.538-3.416-3.242-2.172-5.235c0.678-1.087,1.568-1.19,2.626-1.67c0.604-0.273,0.456-0.807,0.456-1.331c0.002-0.597,0.284-1.169,0.756-1.533c0.787-0.608,1.943-0.497,2.611,0.234c1.098,1.205,1.96-1.346,2.507-1.893c2.025-2.025,5.475-1.708,7.068,0.684c0.344,0.516,0.581,1.102,0.693,1.712c0.097,0.529-0.115,1.341,0.188,1.796c0.291,0.47,0.943,0.463,1.397,0.68c0.508,0.23,0.963,0.591,1.304,1.034C22.834,22.125,23.064,23.107,22.895,24.08M6.906,9.917c0.881,0.364,1.763,0.727,2.644,1.091c0.353,0.146,0.707,0.292,1.06,0.437c0.997,0.412,1.637-1.119,0.642-1.526C10.47,9.441,9.456,9.177,8.609,8.828c-0.354-0.146-0.707-0.292-1.06-0.437C6.554,7.98,5.912,9.505,6.906,9.917\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Code();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Code = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Code.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Code\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M8.982,7.107L0.322,15.77l8.661,8.662l3.15-3.15L6.621,15.77l5.511-5.511L8.982,7.107zM21.657,7.107l-3.148,3.151l5.511,5.511l-5.511,5.511l3.148,3.15l8.662-8.662L21.657,7.107z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.CodeTalk();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.CodeTalk = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.CodeTalk.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.CodeTalk\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM13.704,19.47l-2.338,2.336l-6.43-6.431l6.429-6.432l2.339,2.341l-4.091,4.091L13.704,19.47zM20.775,21.803l-2.337-2.339l4.092-4.09l-4.092-4.092l2.337-2.339l6.43,6.426L20.775,21.803z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.CommandLine();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.CommandLine = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.CommandLine.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.CommandLine\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M2.021,9.748L2.021,9.748V9.746V9.748zM2.022,9.746l5.771,5.773l-5.772,5.771l2.122,2.123l7.894-7.895L4.143,7.623L2.022,9.746zM12.248,23.269h14.419V20.27H12.248V23.269zM16.583,17.019h10.084V14.02H16.583V17.019zM12.248,7.769v3.001h14.419V7.769H12.248z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Connect();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Connect = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Connect.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Connect\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.06,13.719c-0.944-5.172-5.461-9.094-10.903-9.094v4c3.917,0.006,7.085,3.176,7.094,7.094c-0.009,3.917-3.177,7.085-7.094,7.093v4.002c5.442-0.004,9.959-3.926,10.903-9.096h4.69v-3.999H25.06zM20.375,15.719c0-3.435-2.784-6.219-6.219-6.219c-2.733,0-5.05,1.766-5.884,4.218H1.438v4.001h6.834c0.833,2.452,3.15,4.219,5.884,4.219C17.591,21.938,20.375,19.153,20.375,15.719z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Contract();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Contract = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Contract.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Contract\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.083,18.895l-8.428-2.259l2.258,8.428l1.838-1.837l7.053,7.053l2.476-2.476l-7.053-7.053L25.083,18.895zM5.542,11.731l8.428,2.258l-2.258-8.428L9.874,7.398L3.196,0.72L0.72,3.196l6.678,6.678L5.542,11.731zM7.589,20.935l-6.87,6.869l2.476,2.476l6.869-6.869l1.858,1.857l2.258-8.428l-8.428,2.258L7.589,20.935zM23.412,10.064l6.867-6.87l-2.476-2.476l-6.868,6.869l-1.856-1.856l-2.258,8.428l8.428-2.259L23.412,10.064z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Crop();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Crop = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Crop.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Crop\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.303,21.707V8.275l4.48-4.421l-2.021-2.048l-4.126,4.07H8.761V2.083H5.882v3.793H1.8v2.877h4.083v15.832h15.542v4.609h2.878v-4.609H29.2v-2.878H24.303zM19.72,8.753L8.761,19.565V8.753H19.72zM10.688,21.706l10.735-10.591l0.001,10.592L10.688,21.706z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cross();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cross = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cross.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Cross\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Cube();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Cube = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Cube.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Cube\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,3.029l-10.8,6.235L4.7,21.735L15.5,27.971l10.8-6.235V9.265L15.5,3.029zM24.988,10.599L16,15.789v10.378c0,0.275-0.225,0.5-0.5,0.5s-0.5-0.225-0.5-0.5V15.786l-8.987-5.188c-0.239-0.138-0.321-0.444-0.183-0.683c0.138-0.238,0.444-0.321,0.683-0.183l8.988,5.189l8.988-5.189c0.238-0.138,0.545-0.055,0.684,0.184C25.309,10.155,25.227,10.461,24.988,10.599z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Customer();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Customer = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Customer.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Customer\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h12.036l0.878-3.459l-0.781-0.781l1.344-1.344l1.344,1.344l-0.781,0.781l0.879,3.459h12.035C28.977,26.709,29.039,24.332,28.523,23.813z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Db();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Db = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Db.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Db\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.499,23.438c-3.846,0-7.708-0.987-9.534-3.117c-0.054,0.236-0.09,0.48-0.09,0.737v3.877c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998v-3.877c0-0.258-0.036-0.501-0.09-0.737C23.209,22.451,19.347,23.438,15.499,23.438zM15.499,15.943c-3.846,0-7.708-0.987-9.533-3.117c-0.054,0.236-0.091,0.479-0.091,0.736v3.877c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998v-3.877c0-0.257-0.036-0.501-0.09-0.737C23.209,14.956,19.347,15.943,15.499,15.943zM15.5,1.066c-4.637,0-9.625,1.565-9.625,5.001v3.876c0,3.435,4.988,4.998,9.625,4.998s9.625-1.563,9.625-4.998V6.067C25.125,2.632,20.137,1.066,15.5,1.066zM15.5,9.066c-4.211,0-7.625-1.343-7.625-3c0-1.656,3.414-3,7.625-3s7.625,1.344,7.625,3C23.125,7.724,19.711,9.066,15.5,9.066z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Detour();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Detour = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Detour.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Detour\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.342,15.5l-7.556-4.363v2.614H18.75c-1.441-0.004-2.423,1.002-2.875,1.784c-0.735,1.222-1.056,2.561-1.441,3.522c-0.135,0.361-0.278,0.655-0.376,0.817c-1.626,0-0.998,0-2.768,0c-0.213-0.398-0.571-1.557-0.923-2.692c-0.237-0.676-0.5-1.381-1.013-2.071C8.878,14.43,7.89,13.726,6.75,13.75H2.812v3.499c0,0,0.358,0,1.031,0h2.741c0.008,0.013,0.018,0.028,0.029,0.046c0.291,0.401,0.634,1.663,1.031,2.888c0.218,0.623,0.455,1.262,0.92,1.897c0.417,0.614,1.319,1.293,2.383,1.293H11c2.25,0,1.249,0,3.374,0c0.696,0.01,1.371-0.286,1.809-0.657c1.439-1.338,1.608-2.886,2.13-4.127c0.218-0.608,0.453-1.115,0.605-1.314c0.006-0.01,0.012-0.018,0.018-0.025h2.85v2.614L29.342,15.5zM10.173,14.539c0.568,0.76,0.874,1.559,1.137,2.311c0.04,0.128,0.082,0.264,0.125,0.399h2.58c0.246-0.697,0.553-1.479,1.005-2.228c0.252-0.438,0.621-0.887,1.08-1.272H9.43C9.735,14.003,9.99,14.277,10.173,14.539z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Diagram();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Diagram = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Diagram.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Diagram\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super({width: 50, height: 50, ...attr}, setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M6.812,17.202l7.396-3.665v-2.164h-0.834c-0.414,0-0.808-0.084-1.167-0.237v1.159l-7.396,3.667v2.912h2V17.202zM26.561,18.875v-2.913l-7.396-3.666v-1.158c-0.358,0.152-0.753,0.236-1.166,0.236h-0.832l-0.001,2.164l7.396,3.666v1.672H26.561zM16.688,18.875v-7.501h-2v7.501H16.688zM27.875,19.875H23.25c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2h4.625c1.104,0,2-0.896,2-2v-4.625C29.875,20.771,28.979,19.875,27.875,19.875zM8.125,19.875H3.5c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2h4.625c1.104,0,2-0.896,2-2v-4.625C10.125,20.771,9.229,19.875,8.125,19.875zM13.375,10.375H18c1.104,0,2-0.896,2-2V3.75c0-1.104-0.896-2-2-2h-4.625c-1.104,0-2,0.896-2,2v4.625C11.375,9.479,12.271,10.375,13.375,10.375zM18,19.875h-4.625c-1.104,0-2,0.896-2,2V26.5c0,1.104,0.896,2,2,2H18c1.104,0,2-0.896,2-2v-4.625C20,20.771,19.104,19.875,18,19.875z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Disconnect();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Disconnect = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Disconnect.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Disconnect\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M9.219,9.5c-2.733,0-5.05,1.766-5.884,4.218H1.438v4.001h1.897c0.833,2.452,3.15,4.219,5.884,4.219c3.435,0,6.219-2.784,6.219-6.219S12.653,9.5,9.219,9.5zM27.685,13.719c-0.944-5.172-5.461-9.094-10.903-9.094v4c3.917,0.006,7.085,3.176,7.094,7.094c-0.009,3.917-3.177,7.085-7.094,7.093v4.002c5.442-0.004,9.959-3.926,10.903-9.096h2.065v-3.999H27.685z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.DockBottom();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.DockBottom = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.DockBottom.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.DockBottom\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M3.083,7.333v16.334h24.833V7.333H3.083zM24.915,16.833H6.083v-6.501h18.833L24.915,16.833L24.915,16.833z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.DockLeft();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.DockLeft = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.DockLeft.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.DockLeft\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M3.084,7.333v16.334h24.832V7.333H3.084z M11.667,10.332h13.251v10.336H11.667V10.332z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.DockRight();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.DockRight = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.DockRight.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.DockRight\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M3.083,7.333v16.334h24.833V7.333H3.083z M19.333,20.668H6.083V10.332h13.25V20.668z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.DockTop();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.DockTop = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.DockTop.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.DockTop\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.916,23.667V7.333H3.083v16.334H27.916zM24.915,20.668H6.083v-6.501h18.833L24.915,20.668L24.915,20.668z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Download();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Download = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Download.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Download\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM16,28.792c-1.549,0-2.806-1.256-2.806-2.806s1.256-2.806,2.806-2.806c1.55,0,2.806,1.256,2.806,2.806S17.55,28.792,16,28.792zM16,21.087l-7.858-6.562h3.469V5.747h8.779v8.778h3.468L16,21.087z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Dry();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Dry = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Dry.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Dry\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.784,26.991c0,1.238-1.329,1.696-1.835,1.696c-0.504,0-1.536-0.413-1.65-1.812c0-0.354-0.288-0.642-0.644-0.642c-0.354,0-0.641,0.287-0.641,0.642c0.045,1.056,0.756,3.052,2.935,3.052c2.432,0,3.166-1.882,3.166-3.144v-8.176l-1.328-0.024C14.787,18.584,14.784,25.889,14.784,26.991zM15.584,9.804c-6.807,0-11.084,4.859-11.587,8.326c0.636-0.913,1.694-1.51,2.89-1.51c1.197,0,2.22,0.582,2.855,1.495c0.638-0.904,1.69-1.495,2.88-1.495c1.2,0,2.26,0.6,2.896,1.517c0.635-0.917,1.83-1.517,3.03-1.517c1.19,0,2.241,0.591,2.879,1.495c0.636-0.913,1.659-1.495,2.855-1.495c1.197,0,2.254,0.597,2.89,1.51C26.669,14.663,22.393,9.804,15.584,9.804zM14.733,7.125v2.081h1.323V7.125c0-0.365-0.296-0.661-0.661-0.661C15.029,6.464,14.733,6.76,14.733,7.125zM7.562,6.015c0.54,0.312,1.229,0.128,1.54-0.412c0.109-0.189,0.157-0.398,0.15-0.602L9.251,3.09L7.59,4.047c-0.178,0.095-0.333,0.24-0.441,0.428C6.837,5.015,7.022,5.703,7.562,6.015zM5.572,11.717c0.109-0.19,0.158-0.398,0.151-0.602L5.721,9.203l-1.66,0.957c-0.178,0.096-0.333,0.241-0.441,0.429c-0.311,0.539-0.127,1.229,0.413,1.539C4.571,12.44,5.26,12.256,5.572,11.717zM10.523,9.355c0.539,0.312,1.229,0.126,1.541-0.412c0.109-0.189,0.156-0.398,0.15-0.603L12.214,6.43l-1.662,0.956c-0.177,0.097-0.332,0.241-0.441,0.43C9.799,8.354,9.984,9.044,10.523,9.355zM15.251,3.998c0.539,0.312,1.229,0.126,1.54-0.412c0.11-0.19,0.157-0.398,0.15-0.603L16.94,1.072l-1.661,0.956c-0.178,0.097-0.332,0.242-0.441,0.43C14.526,2.998,14.711,3.687,15.251,3.998zM19.348,8.914c0.539,0.312,1.228,0.128,1.541-0.412c0.109-0.189,0.156-0.398,0.149-0.602h-0.001V5.988l-1.661,0.957c-0.178,0.096-0.332,0.241-0.441,0.429C18.623,7.914,18.809,8.603,19.348,8.914zM23.633,5.196c0.54,0.312,1.23,0.126,1.542-0.413c0.109-0.189,0.156-0.398,0.149-0.602h-0.001V2.27l-1.662,0.957c-0.177,0.096-0.331,0.24-0.44,0.43C22.909,4.195,23.094,4.885,23.633,5.196zM27.528,8.51l-1.659,0.956c-0.18,0.097-0.334,0.242-0.443,0.43c-0.312,0.539-0.127,1.229,0.413,1.54c0.539,0.312,1.229,0.127,1.541-0.412c0.109-0.19,0.158-0.398,0.151-0.603L27.528,8.51z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Employee();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Employee = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Employee.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Employee\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.523,23.813c-0.518-0.51-6.795-2.938-7.934-3.396c-1.132-0.451-1.584-1.697-1.584-1.697s-0.51,0.282-0.51-0.51c0-0.793,0.51,0.51,1.021-2.548c0,0,1.414-0.397,1.133-3.68l-0.338,0.001c0,0,0.85-3.511,0-4.699c-0.854-1.188-1.188-1.981-3.062-2.548c-1.869-0.567-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.793-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.32s0.283,3.059,0.566,3.624l-0.337,0.112c-0.283,3.283,1.132,3.681,1.132,3.681c0.509,3.058,1.019,1.755,1.019,2.548c0,0.792-0.51,0.51-0.51,0.51s-0.452,1.246-1.584,1.697c-1.132,0.453-7.416,2.887-7.927,3.396c-0.511,0.521-0.453,2.896-0.453,2.896h26.954C28.977,26.709,29.039,24.332,28.523,23.813zM22.188,26.062h-4.562v-1.25h4.562V26.062z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.End();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.End = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.End.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.End\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.167,5.5,21.167,13.681,6.684,5.318,6.684,25.682,21.167,17.318,21.167,25.5,25.5,25.5,25.5,5.5z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ethernet();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ethernet = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ethernet.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ethernet\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.5,8.5v3.168l3.832,3.832L22.5,19.332V22.5l7-7L22.5,8.5zM8.5,22.5v-3.168L4.667,15.5L8.5,11.668V8.5l-7,7L8.5,22.5zM15.5,14.101c-0.928,0-1.68,0.751-1.68,1.68c0,0.927,0.752,1.681,1.68,1.681c0.927,0,1.68-0.754,1.68-1.681C17.18,14.852,16.427,14.101,15.5,14.101zM10.46,14.101c-0.928,0-1.68,0.751-1.68,1.68c0,0.927,0.752,1.681,1.68,1.681s1.68-0.754,1.68-1.681C12.14,14.852,11.388,14.101,10.46,14.101zM20.541,14.101c-0.928,0-1.682,0.751-1.682,1.68c0,0.927,0.754,1.681,1.682,1.681s1.68-0.754,1.68-1.681C22.221,14.852,21.469,14.101,20.541,14.101z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Exchange();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Exchange = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Exchange.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Exchange\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.786,12.876l7.556-4.363l-7.556-4.363v2.598H2.813v3.5h18.973V12.876zM10.368,18.124l-7.556,4.362l7.556,4.362V24.25h18.974v-3.501H10.368V18.124z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Expand();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Expand = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Expand.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Expand\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.545,23.328,17.918,15.623,25.534,8.007,27.391,9.864,29.649,1.436,21.222,3.694,23.058,5.53,15.455,13.134,7.942,5.543,9.809,3.696,1.393,1.394,3.608,9.833,5.456,8.005,12.98,15.608,5.465,23.123,3.609,21.268,1.351,29.695,9.779,27.438,7.941,25.6,15.443,18.098,23.057,25.791,21.19,27.638,29.606,29.939,27.393,21.5z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Export();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Export = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Export.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Export\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.086,20.904c-1.805,3.113-5.163,5.212-9.023,5.219c-5.766-0.01-10.427-4.672-10.438-10.435C4.636,9.922,9.297,5.261,15.063,5.25c3.859,0.007,7.216,2.105,9.022,5.218l3.962,2.284l0.143,0.082C26.879,6.784,21.504,2.25,15.063,2.248C7.64,2.25,1.625,8.265,1.624,15.688c0.002,7.42,6.017,13.435,13.439,13.437c6.442-0.002,11.819-4.538,13.127-10.589l-0.141,0.081L24.086,20.904zM28.4,15.688l-7.15-4.129v2.297H10.275v3.661H21.25v2.297L28.4,15.688z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Fave();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Fave = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Fave.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Fave\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.132,7.971c-2.203-2.205-5.916-2.098-8.25,0.235L15.5,8.588l-0.382-0.382c-2.334-2.333-6.047-2.44-8.25-0.235c-2.204,2.203-2.098,5.916,0.235,8.249l8.396,8.396l8.396-8.396C26.229,13.887,26.336,10.174,24.132,7.971z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Feed();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Feed = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Feed.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Feed\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.135,16.762c3.078,0,5.972,1.205,8.146,3.391c2.179,2.187,3.377,5.101,3.377,8.202h4.745c0-9.008-7.299-16.335-16.269-16.335V16.762zM4.141,8.354c10.973,0,19.898,8.975,19.898,20.006h4.743c0-13.646-11.054-24.749-24.642-24.749V8.354zM10.701,25.045c0,1.815-1.471,3.287-3.285,3.287s-3.285-1.472-3.285-3.287c0-1.813,1.471-3.285,3.285-3.285S10.701,23.231,10.701,25.045z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ff();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ff = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ff.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Ff\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.5,15.5,15.2,9.552,15.2,15.153,5.5,9.552,5.5,21.447,15.2,15.847,15.2,21.447z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Firefox();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Firefox = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Firefox.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Firefox\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.4,22.469c0.479-0.964,0.851-1.991,1.095-3.066c0.953-3.661,0.666-6.854,0.666-6.854l-0.327,2.104c0,0-0.469-3.896-1.044-5.353c-0.881-2.231-1.273-2.214-1.274-2.21c0.542,1.379,0.494,2.169,0.483,2.288c-0.01-0.016-0.019-0.032-0.027-0.047c-0.131-0.324-0.797-1.819-2.225-2.878c-2.502-2.481-5.943-4.014-9.745-4.015c-4.056,0-7.705,1.745-10.238,4.525C5.444,6.5,5.183,5.938,5.159,5.317c0,0-0.002,0.002-0.006,0.005c0-0.011-0.003-0.021-0.003-0.031c0,0-1.61,1.247-1.436,4.612c-0.299,0.574-0.56,1.172-0.777,1.791c-0.375,0.817-0.75,2.004-1.059,3.746c0,0,0.133-0.422,0.399-0.988c-0.064,0.482-0.103,0.971-0.116,1.467c-0.09,0.845-0.118,1.865-0.039,3.088c0,0,0.032-0.406,0.136-1.021c0.834,6.854,6.667,12.165,13.743,12.165l0,0c1.86,0,3.636-0.37,5.256-1.036C24.938,27.771,27.116,25.196,28.4,22.469zM16.002,3.356c2.446,0,4.73,0.68,6.68,1.86c-2.274-0.528-3.433-0.261-3.423-0.248c0.013,0.015,3.384,0.589,3.981,1.411c0,0-1.431,0-2.856,0.41c-0.065,0.019,5.242,0.663,6.327,5.966c0,0-0.582-1.213-1.301-1.42c0.473,1.439,0.351,4.17-0.1,5.528c-0.058,0.174-0.118-0.755-1.004-1.155c0.284,2.037-0.018,5.268-1.432,6.158c-0.109,0.07,0.887-3.189,0.201-1.93c-4.093,6.276-8.959,2.539-10.934,1.208c1.585,0.388,3.267,0.108,4.242-0.559c0.982-0.672,1.564-1.162,2.087-1.047c0.522,0.117,0.87-0.407,0.464-0.872c-0.405-0.466-1.392-1.105-2.725-0.757c-0.94,0.247-2.107,1.287-3.886,0.233c-1.518-0.899-1.507-1.63-1.507-2.095c0-0.366,0.257-0.88,0.734-1.028c0.58,0.062,1.044,0.214,1.537,0.466c0.005-0.135,0.006-0.315-0.001-0.519c0.039-0.077,0.015-0.311-0.047-0.596c-0.036-0.287-0.097-0.582-0.19-0.851c0.01-0.002,0.017-0.007,0.021-0.021c0.076-0.344,2.147-1.544,2.299-1.659c0.153-0.114,0.55-0.378,0.506-1.183c-0.015-0.265-0.058-0.294-2.232-0.286c-0.917,0.003-1.425-0.894-1.589-1.245c0.222-1.231,0.863-2.11,1.919-2.704c0.02-0.011,0.015-0.021-0.008-0.027c0.219-0.127-2.524-0.006-3.76,1.604C9.674,8.045,9.219,7.95,8.71,7.95c-0.638,0-1.139,0.07-1.603,0.187c-0.05,0.013-0.122,0.011-0.208-0.001C6.769,8.04,6.575,7.88,6.365,7.672c0.161-0.18,0.324-0.356,0.495-0.526C9.201,4.804,12.43,3.357,16.002,3.356z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Flag();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Flag = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Flag.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Flag\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.04,9.508c0.138-0.533,0.15-1.407,0.028-1.943l-0.404-1.771c-0.122-0.536-0.665-1.052-1.207-1.146l-3.723-0.643c-0.542-0.094-1.429-0.091-1.97,0.007l-4.033,0.726c-0.542,0.098-1.429,0.108-1.973,0.023L8.812,4.146C8.817,4.165,8.826,4.182,8.83,4.201l2.701,12.831l1.236,0.214c0.542,0.094,1.428,0.09,1.97-0.007l4.032-0.727c0.541-0.097,1.429-0.107,1.973-0.022l4.329,0.675c0.544,0.085,0.906-0.288,0.807-0.829l-0.485-2.625c-0.1-0.541-0.069-1.419,0.068-1.952L26.04,9.508zM6.667,3.636C6.126,3.75,5.78,4.279,5.894,4.819l5.763,27.378H13.7L7.852,4.409C7.736,3.867,7.207,3.521,6.667,3.636z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Flickr();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Flickr = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Flickr.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Flickr\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.77,8.895c-2.379,0-4.479,1.174-5.77,2.969c-1.289-1.795-3.39-2.969-5.77-2.969c-3.924,0-7.105,3.181-7.105,7.105c0,3.924,3.181,7.105,7.105,7.105c2.379,0,4.48-1.175,5.77-2.97c1.29,1.795,3.391,2.97,5.77,2.97c3.925,0,7.105-3.182,7.105-7.105C28.875,12.075,25.694,8.895,21.77,8.895zM21.769,21.822c-3.211,0-5.821-2.61-5.821-5.821c0-3.213,2.61-5.824,5.821-5.824c3.213,0,5.824,2.611,5.824,5.824C27.593,19.212,24.981,21.822,21.769,21.822z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Folder();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Folder = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Folder.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Folder\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.625,26.75h-26.5V8.375h1.124c1.751,0,0.748-3.125,3-3.125c3.215,0,1.912,0,5.126,0c2.251,0,1.251,3.125,3.001,3.125h14.25V26.75z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Font();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Font = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Font.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Font\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.255,19.327l-1.017,0.131c-0.609,0.081-1.067,0.208-1.375,0.382c-0.521,0.293-0.779,0.76-0.779,1.398c0,0.484,0.178,0.867,0.532,1.146c0.354,0.28,0.774,0.421,1.262,0.421c0.593,0,1.164-0.138,1.72-0.412c0.938-0.453,1.4-1.188,1.4-2.229v-1.354c-0.205,0.131-0.469,0.229-0.792,0.328C22.883,19.229,22.564,19.29,22.255,19.327zM8.036,18.273h4.309l-2.113-6.063L8.036,18.273zM28.167,7.75H3.168c-0.552,0-1,0.448-1,1v16.583c0,0.553,0.448,1,1,1h24.999c0.554,0,1-0.447,1-1V8.75C29.167,8.198,28.721,7.75,28.167,7.75zM14.305,23.896l-1.433-4.109H7.488L6,23.896H4.094L9.262,10.17h2.099l4.981,13.727H14.305L14.305,23.896zM26.792,23.943c-0.263,0.074-0.461,0.121-0.599,0.141c-0.137,0.02-0.323,0.027-0.562,0.027c-0.579,0-0.999-0.204-1.261-0.615c-0.138-0.219-0.231-0.525-0.29-0.926c-0.344,0.449-0.834,0.839-1.477,1.169c-0.646,0.329-1.354,0.493-2.121,0.493c-0.928,0-1.688-0.28-2.273-0.844c-0.589-0.562-0.884-1.271-0.884-2.113c0-0.928,0.29-1.646,0.868-2.155c0.578-0.511,1.34-0.824,2.279-0.942l2.682-0.336c0.388-0.05,0.646-0.211,0.775-0.484c0.063-0.146,0.104-0.354,0.104-0.646c0-0.575-0.203-0.993-0.604-1.252c-0.408-0.26-0.99-0.389-1.748-0.389c-0.877,0-1.5,0.238-1.865,0.713c-0.205,0.263-0.34,0.654-0.399,1.174H17.85c0.031-1.237,0.438-2.097,1.199-2.582c0.77-0.484,1.659-0.726,2.674-0.726c1.176,0,2.131,0.225,2.864,0.673c0.729,0.448,1.093,1.146,1.093,2.093v5.766c0,0.176,0.035,0.313,0.106,0.422c0.071,0.104,0.223,0.156,0.452,0.156c0.076,0,0.16-0.005,0.254-0.015c0.093-0.011,0.191-0.021,0.299-0.041L26.792,23.943L26.792,23.943z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Fork();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Fork = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Fork.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Fork\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M13.741,10.249h8.045v2.627l7.556-4.363l-7.556-4.363v2.598H9.826C11.369,7.612,12.616,8.922,13.741,10.249zM21.786,20.654c-0.618-0.195-1.407-0.703-2.291-1.587c-1.79-1.756-3.712-4.675-5.731-7.227c-2.049-2.486-4.159-4.972-7.451-5.091h-3.5v3.5h3.5c0.656-0.027,1.683,0.486,2.879,1.683c1.788,1.753,3.712,4.674,5.731,7.226c1.921,2.331,3.907,4.639,6.863,5.016v2.702l7.556-4.362l-7.556-4.362V20.654z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ForkAlt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ForkAlt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ForkAlt.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.ForkAlt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.786,12.873l7.556-4.361l-7.556-4.362v2.701c-2.929,0.374-4.905,2.64-6.809,4.952c0.545,0.703,1.08,1.418,1.604,2.127c0.192,0.26,0.383,0.514,0.573,0.77c0.802-1.043,1.584-1.999,2.341-2.74c0.884-0.885,1.673-1.393,2.291-1.588V12.873zM17.661,17.006c-1.893-2.371-3.815-5.354-6.009-7.537c-1.461-1.428-3.155-2.664-5.34-2.693h-3.5v3.5h3.5c0.971-0.119,2.845,1.333,4.712,3.771c1.895,2.371,3.815,5.354,6.011,7.537c1.326,1.297,2.847,2.426,4.751,2.645v2.646l7.556-4.363l-7.556-4.362v2.535C20.746,20.346,19.205,19.022,17.661,17.006z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.FullCube();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.FullCube = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.FullCube.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.FullCube\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,3.029l-10.8,6.235L4.7,21.735L15.5,27.971l10.8-6.235V9.265L15.5,3.029zM15.5,7.029l6.327,3.652L15.5,14.334l-6.326-3.652L15.5,7.029zM24.988,10.599L16,15.789v10.378c0,0.275-0.225,0.5-0.5,0.5s-0.5-0.225-0.5-0.5V15.786l-8.987-5.188c-0.239-0.138-0.321-0.444-0.183-0.683c0.138-0.238,0.444-0.321,0.683-0.183l8.988,5.189l8.988-5.189c0.238-0.138,0.545-0.055,0.684,0.184C25.309,10.155,25.227,10.461,24.988,10.599z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Future();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Future = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Future.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Future\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M17.001,15.5l-0.5-7.876c0-0.552-0.448-1-1-1c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96c-0.478,0.277-0.642,0.89-0.365,1.365c0.275,0.479,0.889,0.644,1.365,0.367l3.305-1.677C15.39,16.99,15.444,17,15.501,17C16.329,17,17.001,16.329,17.001,15.5zM18.939,21.455c-0.479,0.277-0.644,0.889-0.366,1.367c0.274,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.89,0.365-1.365C20.027,21.344,19.417,21.18,18.939,21.455zM19.938,7.813c-0.477-0.276-1.09-0.111-1.364,0.366c-0.275,0.48-0.111,1.091,0.366,1.367c0.477,0.276,1.088,0.112,1.365-0.366C20.581,8.702,20.418,8.089,19.938,7.813zM21.823,20.305c0.477,0.274,1.089,0.112,1.364-0.365c0.276-0.479,0.112-1.092-0.364-1.367c-0.48-0.275-1.093-0.111-1.367,0.365C21.182,19.416,21.344,20.029,21.823,20.305zM22.822,12.428c0.478-0.275,0.643-0.888,0.365-1.366c-0.274-0.478-0.89-0.642-1.365-0.366c-0.479,0.278-0.643,0.89-0.366,1.367S22.344,12.705,22.822,12.428zM24.378,15.5c0-0.551-0.448-1-1-1c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1C23.93,16.5,24.378,16.053,24.378,15.5zM9.546,12.062c0.275-0.478,0.111-1.089-0.366-1.366c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366C8.658,12.704,9.269,12.541,9.546,12.062zM6.624,15.5c0,0.553,0.449,1,1,1c0.552,0,1-0.447,1.001-1c-0.001-0.552-0.448-0.999-1.001-1C7.071,14.5,6.624,14.948,6.624,15.5zM9.179,20.305c0.479-0.275,0.643-0.888,0.367-1.367c-0.276-0.477-0.888-0.641-1.367-0.365c-0.478,0.277-0.642,0.889-0.365,1.367C8.089,20.418,8.703,20.58,9.179,20.305zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM14.501,23.377c0,0.553,0.448,1,1,1c0.552,0,1-0.447,1-1s-0.448-1-1-1C14.949,22.377,14.501,22.824,14.501,23.377zM10.696,21.822c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.276,1.091,0.11,1.365-0.365c0.277-0.479,0.113-1.09-0.365-1.367C11.584,21.18,10.973,21.344,10.696,21.822zM28.674,14.087l-3.27-1.186c0.291,1.105,0.41,2.274,0.309,3.478c-0.492,5.639-5.449,9.809-11.091,9.333c-5.639-0.495-9.809-5.45-9.333-11.09c0.494-5.641,5.449-9.812,11.089-9.335c2.428,0.212,4.567,1.266,6.194,2.833l-1.637,1.377l7.031,2.548l-1.309-7.364l-1.771,1.492c-2.133-2.151-4.996-3.597-8.25-3.877C9.346,1.67,2.926,7.072,2.297,14.364c-0.625,7.291,4.777,13.71,12.066,14.339c7.293,0.625,13.713-4.776,14.342-12.066C28.779,15.771,28.762,14.919,28.674,14.087z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.GRaphael();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.GRaphael = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.GRaphael.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.GRaphael\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.833,15.709c0-1.477-0.574-2.862-1.617-3.904l-7.002-7.001l-0.003,0.002c-1.027-1.03-2.445-1.62-3.9-1.62c-1.455,0-2.871,0.59-3.9,1.621l-0.002-0.002l-7,7C4.376,12.836,3.79,14.25,3.79,15.709s0.586,2.873,1.619,3.902l6.312,6.312c0.253,0.285,0.519,0.556,0.8,0.8c1.049,0.989,2.463,1.534,3.908,1.51c1.417-0.021,2.783-0.604,3.785-1.604l6.812-6.812c0.021-0.021,0.035-0.029,0.062-0.062l0.143-0.146c0.271-0.271,0.484-0.562,0.725-0.86l-0.012-0.002C28.516,17.85,28.833,16.805,28.833,15.709zM18.77,25.17c-1.121,1.119-2.917,1.336-4.271,0.514l0.002-0.002c-0.213-0.145-0.414-0.303-0.61-0.471c-0.016-0.016-7.04-7.041-7.04-7.041c-1.34-1.34-1.342-3.584,0-4.92l7-6.998c1.121-1.121,2.908-1.338,4.259-0.512v0.002c0.213,0.141,0.414,0.299,0.604,0.467c0.021,0.016,7.053,7.043,7.053,7.043c0.396,0.388,0.655,0.852,0.818,1.348l-2.607,0.006c-0.537-3.754-3.769-6.641-7.667-6.641c-4.277,0-7.744,3.468-7.745,7.746c0.001,4.277,3.468,7.744,7.745,7.744c3.917,0,7.156-2.91,7.668-6.688l2.638-0.021c-0.16,0.521-0.441,1.02-0.849,1.412L18.77,25.17zM16.312,16.789c0.002,0,0.002,0,0.004,0l5.476-0.02c-0.5,2.562-2.76,4.518-5.48,4.521c-3.084-0.004-5.578-2.5-5.584-5.582c0.006-3.084,2.5-5.58,5.584-5.584c2.708,0.004,4.959,1.929,5.472,4.484l-5.476,0.018c-0.596,0.002-1.078,0.488-1.076,1.084C15.233,16.308,15.715,16.789,16.312,16.789z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Gear();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Gear = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Gear.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Gear\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.974,16.514l3.765-1.991c-0.074-0.738-0.217-1.454-0.396-2.157l-4.182-0.579c-0.362-0.872-0.84-1.681-1.402-2.423l1.594-3.921c-0.524-0.511-1.09-0.977-1.686-1.406l-3.551,2.229c-0.833-0.438-1.73-0.77-2.672-0.984l-1.283-3.976c-0.364-0.027-0.728-0.056-1.099-0.056s-0.734,0.028-1.099,0.056l-1.271,3.941c-0.967,0.207-1.884,0.543-2.738,0.986L7.458,4.037C6.863,4.466,6.297,4.932,5.773,5.443l1.55,3.812c-0.604,0.775-1.11,1.629-1.49,2.55l-4.05,0.56c-0.178,0.703-0.322,1.418-0.395,2.157l3.635,1.923c0.041,1.013,0.209,1.994,0.506,2.918l-2.742,3.032c0.319,0.661,0.674,1.303,1.085,1.905l4.037-0.867c0.662,0.72,1.416,1.351,2.248,1.873l-0.153,4.131c0.663,0.299,1.352,0.549,2.062,0.749l2.554-3.283C15.073,26.961,15.532,27,16,27c0.507,0,1.003-0.046,1.491-0.113l2.567,3.301c0.711-0.2,1.399-0.45,2.062-0.749l-0.156-4.205c0.793-0.513,1.512-1.127,2.146-1.821l4.142,0.889c0.411-0.602,0.766-1.243,1.085-1.905l-2.831-3.131C26.778,18.391,26.93,17.467,26.974,16.514zM20.717,21.297l-1.785,1.162l-1.098-1.687c-0.571,0.22-1.186,0.353-1.834,0.353c-2.831,0-5.125-2.295-5.125-5.125c0-2.831,2.294-5.125,5.125-5.125c2.83,0,5.125,2.294,5.125,5.125c0,1.414-0.573,2.693-1.499,3.621L20.717,21.297z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Gear2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Gear2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Gear2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Gear2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M17.047,27.945c-0.34,0.032-0.688,0.054-1.046,0.054l0,0c-0.32,0-0.631-0.017-0.934-0.043l0,0l-2.626,3.375l-0.646-0.183c-0.758-0.213-1.494-0.48-2.202-0.8l0,0L8.979,30.07l0.158-4.24c-0.558-0.39-1.079-0.825-1.561-1.302l0,0L3.424,25.42l-0.379-0.557c-0.445-0.654-0.824-1.339-1.16-2.032l0,0l-0.292-0.605l2.819-3.12c-0.176-0.661-0.293-1.343-0.353-2.038l0,0l-3.736-1.975l0.068-0.669c0.08-0.801,0.235-1.567,0.42-2.303l0,0l0.165-0.653l4.167-0.577c0.297-0.627,0.647-1.221,1.041-1.78l0,0l-1.59-3.914l0.48-0.47c0.564-0.55,1.168-1.048,1.798-1.503l0,0l0.546-0.394l3.597,2.259c0.606-0.279,1.24-0.509,1.897-0.685l0,0l1.304-4.046l0.672-0.051c0.362-0.027,0.751-0.058,1.174-0.058l0,0c0.422,0,0.81,0.031,1.172,0.058l0,0l0.672,0.051l1.318,4.088c0.632,0.176,1.244,0.401,1.831,0.674l0,0l3.647-2.291l0.548,0.394c0.63,0.455,1.235,0.954,1.798,1.501l0,0l0.482,0.47l-1.639,4.031c0.357,0.519,0.679,1.068,0.954,1.646l0,0l4.297,0.595l0.167,0.653c0.188,0.735,0.342,1.501,0.42,2.303l0,0l0.068,0.669l-3.866,2.044c-0.058,0.634-0.161,1.258-0.315,1.866l0,0l2.913,3.218l-0.293,0.608c-0.335,0.695-0.712,1.382-1.159,2.034l0,0l-0.379,0.555l-4.255-0.912c-0.451,0.451-0.939,0.866-1.461,1.241l0,0l0.162,4.323l-0.615,0.278c-0.709,0.319-1.444,0.587-2.202,0.8l0,0l-0.648,0.183L17.047,27.945L17.047,27.945zM20.424,29.028c0.227-0.076,0.45-0.157,0.671-0.244l0,0l-0.152-4.083l0.479-0.307c0.717-0.466,1.37-1.024,1.95-1.658l0,0l0.386-0.423l4.026,0.862c0.121-0.202,0.238-0.409,0.351-0.62l0,0l-2.754-3.045l0.171-0.544c0.243-0.783,0.381-1.623,0.422-2.5l0,0l0.025-0.571l3.658-1.933c-0.038-0.234-0.082-0.467-0.132-0.7l0,0l-4.07-0.563l-0.219-0.527c-0.327-0.787-0.76-1.524-1.277-2.204l0,0l-0.342-0.453l1.548-3.808c-0.179-0.157-0.363-0.31-0.552-0.458l0,0l-3.455,2.169L20.649,7.15c-0.754-0.397-1.569-0.698-2.429-0.894l0,0l-0.556-0.127l-1.248-3.87c-0.121-0.006-0.239-0.009-0.354-0.009l0,0c-0.117,0-0.235,0.003-0.357,0.009l0,0l-1.239,3.845l-0.564,0.12c-0.875,0.188-1.709,0.494-2.486,0.896l0,0l-0.508,0.264L7.509,5.249c-0.188,0.148-0.372,0.301-0.55,0.458l0,0l1.507,3.708L8.112,9.869c-0.552,0.709-1.011,1.485-1.355,2.319l0,0l-0.218,0.529l-3.939,0.545c-0.05,0.233-0.094,0.466-0.131,0.7l0,0l3.531,1.867l0.022,0.575c0.037,0.929,0.192,1.82,0.459,2.653l0,0l0.175,0.548l-2.667,2.95c0.112,0.212,0.229,0.419,0.351,0.621l0,0l3.916-0.843l0.39,0.423c0.601,0.657,1.287,1.229,2.043,1.703l0,0l0.488,0.305l-0.149,4.02c0.221,0.087,0.445,0.168,0.672,0.244l0,0l2.479-3.188l0.566,0.07c0.427,0.054,0.843,0.089,1.257,0.089l0,0c0.445,0,0.894-0.039,1.353-0.104l0,0l0.571-0.08L20.424,29.028L20.424,29.028zM21.554,20.75l0.546,0.839l-3.463,2.253l-1.229-1.891l0,0c-0.447,0.109-0.917,0.173-1.406,0.173l0,0c-3.384,0-6.126-2.743-6.126-6.123l0,0c0-3.384,2.742-6.126,6.126-6.126l0,0c3.38,0,6.123,2.742,6.123,6.126l0,0c0,1.389-0.467,2.676-1.25,3.704l0,0L21.554,20.75M19.224,21.073l0.108-0.069l-0.987-1.519l0.572-0.572c0.748-0.75,1.207-1.773,1.207-2.912l0,0c-0.004-2.278-1.848-4.122-4.123-4.126l0,0c-2.28,0.004-4.122,1.846-4.126,4.126l0,0c0.004,2.275,1.848,4.119,4.126,4.123l0,0c0.509,0,0.999-0.104,1.473-0.286l0,0l0.756-0.29L19.224,21.073L19.224,21.073z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.GitHub();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.GitHub = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.GitHub.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.GitHub\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.436,15.099c-1.201-0.202-2.451-0.335-3.466-0.371l-0.179-0.006c0.041-0.09,0.072-0.151,0.082-0.16c0.022-0.018,0.04-0.094,0.042-0.168c0-0.041,0.018-0.174,0.046-0.35c0.275,0.01,0.64,0.018,1.038,0.021c1.537,0.012,3.145,0.136,4.248,0.331c0.657,0.116,0.874,0.112,0.389-0.006c-0.491-0.119-1.947-0.294-3.107-0.37c-0.779-0.053-1.896-0.073-2.554-0.062c0.019-0.114,0.041-0.241,0.064-0.371c0.093-0.503,0.124-1.009,0.126-2.016c0.002-1.562-0.082-1.992-0.591-3.025c-0.207-0.422-0.441-0.78-0.724-1.104c0.247-0.729,0.241-1.858-0.015-2.848c-0.211-0.812-0.285-0.864-1.021-0.708C22.19,4.019,21.69,4.2,21.049,4.523c-0.303,0.153-0.721,0.391-1.024,0.578c-0.79-0.278-1.607-0.462-2.479-0.561c-0.884-0.1-3.051-0.044-3.82,0.098c-0.752,0.139-1.429,0.309-2.042,0.511c-0.306-0.189-0.75-0.444-1.067-0.604C9.973,4.221,9.473,4.041,8.847,3.908c-0.734-0.157-0.81-0.104-1.02,0.708c-0.26,1.003-0.262,2.151-0.005,2.878C7.852,7.577,7.87,7.636,7.877,7.682c-1.042,1.312-1.382,2.78-1.156,4.829c0.059,0.534,0.15,1.024,0.277,1.473c-0.665-0.004-1.611,0.02-2.294,0.064c-1.162,0.077-2.618,0.25-3.109,0.369c-0.484,0.118-0.269,0.122,0.389,0.007c1.103-0.194,2.712-0.32,4.248-0.331c0.29-0.001,0.561-0.007,0.794-0.013c0.07,0.237,0.15,0.463,0.241,0.678L7.26,14.759c-1.015,0.035-2.264,0.168-3.465,0.37c-0.901,0.151-2.231,0.453-2.386,0.54c-0.163,0.091-0.03,0.071,0.668-0.106c1.273-0.322,2.928-0.569,4.978-0.741l0.229-0.02c0.44,1.022,1.118,1.802,2.076,2.41c0.586,0.373,1.525,0.756,1.998,0.816c0.13,0.016,0.508,0.094,0.84,0.172c0.333,0.078,0.984,0.195,1.446,0.262h0.011c-0.009,0.006-0.017,0.01-0.025,0.016c-0.56,0.291-0.924,0.744-1.169,1.457c-0.11,0.033-0.247,0.078-0.395,0.129c-0.529,0.18-0.735,0.217-1.271,0.221c-0.556,0.004-0.688-0.02-1.02-0.176c-0.483-0.225-0.933-0.639-1.233-1.133c-0.501-0.826-1.367-1.41-2.089-1.41c-0.617,0-0.734,0.25-0.288,0.615c0.672,0.549,1.174,1.109,1.38,1.537c0.116,0.24,0.294,0.611,0.397,0.824c0.109,0.227,0.342,0.535,0.564,0.748c0.522,0.498,1.026,0.736,1.778,0.848c0.504,0.074,0.628,0.074,1.223-0.002c0.287-0.035,0.529-0.076,0.746-0.127c0,0.244,0,0.525,0,0.855c0,1.766-0.021,2.334-0.091,2.5c-0.132,0.316-0.428,0.641-0.716,0.787c-0.287,0.146-0.376,0.307-0.255,0.455c0.067,0.08,0.196,0.094,0.629,0.066c0.822-0.051,1.403-0.355,1.699-0.891c0.095-0.172,0.117-0.518,0.147-2.318c0.032-1.953,0.046-2.141,0.173-2.42c0.077-0.166,0.188-0.346,0.25-0.395c0.104-0.086,0.111,0.084,0.111,2.42c-0.001,2.578-0.027,2.889-0.285,3.385c-0.058,0.113-0.168,0.26-0.245,0.33c-0.135,0.123-0.192,0.438-0.098,0.533c0.155,0.154,0.932-0.088,1.356-0.422c0.722-0.572,0.808-1.045,0.814-4.461l0.003-2.004l0.219,0.021l0.219,0.02l0.036,2.621c0.041,2.951,0.047,2.994,0.549,3.564c0.285,0.322,0.572,0.5,1.039,0.639c0.625,0.188,0.813-0.102,0.393-0.605c-0.457-0.547-0.479-0.756-0.454-3.994c0.017-2.076,0.017-2.076,0.151-1.955c0.282,0.256,0.336,0.676,0.336,2.623c0,2.418,0.069,2.648,0.923,3.07c0.399,0.195,0.511,0.219,1.022,0.221c0.544,0.002,0.577-0.006,0.597-0.148c0.017-0.115-0.05-0.193-0.304-0.348c-0.333-0.205-0.564-0.467-0.709-0.797c-0.055-0.127-0.092-0.959-0.117-2.672c-0.036-2.393-0.044-2.502-0.193-2.877c-0.201-0.504-0.508-0.902-0.897-1.166c-0.101-0.066-0.202-0.121-0.333-0.162c0.161-0.016,0.317-0.033,0.468-0.055c1.572-0.209,2.403-0.383,3.07-0.641c1.411-0.543,2.365-1.445,2.882-2.724c0.046-0.114,0.092-0.222,0.131-0.309l0.398,0.033c2.051,0.173,3.706,0.42,4.979,0.743c0.698,0.177,0.831,0.198,0.668,0.105C30.666,15.551,29.336,15.25,28.436,15.099zM22.422,15.068c-0.233,0.512-0.883,1.17-1.408,1.428c-0.518,0.256-1.33,0.451-2.25,0.544c-0.629,0.064-4.137,0.083-4.716,0.026c-1.917-0.188-2.991-0.557-3.783-1.296c-0.75-0.702-1.1-1.655-1.039-2.828c0.039-0.734,0.216-1.195,0.679-1.755c0.421-0.51,0.864-0.825,1.386-0.985c0.437-0.134,1.778-0.146,3.581-0.03c0.797,0.051,1.456,0.051,2.252,0c1.886-0.119,3.145-0.106,3.61,0.038c0.731,0.226,1.397,0.834,1.797,1.644c0.18,0.362,0.215,0.516,0.241,1.075C22.808,13.699,22.675,14.517,22.422,15.068zM12.912,11.762c-1.073-0.188-1.686,1.649-0.863,2.587c0.391,0.445,0.738,0.518,1.172,0.248c0.402-0.251,0.62-0.72,0.62-1.328C13.841,12.458,13.472,11.862,12.912,11.762zM19.425,11.872c-1.073-0.188-1.687,1.647-0.864,2.586c0.392,0.445,0.738,0.519,1.173,0.247c0.401-0.25,0.62-0.72,0.62-1.328C20.354,12.569,19.985,11.971,19.425,11.872zM16.539,15.484c-0.023,0.074-0.135,0.184-0.248,0.243c-0.286,0.147-0.492,0.096-0.794-0.179c-0.187-0.169-0.272-0.258-0.329-0.081c-0.053,0.164,0.28,0.493,0.537,0.594c0.236,0.094,0.405,0.097,0.661-0.01c0.254-0.106,0.476-0.391,0.476-0.576C16.842,15.303,16.595,15.311,16.539,15.484zM16.222,14.909c0.163-0.144,0.2-0.44,0.044-0.597s-0.473-0.133-0.597,0.043c-0.144,0.206-0.067,0.363,0.036,0.53C15.865,15.009,16.08,15.034,16.222,14.909z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.GitHubAlt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.GitHubAlt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.GitHubAlt.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.GitHubAlt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.356,17.485c-0.004,0.007-0.007,0.013-0.01,0.021l0.162,0.005c0.107,0.004,0.218,0.01,0.33,0.016c-0.046-0.004-0.09-0.009-0.136-0.013L23.356,17.485zM15.5,1.249C7.629,1.25,1.25,7.629,1.249,15.5C1.25,23.371,7.629,29.75,15.5,29.751c7.871-0.001,14.25-6.38,14.251-14.251C29.75,7.629,23.371,1.25,15.5,1.249zM3.771,17.093c0.849-0.092,1.833-0.148,2.791-0.156c0.262,0,0.507-0.006,0.717-0.012c0.063,0.213,0.136,0.419,0.219,0.613H7.492c-0.918,0.031-2.047,0.152-3.134,0.335c-0.138,0.023-0.288,0.051-0.441,0.08C3.857,17.67,3.81,17.383,3.771,17.093zM12.196,22.224c-0.1,0.028-0.224,0.07-0.357,0.117c-0.479,0.169-0.665,0.206-1.15,0.206c-0.502,0.015-0.621-0.019-0.921-0.17C9.33,22.171,8.923,21.8,8.651,21.353c-0.453-0.746-1.236-1.275-1.889-1.275c-0.559,0-0.664,0.227-0.261,0.557c0.608,0.496,1.062,0.998,1.248,1.385c0.105,0.215,0.266,0.546,0.358,0.744c0.099,0.206,0.311,0.474,0.511,0.676c0.472,0.441,0.928,0.659,1.608,0.772c0.455,0.06,0.567,0.06,1.105-0.004c0.26-0.03,0.479-0.067,0.675-0.118v0.771c0,1.049-0.008,1.628-0.031,1.945c-1.852-0.576-3.507-1.595-4.848-2.934c-1.576-1.578-2.706-3.592-3.195-5.848c0.952-0.176,2.073-0.32,3.373-0.43l0.208-0.018c0.398,0.925,1.011,1.631,1.876,2.179c0.53,0.337,1.38,0.685,1.808,0.733c0.118,0.02,0.46,0.09,0.76,0.16c0.302,0.066,0.89,0.172,1.309,0.236h0.009c-0.007,0.018-0.014,0.02-0.022,0.02C12.747,21.169,12.418,21.579,12.196,22.224zM13.732,27.207c-0.168-0.025-0.335-0.056-0.5-0.087c0.024-0.286,0.038-0.785,0.054-1.723c0.028-1.767,0.041-1.94,0.156-2.189c0.069-0.15,0.17-0.32,0.226-0.357c0.095-0.078,0.101,0.076,0.101,2.188C13.769,26.143,13.763,26.786,13.732,27.207zM15.5,27.339c-0.148,0-0.296-0.006-0.443-0.012c0.086-0.562,0.104-1.428,0.106-2.871l0.003-1.82l0.197,0.019l0.199,0.02l0.032,2.365c0.017,1.21,0.027,1.878,0.075,2.296C15.613,27.335,15.558,27.339,15.5,27.339zM17.006,27.24c-0.039-0.485-0.037-1.243-0.027-2.553c0.019-1.866,0.019-1.866,0.131-1.769c0.246,0.246,0.305,0.623,0.305,2.373c0,0.928,0.011,1.497,0.082,1.876C17.334,27.196,17.17,27.22,17.006,27.24zM27.089,17.927c-0.155-0.029-0.307-0.057-0.446-0.08c-0.96-0.162-1.953-0.275-2.804-0.32c1.25,0.108,2.327,0.248,3.246,0.418c-0.479,2.289-1.618,4.33-3.214,5.928c-1.402,1.4-3.15,2.448-5.106,3.008c-0.034-0.335-0.058-1.048-0.066-2.212c-0.03-2.167-0.039-2.263-0.17-2.602c-0.181-0.458-0.47-0.811-0.811-1.055c-0.094-0.057-0.181-0.103-0.301-0.14c0.145-0.02,0.282-0.021,0.427-0.057c1.418-0.188,2.168-0.357,2.772-0.584c1.263-0.492,2.129-1.301,2.606-2.468c0.044-0.103,0.088-0.2,0.123-0.279l0.011,0.001c0.032-0.07,0.057-0.118,0.064-0.125c0.02-0.017,0.036-0.085,0.038-0.151c0-0.037,0.017-0.157,0.041-0.317c0.249,0.01,0.58,0.018,0.938,0.02c0.959,0.008,1.945,0.064,2.794,0.156C27.194,17.356,27.148,17.644,27.089,17.927zM25.823,16.87c-0.697-0.049-1.715-0.064-2.311-0.057c0.02-0.103,0.037-0.218,0.059-0.336c0.083-0.454,0.111-0.912,0.113-1.823c0.002-1.413-0.074-1.801-0.534-2.735c-0.188-0.381-0.399-0.705-0.655-0.998c0.225-0.659,0.207-1.68-0.02-2.575c-0.19-0.734-0.258-0.781-0.924-0.64c-0.563,0.12-1.016,0.283-1.598,0.576c-0.274,0.138-0.652,0.354-0.923,0.522c-0.715-0.251-1.451-0.419-2.242-0.508c-0.799-0.092-2.759-0.04-3.454,0.089c-0.681,0.126-1.293,0.28-1.848,0.462c-0.276-0.171-0.678-0.4-0.964-0.547C9.944,8.008,9.491,7.846,8.925,7.727c-0.664-0.144-0.732-0.095-0.922,0.64c-0.235,0.907-0.237,1.945-0.004,2.603c0.026,0.075,0.043,0.129,0.05,0.17c-0.942,1.187-1.25,2.515-1.046,4.367c0.053,0.482,0.136,0.926,0.251,1.333c-0.602-0.004-1.457,0.018-2.074,0.057c-0.454,0.031-0.957,0.076-1.418,0.129c-0.063-0.5-0.101-1.008-0.101-1.524c0-3.273,1.323-6.225,3.468-8.372c2.146-2.144,5.099-3.467,8.371-3.467c3.273,0,6.226,1.323,8.371,3.467c2.145,2.147,3.468,5.099,3.468,8.372c0,0.508-0.036,1.008-0.098,1.499C26.78,16.946,26.276,16.899,25.823,16.87z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Glasses();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Glasses = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Glasses.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Glasses\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.075,9.531c0,0-2.705-1.438-5.158-1.438c-2.453,0-4.862,0.593-4.862,0.593L3.971,9.869c0,0,0.19,0.19,0.528,0.53c0.338,0.336,0.486,3.741,1.838,5.094c1.353,1.354,4.82,1.396,5.963,0.676c1.14-0.718,2.241-3.466,2.241-4.693c0-0.38,0-0.676,0-0.676c0.274-0.275,1.615-0.303,1.917,0c0,0,0,0.296,0,0.676c0,1.227,1.101,3.975,2.241,4.693c1.144,0.72,4.611,0.678,5.963-0.676c1.355-1.353,1.501-4.757,1.839-5.094c0.338-0.34,0.528-0.53,0.528-0.53l-0.084-1.183c0,0-2.408-0.593-4.862-0.593c-2.453,0-5.158,1.438-5.158,1.438C16.319,9.292,14.737,9.32,14.075,9.531z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Globe();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Globe = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Globe.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Globe\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM19.158,23.269c-0.079,0.064-0.183,0.13-0.105,0.207c0.078,0.078-0.09,0.131-0.09,0.17s0.104,0.246,0.052,0.336c-0.052,0.092-0.091,0.223-0.13,0.301c-0.039,0.077-0.131,0.155-0.104,0.272c0.025,0.116-0.104,0.077-0.104,0.194c0,0.116,0.116,0.065,0.09,0.208c-0.025,0.144-0.09,0.183-0.09,0.285c0,0.104,0.064,0.247,0.064,0.286s-0.064,0.17-0.155,0.272c-0.092,0.104-0.155,0.17-0.144,0.233c0.014,0.065,0.104,0.144,0.091,0.184c-0.013,0.037-0.129,0.168-0.116,0.259c0.014,0.09,0.129,0.053,0.155,0.116c0.026,0.065-0.155,0.118-0.078,0.183c0.078,0.064,0.183,0.051,0.156,0.208c-0.019,0.112,0.064,0.163,0.126,0.198c-0.891,0.221-1.818,0.352-2.777,0.352C9.639,27.533,4.466,22.36,4.466,16c0-2.073,0.557-4.015,1.518-5.697c0.079-0.042,0.137-0.069,0.171-0.062c0.065,0.013,0.079,0.104,0.183,0.13c0.104,0.026,0.195-0.078,0.26-0.117c0.064-0.039,0.116-0.195,0.051-0.182c-0.065,0.013-0.234,0-0.234,0s0.183-0.104,0.183-0.169s0.025-0.169,0.129-0.208C6.83,9.655,6.83,9.681,6.765,9.837C6.7,9.993,6.896,9.928,6.973,9.863s0.13-0.013,0.272-0.104c0.143-0.091,0.143-0.143,0.221-0.143c0.078,0,0.221,0.143,0.299,0.091c0.077-0.052,0.299,0.065,0.429,0.065c0.129,0,0.545,0.169,0.624,0.169c0.078,0,0.312,0.09,0.325,0.259c0.013,0.169,0.09,0.156,0.168,0.156s0.26,0.065,0.26,0.13c0,0.065-0.052,0.325,0.078,0.39c0.129,0.064,0.247,0.169,0.299,0.143c0.052-0.026,0-0.233-0.064-0.26c-0.065-0.026-0.027-0.117-0.052-0.169c-0.026-0.051,0.078-0.051,0.117,0.039c0.039,0.091,0.143,0.26,0.208,0.26c0.064,0,0.208,0.156,0.168,0.247c-0.039,0.091,0.039,0.221,0.156,0.221c0.116,0,0.26,0.182,0.312,0.195c0.052,0.013,0.117,0.078,0.117,0.117c0,0.04,0.065,0.26,0.065,0.351c0,0.09-0.04,0.454-0.053,0.597s0.104,0.39,0.234,0.52c0.129,0.13,0.246,0.377,0.324,0.429c0.079,0.052,0.13,0.195,0.247,0.182c0.117-0.013,0.195,0.078,0.299,0.26c0.104,0.182,0.208,0.48,0.286,0.506c0.078,0.026,0.208,0.117,0.142,0.182c-0.064,0.064-0.168,0.208-0.051,0.208c0.117,0,0.156-0.065,0.247,0.053c0.09,0.116,0.208,0.181,0.194,0.26c-0.013,0.077,0.104,0.103,0.156,0.116c0.052,0.013,0.169,0.247,0.286,0.143c0.117-0.104-0.155-0.259-0.234-0.326c-0.078-0.064,0-0.207-0.182-0.35c-0.182-0.143-0.156-0.247-0.286-0.351c-0.13-0.104-0.233-0.195-0.104-0.286c0.13-0.091,0.143,0.091,0.195,0.208c0.052,0.116,0.324,0.351,0.441,0.454c0.117,0.104,0.326,0.468,0.39,0.468s0.247,0.208,0.247,0.208s0.103,0.168,0.064,0.22c-0.039,0.052,0.053,0.247,0.144,0.299c0.09,0.052,0.455,0.22,0.507,0.247c0.052,0.027,0.155,0.221,0.299,0.221c0.142,0,0.247,0.014,0.286,0.053c0.039,0.038,0.155,0.194,0.234,0.104c0.078-0.092,0.09-0.131,0.208-0.131c0.117,0,0.168,0.091,0.233,0.156c0.065,0.065,0.247,0.235,0.338,0.222c0.091-0.013,0.208,0.104,0.273,0.064s0.169,0.025,0.22,0.052c0.054,0.026,0.234,0.118,0.222,0.272c-0.013,0.157,0.103,0.195,0.182,0.234c0.078,0.039,0.182,0.13,0.248,0.195c0.064,0.063,0.206,0.077,0.246,0.116c0.039,0.039,0.065,0.117,0.182,0.052c0.116-0.064,0.092-0.181,0.092-0.181s0.129-0.026,0.194,0.026c0.064,0.05,0.104,0.22,0.144,0.246c0.038,0.026,0.115,0.221,0.063,0.362c-0.051,0.145-0.038,0.286-0.091,0.286c-0.052,0-0.116,0.17-0.195,0.209c-0.076,0.039-0.285,0.221-0.272,0.286c0.013,0.063,0.131,0.258,0.104,0.35c-0.025,0.091-0.194,0.195-0.154,0.338c0.038,0.144,0.312,0.183,0.323,0.312c0.014,0.131,0.209,0.417,0.235,0.546c0.025,0.13,0.246,0.272,0.246,0.453c0,0.184,0.312,0.3,0.377,0.312c0.063,0.013,0.182,0.131,0.272,0.17s0.169,0.116,0.233,0.221s0.053,0.261,0.053,0.299c0,0.039-0.039,0.44-0.078,0.674C19.145,23.021,19.235,23.203,19.158,23.269zM10.766,11.188c0.039,0.013,0.117,0.091,0.156,0.091c0.04,0,0.234,0.156,0.286,0.208c0.053,0.052,0.053,0.195-0.013,0.208s-0.104-0.143-0.117-0.208c-0.013-0.065-0.143-0.065-0.208-0.104C10.805,11.344,10.66,11.152,10.766,11.188zM27.51,16.41c-0.144,0.182-0.13,0.272-0.195,0.286c-0.064,0.013,0.065,0.065,0.09,0.194c0.022,0.112-0.065,0.224,0.063,0.327c-0.486,4.619-3.71,8.434-8.016,9.787c-0.007-0.011-0.019-0.025-0.021-0.034c-0.027-0.078-0.027-0.233,0.064-0.285c0.091-0.053,0.312-0.233,0.363-0.272c0.052-0.04,0.13-0.221,0.091-0.247c-0.038-0.026-0.232,0-0.26-0.039c-0.026-0.039-0.026-0.092,0.104-0.182c0.13-0.091,0.195-0.222,0.247-0.26c0.052-0.039,0.155-0.117,0.195-0.209c0.038-0.09-0.041-0.039-0.118-0.039s-0.117-0.142-0.117-0.207s0.195,0.026,0.339,0.052c0.143,0.024,0.077-0.065,0.064-0.142c-0.013-0.078,0.026-0.209,0.105-0.17c0.076,0.039,0.479-0.013,0.531-0.026c0.052-0.013,0.194-0.246,0.246-0.312c0.053-0.065,0.064-0.129,0-0.168c-0.065-0.04-0.143-0.184-0.168-0.221c-0.026-0.041-0.039-0.274-0.013-0.34c0.025-0.063,0,0.377,0.181,0.43c0.183,0.052,0.286,0.078,0.455-0.078c0.169-0.155,0.298-0.26,0.312-0.363c0.013-0.104,0.052-0.209,0.117-0.246c0.065-0.039,0.104,0.103,0.182-0.065c0.078-0.17,0.156-0.157,0.234-0.299c0.077-0.144-0.13-0.325,0.024-0.43c0.157-0.103,0.43-0.233,0.43-0.233s0.078-0.039,0.234-0.078c0.155-0.038,0.324-0.014,0.376-0.09c0.052-0.079,0.104-0.247,0.182-0.338c0.079-0.092,0.169-0.234,0.13-0.299c-0.039-0.065,0.104-0.352,0.091-0.429c-0.013-0.078-0.13-0.261,0.065-0.416s0.402-0.391,0.416-0.454c0.012-0.065,0.169-0.338,0.154-0.469c-0.012-0.129-0.154-0.285-0.245-0.325c-0.092-0.037-0.286-0.05-0.364-0.154s-0.299-0.208-0.377-0.182c-0.077,0.026-0.208,0.051-0.312-0.015c-0.104-0.063-0.272-0.143-0.337-0.194c-0.066-0.051-0.234-0.09-0.312-0.09s-0.065-0.053-0.182,0.103c-0.117,0.157,0,0.209-0.208,0.182c-0.209-0.024,0.025-0.038,0.144-0.194c0.115-0.155-0.014-0.247-0.144-0.207c-0.13,0.039-0.039,0.117-0.247,0.156c-0.207,0.038-0.207-0.092-0.077-0.117c0.13-0.026,0.363-0.143,0.363-0.194c0-0.053-0.026-0.196-0.13-0.196s-0.078-0.129-0.233-0.297c-0.156-0.17-0.351-0.274-0.508-0.249c-0.154,0.026-0.272,0.065-0.35-0.076c-0.078-0.144-0.169-0.17-0.222-0.247c-0.051-0.078-0.182,0-0.221-0.039s-0.039-0.039-0.039-0.039s-0.169,0.039-0.077-0.078c0.09-0.117,0.129-0.338,0.09-0.325c-0.038,0.013-0.104,0.196-0.168,0.183c-0.064-0.013-0.014-0.04-0.144-0.117c-0.13-0.078-0.337-0.013-0.337,0.052c0,0.065-0.065,0.117-0.065,0.117s-0.039-0.038-0.078-0.117c-0.039-0.078-0.221-0.091-0.312-0.013c-0.09,0.078-0.142-0.196-0.207-0.196s-0.194,0.065-0.26,0.184c-0.064,0.116-0.038,0.285-0.092,0.272c-0.05-0.013-0.063-0.233-0.05-0.312c0.012-0.079,0.155-0.208,0.05-0.234c-0.103-0.026-0.259,0.13-0.323,0.143c-0.065,0.013-0.195,0.104-0.273,0.209c-0.077,0.103-0.116,0.168-0.195,0.207c-0.077,0.039-0.193,0-0.167-0.039c0.025-0.039-0.222-0.181-0.261-0.13c-0.04,0.052-0.155,0.091-0.272,0.144c-0.117,0.052-0.222-0.065-0.247-0.117s-0.079-0.064-0.091-0.234c-0.013-0.168,0.027-0.351,0.065-0.454c0.038-0.104-0.195-0.312-0.286-0.3c-0.091,0.015-0.182,0.105-0.272,0.091c-0.092-0.012-0.052-0.038-0.195-0.038c-0.143,0-0.026-0.025,0-0.143c0.025-0.116-0.052-0.273,0.092-0.377c0.142-0.104,0.091-0.351,0-0.363c-0.092-0.014-0.261,0.039-0.377,0.026c-0.116-0.014-0.208,0.091-0.169,0.207c0.039,0.117-0.065,0.195-0.104,0.183c-0.039-0.013-0.09-0.078-0.234,0.026c-0.142,0.103-0.194,0.064-0.337-0.052c-0.143-0.118-0.299-0.234-0.325-0.416c-0.026-0.182-0.04-0.364,0.013-0.468c0.051-0.104,0.051-0.285-0.026-0.312c-0.078-0.025,0.09-0.155,0.181-0.181c0.092-0.026,0.234-0.143,0.26-0.195c0.026-0.052,0.156-0.04,0.298-0.04c0.143,0,0.169,0,0.312,0.078c0.143,0.078,0.169-0.039,0.169-0.078c0-0.039,0.052-0.117,0.208-0.104c0.156,0.013,0.376-0.052,0.416-0.013s0.116,0.195,0.194,0.143c0.079-0.051,0.104-0.143,0.131,0.014c0.025,0.155,0.09,0.39,0.208,0.429c0.116,0.039,0.052,0.194,0.168,0.207c0.115,0.013,0.17-0.246,0.131-0.337c-0.04-0.09-0.118-0.363-0.183-0.428c-0.064-0.065-0.064-0.234,0.064-0.286c0.13-0.052,0.442-0.312,0.532-0.389c0.092-0.079,0.338-0.144,0.261-0.248c-0.078-0.104-0.104-0.168-0.104-0.247s0.078-0.052,0.117,0s0.194-0.078,0.155-0.143c-0.038-0.064-0.026-0.155,0.065-0.143c0.091,0.013,0.116-0.065,0.078-0.117c-0.039-0.052,0.091-0.117,0.182-0.091c0.092,0.026,0.325-0.013,0.364-0.065c0.038-0.052-0.078-0.104-0.078-0.208c0-0.104,0.155-0.195,0.247-0.208c0.091-0.013,0.207,0,0.221-0.039c0.012-0.039,0.143-0.143,0.155-0.052c0.014,0.091,0,0.247,0.104,0.247c0.104,0,0.232-0.117,0.272-0.129c0.038-0.013,0.286-0.065,0.338-0.078c0.052-0.013,0.363-0.039,0.325-0.13c-0.039-0.09-0.078-0.181-0.118-0.22c-0.039-0.039-0.077,0.013-0.13,0.078c-0.051,0.065-0.143,0.065-0.168,0.013c-0.026-0.051,0.012-0.207-0.078-0.156c-0.092,0.052-0.104,0.104-0.157,0.078c-0.052-0.026-0.103-0.117-0.103-0.117s0.129-0.064,0.038-0.182c-0.09-0.117-0.221-0.091-0.35-0.025c-0.13,0.064-0.118,0.051-0.273,0.09s-0.234,0.078-0.234,0.078s0.209-0.129,0.299-0.208c0.091-0.078,0.209-0.117,0.286-0.195c0.078-0.078,0.285,0.039,0.285,0.039s0.105-0.104,0.105-0.039s-0.027,0.234,0.051,0.234c0.079,0,0.299-0.104,0.21-0.131c-0.093-0.026,0.129,0,0.219-0.065c0.092-0.065,0.194-0.065,0.247-0.09c0.052-0.026,0.092-0.143,0.182-0.143c0.092,0,0.13,0.117,0,0.195s-0.143,0.273-0.208,0.325c-0.064,0.052-0.026,0.117,0.078,0.104c0.104-0.013,0.194,0.013,0.286-0.013s0.143,0.026,0.168,0.065c0.026,0.039,0.104-0.039,0.104-0.039s0.169-0.039,0.221,0.026c0.053,0.064,0.092-0.039,0.053-0.104c-0.039-0.064-0.092-0.129-0.13-0.208c-0.039-0.078-0.091-0.104-0.194-0.078c-0.104,0.026-0.13-0.026-0.195-0.064c-0.065-0.04-0.118,0.052-0.065-0.04c0.053-0.09,0.078-0.117,0.117-0.195c0.039-0.078,0.209-0.221,0.039-0.259c-0.169-0.04-0.222-0.065-0.247-0.143c-0.026-0.078-0.221-0.221-0.272-0.221c-0.053,0-0.233,0-0.247-0.065c-0.013-0.065-0.143-0.208-0.208-0.273c-0.064-0.065-0.312-0.351-0.351-0.377c-0.039-0.026-0.091-0.013-0.208,0.143c-0.116,0.157-0.22,0.183-0.312,0.144c-0.091-0.039-0.104-0.026-0.193-0.13c-0.093-0.104,0.09-0.117,0.051-0.182c-0.04-0.064-0.247-0.091-0.377-0.104c-0.13-0.013-0.221-0.156-0.416-0.169c-0.194-0.013-0.428,0.026-0.493,0.026c-0.064,0-0.064,0.091-0.09,0.234c-0.027,0.143,0.09,0.182-0.027,0.208c-0.116,0.026-0.169,0.039-0.052,0.091c0.117,0.052,0.273,0.26,0.273,0.26s0,0.117-0.092,0.182c-0.09,0.065-0.182,0.13-0.233,0.053c-0.053-0.079-0.195-0.065-0.155,0.013c0.038,0.078,0.116,0.117,0.116,0.195c0,0.077,0.117,0.272,0.039,0.337c-0.078,0.065-0.168,0.014-0.233,0.026s-0.131-0.104-0.078-0.13c0.051-0.026-0.014-0.221-0.014-0.221s-0.155,0.221-0.143,0.104c0.014-0.117-0.064-0.13-0.064-0.221c0-0.091-0.079-0.13-0.194-0.104c-0.118,0.026-0.26-0.04-0.482-0.079c-0.22-0.039-0.311-0.064-0.493-0.156c-0.182-0.091-0.247-0.026-0.338-0.013c-0.091,0.013-0.052-0.182-0.169-0.207c-0.116-0.027-0.181,0.025-0.207-0.144c-0.026-0.168,0.039-0.208,0.324-0.39c0.286-0.182,0.247-0.26,0.468-0.286c0.22-0.026,0.325,0.026,0.325-0.039s0.052-0.325,0.052-0.195S16.95,9.109,16.832,9.2c-0.116,0.091-0.052,0.104,0.04,0.104c0.091,0,0.259-0.091,0.259-0.091s0.208-0.091,0.26-0.013c0.053,0.078,0.053,0.156,0.144,0.156s0.285-0.104,0.116-0.195c-0.168-0.091-0.272-0.078-0.376-0.182s-0.078-0.065-0.195-0.039c-0.116,0.026-0.116-0.039-0.156-0.039s-0.104,0.026-0.13-0.026c-0.025-0.052,0.014-0.065,0.145-0.065c0.129,0,0.285,0.039,0.285,0.039s0.155-0.052,0.194-0.065c0.039-0.013,0.247-0.039,0.208-0.155c-0.04-0.117-0.169-0.117-0.208-0.156s0.078-0.09,0.143-0.117c0.065-0.026,0.247,0,0.247,0s0.117,0.013,0.117-0.039S17.897,8.2,17.976,8.239s0,0.156,0.117,0.13c0.116-0.026,0.143,0,0.207,0.039c0.065,0.039-0.013,0.195-0.077,0.221c-0.065,0.025-0.169,0.077-0.026,0.09c0.144,0.014,0.246,0.014,0.246,0.014s0.092-0.091,0.131-0.169c0.038-0.078,0.104-0.026,0.155,0c0.052,0.025,0.247,0.065,0.065,0.117c-0.183,0.052-0.221,0.117-0.26,0.182c-0.038,0.065-0.053,0.104-0.221,0.065c-0.17-0.039-0.26-0.026-0.299,0.039c-0.039,0.064-0.013,0.273,0.053,0.247c0.063-0.026,0.129-0.026,0.207-0.052c0.078-0.026,0.39,0.026,0.467,0.013c0.078-0.013,0.209,0.13,0.248,0.104c0.039-0.026,0.117,0.052,0.194,0.104c0.078,0.052,0.052-0.117,0.194-0.013c0.144,0.104,0.065,0.104,0.144,0.104c0.076,0,0.246,0.013,0.246,0.013s0.014-0.129,0.144-0.104c0.13,0.026,0.245,0.169,0.232,0.064c-0.012-0.103,0.013-0.181-0.09-0.259c-0.104-0.078-0.272-0.13-0.299-0.169c-0.026-0.039-0.052-0.091-0.013-0.117c0.039-0.025,0.221,0.013,0.324,0.079c0.104,0.065,0.195,0.13,0.273,0.078c0.077-0.052,0.17-0.078,0.208-0.117c0.038-0.04,0.13-0.156,0.13-0.156s-0.391-0.051-0.441-0.117c-0.053-0.065-0.235-0.156-0.287-0.156s-0.194,0.091-0.246-0.039s-0.052-0.286-0.105-0.299c-0.05-0.013-0.597-0.091-0.674-0.13c-0.078-0.039-0.39-0.13-0.507-0.195s-0.286-0.156-0.389-0.156c-0.104,0-0.533,0.052-0.611,0.039c-0.078-0.013-0.312,0.026-0.403,0.039c-0.091,0.013,0.117,0.182-0.077,0.221c-0.195,0.039-0.169,0.065-0.13-0.13c0.038-0.195-0.131-0.247-0.299-0.169c-0.169,0.078-0.442,0.13-0.377,0.221c0.065,0.091-0.012,0.157,0.117,0.247c0.13,0.091,0.183,0.117,0.35,0.104c0.17-0.013,0.339,0.025,0.339,0.025s0,0.157-0.064,0.182c-0.065,0.026-0.169,0.026-0.196,0.104c-0.025,0.078-0.155,0.117-0.155,0.078s0.065-0.169-0.026-0.234c-0.09-0.065-0.117-0.078-0.221-0.013c-0.104,0.065-0.116,0.091-0.169-0.013C16.053,8.291,15.897,8.2,15.897,8.2s-0.104-0.129-0.182-0.194c-0.077-0.065-0.22-0.052-0.234,0.013c-0.013,0.064,0.026,0.129,0.078,0.247c0.052,0.117,0.104,0.337,0.013,0.351c-0.091,0.013-0.104,0.026-0.195,0.052c-0.091,0.026-0.13-0.039-0.13-0.143s-0.04-0.195-0.013-0.234c0.026-0.039-0.104,0.027-0.234,0c-0.13-0.025-0.233,0.052-0.104,0.092c0.13,0.039,0.157,0.194,0.039,0.233c-0.117,0.039-0.559,0-0.702,0s-0.35,0.039-0.39-0.039c-0.039-0.078,0.118-0.129,0.208-0.129c0.091,0,0.363,0.012,0.467-0.13c0.104-0.143-0.13-0.169-0.233-0.169c-0.104,0-0.183-0.039-0.299-0.155c-0.118-0.117,0.078-0.195,0.052-0.247c-0.026-0.052-0.156-0.014-0.272-0.014c-0.117,0-0.299-0.09-0.299,0.014c0,0.104,0.143,0.402,0.052,0.337c-0.091-0.064-0.078-0.156-0.143-0.234c-0.065-0.078-0.168-0.065-0.299-0.052c-0.129,0.013-0.35,0.052-0.415,0.039c-0.064-0.013-0.013-0.013-0.156-0.078c-0.142-0.065-0.208-0.052-0.312-0.117C12.091,7.576,12.182,7.551,12,7.538c-0.181-0.013-0.168,0.09-0.35,0.065c-0.182-0.026-0.234,0.013-0.416,0c-0.182-0.013-0.272-0.026-0.299,0.065c-0.025,0.091-0.078,0.247-0.156,0.247c-0.077,0-0.169,0.091,0.078,0.104c0.247,0.013,0.105,0.129,0.325,0.117c0.221-0.013,0.416-0.013,0.468-0.117c0.052-0.104,0.091-0.104,0.117-0.065c0.025,0.039,0.22,0.272,0.22,0.272s0.131,0.104,0.183,0.13c0.051,0.026-0.052,0.143-0.156,0.078c-0.104-0.065-0.299-0.051-0.377-0.116c-0.078-0.065-0.429-0.065-0.52-0.052c-0.09,0.013-0.247-0.039-0.299-0.039c-0.051,0-0.221,0.13-0.221,0.13S10.532,8.252,10.494,8.2c-0.039-0.052-0.104,0.052-0.156,0.065c-0.052,0.013-0.208-0.104-0.364-0.052C9.818,8.265,9.87,8.317,9.649,8.304s-0.272-0.052-0.35-0.039C9.22,8.278,9.22,8.278,9.22,8.278S9.233,8.33,9.143,8.382C9.052,8.434,8.986,8.499,8.921,8.421C8.857,8.343,8.818,8.343,8.779,8.33c-0.04-0.013-0.118-0.078-0.286-0.04C8.324,8.33,8.064,8.239,8.013,8.239c-0.04,0-0.313-0.015-0.491-0.033c2.109-2.292,5.124-3.74,8.478-3.74c2.128,0,4.117,0.589,5.83,1.598c-0.117,0.072-0.319,0.06-0.388,0.023c-0.078-0.043-0.158-0.078-0.475-0.061c-0.317,0.018-0.665,0.122-0.595,0.226c0.072,0.104-0.142,0.165-0.197,0.113c-0.055-0.052-0.309,0.06-0.293,0.165c0.016,0.104-0.039,0.225-0.175,0.199c-0.134-0.027-0.229,0.06-0.237,0.146c-0.007,0.087-0.309,0.147-0.332,0.147c-0.024,0-0.412-0.008-0.27,0.095c0.097,0.069,0.15,0.027,0.27,0.052c0.119,0.026,0.214,0.217,0.277,0.243c0.062,0.026,0.15,0,0.189-0.052c0.04-0.052,0.095-0.234,0.095-0.234s0,0.173,0.097,0.208c0.095,0.035,0.331-0.026,0.395-0.017c0.064,0.008,0.437,0.061,0.538,0.112c0.104,0.052,0.356,0.087,0.428,0.199c0.071,0.113,0.08,0.503,0.119,0.546c0.04,0.043,0.174-0.139,0.205-0.182c0.031-0.044,0.198-0.018,0.254,0.042c0.056,0.061,0.182,0.208,0.175,0.269C21.9,8.365,21.877,8.459,21.83,8.425c-0.048-0.034-0.127-0.025-0.096-0.095c0.032-0.069,0.048-0.217-0.015-0.217c-0.064,0-0.119,0-0.119,0s-0.12-0.035-0.199,0.095s-0.015,0.26,0.04,0.26s0.184,0,0.184,0.034c0,0.035-0.136,0.139-0.128,0.2c0.009,0.061,0.11,0.268,0.144,0.312c0.031,0.043,0.197,0.086,0.244,0.096c0.049,0.008-0.111,0.017-0.07,0.077c0.04,0.061,0.102,0.208,0.189,0.243c0.087,0.035,0.333,0.19,0.363,0.26c0.032,0.069,0.222-0.052,0.262-0.061c0.04-0.008,0.032,0.182,0.143,0.191c0.11,0.008,0.15-0.018,0.245-0.096s0.072-0.182,0.079-0.26c0.009-0.078,0-0.138,0.104-0.113c0.104,0.026,0.158-0.018,0.15-0.104c-0.008-0.087-0.095-0.191,0.07-0.217c0.167-0.026,0.254-0.138,0.357-0.138c0.103,0,0.389,0.043,0.419,0c0.032-0.043,0.167-0.243,0.254-0.251c0.067-0.007,0.224-0.021,0.385-0.042c1.582,1.885,2.561,4.284,2.673,6.905c-0.118,0.159-0.012,0.305,0.021,0.408c0.001,0.03,0.005,0.058,0.005,0.088c0,0.136-0.016,0.269-0.021,0.404C27.512,16.406,27.512,16.408,27.51,16.41zM17.794,12.084c-0.064,0.013-0.169-0.052-0.169-0.143s-0.091,0.169-0.04,0.247c0.053,0.078-0.104,0.169-0.155,0.169s-0.091-0.116-0.078-0.233c0.014-0.117-0.077-0.221-0.221-0.208c-0.143,0.014-0.208,0.13-0.259,0.169c-0.053,0.039-0.053,0.259-0.04,0.312s0.013,0.235-0.116,0.221c-0.118-0.013-0.092-0.233-0.079-0.312c0.014-0.078-0.039-0.273,0.014-0.376c0.053-0.104,0.207-0.143,0.312-0.156s0.324,0.065,0.363,0.052c0.04-0.014,0.222-0.014,0.312,0C17.729,11.837,17.858,12.071,17.794,12.084zM18.027,12.123c0.04,0.026,0.311-0.039,0.364,0.026c0.051,0.065-0.054,0.078-0.183,0.13c-0.129,0.052-0.169,0.039-0.221,0.104s-0.221,0.09-0.299,0.168c-0.078,0.079-0.217,0.125-0.246,0.065c-0.04-0.078,0.013-0.039,0.025-0.078c0.013-0.039,0.245-0.129,0.245-0.129S17.988,12.097,18.027,12.123zM16.988,11.668c-0.038,0.013-0.182-0.026-0.3-0.026c-0.116,0-0.091-0.078-0.143-0.064c-0.051,0.013-0.168,0.039-0.247,0.078c-0.078,0.039-0.208,0.03-0.208-0.04c0-0.104,0.052-0.078,0.221-0.143c0.169-0.065,0.352-0.247,0.429-0.169c0.078,0.078,0.221,0.169,0.312,0.182C17.144,11.5,17.026,11.655,16.988,11.668zM15.659,7.637c-0.079,0.026-0.347,0.139-0.321,0.199c0.01,0.023,0.078,0.069,0.19,0.052c0.113-0.018,0.276-0.035,0.355-0.043c0.078-0.009,0.095-0.139,0.009-0.147C15.805,7.689,15.736,7.611,15.659,7.637zM14.698,7.741c-0.061,0.026-0.243-0.043-0.338,0.018c-0.061,0.038-0.026,0.164,0.07,0.172c0.095,0.009,0.259-0.06,0.276-0.008c0.018,0.052,0.078,0.286,0.234,0.208c0.156-0.078,0.147-0.147,0.19-0.156c0.043-0.009-0.008-0.199-0.078-0.243C14.983,7.689,14.758,7.715,14.698,7.741zM14.385,7.005c0.017,0.044-0.008,0.078,0.113,0.095c0.121,0.018,0.173,0.035,0.243,0.035c0.069,0,0.042-0.113-0.018-0.19c-0.061-0.078-0.043-0.069-0.199-0.113c-0.156-0.043-0.312-0.043-0.416-0.035c-0.104,0.009-0.217-0.017-0.243,0.104c-0.013,0.062,0.07,0.112,0.174,0.112S14.368,6.962,14.385,7.005zM14.611,7.481c0.043,0.095,0.043,0.051,0.165,0.061C14.896,7.551,14.991,7.421,15,7.378c0.009-0.044-0.061-0.13-0.225-0.113c-0.165,0.017-0.667-0.026-0.736,0.034c-0.066,0.058,0,0.233-0.026,0.251c-0.026,0.017,0.009,0.095,0.077,0.078c0.069-0.017,0.104-0.182,0.157-0.182C14.299,7.447,14.568,7.386,14.611,7.481zM12.982,7.126c0.052,0.043,0.183,0.008,0.173-0.035c-0.008-0.043,0.053-0.217-0.051-0.225C13,6.858,12.854,6.962,12.697,7.014c-0.101,0.033-0.078,0.13-0.009,0.13S12.931,7.083,12.982,7.126zM13.72,7.282c-0.087,0.043-0.114,0.069-0.191,0.052c-0.078-0.017-0.078-0.156-0.217-0.13c-0.138,0.026-0.164,0.104-0.207,0.139s-0.139,0.061-0.173,0.043c-0.034-0.017-0.234-0.129-0.234-0.129s-0.416-0.018-0.433-0.07c-0.017-0.052-0.086-0.138-0.277-0.121s-0.52,0.13-0.572,0.13c-0.052,0,0.062,0.104-0.009,0.104c-0.069,0-0.155-0.008-0.181,0.069c-0.018,0.053,0.078,0.052,0.189,0.052c0.112,0,0.295,0,0.347-0.026c0.052-0.026,0.312-0.087,0.303-0.009c-0.009,0.079,0.104,0.199,0.164,0.182c0.061-0.017,0.183-0.13,0.243-0.086c0.061,0.043,0.07,0.146,0.13,0.173c0.061,0.025,0.226,0.025,0.304,0c0.077-0.027,0.294-0.027,0.389-0.009c0.095,0.018,0.373,0.069,0.399,0.018c0.026-0.053,0.104-0.061,0.112-0.113s0.051-0.216,0.051-0.216S13.806,7.239,13.72,7.282zM18.105,16.239c-0.119,0.021-0.091,0.252,0.052,0.21C18.3,16.407,18.223,16.217,18.105,16.239zM19.235,15.929c-0.104-0.026-0.221,0-0.299,0.013c-0.078,0.013-0.299,0.208-0.299,0.208s0.143,0.026,0.233,0.026c0.092,0,0.144,0.051,0.221,0.09c0.078,0.04,0.221-0.052,0.272-0.052c0.053,0,0.118,0.156,0.131-0.013C19.508,16.032,19.339,15.955,19.235,15.929zM15.616,7.507c-0.043-0.104-0.259-0.139-0.304-0.035C15.274,7.563,15.659,7.611,15.616,7.507zM18.093,15.292c0.143-0.026,0.064-0.144-0.053-0.13C17.922,15.175,17.949,15.318,18.093,15.292zM19.82,16.095c-0.119,0.022-0.092,0.253,0.051,0.211C20.015,16.264,19.937,16.074,19.82,16.095zM18.247,15.708c-0.09,0.013-0.285-0.09-0.389-0.182c-0.104-0.091-0.299-0.091-0.377-0.091c-0.077,0-0.39,0.091-0.39,0.091c-0.013,0.13,0.117,0.091,0.273,0.091s0.429-0.026,0.479,0.039c0.053,0.064,0.286,0.168,0.352,0.221c0.064,0.052,0.272,0.065,0.285,0.013S18.338,15.695,18.247,15.708zM16.698,7.412c-0.13-0.009-0.295-0.009-0.399,0c-0.104,0.008-0.182-0.069-0.26-0.113c-0.077-0.043-0.251-0.182-0.354-0.199c-0.104-0.017-0.086-0.017-0.303-0.069c-0.11-0.027-0.294-0.061-0.294-0.086c0-0.026-0.052,0.121,0.043,0.165c0.095,0.043,0.251,0.121,0.363,0.164c0.114,0.043,0.329,0.052,0.399,0.139c0.069,0.086,0.303,0.156,0.303,0.156l0.277,0.026c0,0,0.191-0.043,0.39-0.026c0.199,0.017,0.493,0.043,0.659,0.035c0.163-0.008,0.189-0.061,0.208-0.095c0.016-0.035-0.304-0.104-0.383-0.095C17.271,7.42,16.827,7.42,16.698,7.412zM17.182,9.404c-0.034,0.039,0.157,0.095,0.191,0.043C17.407,9.396,17.271,9.309,17.182,9.404zM17.764,9.585c0.086-0.035,0.043-0.139-0.079-0.104C17.547,9.521,17.676,9.62,17.764,9.585z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.GlobeAlt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.GlobeAlt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.GlobeAlt.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.GlobeAlt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM27.436,17.39c0.001,0.002,0.004,0.002,0.005,0.004c-0.022,0.187-0.054,0.37-0.085,0.554c-0.015-0.012-0.034-0.025-0.047-0.036c-0.103-0.09-0.254-0.128-0.318-0.115c-0.157,0.032,0.229,0.305,0.267,0.342c0.009,0.009,0.031,0.03,0.062,0.058c-1.029,5.312-5.709,9.338-11.319,9.338c-4.123,0-7.736-2.18-9.776-5.441c0.123-0.016,0.24-0.016,0.28-0.076c0.051-0.077,0.102-0.241,0.178-0.331c0.077-0.089,0.165-0.229,0.127-0.292c-0.039-0.064,0.101-0.344,0.088-0.419c-0.013-0.076-0.127-0.256,0.064-0.407s0.394-0.382,0.407-0.444c0.012-0.063,0.166-0.331,0.152-0.458c-0.012-0.127-0.152-0.28-0.24-0.318c-0.09-0.037-0.28-0.05-0.356-0.151c-0.077-0.103-0.292-0.203-0.368-0.178c-0.076,0.025-0.204,0.05-0.305-0.015c-0.102-0.062-0.267-0.139-0.33-0.189c-0.065-0.05-0.229-0.088-0.305-0.088c-0.077,0-0.065-0.052-0.178,0.101c-0.114,0.153,0,0.204-0.204,0.177c-0.204-0.023,0.025-0.036,0.141-0.189c0.113-0.152-0.013-0.242-0.141-0.203c-0.126,0.038-0.038,0.115-0.241,0.153c-0.203,0.036-0.203-0.09-0.076-0.115s0.355-0.139,0.355-0.19c0-0.051-0.025-0.191-0.127-0.191s-0.077-0.126-0.229-0.291c-0.092-0.101-0.196-0.164-0.299-0.204c-0.09-0.579-0.15-1.167-0.15-1.771c0-2.844,1.039-5.446,2.751-7.458c0.024-0.02,0.048-0.034,0.069-0.036c0.084-0.009,0.31-0.025,0.51-0.059c0.202-0.034,0.418-0.161,0.489-0.153c0.069,0.008,0.241,0.008,0.186-0.042C8.417,8.2,8.339,8.082,8.223,8.082S8.215,7.896,8.246,7.896c0.03,0,0.186,0.025,0.178,0.11C8.417,8.091,8.471,8.2,8.625,8.167c0.156-0.034,0.132-0.162,0.102-0.195C8.695,7.938,8.672,7.853,8.642,7.794c-0.031-0.06-0.023-0.136,0.14-0.153C8.944,7.625,9.168,7.708,9.16,7.573s0-0.28,0.046-0.356C9.253,7.142,9.354,7.09,9.299,7.065C9.246,7.04,9.176,7.099,9.121,6.972c-0.054-0.127,0.047-0.22,0.108-0.271c0.02-0.015,0.067-0.06,0.124-0.112C11.234,5.257,13.524,4.466,16,4.466c3.213,0,6.122,1.323,8.214,3.45c-0.008,0.022-0.01,0.052-0.031,0.056c-0.077,0.013-0.166,0.063-0.179-0.051c-0.013-0.114-0.013-0.331-0.102-0.203c-0.089,0.127-0.127,0.127-0.127,0.191c0,0.063,0.076,0.127,0.051,0.241C23.8,8.264,23.8,8.341,23.84,8.341c0.036,0,0.126-0.115,0.239-0.141c0.116-0.025,0.319-0.088,0.332,0.026c0.013,0.115,0.139,0.152,0.013,0.203c-0.128,0.051-0.267,0.026-0.293-0.051c-0.025-0.077-0.114-0.077-0.203-0.013c-0.088,0.063-0.279,0.292-0.279,0.292s-0.306,0.139-0.343,0.114c-0.04-0.025,0.101-0.165,0.203-0.228c0.102-0.064,0.178-0.204,0.14-0.242c-0.038-0.038-0.088-0.279-0.063-0.343c0.025-0.063,0.139-0.152,0.013-0.216c-0.127-0.063-0.217-0.14-0.318-0.178s-0.216,0.152-0.305,0.204c-0.089,0.051-0.076,0.114-0.191,0.127c-0.114,0.013-0.189,0.165,0,0.254c0.191,0.089,0.255,0.152,0.204,0.204c-0.051,0.051-0.267-0.025-0.267-0.025s-0.165-0.076-0.268-0.076c-0.101,0-0.229-0.063-0.33-0.076c-0.102-0.013-0.306-0.013-0.355,0.038c-0.051,0.051-0.179,0.203-0.28,0.152c-0.101-0.051-0.101-0.102-0.241-0.051c-0.14,0.051-0.279-0.038-0.355,0.038c-0.077,0.076-0.013,0.076-0.255,0c-0.241-0.076-0.189,0.051-0.419,0.089s-0.368-0.038-0.432,0.038c-0.064,0.077-0.153,0.217-0.19,0.127c-0.038-0.088,0.126-0.241,0.062-0.292c-0.062-0.051-0.33-0.025-0.367,0.013c-0.039,0.038-0.014,0.178,0.011,0.229c0.026,0.05,0.064,0.254-0.011,0.216c-0.077-0.038-0.064-0.166-0.141-0.152c-0.076,0.013-0.165,0.051-0.203,0.077c-0.038,0.025-0.191,0.025-0.229,0.076c-0.037,0.051,0.014,0.191-0.051,0.203c-0.063,0.013-0.114,0.064-0.254-0.025c-0.14-0.089-0.14-0.038-0.178-0.012c-0.038,0.025-0.216,0.127-0.229,0.012c-0.013-0.114,0.025-0.152-0.089-0.229c-0.115-0.076-0.026-0.076,0.127-0.025c0.152,0.05,0.343,0.075,0.622-0.013c0.28-0.089,0.395-0.127,0.28-0.178c-0.115-0.05-0.229-0.101-0.406-0.127c-0.179-0.025-0.42-0.025-0.7-0.127c-0.279-0.102-0.343-0.14-0.457-0.165c-0.115-0.026-0.813-0.14-1.132-0.089c-0.317,0.051-1.193,0.28-1.245,0.318s-0.128,0.19-0.292,0.318c-0.165,0.127-0.47,0.419-0.712,0.47c-0.241,0.051-0.521,0.254-0.521,0.305c0,0.051,0.101,0.242,0.076,0.28c-0.025,0.038,0.05,0.229,0.191,0.28c0.139,0.05,0.381,0.038,0.393-0.039c0.014-0.076,0.204-0.241,0.217-0.127c0.013,0.115,0.14,0.292,0.114,0.368c-0.025,0.077,0,0.153,0.09,0.14c0.088-0.012,0.559-0.114,0.559-0.114s0.153-0.064,0.127-0.166c-0.026-0.101,0.166-0.241,0.203-0.279c0.038-0.038,0.178-0.191,0.014-0.241c-0.167-0.051-0.293-0.064-0.115-0.216s0.292,0,0.521-0.229c0.229-0.229-0.051-0.292,0.191-0.305c0.241-0.013,0.496-0.025,0.444,0.051c-0.05,0.076-0.342,0.242-0.508,0.318c-0.166,0.077-0.14,0.216-0.076,0.292c0.063,0.076,0.09,0.254,0.204,0.229c0.113-0.025,0.254-0.114,0.38-0.101c0.128,0.012,0.383-0.013,0.42-0.013c0.039,0,0.216,0.178,0.114,0.203c-0.101,0.025-0.229,0.013-0.445,0.025c-0.215,0.013-0.456,0.013-0.456,0.051c0,0.039,0.292,0.127,0.19,0.191c-0.102,0.063-0.203-0.013-0.331-0.026c-0.127-0.012-0.203,0.166-0.241,0.267c-0.039,0.102,0.063,0.28-0.127,0.216c-0.191-0.063-0.331-0.063-0.381-0.038c-0.051,0.025-0.203,0.076-0.331,0.114c-0.126,0.038-0.076-0.063-0.242-0.063c-0.164,0-0.164,0-0.164,0l-0.103,0.013c0,0-0.101-0.063-0.114-0.165c-0.013-0.102,0.05-0.216-0.013-0.241c-0.064-0.026-0.292,0.012-0.33,0.088c-0.038,0.076-0.077,0.216-0.026,0.28c0.052,0.063,0.204,0.19,0.064,0.152c-0.14-0.038-0.317-0.051-0.419,0.026c-0.101,0.076-0.279,0.241-0.279,0.241s-0.318,0.025-0.318,0.102c0,0.077,0,0.178-0.114,0.191c-0.115,0.013-0.268,0.05-0.42,0.076c-0.153,0.025-0.139,0.088-0.317,0.102s-0.204,0.089-0.038,0.114c0.165,0.025,0.418,0.127,0.431,0.241c0.014,0.114-0.013,0.242-0.076,0.356c-0.043,0.079-0.305,0.026-0.458,0.026c-0.152,0-0.456-0.051-0.584,0c-0.127,0.051-0.102,0.305-0.064,0.419c0.039,0.114-0.012,0.178-0.063,0.216c-0.051,0.038-0.065,0.152,0,0.204c0.063,0.051,0.114,0.165,0.166,0.178c0.051,0.013,0.215-0.038,0.279,0.025c0.064,0.064,0.127,0.216,0.165,0.178c0.039-0.038,0.089-0.203,0.153-0.166c0.064,0.039,0.216-0.012,0.331-0.025s0.177-0.14,0.292-0.204c0.114-0.063,0.05-0.063,0.013-0.14c-0.038-0.076,0.114-0.165,0.204-0.254c0.088-0.089,0.253-0.013,0.292-0.115c0.038-0.102,0.051-0.279,0.151-0.267c0.103,0.013,0.243,0.076,0.331,0.076c0.089,0,0.279-0.14,0.332-0.165c0.05-0.025,0.241-0.013,0.267,0.102c0.025,0.114,0.241,0.254,0.292,0.279c0.051,0.025,0.381,0.127,0.433,0.165c0.05,0.038,0.126,0.153,0.152,0.254c0.025,0.102,0.114,0.102,0.128,0.013c0.012-0.089-0.065-0.254,0.025-0.242c0.088,0.013,0.191-0.026,0.191-0.026s-0.243-0.165-0.331-0.203c-0.088-0.038-0.255-0.114-0.331-0.241c-0.076-0.127-0.267-0.153-0.254-0.279c0.013-0.127,0.191-0.051,0.292,0.051c0.102,0.102,0.356,0.241,0.445,0.33c0.088,0.089,0.229,0.127,0.267,0.242c0.039,0.114,0.152,0.241,0.19,0.292c0.038,0.051,0.165,0.331,0.204,0.394c0.038,0.063,0.165-0.012,0.229-0.063c0.063-0.051,0.179-0.076,0.191-0.178c0.013-0.102-0.153-0.178-0.203-0.216c-0.051-0.038,0.127-0.076,0.191-0.127c0.063-0.05,0.177-0.14,0.228-0.063c0.051,0.077,0.026,0.381,0.051,0.432c0.025,0.051,0.279,0.127,0.331,0.191c0.05,0.063,0.267,0.089,0.304,0.051c0.039-0.038,0.242,0.026,0.294,0.038c0.049,0.013,0.202-0.025,0.304-0.05c0.103-0.025,0.204-0.102,0.191,0.063c-0.013,0.165-0.051,0.419-0.179,0.546c-0.127,0.127-0.076,0.191-0.202,0.191c-0.06,0-0.113,0-0.156,0.021c-0.041-0.065-0.098-0.117-0.175-0.097c-0.152,0.038-0.344,0.038-0.47,0.19c-0.128,0.153-0.178,0.165-0.204,0.114c-0.025-0.051,0.369-0.267,0.317-0.331c-0.05-0.063-0.355-0.038-0.521-0.038c-0.166,0-0.305-0.102-0.433-0.127c-0.126-0.025-0.292,0.127-0.418,0.254c-0.128,0.127-0.216,0.038-0.331,0.038c-0.115,0-0.331-0.165-0.331-0.165s-0.216-0.089-0.305-0.089c-0.088,0-0.267-0.165-0.318-0.165c-0.05,0-0.19-0.115-0.088-0.166c0.101-0.05,0.202,0.051,0.101-0.229c-0.101-0.279-0.33-0.216-0.419-0.178c-0.088,0.039-0.724,0.025-0.775,0.025c-0.051,0-0.419,0.127-0.533,0.178c-0.116,0.051-0.318,0.115-0.369,0.14c-0.051,0.025-0.318-0.051-0.433,0.013c-0.151,0.084-0.291,0.216-0.33,0.216c-0.038,0-0.153,0.089-0.229,0.28c-0.077,0.19,0.013,0.355-0.128,0.419c-0.139,0.063-0.394,0.204-0.495,0.305c-0.102,0.101-0.229,0.458-0.355,0.623c-0.127,0.165,0,0.317,0.025,0.419c0.025,0.101,0.114,0.292-0.025,0.471c-0.14,0.178-0.127,0.266-0.191,0.279c-0.063,0.013,0.063,0.063,0.088,0.19c0.025,0.128-0.114,0.255,0.128,0.369c0.241,0.113,0.355,0.217,0.418,0.367c0.064,0.153,0.382,0.407,0.382,0.407s0.229,0.205,0.344,0.293c0.114,0.089,0.152,0.038,0.177-0.05c0.025-0.09,0.178-0.104,0.355-0.104c0.178,0,0.305,0.04,0.483,0.014c0.178-0.025,0.356-0.141,0.42-0.166c0.063-0.025,0.279-0.164,0.443-0.063c0.166,0.103,0.141,0.241,0.23,0.332c0.088,0.088,0.24,0.037,0.355-0.051c0.114-0.09,0.064-0.052,0.203,0.025c0.14,0.075,0.204,0.151,0.077,0.267c-0.128,0.113-0.051,0.293-0.128,0.47c-0.076,0.178-0.063,0.203,0.077,0.278c0.14,0.076,0.394,0.548,0.47,0.638c0.077,0.088-0.025,0.342,0.064,0.495c0.089,0.151,0.178,0.254,0.077,0.331c-0.103,0.075-0.28,0.216-0.292,0.47s0.051,0.431,0.102,0.521s0.177,0.331,0.241,0.419c0.064,0.089,0.14,0.305,0.152,0.445c0.013,0.14-0.024,0.306,0.039,0.381c0.064,0.076,0.102,0.191,0.216,0.292c0.115,0.103,0.152,0.318,0.152,0.318s0.039,0.089,0.051,0.229c0.012,0.14,0.025,0.228,0.152,0.292c0.126,0.063,0.215,0.076,0.28,0.013c0.063-0.063,0.381-0.077,0.546-0.063c0.165,0.013,0.355-0.075,0.521-0.19s0.407-0.419,0.496-0.508c0.089-0.09,0.292-0.255,0.268-0.356c-0.025-0.101-0.077-0.203,0.024-0.254c0.102-0.052,0.344-0.152,0.356-0.229c0.013-0.077-0.09-0.395-0.115-0.457c-0.024-0.064,0.064-0.18,0.165-0.306c0.103-0.128,0.421-0.216,0.471-0.267c0.051-0.053,0.191-0.267,0.217-0.433c0.024-0.167-0.051-0.369,0-0.457c0.05-0.09,0.013-0.165-0.103-0.268c-0.114-0.102-0.089-0.407-0.127-0.457c-0.037-0.051-0.013-0.319,0.063-0.345c0.076-0.023,0.242-0.279,0.344-0.393c0.102-0.114,0.394-0.47,0.534-0.496c0.139-0.025,0.355-0.229,0.368-0.343c0.013-0.115,0.38-0.547,0.394-0.635c0.013-0.09,0.166-0.42,0.102-0.497c-0.062-0.076-0.559,0.115-0.622,0.141c-0.064,0.025-0.241,0.127-0.446,0.113c-0.202-0.013-0.114-0.177-0.127-0.254c-0.012-0.076-0.228-0.368-0.279-0.381c-0.051-0.012-0.203-0.166-0.267-0.317c-0.063-0.153-0.152-0.343-0.254-0.458c-0.102-0.114-0.165-0.38-0.268-0.559c-0.101-0.178-0.189-0.407-0.279-0.572c-0.021-0.041-0.045-0.079-0.067-0.117c0.118-0.029,0.289-0.082,0.31-0.009c0.024,0.088,0.165,0.279,0.19,0.419s0.165,0.089,0.178,0.216c0.014,0.128,0.14,0.433,0.19,0.47c0.052,0.038,0.28,0.242,0.318,0.318c0.038,0.076,0.089,0.178,0.127,0.369c0.038,0.19,0.076,0.444,0.179,0.482c0.102,0.038,0.444-0.064,0.508-0.102s0.482-0.242,0.635-0.255c0.153-0.012,0.179-0.115,0.368-0.152c0.191-0.038,0.331-0.177,0.458-0.28c0.127-0.101,0.28-0.355,0.33-0.444c0.052-0.088,0.179-0.152,0.115-0.253c-0.063-0.103-0.331-0.254-0.433-0.268c-0.102-0.012-0.089-0.178-0.152-0.178s-0.051,0.088-0.178,0.153c-0.127,0.063-0.255,0.19-0.344,0.165s0.026-0.089-0.113-0.203s-0.192-0.14-0.192-0.228c0-0.089-0.278-0.255-0.304-0.382c-0.026-0.127,0.19-0.305,0.254-0.19c0.063,0.114,0.115,0.292,0.279,0.368c0.165,0.076,0.318,0.204,0.395,0.229c0.076,0.025,0.267-0.14,0.33-0.114c0.063,0.024,0.191,0.253,0.306,0.292c0.113,0.038,0.495,0.051,0.559,0.051s0.33,0.013,0.381-0.063c0.051-0.076,0.089-0.076,0.153-0.076c0.062,0,0.177,0.229,0.267,0.254c0.089,0.025,0.254,0.013,0.241,0.179c-0.012,0.164,0.076,0.305,0.165,0.317c0.09,0.012,0.293-0.191,0.293-0.191s0,0.318-0.012,0.433c-0.014,0.113,0.139,0.534,0.139,0.534s0.19,0.393,0.241,0.482s0.267,0.355,0.267,0.47c0,0.115,0.025,0.293,0.103,0.293c0.076,0,0.152-0.203,0.24-0.331c0.091-0.126,0.116-0.305,0.153-0.432c0.038-0.127,0.038-0.356,0.038-0.444c0-0.09,0.075-0.166,0.255-0.242c0.178-0.076,0.304-0.292,0.456-0.407c0.153-0.115,0.141-0.305,0.446-0.305c0.305,0,0.278,0,0.355-0.077c0.076-0.076,0.151-0.127,0.19,0.013c0.038,0.14,0.254,0.343,0.292,0.394c0.038,0.052,0.114,0.191,0.103,0.344c-0.013,0.152,0.012,0.33,0.075,0.33s0.191-0.216,0.191-0.216s0.279-0.189,0.267,0.013c-0.014,0.203,0.025,0.419,0.025,0.545c0,0.053,0.042,0.135,0.088,0.21c-0.005,0.059-0.004,0.119-0.009,0.178C27.388,17.153,27.387,17.327,27.436,17.39zM20.382,12.064c0.076,0.05,0.102,0.127,0.152,0.203c0.052,0.076,0.14,0.05,0.203,0.114c0.063,0.064-0.178,0.14-0.075,0.216c0.101,0.077,0.151,0.381,0.165,0.458c0.013,0.076-0.279,0.114-0.369,0.102c-0.089-0.013-0.354-0.102-0.445-0.127c-0.089-0.026-0.139-0.343-0.025-0.331c0.116,0.013,0.141-0.025,0.267-0.139c0.128-0.115-0.189-0.166-0.278-0.191c-0.089-0.025-0.268-0.305-0.331-0.394c-0.062-0.089-0.014-0.228,0.141-0.331c0.076-0.051,0.279,0.063,0.381,0c0.101-0.063,0.203-0.14,0.241-0.165c0.039-0.025,0.293,0.038,0.33,0.114c0.039,0.076,0.191,0.191,0.141,0.229c-0.052,0.038-0.281,0.076-0.356,0c-0.075-0.077-0.255,0.012-0.268,0.152C20.242,12.115,20.307,12.013,20.382,12.064zM16.875,12.28c-0.077-0.025,0.025-0.178,0.102-0.229c0.075-0.051,0.164-0.178,0.241-0.305c0.076-0.127,0.178-0.14,0.241-0.127c0.063,0.013,0.203,0.241,0.241,0.318c0.038,0.076,0.165-0.026,0.217-0.051c0.05-0.025,0.127-0.102,0.14-0.165s0.127-0.102,0.254-0.102s0.013,0.102-0.076,0.127c-0.09,0.025-0.038,0.077,0.113,0.127c0.153,0.051,0.293,0.191,0.459,0.279c0.165,0.089,0.19,0.267,0.088,0.292c-0.101,0.025-0.406,0.051-0.521,0.038c-0.114-0.013-0.254-0.127-0.419-0.153c-0.165-0.025-0.369-0.013-0.433,0.077s-0.292,0.05-0.395,0.05c-0.102,0-0.228,0.127-0.253,0.077C16.875,12.534,16.951,12.306,16.875,12.28zM17.307,9.458c0.063-0.178,0.419,0.038,0.355,0.127C17.599,9.675,17.264,9.579,17.307,9.458zM17.802,18.584c0.063,0.102-0.14,0.431-0.254,0.407c-0.113-0.027-0.076-0.318-0.038-0.382C17.548,18.545,17.769,18.529,17.802,18.584zM13.189,12.674c0.025-0.051-0.039-0.153-0.127-0.013C13.032,12.71,13.164,12.725,13.189,12.674zM20.813,8.035c0.141,0.076,0.339,0.107,0.433,0.013c0.076-0.076,0.013-0.204-0.05-0.216c-0.064-0.013-0.104-0.115,0.062-0.203c0.165-0.089,0.343-0.204,0.534-0.229c0.19-0.025,0.622-0.038,0.774,0c0.152,0.039,0.382-0.166,0.445-0.254s-0.203-0.152-0.279-0.051c-0.077,0.102-0.444,0.076-0.521,0.051c-0.076-0.025-0.686,0.102-0.812,0.102c-0.128,0-0.179,0.152-0.356,0.229c-0.179,0.076-0.42,0.191-0.509,0.229c-0.088,0.038-0.177,0.19-0.101,0.216C20.509,7.947,20.674,7.959,20.813,8.035zM14.142,12.674c0.064-0.089-0.051-0.217-0.114-0.217c-0.12,0-0.178,0.191-0.103,0.254C14.002,12.776,14.078,12.763,14.142,12.674zM14.714,13.017c0.064,0.025,0.114,0.102,0.165,0.114c0.052,0.013,0.217,0,0.167-0.127s-0.167-0.127-0.204-0.127c-0.038,0-0.203-0.038-0.267,0C14.528,12.905,14.65,12.992,14.714,13.017zM11.308,10.958c0.101,0.013,0.217-0.063,0.305-0.101c0.088-0.038,0.216-0.114,0.216-0.229c0-0.114-0.025-0.216-0.077-0.267c-0.051-0.051-0.14-0.064-0.216-0.051c-0.115,0.02-0.127,0.14-0.203,0.14c-0.076,0-0.165,0.025-0.14,0.114s0.077,0.152,0,0.19C11.117,10.793,11.205,10.946,11.308,10.958zM11.931,10.412c0.127,0.051,0.394,0.102,0.292,0.153c-0.102,0.051-0.28,0.19-0.305,0.267s0.216,0.153,0.216,0.153s-0.077,0.089-0.013,0.114c0.063,0.025,0.102-0.089,0.203-0.089c0.101,0,0.304,0.063,0.406,0.063c0.103,0,0.267-0.14,0.254-0.229c-0.013-0.089-0.14-0.229-0.254-0.28c-0.113-0.051-0.241-0.28-0.317-0.331c-0.076-0.051,0.076-0.178-0.013-0.267c-0.09-0.089-0.153-0.076-0.255-0.14c-0.102-0.063-0.191,0.013-0.254,0.089c-0.063,0.076-0.14-0.013-0.217,0.012c-0.102,0.035-0.063,0.166-0.012,0.229C11.714,10.221,11.804,10.361,11.931,10.412zM24.729,17.198c-0.083,0.037-0.153,0.47,0,0.521c0.152,0.052,0.241-0.202,0.191-0.267C24.868,17.39,24.843,17.147,24.729,17.198zM20.114,20.464c-0.159-0.045-0.177,0.166-0.304,0.306c-0.128,0.141-0.267,0.254-0.317,0.241c-0.052-0.013-0.331,0.089-0.242,0.279c0.089,0.191,0.076,0.382-0.013,0.472c-0.089,0.088,0.076,0.342,0.052,0.482c-0.026,0.139,0.037,0.229,0.215,0.229s0.242-0.064,0.318-0.229c0.076-0.166,0.088-0.331,0.164-0.47c0.077-0.141,0.141-0.434,0.179-0.51c0.038-0.075,0.114-0.316,0.102-0.457C20.254,20.669,20.204,20.489,20.114,20.464zM10.391,8.802c-0.069-0.06-0.229-0.102-0.306-0.11c-0.076-0.008-0.152,0.06-0.321,0.06c-0.168,0-0.279,0.067-0.347,0C9.349,8.684,9.068,8.65,9.042,8.692C9.008,8.749,8.941,8.751,9.008,8.87c0.069,0.118,0.12,0.186,0.179,0.178s0.262-0.017,0.288,0.051C9.5,9.167,9.569,9.226,9.712,9.184c0.145-0.042,0.263-0.068,0.296-0.119c0.033-0.051,0.263-0.059,0.263-0.059S10.458,8.861,10.391,8.802z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.GlobeAlt2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.GlobeAlt2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.GlobeAlt2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.GlobeAlt2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM8.251,7.48c0.122,0.055,0.255,0.104,0.28,0.137C8.57,7.668,8.621,7.823,8.557,7.861C8.492,7.9,8.39,7.887,8.376,7.771c-0.013-0.115-0.026-0.128-0.18-0.18c-0.022-0.007-0.035-0.01-0.051-0.015C8.18,7.544,8.216,7.512,8.251,7.48zM7.733,7.974c0.031,0.087,0.113,0.125,0,0.17C7.673,8.168,7.611,8.172,7.559,8.165C7.617,8.102,7.672,8.035,7.733,7.974zM16,27.533C9.639,27.533,4.466,22.36,4.466,16c0-0.085,0.011-0.168,0.013-0.254c0.004-0.003,0.008-0.006,0.012-0.009c0.129-0.102,0.283-0.359,0.334-0.45c0.052-0.089,0.181-0.154,0.116-0.256c-0.059-0.096-0.292-0.23-0.407-0.261c0.01-0.099,0.032-0.195,0.045-0.294c0.063,0.077,0.137,0.17,0.208,0.194c0.115,0.038,0.501,0.052,0.566,0.052c0.063,0,0.334,0.014,0.386-0.064c0.051-0.077,0.09-0.077,0.154-0.077c0.064,0,0.18,0.231,0.271,0.257c0.089,0.026,0.257,0.013,0.244,0.181c-0.012,0.166,0.077,0.309,0.167,0.321c0.09,0.013,0.296-0.194,0.296-0.194s0,0.322-0.012,0.438C6.846,15.698,7,16.124,7,16.124s0.193,0.397,0.244,0.488c0.052,0.09,0.27,0.36,0.27,0.476c0,0.117,0.026,0.297,0.104,0.297s0.155-0.206,0.244-0.335c0.091-0.128,0.117-0.31,0.155-0.438c0.039-0.129,0.039-0.36,0.039-0.45c0-0.091,0.076-0.168,0.257-0.245c0.181-0.077,0.309-0.296,0.463-0.412c0.155-0.116,0.142-0.309,0.452-0.309c0.308,0,0.282,0,0.36-0.078c0.077-0.077,0.154-0.128,0.192,0.013c0.039,0.142,0.257,0.347,0.296,0.399c0.039,0.052,0.116,0.193,0.104,0.348c-0.013,0.153,0.012,0.334,0.077,0.334c0.064,0,0.193-0.219,0.193-0.219s0.283-0.192,0.27,0.014c-0.014,0.205,0.025,0.425,0.025,0.552c0,0.13,0.232,0.438,0.232,0.362c0-0.079,0.103-0.296,0.103-0.413c0-0.114,0.064-0.063,0.231,0.051c0.167,0.116,0.283,0.349,0.283,0.349s0.168,0.154,0.193,0.219c0.026,0.064,0.206-0.025,0.244-0.104c0.039-0.076,0.065-0.115,0.167-0.141c0.104-0.026,0.231-0.026,0.271-0.168c0.039-0.142,0.154-0.308,0-0.502c-0.154-0.193-0.232-0.321-0.347-0.412c-0.117-0.09-0.206-0.322-0.206-0.322s0.244-0.218,0.321-0.296c0.079-0.077,0.193-0.025,0.207,0.064c0.013,0.091-0.115,0.168-0.141,0.361c-0.026,0.192,0.154,0.257,0.206,0.192c0.051-0.065,0.18-0.219,0.18-0.257c0-0.039-0.089-0.026-0.102-0.167c-0.013-0.142,0.166-0.245,0.23-0.207c0.066,0.039,0.477-0.051,0.67-0.154s0.308-0.322,0.425-0.412c0.116-0.089,0.515-0.386,0.489-0.527c-0.026-0.142,0.012-0.334-0.09-0.515c-0.103-0.18-0.232-0.295-0.283-0.373c-0.051-0.077,0.219-0.09,0.347-0.206c0.129-0.116,0-0.219-0.064-0.206c-0.064,0.013-0.232,0.052-0.296,0.039c-0.064-0.013-0.103-0.077-0.206-0.155c-0.102-0.077,0.026-0.192,0.091-0.179c0.064,0.013,0.23-0.129,0.308-0.193c0.077-0.064,0.193-0.115,0.154-0.051c-0.038,0.064-0.128,0.296-0.026,0.309c0.104,0.013,0.348-0.193,0.388-0.18c0.038,0.013,0.102,0.18,0.064,0.257c-0.039,0.077-0.039,0.206,0.013,0.193c0.051-0.013,0.154-0.129,0.18-0.09c0.027,0.039,0.154,0.116,0.09,0.257c-0.063,0.142-0.193,0.193-0.039,0.284c0.154,0.089,0.206,0.012,0.322-0.052c0.115-0.064,0.193-0.347,0.128-0.438c-0.064-0.09-0.218-0.27-0.218-0.334c0-0.064,0.257-0.064,0.257-0.167s0.09-0.18,0.18-0.219c0.091-0.039,0.206-0.206,0.244-0.154c0.039,0.052,0.271,0.116,0.334,0.039c0.064-0.077,0.4-0.36,0.605-0.515c0.206-0.154,0.283-0.334,0.336-0.515c0.051-0.18,0.128-0.296,0.102-0.437v0c0.077,0.18,0.09,0.309,0.077,0.45c-0.013,0.142,0,0.438,0.026,0.476c0.025,0.039,0.129,0.128,0.192,0.103c0.064-0.025-0.025-0.283-0.025-0.334c0-0.052,0.09-0.129,0.142-0.142c0.052-0.013,0-0.231-0.065-0.322c-0.063-0.09-0.154-0.142-0.102-0.154c0.051-0.013,0.115-0.116,0.077-0.142c-0.039-0.025-0.014-0.116-0.103-0.09c-0.065,0.019-0.241-0.015-0.235,0.095c-0.037-0.11-0.116-0.183-0.216-0.172c-0.116,0.013-0.181,0.077-0.296,0.077s-0.025-0.18-0.077-0.18c-0.051,0-0.168,0.167-0.231,0.077c-0.064-0.09,0.18-0.206,0.373-0.27c0.192-0.064,0.514-0.438,0.644-0.451c0.128-0.013,0.45,0.026,0.733,0.013c0.283-0.013,0.373-0.129,0.463-0.064s0.283,0.142,0.399,0.129c0.116-0.014,0.064,0,0.244-0.129c0.18-0.129,0.348-0.193,0.438-0.296c0.09-0.103,0.335-0.18,0.348-0.077c0.014,0.103-0.026,0.206,0.077,0.206s0.258-0.103,0.386-0.154c0.129-0.051,0.231-0.116,0.231-0.116s-0.527,0.36-0.655,0.438c-0.129,0.077-0.438,0.129-0.567,0.283c-0.128,0.155-0.205,0.206-0.192,0.374c0.014,0.167,0.231,0.386,0.128,0.54c-0.103,0.154-0.141,0.373-0.141,0.373s0.154-0.219,0.373-0.36s0.348-0.334,0.425-0.412s0.309-0.091,0.309-0.181s0.064-0.206,0.104-0.309c0.038-0.103-0.077-0.078,0-0.206c0.076-0.129,0.064-0.232,0.45-0.232s0.257,0.026,0.566,0.013c0.309-0.013,0.424-0.167,0.72-0.245c0.296-0.077,0.527-0.128,0.618-0.089c0.09,0.038,0.232,0.012,0.141-0.078c-0.089-0.09-0.295-0.219-0.193-0.245c0.104-0.026,0.207-0.039,0.246-0.142c0.039-0.103-0.142-0.283-0.039-0.386c0.104-0.103-0.077-0.231-0.207-0.257c-0.128-0.025-0.63,0.026-0.731-0.025c-0.104-0.052-0.271-0.116-0.322-0.078c-0.052,0.039-0.168,0.245-0.168,0.245s-0.09,0.025-0.168-0.09c-0.076-0.116-0.5-0.103-0.629-0.103s-0.271,0.025-0.413,0.039c-0.141,0.013-0.219,0.052-0.322-0.039c-0.102-0.09-0.243-0.129-0.296-0.167c-0.051-0.039-0.334-0.039-0.553-0.012c-0.218,0.025-0.438,0.025-0.438,0.025s-0.104-0.039-0.257-0.129c-0.154-0.09-0.309-0.154-0.361-0.154c-0.051,0-0.449,0.064-0.539,0c-0.091-0.064-0.181-0.103-0.245-0.103s-0.115-0.103-0.038-0.103s0.437-0.103,0.437-0.103s-0.103-0.142-0.231-0.142c-0.128,0-0.359-0.064-0.424-0.064s-0.014,0.064-0.142,0.039c-0.13-0.026-0.258-0.078-0.335-0.026c-0.076,0.051-0.258,0.128-0.064,0.18c0.193,0.052,0.373,0,0.425,0.078c0.052,0.077,0,0.115,0,0.167s-0.103,0.193-0.167,0.219c-0.064,0.025-0.143-0.039-0.27,0.025c-0.129,0.064-0.451,0.013-0.49,0.052c-0.038,0.039-0.115-0.103-0.18-0.077c-0.064,0.025-0.232,0.193-0.322,0.18c-0.089-0.013-0.206-0.103-0.206-0.206s-0.038-0.232-0.077-0.258c-0.038-0.025-0.322-0.039-0.425-0.025c-0.103,0.013-0.424,0.038-0.477,0.09c-0.052,0.052-0.193,0.09-0.283,0.09s-0.167-0.09-0.36-0.116c-0.192-0.026-0.617-0.039-0.669-0.026s-0.218-0.025-0.155-0.077c0.065-0.051,0.257-0.219,0.143-0.295c-0.117-0.078-0.375-0.078-0.489-0.09c-0.117-0.013-0.232-0.039-0.413-0.013c-0.181,0.026-0.219,0.116-0.296,0.039c-0.077-0.077,0.193,0.039-0.077-0.077c-0.27-0.116-0.399-0.103-0.477-0.064c-0.077,0.039,0.013,0.025-0.192,0.103c-0.206,0.078-0.322,0.116-0.374,0.129c-0.051,0.012-0.372-0.065-0.411-0.091c-0.038-0.025-0.181,0.013-0.309,0.064S9.895,7.025,9.767,7C9.638,6.973,9.432,6.973,9.303,7.025C9.174,7.076,9.084,7.076,8.956,7.166c-0.13,0.09-0.373,0.142-0.373,0.142S8.522,7.305,8.448,7.301C10.474,5.541,13.111,4.466,16,4.466c6.361,0,11.534,5.173,11.534,11.534S22.36,27.533,16,27.533zM14.888,19.92c0,0,0.207-0.026,0.207-0.117c0-0.089-0.207-0.205-0.282-0.102c-0.078,0.102-0.219,0.205-0.207,0.296C14.625,20.138,14.888,19.92,14.888,19.92zM14.875,17.023c-0.181,0.233-0.167,0.182-0.296,0.128c-0.128-0.05-0.334,0.116-0.296,0.182c0.039,0.064,0.322-0.014,0.386,0.102c0.065,0.116,0.065,0.129,0.193,0.104c0.128-0.026,0.257-0.205,0.219-0.295C15.043,17.151,14.875,17.023,14.875,17.023zM14.837,18.245c-0.051,0-0.412,0.064-0.451,0.079c-0.039,0.013-0.27-0.025-0.27-0.025c-0.09,0.089-0.026,0.179,0.116,0.166s0.438-0.052,0.502-0.052C14.799,18.413,14.888,18.245,14.837,18.245zM14.284,14.668c-0.19,0.03-0.308,0.438-0.155,0.425C14.284,15.081,14.451,14.643,14.284,14.668zM14.734,16.959c-0.052-0.064-0.181-0.271-0.323-0.219c-0.042,0.017-0.153,0.245-0.012,0.245C14.541,16.985,14.786,17.023,14.734,16.959zM14.85,16.805c0.232-0.013,0.167-0.245-0.013-0.257C14.786,16.544,14.618,16.818,14.85,16.805zM17.591,18.928c-0.193-0.039-0.244-0.102-0.45-0.205c-0.207-0.103-0.67-0.103-0.682-0.039c-0.014,0.064,0,0-0.155-0.05c-0.153-0.054-0.271,0-0.309-0.091c-0.038-0.091-0.128-0.117-0.244-0.002c-0.097,0.097-0.142,0.104,0.078,0.143c0.218,0.039,0.283,0.039,0.192,0.141c-0.09,0.104-0.154,0.233-0.077,0.244c0.077,0.015,0.309-0.05,0.334,0c0.026,0.054-0.051,0.064,0.207,0.105c0.258,0.037,0.309,0.128,0.359,0.178c0.051,0.052,0.206,0.22,0.104,0.22c-0.104,0-0.219,0.128-0.142,0.143c0.077,0.013,0.309-0.039,0.321,0c0.014,0.037,0.143,0.283,0.271,0.271c0.129-0.013,0.206-0.244,0.27-0.31c0.065-0.064,0.322-0.104,0.349,0.012c0.026,0.116,0.104,0.233,0.257,0.311c0.154,0.076,0.335,0.154,0.348,0.089c0.013-0.064-0.077-0.309-0.181-0.346c-0.103-0.041-0.282-0.259-0.282-0.348c0-0.091-0.155-0.117-0.232-0.182C17.849,19.147,17.784,18.967,17.591,18.928zM8.042,17.023c-0.084,0.037-0.155,0.476,0,0.527c0.154,0.052,0.244-0.205,0.193-0.271C8.183,17.218,8.158,16.973,8.042,17.023zM15.429,18.117c-0.118-0.05-0.335,0.424-0.181,0.463C15.403,18.62,15.518,18.156,15.429,18.117zM15.687,13.703c0.077,0,0.18-0.051,0.18-0.193c0-0.142,0.18,0,0.27-0.013s0.141-0.103,0.18-0.206c0.005-0.013,0.008-0.021,0.009-0.027c-0.003,0.024-0.001,0.093,0.095,0.117c0.154,0.038,0.205-0.064,0.205-0.103s0.283-0.103,0.336-0.142c0.051-0.038,0.258-0.103,0.27-0.154c0.013-0.051,0-0.348,0.064-0.373c0.064-0.026,0.154-0.026,0.052-0.206c-0.104-0.181-0.104-0.348-0.232-0.271c-0.095,0.057-0.038,0.284-0.115,0.438s-0.142,0.296-0.193,0.296s-0.321,0.103-0.399,0.18c-0.076,0.077-0.45-0.064-0.501,0c-0.052,0.064-0.154,0.141-0.219,0.193c-0.065,0.051-0.245,0.013-0.207,0.167C15.518,13.562,15.609,13.703,15.687,13.703zM17.449,12.056c0.18-0.013,0.348-0.064,0.348-0.064s0.271,0.013,0.232-0.116c-0.04-0.128-0.322-0.141-0.375-0.128c-0.051,0.013-0.142-0.142-0.244-0.116c-0.096,0.023-0.128,0.155-0.128,0.193c0,0.039-0.36,0.115-0.245,0.219C17.153,12.146,17.27,12.069,17.449,12.056zM13.91,19.058c0.104,0.064,0.296-0.219,0.349-0.13c0.051,0.091-0.013,0.13,0.076,0.246c0.091,0.114,0.258,0.102,0.258,0.102s-0.013-0.309-0.155-0.387c-0.142-0.077-0.232-0.166-0.064-0.141c0.167,0.026,0.257-0.039,0.219-0.114c-0.039-0.078-0.283-0.039-0.361-0.026s-0.193-0.052-0.193-0.052c-0.077,0.024-0.063,0.089-0.09,0.219C13.923,18.902,13.807,18.992,13.91,19.058zM20.924,21.618c-0.231-0.052-0.077,0.039,0,0.154c0.077,0.116,0.232,0.176,0.258,0.05C21.193,21.759,21.155,21.67,20.924,21.618zM21.915,24.744c-0.077,0.064,0,0.091-0.219,0.22c-0.22,0.13-0.49,0.271-0.541,0.386c-0.052,0.116,0.051,0.181,0.258,0.192c0.206,0.013,0.154,0.053,0.296-0.103s0.271-0.244,0.438-0.373c0.168-0.128,0.168-0.322,0.168-0.322s-0.181-0.178-0.193-0.141C22.1,24.665,21.992,24.681,21.915,24.744zM18.504,21.618c0.014-0.116-0.219-0.116-0.334-0.207c-0.116-0.089-0.128-0.359-0.193-0.515c-0.064-0.153-0.192-0.257-0.322-0.397c-0.128-0.143-0.192-0.465-0.23-0.438c-0.039,0.025-0.154,0.399-0.064,0.515c0.09,0.116-0.039,0.348-0.103,0.503c-0.065,0.153-0.22-0.026-0.349-0.104c-0.129-0.078-0.308-0.128-0.398-0.219c-0.09-0.091,0.155-0.335,0.091-0.426c-0.065-0.09-0.412-0.013-0.45-0.013c-0.039,0-0.116-0.128-0.194-0.128c-0.077,0-0.064,0.258-0.064,0.258s-0.078-0.091-0.193-0.207c-0.117-0.115,0.012,0.077-0.103,0.193c-0.117,0.117-0.079,0.078-0.129,0.206c-0.051,0.129-0.167,0.077-0.283-0.052c-0.116-0.128-0.179-0.037-0.258,0c-0.077,0.039-0.141,0.259-0.18,0.309c-0.039,0.052-0.309,0.117-0.374,0.182c-0.064,0.062-0.09,0.27-0.09,0.322c0,0.05-0.271,0.023-0.361,0.089c-0.09,0.064-0.23,0.025-0.321,0.025c-0.09,0-0.399,0.244-0.502,0.308c-0.103,0.066-0.103,0.298-0.051,0.362c0.051,0.063,0.154,0.219,0.09,0.244c-0.064,0.026-0.104,0.206,0.051,0.359c0.154,0.155,0.103,0.194,0.115,0.271c0.014,0.077,0.078,0.104,0.181,0.232c0.102,0.128-0.181,0.231-0.219,0.31c-0.039,0.076,0.091,0.192,0.167,0.257c0.077,0.063,0.271,0.026,0.386-0.013c0.117-0.039,0.245-0.143,0.321-0.155c0.079-0.013,0.438-0.026,0.438-0.026s0.129-0.192,0.219-0.296c0.089-0.102,0.372-0.013,0.372-0.013s0.117-0.076,0.426-0.141c0.309-0.065,0.179,0.064,0.296,0.104c0.115,0.037,0.27,0.062,0.359,0.128c0.09,0.064,0,0.218-0.012,0.283c-0.014,0.064,0.219,0.038,0.23-0.026c0.014-0.064,0.077-0.128,0.207-0.205c0.128-0.078,0.025,0.114,0.076,0.231c0.052,0.116,0.129-0.157,0.129-0.026c0,0.039,0.039,0.078,0.051,0.116c0.014,0.039,0.181,0.052,0.181,0.18c0,0.13,0,0.207,0.039,0.231c0.038,0.026,0.244,0,0.335,0.155c0.089,0.154,0.154,0.013,0.205-0.052c0.052-0.064,0.231,0.026,0.283,0.078c0.052,0.05,0.193-0.104,0.387-0.155c0.192-0.051,0.167-0.039,0.219-0.115c0.051-0.078,0.09-0.283,0.205-0.438c0.115-0.153,0.271-0.424,0.271-0.631c0-0.206-0.014-0.682-0.155-0.899C18.761,21.953,18.492,21.733,18.504,21.618zM18.029,24.77c-0.065-0.013-0.207-0.062-0.207-0.062c-0.142,0.141,0.142,0.141,0.104,0.283c-0.039,0.141,0.193,0.089,0.257,0.064c0.063-0.027,0.22-0.323,0.193-0.399C18.351,24.577,18.093,24.783,18.029,24.77zM22.803,24.178c-0.052,0-0.077,0.064-0.192,0c-0.117-0.063-0.091-0.037-0.168-0.167c-0.077-0.127-0.091-0.296-0.219-0.23c-0.051,0.025,0,0.168,0.051,0.218c0.053,0.052,0.077,0.231,0.064,0.283c-0.012,0.052-0.231,0.116-0.129,0.18c0.104,0.064,0.297,0,0.271,0.078c-0.025,0.077-0.129,0.179-0.013,0.205c0.115,0.025,0.154-0.089,0.207-0.178c0.051-0.093,0.089-0.169,0.179-0.221C22.944,24.294,22.854,24.178,22.803,24.178zM22.815,21.18c0.168,0.064,0.464-0.231,0.347-0.27C23.047,20.871,22.815,21.18,22.815,21.18zM13.923,19.906c-0.029,0.115,0.193,0.167,0.206,0.039C14.141,19.816,13.949,19.803,13.923,19.906zM14.27,16.47c-0.064,0.065-0.257,0.193-0.283,0.31c-0.025,0.115,0.309-0.182,0.399-0.296c0.091-0.117,0.27-0.052,0.308-0.117c0.04-0.063,0.04-0.063,0.04-0.063s-0.142-0.025-0.257-0.063c-0.117-0.039-0.258,0.102-0.193-0.104c0.064-0.206,0.257-0.167,0.219-0.322c-0.039-0.154-0.168-0.193-0.207-0.193c-0.09,0,0.013,0.141-0.116,0.231c-0.128,0.09-0.271,0.128-0.193,0.283C14.064,16.29,14.334,16.405,14.27,16.47zM13.254,19.751c0.013-0.076-0.142-0.192-0.206-0.192c-0.065,0-0.386-0.077-0.386-0.077c-0.058,0.023-0.135,0.045-0.158,0.077c-0.007-0.011-0.022-0.024-0.049-0.039c-0.142-0.075-0.309,0-0.361-0.102c-0.05-0.104-0.127-0.104-0.179-0.039c-0.094,0.117,0.025,0.206,0.063,0.231c0.038,0.024,0.181,0.052,0.309,0.039c0.08-0.008,0.181-0.027,0.21-0.059c0.004,0.014,0.016,0.027,0.035,0.044c0.103,0.092,0.167,0.13,0.321,0.116C13.009,19.74,13.241,19.829,13.254,19.751zM12.881,18.992c0.065,0,0.193,0,0.283,0.026c0.09,0.025,0.386,0.05,0.373-0.064c-0.013-0.115-0.038-0.297,0.089-0.411c0.13-0.117,0.257-0.18,0.193-0.348c-0.063-0.167-0.193-0.271-0.103-0.349c0.09-0.076,0.192-0.102,0.192-0.166c0-0.065-0.217,0.18-0.244-0.246c-0.005-0.091-0.206,0.025-0.219,0.116c-0.012,0.091,0.142,0.167-0.103,0.167c-0.245,0-0.257,0.194-0.309,0.232c-0.052,0.039-0.103,0.051-0.207,0.076c-0.102,0.026-0.127,0.13-0.153,0.194c-0.025,0.063-0.206-0.116-0.257-0.064c-0.051,0.052-0.013,0.296,0.077,0.501C12.585,18.863,12.816,18.992,12.881,18.992zM11.979,18.928c0.065-0.077,0.038-0.192-0.063-0.18c-0.103,0.013-0.193-0.168-0.36-0.283c-0.168-0.114-0.296-0.194-0.451-0.36c-0.154-0.167-0.347-0.271-0.45-0.359c-0.104-0.091-0.257-0.13-0.322-0.116c-0.159,0.032,0.231,0.309,0.271,0.346c0.039,0.041,0.387,0.335,0.387,0.478s0.231,0.476,0.296,0.527c0.064,0.052,0.385,0.244,0.437,0.348c0.052,0.103,0.167,0.13,0.167-0.013C11.89,19.174,11.916,19.006,11.979,18.928zM11.002,17.474c0.064,0.232,0.193,0.464,0.244,0.555c0.052,0.089,0.271,0.217,0.348,0.281c0.077,0.064,0.192-0.024,0.143-0.102c-0.052-0.078-0.155-0.192-0.167-0.283c-0.013-0.091-0.078-0.233-0.181-0.387c-0.102-0.153-0.192-0.192-0.257-0.295c-0.064-0.104-0.296-0.297-0.296-0.297c-0.102,0.013-0.102,0.205-0.051,0.271C10.834,17.28,10.938,17.243,11.002,17.474z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Hail();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Hail = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Hail.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Hail\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.372,6.912c-0.093-3.925-3.302-7.078-7.248-7.08c-2.638,0.002-4.942,1.412-6.208,3.518c-0.595-0.327-1.28-0.518-2.01-0.518C7.627,2.834,5.773,4.639,5.69,6.898c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.875c3.312,0,6-2.688,6-6C29.434,9.944,27.732,7.715,25.372,6.912zM23.436,16.584H7.562c-2.209-0.006-3.997-1.793-4.001-4c-0.002-1.983,1.45-3.619,3.35-3.933c0.265-0.043,0.502-0.19,0.657-0.414C7.723,8.015,7.78,7.74,7.731,7.475C7.703,7.326,7.686,7.187,7.686,7.051c0.004-1.225,0.995-2.217,2.22-2.219c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.31c0.342-0.066,0.626-0.308,0.748-0.631c0.749-1.992,2.662-3.412,4.911-3.41c2.898,0.004,5.244,2.351,5.251,5.25c0,0.16-0.009,0.325-0.026,0.496c-0.05,0.518,0.305,0.984,0.814,1.079c1.859,0.345,3.273,1.966,3.271,3.923C27.43,14.791,25.645,16.578,23.436,16.584zM11.503,23.709c-0.784-0.002-1.418-0.636-1.418-1.416c0-0.785,0.634-1.416,1.418-1.418c0.78,0.002,1.413,0.633,1.416,1.418C12.917,23.073,12.284,23.707,11.503,23.709zM19.002,23.709c-0.783-0.002-1.418-0.636-1.418-1.416c0-0.785,0.635-1.416,1.418-1.418c0.779,0.002,1.414,0.633,1.414,1.418C20.417,23.073,19.784,23.707,19.002,23.709zM7.503,28.771c-0.783-0.002-1.417-0.637-1.417-1.418s0.634-1.414,1.417-1.416c0.78,0.002,1.415,0.635,1.415,1.416C8.917,28.135,8.284,28.77,7.503,28.771zM15.001,28.771c-0.782-0.002-1.417-0.637-1.417-1.418s0.634-1.414,1.417-1.416c0.78,0.002,1.413,0.635,1.415,1.416C16.415,28.135,15.784,28.77,15.001,28.771zM22.5,28.771c-0.782-0.002-1.416-0.634-1.416-1.416c0-0.785,0.634-1.418,1.416-1.42c0.781,0.002,1.414,0.635,1.418,1.42C23.915,28.138,23.282,28.77,22.5,28.771z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Hammer();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Hammer = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Hammer.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Hammer\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M7.831,29.354c0.685,0.353,1.62,1.178,2.344,0.876c0.475-0.195,0.753-1.301,1.048-1.883c2.221-4.376,4.635-9.353,6.392-13.611c0-0.19,0.101-0.337-0.049-0.595c0.983-1.6,1.65-3.358,2.724-5.138c0.34-0.566,0.686-1.351,1.163-1.577l0.881-0.368c1.12-0.288,1.938-0.278,2.719,0.473c0.396,0.383,0.578,1.015,0.961,1.395c0.259,0.26,1.246,0.899,1.613,0.8c0.285-0.077,0.52-0.364,0.72-0.728l0.696-1.286c0.195-0.366,0.306-0.718,0.215-0.999c-0.117-0.362-1.192-0.84-1.552-0.915c-0.528-0.113-1.154,0.081-1.692-0.041c-1.057-0.243-1.513-0.922-1.883-2.02c-2.608-1.533-6.119-2.53-10.207-1.244c-1.109,0.349-2.172,0.614-2.901,1.323c-0.146,0.412,0.143,0.494,0.446,0.489c-0.237,0.216-0.62,0.341-0.399,0.848c2.495-1.146,7.34-1.542,7.669,0.804c0.072,0.522-0.395,1.241-0.682,1.835c-0.905,1.874-2.011,3.394-2.813,5.091c-0.298,0.017-0.366,0.18-0.525,0.287c-2.604,3.8-5.451,8.541-7.9,12.794c-0.326,0.566-1.098,1.402-1.002,1.906C5.961,28.641,7.146,29,7.831,29.354z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.HammerAndScrewDriver();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.HammerAndScrewDriver = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.HammerAndScrewDriver.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.HammerAndScrewDriver\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.537,9.859c-0.473-0.259-1.127-0.252-1.609-0.523c-0.943-0.534-1.186-1.316-1.226-2.475c-2.059-2.215-5.138-4.176-9.424-4.114c-1.162,0.017-2.256-0.035-3.158,0.435c-0.258,0.354-0.004,0.516,0.288,0.599c-0.29,0.138-0.692,0.147-0.626,0.697c2.72-0.383,7.475,0.624,7.116,2.966c-0.08,0.521-0.735,1.076-1.179,1.563c-1.263,1.382-2.599,2.45-3.761,3.667l0.336,0.336c0.742-0.521,1.446-0.785,2.104-0.785c0.707,0,1.121,0.297,1.276,0.433c0.575-0.618,1.166-1.244,1.839-1.853c0.488-0.444,1.047-1.099,1.566-1.178l0.949-0.101c1.156,0.047,1.937,0.29,2.471,1.232c0.27,0.481,0.262,1.139,0.521,1.613c0.175,0.324,0.937,1.218,1.316,1.228c0.294,0.009,0.603-0.199,0.899-0.49l1.033-1.034c0.291-0.294,0.501-0.6,0.492-0.896C29.754,10.801,28.861,10.035,28.537,9.859zM13.021,15.353l-0.741-0.741c-3.139,2.643-6.52,5.738-9.531,8.589c-0.473,0.443-1.452,1.021-1.506,1.539c-0.083,0.781,0.95,1.465,1.506,2c0.556,0.533,1.212,1.602,1.994,1.51c0.509-0.043,1.095-1.029,1.544-1.502c2.255-2.374,4.664-4.976,6.883-7.509c-0.312-0.371-0.498-0.596-0.498-0.596C12.535,18.451,11.779,17.272,13.021,15.353zM20.64,15.643c-0.366-0.318-1.466,0.143-1.777-0.122c-0.311-0.266,0.171-1.259-0.061-1.455c-0.482-0.406-0.77-0.646-0.77-0.646s-0.862-0.829-2.812,0.928L7.44,6.569C7.045,6.173,7.203,4.746,7.203,4.746L3.517,2.646L2.623,3.541l2.1,3.686c0,0,1.428-0.158,1.824,0.237l7.792,7.793c-1.548,1.831-0.895,2.752-0.895,2.752s0.238,0.288,0.646,0.771c0.196,0.23,1.188-0.249,1.455,0.061c0.264,0.312-0.196,1.41,0.12,1.777c2.666,3.064,6.926,7.736,8.125,7.736c0.892,0,2.021-0.724,2.948-1.64c0.925-0.917,1.639-2.055,1.639-2.947C28.377,22.567,23.704,18.309,20.64,15.643z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.HangUp();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.HangUp = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.HangUp.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.HangUp\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.563,10.494c-7.35-7.349-19.265-7.348-26.612,0.001c-1.796,1.796-0.247,6.84-0.247,6.84c0.135,0.443,0.616,0.72,1.067,0.614l6.898-1.604c0.451-0.105,0.82-0.57,0.82-1.033l0.001-3.685c0-0.463,0.379-0.842,0.842-0.842h8.285c0.464,0,0.843,0.379,0.843,0.842l-0.001,3.471c0.001,0.462,0.375,0.907,0.83,0.986l7.635,1.316c0.456,0.08,0.873-0.232,0.926-0.692C29.851,16.708,30.359,12.29,28.563,10.494zM17.264,14.072h-3.501v4.39h-2.625l4.363,7.556l4.363-7.556h-2.6V14.072z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Help();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Help = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Help.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Help\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.834,4.834L4.833,4.833c-5.889,5.892-5.89,15.443,0.001,21.334s15.44,5.888,21.33-0.002c5.891-5.891,5.893-15.44,0.002-21.33C20.275-1.056,10.725-1.056,4.834,4.834zM25.459,5.542c0.833,0.836,1.523,1.757,2.104,2.726l-4.08,4.08c-0.418-1.062-1.053-2.06-1.912-2.918c-0.859-0.859-1.857-1.494-2.92-1.913l4.08-4.08C23.7,4.018,24.622,4.709,25.459,5.542zM10.139,20.862c-2.958-2.968-2.959-7.758-0.001-10.725c2.966-2.957,7.756-2.957,10.725,0c2.954,2.965,2.955,7.757-0.001,10.724C17.896,23.819,13.104,23.817,10.139,20.862zM5.542,25.459c-0.833-0.837-1.524-1.759-2.105-2.728l4.081-4.081c0.418,1.063,1.055,2.06,1.914,2.919c0.858,0.859,1.855,1.494,2.917,1.913l-4.081,4.081C7.299,26.982,6.379,26.292,5.542,25.459zM8.268,3.435l4.082,4.082C11.288,7.935,10.29,8.571,9.43,9.43c-0.858,0.859-1.494,1.855-1.912,2.918L3.436,8.267c0.58-0.969,1.271-1.89,2.105-2.727C6.377,4.707,7.299,4.016,8.268,3.435zM22.732,27.563l-4.082-4.082c1.062-0.418,2.061-1.053,2.919-1.912c0.859-0.859,1.495-1.857,1.913-2.92l4.082,4.082c-0.58,0.969-1.271,1.891-2.105,2.728C24.623,26.292,23.701,26.983,22.732,27.563z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.History();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.History = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.History.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.History\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.666,18.292c0.275,0.479,0.889,0.644,1.365,0.367l3.305-1.677C15.39,16.99,15.444,17,15.501,17c0.828,0,1.5-0.671,1.5-1.5l-0.5-7.876c0-0.552-0.448-1-1-1c-0.552,0-1,0.448-1,1l-0.466,7.343l-3.004,1.96C10.553,17.204,10.389,17.816,10.666,18.292zM12.062,9.545c0.479-0.276,0.642-0.888,0.366-1.366c-0.276-0.478-0.888-0.642-1.366-0.366s-0.642,0.888-0.366,1.366C10.973,9.658,11.584,9.822,12.062,9.545zM8.179,18.572c-0.478,0.277-0.642,0.889-0.365,1.367c0.275,0.479,0.889,0.641,1.365,0.365c0.479-0.275,0.643-0.888,0.367-1.367C9.27,18.461,8.658,18.297,8.179,18.572zM9.18,10.696c-0.479-0.276-1.09-0.112-1.366,0.366s-0.111,1.09,0.365,1.366c0.479,0.276,1.09,0.113,1.367-0.366C9.821,11.584,9.657,10.973,9.18,10.696zM6.624,15.5c0,0.553,0.449,1,1,1c0.552,0,1-0.447,1.001-1c-0.001-0.552-0.448-0.999-1.001-1C7.071,14.5,6.624,14.948,6.624,15.5zM14.501,23.377c0,0.553,0.448,1,1,1c0.552,0,1-0.447,1-1s-0.448-1-1-1C14.949,22.377,14.501,22.824,14.501,23.377zM10.696,21.822c-0.275,0.479-0.111,1.09,0.366,1.365c0.478,0.276,1.091,0.11,1.365-0.365c0.277-0.479,0.113-1.09-0.365-1.367C11.584,21.18,10.973,21.344,10.696,21.822zM21.822,10.696c-0.479,0.278-0.643,0.89-0.366,1.367s0.888,0.642,1.366,0.365c0.478-0.275,0.643-0.888,0.365-1.366C22.913,10.584,22.298,10.42,21.822,10.696zM21.456,18.938c-0.274,0.479-0.112,1.092,0.367,1.367c0.477,0.274,1.089,0.112,1.364-0.365c0.276-0.479,0.112-1.092-0.364-1.367C22.343,18.297,21.73,18.461,21.456,18.938zM24.378,15.5c0-0.551-0.448-1-1-1c-0.554,0.002-1.001,0.45-1.001,1c0.001,0.552,0.448,1,1.001,1C23.93,16.5,24.378,16.053,24.378,15.5zM18.573,22.822c0.274,0.477,0.888,0.643,1.366,0.365c0.478-0.275,0.642-0.89,0.365-1.365c-0.277-0.479-0.888-0.643-1.365-0.367C18.46,21.732,18.296,22.344,18.573,22.822zM18.939,9.546c0.477,0.276,1.088,0.112,1.365-0.366c0.276-0.478,0.113-1.091-0.367-1.367c-0.477-0.276-1.09-0.111-1.364,0.366C18.298,8.659,18.462,9.27,18.939,9.546zM28.703,14.364C28.074,7.072,21.654,1.67,14.364,2.295c-3.254,0.281-6.118,1.726-8.25,3.877L4.341,4.681l-1.309,7.364l7.031-2.548L8.427,8.12c1.627-1.567,3.767-2.621,6.194-2.833c5.64-0.477,10.595,3.694,11.089,9.335c0.477,5.64-3.693,10.595-9.333,11.09c-5.643,0.476-10.599-3.694-11.092-9.333c-0.102-1.204,0.019-2.373,0.31-3.478l-3.27,1.186c-0.089,0.832-0.106,1.684-0.031,2.55c0.629,7.29,7.048,12.691,14.341,12.066C23.926,28.074,29.328,21.655,28.703,14.364z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Home();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Home = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Home.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Home\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.812,16l-3.062-3.062V5.625h-2.625v4.688L16,4.188L4.188,16L7,15.933v11.942h17.875V16H27.812zM16,26.167h-5.833v-7H16V26.167zM21.667,23.167h-3.833v-4.042h3.833V23.167z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.IMac();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.IMac = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.IMac.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.IMac\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.936,2.099H2.046c-0.506,0-0.919,0.414-0.919,0.92v21.097c0,0.506,0.413,0.919,0.919,0.919h17.062v-0.003h9.828c0.506,0,0.92-0.413,0.92-0.921V3.019C29.854,2.513,29.439,2.099,28.936,2.099zM28.562,20.062c0,0.412-0.338,0.75-0.75,0.75H3.062c-0.413,0-0.75-0.338-0.75-0.75v-16c0-0.413,0.337-0.75,0.75-0.75h24.75c0.412,0,0.75,0.337,0.75,0.75V20.062zM20.518,28.4c-0.033-0.035-0.062-0.055-0.068-0.062l-0.01-0.004l-0.008-0.004c0,0-0.046-0.021-0.119-0.062c-0.108-0.056-0.283-0.144-0.445-0.237c-0.162-0.097-0.32-0.199-0.393-0.271c-0.008-0.014-0.035-0.079-0.058-0.17c-0.083-0.32-0.161-0.95-0.22-1.539h-7.5c-0.023,0.23-0.048,0.467-0.076,0.691c-0.035,0.272-0.073,0.524-0.113,0.716c-0.02,0.096-0.039,0.175-0.059,0.23c-0.009,0.025-0.018,0.05-0.024,0.062c-0.003,0.006-0.005,0.01-0.007,0.013c-0.094,0.096-0.34,0.246-0.553,0.36c-0.107,0.062-0.209,0.11-0.283,0.146c-0.074,0.037-0.119,0.062-0.119,0.062l-0.007,0.004l-0.008,0.004c-0.01,0.009-0.038,0.022-0.07,0.062c-0.031,0.037-0.067,0.103-0.067,0.185c0.002,0.002-0.004,0.037-0.006,0.088c0,0.043,0.007,0.118,0.068,0.185c0.061,0.062,0.143,0.08,0.217,0.08h9.716c0.073,0,0.153-0.021,0.215-0.08c0.062-0.063,0.068-0.142,0.068-0.185c-0.001-0.051-0.008-0.086-0.007-0.088C20.583,28.503,20.548,28.439,20.518,28.4z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.SetFigure\r\n */\r\ndraw2d.shape.icon.Icon = draw2d.SetFigure.extend(\r\n  /** @lends draw2d.shape.icon.Icon.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Icon\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new figure element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({\r\n      width: 50,\r\n      height: 50,\r\n      color:\"#333333\",\r\n      bgColor:null\r\n    }, attr), setter, getter)\r\n    this.keepAspectRatio = false\r\n  },\r\n\r\n  /**\r\n   * \r\n   * propagate all attributes like color, stroke,... to the shape element\r\n   **/\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    this.svgNodes?.attr({fill: this.color.rgba(), stroke: \"none\"})\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n  applyTransformation: function () {\r\n    let trans = []\r\n\r\n    if (this.rotationAngle !== 0) {\r\n      trans.push(\"R\" + this.rotationAngle)\r\n    }\r\n\r\n    if (this.getRotationAngle() === 90 || this.getRotationAngle() === 270) {\r\n      let ratio = this.getHeight() / this.getWidth()\r\n      trans.push(\"T\" + (-this.offsetY) + \",\" + (-this.offsetX))\r\n      trans.push(\"S\" + ratio + \",\" + 1 / ratio + \",0,0\")\r\n    }\r\n    else {\r\n      trans.push(\"T\" + (-this.offsetX) + \",\" + (-this.offsetY))\r\n\r\n    }\r\n    if (this.isResizeable() === true) {\r\n      trans.push(\r\n        \"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY() +\r\n        \"S\" + this.scaleX + \",\" + this.scaleY + \",\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY()\r\n      )\r\n    }\r\n    else {\r\n      trans.push(\"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n    }\r\n\r\n    this.svgNodes.transform(trans.join(\" \"))\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  createShapeElement: function () {\r\n    let shape = this._super()\r\n\r\n    let bb = this.svgNodes.getBBox()\r\n\r\n    this.offsetX = bb.x\r\n    this.offsetY = bb.y\r\n\r\n    return shape\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Icons();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Icons = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Icons.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Icons\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.083,14H14V4.083H4.083V14zM17,4.083V14h9.917V4.083H17zM17,26.917h9.917v-9.918H17V26.917zM4.083,26.917H14v-9.918H4.083V26.917z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ie();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ie = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ie.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Ie\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.998,2.266c-2.12-1.91-6.925,0.382-9.575,1.93c-0.76-0.12-1.557-0.185-2.388-0.185c-3.349,0-6.052,0.985-8.106,2.843c-2.336,2.139-3.631,4.94-3.631,8.177c0,0.028,0.001,0.056,0.001,0.084c3.287-5.15,8.342-7.79,9.682-8.487c0.212-0.099,0.338,0.155,0.141,0.253c-0.015,0.042-0.015,0,0,0c-2.254,1.35-6.434,5.259-9.146,10.886l-0.003-0.007c-1.717,3.547-3.167,8.529-0.267,10.358c2.197,1.382,6.13-0.248,9.295-2.318c0.764,0.108,1.567,0.165,2.415,0.165c5.84,0,9.937-3.223,11.399-7.924l-8.022-0.014c-0.337,1.661-1.464,2.548-3.223,2.548c-2.21,0-3.729-1.211-3.828-4.012l15.228-0.014c0.028-0.578-0.042-0.985-0.042-1.436c0-5.251-3.143-9.355-8.255-10.663c2.081-1.294,5.974-3.209,7.848-1.681c1.407,1.14,0.633,3.533,0.295,4.518c-0.056,0.254,0.24,0.296,0.296,0.057C28.814,5.573,29.026,3.194,27.998,2.266zM13.272,25.676c-2.469,1.475-5.873,2.539-7.539,1.289c-1.243-0.935-0.696-3.468,0.398-5.938c0.664,0.992,1.495,1.886,2.473,2.63C9.926,24.651,11.479,25.324,13.272,25.676zM12.714,13.046c0.042-2.435,1.787-3.49,3.617-3.49c1.928,0,3.49,1.112,3.49,3.49H12.714z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ie9();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ie9 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ie9.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ie9\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.751,17.887c0.054-0.434,0.081-0.876,0.081-1.324c0-1.744-0.413-3.393-1.146-4.854c1.133-2.885,1.155-5.369-0.201-6.777c-1.756-1.822-5.391-1.406-9.433,0.721c-0.069-0.001-0.138-0.003-0.206-0.003c-6.069,0-10.988,4.888-10.988,10.917c0,0.183,0.005,0.354,0.014,0.529c-2.688,4.071-3.491,7.967-1.688,9.838c1.557,1.613,4.691,1.344,8.2-0.392c1.363,0.604,2.873,0.938,4.462,0.938c4.793,0,8.867-3.049,10.369-7.299H21.26c-0.814,1.483-2.438,2.504-4.307,2.504c-2.688,0-4.867-2.104-4.867-4.688c0-0.036,0.002-0.071,0.003-0.106h15.662V17.887zM26.337,6.099c0.903,0.937,0.806,2.684-0.087,4.818c-1.27-2.083-3.221-3.71-5.546-4.576C23.244,5.217,25.324,5.047,26.337,6.099zM16.917,10.372c2.522,0,4.585,1.991,4.748,4.509h-9.496C12.333,12.363,14.396,10.372,16.917,10.372zM5.687,26.501c-1.103-1.146-0.712-3.502,0.799-6.298c0.907,2.546,2.736,4.658,5.09,5.938C8.92,27.368,6.733,27.587,5.687,26.501z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Import();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Import = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Import.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Import\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.067,2.25c-5.979,0-11.035,3.91-12.778,9.309h3.213c1.602-3.705,5.271-6.301,9.565-6.309c5.764,0.01,10.428,4.674,10.437,10.437c-0.009,5.764-4.673,10.428-10.437,10.438c-4.294-0.007-7.964-2.605-9.566-6.311H2.289c1.744,5.399,6.799,9.31,12.779,9.312c7.419-0.002,13.437-6.016,13.438-13.438C28.504,8.265,22.486,2.252,15.067,2.25zM10.918,19.813l7.15-4.126l-7.15-4.129v2.297H-0.057v3.661h10.975V19.813z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.InkScape();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.InkScape = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.InkScape.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.InkScape\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.402,17.626c0.84-0.772,2.468-0.381,5.979-1.853c1.716-0.72,1.572-1.265,1.566-1.928c-0.001-0.014,0-0.027,0-0.041h-0.005c-0.012-0.667-0.291-1.332-0.846-1.845L17.049,2.684c-0.566-0.522-1.304-0.782-2.042-0.782V1.898c-0.738,0-1.475,0.261-2.04,0.783l-10.05,9.276c-0.554,0.512-0.832,1.176-0.843,1.844H2.07c0,0,0.003,0.011,0.004,0.011c0,0.012-0.004,0.024-0.004,0.034h0.017c0.193,0.676,5.164,1.536,5.718,2.049c0.838,0.774-3.211,1.339-2.374,2.114c0.838,0.773,5.062,1.496,5.898,2.271c0.838,0.771-1.711,1.596-0.874,2.366c0.837,0.773,3.651-0.191,3.142,1.822c1.13,1.045,3.49,0.547,5.071-0.498c0.837-0.771-1.607-0.703-0.77-1.477c0.836-0.774,2.949-0.777,4.73-2.627C21.913,18.838,19.566,18.398,20.402,17.626zM10.973,16.868l-0.42-0.504c1.497,0.358,3.162,0.827,4.498,0.837l0.058,0.554C13.964,17.646,11.544,17.137,10.973,16.868zM18.161,8.58l-1.396-0.74L14.53,9.594l-1.067-3.192l-1.177,2.545L8.998,9.25l0.036-1.352c0-0.324,1.895-2.596,3.05-3.136l2.112-1.401c0.312-0.186,0.53-0.261,0.727-0.257c0.327,0.011,0.593,0.239,1.112,0.55l4.748,3.25c0.357,0.215,0.619,0.522,0.626,0.898l-2.813-1.254L18.161,8.58zM26.434,19.594c-0.313-0.07-1.688-0.691-2.035,0.165c0.968,0.981,2.645,2.181,3.316,1.482C28.391,20.543,27.102,19.745,26.434,19.594zM4.663,21.566c-0.315,0.074-1.842,0.115-1.719,1.021c1.351,0.451,3.438,0.792,3.684-0.113C6.873,21.566,5.33,21.414,4.663,21.566zM17.877,26.396c-0.232,0.209-1.53,0.953-0.929,1.681c1.413-0.236,3.403-0.914,3.12-1.812C19.786,25.369,18.37,25.953,17.877,26.396z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ipad();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ipad = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ipad.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ipad\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.221,1.417H6.11c-0.865,0-1.566,0.702-1.566,1.566v25.313c0,0.865,0.701,1.565,1.566,1.565h19.111c0.865,0,1.565-0.7,1.565-1.565V2.984C26.787,2.119,26.087,1.417,25.221,1.417zM15.666,29.299c-0.346,0-0.626-0.279-0.626-0.625s0.281-0.627,0.626-0.627c0.346,0,0.627,0.281,0.627,0.627S16.012,29.299,15.666,29.299zM24.376,26.855c0,0.174-0.142,0.312-0.313,0.312H7.27c-0.173,0-0.313-0.142-0.313-0.312V4.3c0-0.173,0.14-0.313,0.313-0.313h16.792c0.172,0,0.312,0.14,0.312,0.313L24.376,26.855L24.376,26.855z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Iphone();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Iphone = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Iphone.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Iphone\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.755,1H10.62C9.484,1,8.562,1.921,8.562,3.058v24.385c0,1.136,0.921,2.058,2.058,2.058h10.135c1.136,0,2.058-0.922,2.058-2.058V3.058C22.812,1.921,21.891,1,20.755,1zM14.659,3.264h2.057c0.101,0,0.183,0.081,0.183,0.18c0,0.1-0.082,0.18-0.183,0.18h-2.057c-0.1,0-0.181-0.081-0.181-0.18C14.478,3.344,14.559,3.264,14.659,3.264zM13.225,3.058c0.199,0,0.359,0.162,0.359,0.36c0,0.198-0.161,0.36-0.359,0.36c-0.2,0-0.36-0.161-0.36-0.36S13.025,3.058,13.225,3.058zM15.688,28.473c-0.796,0-1.44-0.646-1.44-1.438c0-0.799,0.645-1.439,1.44-1.439s1.44,0.646,1.44,1.439S16.483,28.473,15.688,28.473zM22.041,24.355c0,0.17-0.139,0.309-0.309,0.309H9.642c-0.17,0-0.308-0.139-0.308-0.309V6.042c0-0.17,0.138-0.309,0.308-0.309h12.09c0.17,0,0.309,0.138,0.309,0.309V24.355z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.JQuery();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.JQuery = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.JQuery.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.JQuery\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.322,23.041C4.579,18.723,2.777,11.07,5.494,4.583c-0.254,0.291-0.502,0.59-0.739,0.904c-5.177,6.887-4.008,16.505,2.613,21.482c6.62,4.979,16.184,3.432,21.362-3.455c0.237-0.314,0.454-0.635,0.663-0.959C23.915,26.963,16.064,27.357,10.322,23.041zM13.662,18.598c4.765,3.582,11.604,2.564,15.567-2.198c-3.609,2.641-9.09,2.475-13.361-0.736S9.916,7.231,11.451,3.03C7.976,8.161,8.897,15.015,13.662,18.598zM18.642,11.976c3.254,2.447,8.146,1.438,10.967-2.242c-2.604,1.921-6.341,1.955-9.157-0.164c-2.819-2.118-3.826-5.718-2.701-8.754C14.998,4.549,15.387,9.528,18.642,11.976z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Jigsaw();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Jigsaw = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Jigsaw.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Jigsaw\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M3.739,13.619c0,0,3.516-4.669,5.592-3.642c2.077,1.027-0.414,2.795,1.598,3.719c2.011,0.924,5.048-0.229,4.376-2.899c-0.672-2.67-1.866-0.776-2.798-2.208c-0.934-1.432,4.586-4.59,4.586-4.59s3.361,6.651,4.316,4.911c1.157-2.105,3.193-4.265,5.305-1.025c0,0,1.814,2.412,0.246,3.434s-2.917,0.443-3.506,1.553c-0.586,1.112,3.784,4.093,3.784,4.093s-2.987,4.81-4.926,3.548c-1.939-1.262,0.356-3.364-2.599-3.989c-1.288-0.23-3.438,0.538-3.818,2.34c-0.13,2.709,1.604,2.016,2.797,3.475c1.191,1.457-4.484,4.522-4.484,4.522s-1.584-3.923-3.811-4.657c-2.227-0.735-0.893,2.135-2.917,2.531c-2.024,0.396-4.816-2.399-3.46-4.789c1.358-2.391,3.275-0.044,3.441-1.951C7.629,16.087,3.739,13.619,3.739,13.619z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Key();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Key = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Key.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Key\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M18.386,16.009l0.009-0.006l-0.58-0.912c1.654-2.226,1.876-5.319,0.3-7.8c-2.043-3.213-6.303-4.161-9.516-2.118c-3.212,2.042-4.163,6.302-2.12,9.517c1.528,2.402,4.3,3.537,6.944,3.102l0.424,0.669l0.206,0.045l0.779-0.447l-0.305,1.377l2.483,0.552l-0.296,1.325l1.903,0.424l-0.68,3.06l1.406,0.313l-0.424,1.906l4.135,0.918l0.758-3.392L18.386,16.009z M10.996,8.944c-0.685,0.436-1.593,0.233-2.029-0.452C8.532,7.807,8.733,6.898,9.418,6.463s1.594-0.233,2.028,0.452C11.883,7.6,11.68,8.509,10.996,8.944z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Lab();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Lab = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Lab.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Lab\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.121,24.438l-3.362-7.847c-0.329-0.769-0.599-2.081-0.599-2.917s0.513-1.521,1.14-1.521s1.141-0.513,1.141-1.14s-0.685-1.14-1.521-1.14h-6.84c-0.836,0-1.52,0.513-1.52,1.14s0.513,1.14,1.14,1.14s1.14,0.685,1.14,1.521s-0.269,2.148-0.599,2.917l-3.362,7.847C8.55,25.206,8.28,26.177,8.28,26.595s0.342,1.103,0.76,1.521s1.444,0.76,2.28,0.76h8.359c0.836,0,1.862-0.342,2.28-0.76s0.76-1.103,0.76-1.521S22.45,25.206,22.121,24.438zM16.582,7.625c0,0.599,0.484,1.083,1.083,1.083s1.083-0.484,1.083-1.083s-0.484-1.084-1.083-1.084S16.582,7.026,16.582,7.625zM13.667,7.792c0.276,0,0.5-0.224,0.5-0.5s-0.224-0.5-0.5-0.5s-0.5,0.224-0.5,0.5S13.391,7.792,13.667,7.792zM15.584,5.292c0.874,0,1.583-0.709,1.583-1.583c0-0.875-0.709-1.584-1.583-1.584C14.709,2.125,14,2.834,14,3.709C14,4.583,14.709,5.292,15.584,5.292z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Lamp();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Lamp = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Lamp.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Lamp\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,2.833c-3.866,0-7,3.134-7,7c0,3.859,3.945,4.937,4.223,9.499h5.553c0.278-4.562,4.224-5.639,4.224-9.499C22.5,5.968,19.366,2.833,15.5,2.833zM15.5,28.166c1.894,0,2.483-1.027,2.667-1.666h-5.334C13.017,27.139,13.606,28.166,15.5,28.166zM12.75,25.498h5.5v-5.164h-5.5V25.498z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Lamp_alt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Lamp_alt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Lamp_alt.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Lamp_alt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M12.75,25.498h5.5v-5.164h-5.5V25.498zM15.5,28.166c1.894,0,2.483-1.027,2.667-1.666h-5.334C13.017,27.139,13.606,28.166,15.5,28.166zM15.5,2.833c-3.866,0-7,3.134-7,7c0,3.859,3.945,4.937,4.223,9.499h1.271c-0.009-0.025-0.024-0.049-0.029-0.078L11.965,8.256c-0.043-0.245,0.099-0.485,0.335-0.563c0.237-0.078,0.494,0.026,0.605,0.25l0.553,1.106l0.553-1.106c0.084-0.17,0.257-0.277,0.446-0.277c0.189,0,0.362,0.107,0.446,0.277l0.553,1.106l0.553-1.106c0.084-0.17,0.257-0.277,0.448-0.277c0.189,0,0.36,0.107,0.446,0.277l0.554,1.106l0.553-1.106c0.111-0.224,0.368-0.329,0.604-0.25s0.377,0.318,0.333,0.563l-1.999,10.998c-0.005,0.029-0.02,0.053-0.029,0.078h1.356c0.278-4.562,4.224-5.639,4.224-9.499C22.5,5.968,19.366,2.833,15.5,2.833zM17.458,10.666c-0.191,0-0.364-0.107-0.446-0.275l-0.554-1.106l-0.553,1.106c-0.086,0.168-0.257,0.275-0.446,0.275c-0.191,0-0.364-0.107-0.449-0.275l-0.553-1.106l-0.553,1.106c-0.084,0.168-0.257,0.275-0.446,0.275c-0.012,0-0.025,0-0.037-0.001l1.454,8.001h1.167l1.454-8.001C17.482,10.666,17.47,10.666,17.458,10.666z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Landing();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Landing = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Landing.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Landing\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.322,19.491c0,0,1.903,0.342,0.299-1.869c-1.353-1.866-5.261-3.104-5.261-3.104l-4.213-8.229l-2.47-0.394l0.973,5.449L9.241,10.11L8.772,7.273L7.008,6.302c0,0-0.496,2.742-0.149,5.271C6.859,11.573,13.965,17.999,23.322,19.491zM3.251,23.106v1.998h24.498v-1.998H3.251zM14,17.94c0,0.414,0.336,0.75,0.75,0.75s0.75-0.336,0.75-0.75s-0.336-0.75-0.75-0.75S14,17.526,14,17.94z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Landscape1();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Landscape1 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Landscape1.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Landscape1\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M19.883,5.71H2.746c-0.163,0-0.319,0.071-0.435,0.188c-0.118,0.117-0.18,0.272-0.18,0.435v18.364c0,0.164,0.063,0.318,0.18,0.436c0.123,0.117,0.287,0.18,0.435,0.18h25.75c0.164,0,0.324-0.066,0.438-0.18c0.118-0.114,0.182-0.273,0.182-0.436V14.551c-0.002-0.102-0.01-0.188-0.021-0.271c-0.186-1.543-1.543-3.424-3.236-5.168C24.039,7.31,21.869,5.753,19.883,5.71zM26.914,12.314c-0.008-0.005-0.019-0.007-0.029-0.01c-1.092-0.293-2.33-0.355-3.199-0.355c-0.162,0-0.312,0.002-0.445,0.004c-0.037-0.604-0.129-1.604-0.356-2.625c-0.11-0.461-0.246-0.94-0.433-1.42c0.857,0.541,1.748,1.264,2.535,2.068C25.74,10.718,26.41,11.551,26.914,12.314zM3.365,6.947h16.517c0.058,0,0.12,0,0.183,0.004c0.694,0.105,1.307,1.221,1.616,2.646c0.335,1.484,0.354,2.997,0.354,3l0.007,0.656l0.651-0.051c0,0,0.398-0.027,0.99-0.025c0.809,0,1.977,0.062,2.871,0.312c0.939,0.275,1.352,0.635,1.326,1.051h0.002v9.542H3.365V6.951V6.947z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Landscape2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Landscape2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Landscape2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Landscape2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M19.883,5.71H2.746c-0.163,0-0.319,0.071-0.435,0.188c-0.118,0.117-0.18,0.272-0.18,0.435v18.364c0,0.164,0.063,0.318,0.18,0.436c0.123,0.117,0.287,0.18,0.435,0.18h25.75c0.164,0,0.324-0.066,0.438-0.18c0.118-0.114,0.182-0.273,0.182-0.436V14.551c-0.002-0.102-0.01-0.188-0.021-0.271c-0.186-1.543-1.543-3.424-3.236-5.168C24.039,7.31,21.869,5.753,19.883,5.71zM3.365,6.947h16.517c0.058,0,0.12,0,0.183,0.004c0.694,0.105,1.307,1.221,1.616,2.646c0.335,1.484,0.354,2.997,0.354,3l0.007,0.656l0.651-0.051c0,0,0.398-0.027,0.99-0.025c0.809,0,1.977,0.062,2.871,0.312c0.939,0.275,1.352,0.635,1.326,1.051h0.002v9.542H3.365V6.951V6.947z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.LineChart();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.LineChart = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.LineChart.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.LineChart\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M3.625,25.062c-0.539-0.115-0.885-0.646-0.77-1.187l0,0L6.51,6.584l2.267,9.259l1.923-5.188l3.581,3.741l3.883-13.103l2.934,11.734l1.96-1.509l5.271,11.74c0.226,0.504,0,1.095-0.505,1.321l0,0c-0.505,0.227-1.096,0-1.322-0.504l0,0l-4.23-9.428l-2.374,1.826l-1.896-7.596l-2.783,9.393l-3.754-3.924L8.386,22.66l-1.731-7.083l-1.843,8.711c-0.101,0.472-0.515,0.794-0.979,0.794l0,0C3.765,25.083,3.695,25.076,3.625,25.062L3.625,25.062z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Link();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Link = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Link.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Link\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16.45,18.085l-2.47,2.471c0.054,1.023-0.297,2.062-1.078,2.846c-1.465,1.459-3.837,1.459-5.302-0.002c-1.461-1.465-1.46-3.836-0.001-5.301c0.783-0.781,1.824-1.131,2.847-1.078l2.469-2.469c-2.463-1.057-5.425-0.586-7.438,1.426c-2.634,2.637-2.636,6.907,0,9.545c2.638,2.637,6.909,2.635,9.545,0l0.001,0.002C17.033,23.511,17.506,20.548,16.45,18.085zM14.552,12.915l2.467-2.469c-0.053-1.023,0.297-2.062,1.078-2.848C19.564,6.139,21.934,6.137,23.4,7.6c1.462,1.465,1.462,3.837,0,5.301c-0.783,0.783-1.822,1.132-2.846,1.079l-2.469,2.468c2.463,1.057,5.424,0.584,7.438-1.424c2.634-2.639,2.633-6.91,0-9.546c-2.639-2.636-6.91-2.637-9.545-0.001C13.967,7.489,13.495,10.451,14.552,12.915zM18.152,10.727l-7.424,7.426c-0.585,0.584-0.587,1.535,0,2.121c0.585,0.584,1.536,0.584,2.121-0.002l7.425-7.424c0.584-0.586,0.584-1.535,0-2.121C19.687,10.141,18.736,10.142,18.152,10.727z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.LinkedIn();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.LinkedIn = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.LinkedIn.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.LinkedIn\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.25,3.125h-22c-1.104,0-2,0.896-2,2v22c0,1.104,0.896,2,2,2h22c1.104,0,2-0.896,2-2v-22C29.25,4.021,28.354,3.125,27.25,3.125zM11.219,26.781h-4v-14h4V26.781zM9.219,11.281c-1.383,0-2.5-1.119-2.5-2.5s1.117-2.5,2.5-2.5s2.5,1.119,2.5,2.5S10.602,11.281,9.219,11.281zM25.219,26.781h-4v-8.5c0-0.4-0.403-1.055-0.687-1.213c-0.375-0.211-1.261-0.229-1.665-0.034l-1.648,0.793v8.954h-4v-14h4v0.614c1.583-0.723,3.78-0.652,5.27,0.184c1.582,0.886,2.73,2.864,2.73,4.702V26.781z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Linux();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Linux = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Linux.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Linux\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M11.791,25.229c1.027-0.104,1.162-1.191,0.68-1.666c-0.398-0.392-2.598-2.022-3.171-2.664C9.033,20.6,8.673,20.454,8.52,20.12c-0.352-0.771-0.598-1.869-0.151-2.658c0.081-0.144,0.133-0.078,0.071,0.22c-0.351,1.684,0.746,3.059,0.986,2.354c0.167-0.487,0.013-1.358,0.102-2.051c0.158-1.226,1.273-3.577,1.763-3.712c-0.755-1.398,0.886-2.494,0.866-3.723c-0.014-0.798,0.701,0.982,1.419,1.359c0.802,0.422,1.684-0.794,2.936-1.41c0.354-0.176,0.809-0.376,0.776-0.524c-0.146-0.718-1.644,0.886-2.979,0.939c-0.61,0.024-0.837-0.12-1.072-0.347c-0.712-0.689,0.073-0.115,1.132-0.307c0.471-0.085,0.629-0.163,1.128-0.365c0.5-0.201,1.069-0.5,1.636-0.654c0.395-0.106,0.361-0.402,0.208-0.491c-0.088-0.051-0.219-0.046-0.321,0.133c-0.244,0.419-1.383,0.661-1.74,0.771c-0.457,0.14-0.962,0.271-1.634,0.243c-1.021-0.042-0.782-0.509-1.513-0.928c-0.213-0.122-0.156-0.444,0.129-0.729c0.148-0.148,0.557-0.232,0.76-0.572c0.028-0.047,0.289-0.32,0.494-0.461c0.07-0.049,0.076-1.295-0.562-1.32c-0.543-0.021-0.697,0.398-0.675,0.818c0.022,0.419,0.245,0.765,0.393,0.764c0.285-0.004,0.019,0.311-0.138,0.361c-0.237,0.078-0.562-0.934-0.525-1.418c0.039-0.506,0.303-1.4,0.942-1.383c0.576,0.016,0.993,0.737,0.973,1.983c-0.003,0.211,0.935-0.101,1.247,0.229c0.224,0.236-0.767-2.207,1.438-2.375c0.582,0.111,1.14,0.305,1.371,1.641c-0.086,0.139,0.146,1.07-0.215,1.182c-0.438,0.135-0.707-0.02-0.453-0.438c0.172-0.418,0.004-1.483-0.882-1.42c-0.887,0.064-0.769,1.637-0.526,1.668c0.243,0.031,0.854,0.465,1.282,0.549c1.401,0.271,0.371,1.075,0.555,2.048c0.205,1.099,0.929,0.809,1.578,3.717c0.137,0.177,0.676,0.345,1.199,2.579c0.473,2.011-0.195,3.473,0.938,3.353c0.256-0.026,0.629-0.1,0.792-0.668c0.425-1.489-0.213-3.263-0.855-4.46c-0.375-0.698-0.729-1.174-0.916-1.337c0.738,0.436,1.683,1.829,1.898,2.862c0.286,1.358,0.49,1.934,0.059,3.37c0.25,0.125,0.871,0.39,0.871,0.685c-0.647-0.53-2.629-0.625-2.68,0.646c-0.338,0.008-0.594,0.034-0.811,0.293c-0.797,0.944-0.059,2.842-0.139,3.859c-0.07,0.896-0.318,1.783-0.46,2.683c-0.474-0.019-0.428-0.364-0.274-0.852c0.135-0.431,0.351-0.968,0.365-1.484c0.012-0.467-0.039-0.759-0.156-0.831c-0.118-0.072-0.303,0.074-0.559,0.485c-0.543,0.875-1.722,1.261-2.821,1.397c-1.099,0.138-2.123,0.028-2.664-0.578c-0.186-0.207-0.492,0.058-0.529,0.111c-0.049,0.074,0.18,0.219,0.352,0.533c0.251,0.461,0.49,1.159-0.105,1.479C12.83,26.314,12.316,26.221,11.791,25.229L11.791,25.229zM11.398,25.188c0.395,0.621,1.783,3.232-0.652,3.571c-0.814,0.114-2.125-0.474-3.396-0.784c-1.142-0.279-2.301-0.444-2.949-0.627c-0.391-0.108-0.554-0.25-0.588-0.414c-0.091-0.434,0.474-1.041,0.503-1.555c0.028-0.514-0.188-0.779-0.364-1.199c-0.177-0.42-0.224-0.734-0.081-0.914c0.109-0.141,0.334-0.199,0.698-0.164c0.462,0.047,1.02-0.049,1.319-0.23c0.505-0.309,0.742-0.939,0.516-1.699c0,0.744-0.244,1.025-0.855,1.366c-0.577,0.319-1.467,0.062-1.875,0.416c-0.492,0.427,0.175,1.528,0.12,2.338c-0.042,0.622-0.69,1.322-0.401,1.946c0.291,0.627,1.648,0.695,3.064,0.99c2.012,0.422,3.184,1.153,4.113,1.188c1.356,0.05,1.564-1.342,3.693-1.36c0.621-0.033,1.229-0.052,1.835-0.06c0.688-0.009,1.375-0.003,2.079,0.014c1.417,0.034,0.931,0.773,1.851,1.246c0.774,0.397,2.17,0.241,2.504-0.077c0.451-0.431,1.662-1.467,2.592-1.935c1.156-0.583,3.876-1.588,1.902-2.812c-0.461-0.285-1.547-0.588-1.639-2.676c-0.412,0.366-0.365,2.312,0.784,2.697c1.283,0.431,2.085,1.152-0.301,1.969c-1.58,0.54-1.849,0.706-3.099,1.747c-1.267,1.054-3.145,0.636-2.815-1.582c0.171-1.155,0.269-2.11-0.019-3.114c-0.142-0.49-0.211-1.119-0.114-1.562c0.187-0.858,0.651-1.117,1.106-0.293c0.285,0.519,0.385,1.122,1.408,1.171c1.607,0.077,1.926-1.553,2.439-1.627c0.343-0.05,0.686-1.02,0.425-2.589c-0.28-1.681-1.269-4.332-2.536-5.677c-1.053-1.118-1.717-2.098-2.135-3.497c-0.352-1.175-0.547-2.318-0.475-3.412c0.094-1.417-0.691-3.389-1.943-4.316c-0.782-0.581-2.011-0.893-3.122-0.88c-0.623,0.007-1.21,0.099-1.661,0.343c-1.855,1.008-2.113,2.445-2.086,4.088c0.025,1.543,0.078,3.303,0.254,4.977c-0.208,0.77-1.288,2.227-1.979,3.114C8.59,14.233,8.121,16.01,7.52,17.561c-0.321,0.828-0.862,1.2-0.908,2.265C6.6,20.122,6.61,20.891,6.894,20.672C7.98,19.829,9.343,21.95,11.398,25.188L11.398,25.188zM17.044,2.953c-0.06,0.176-0.3,0.321-0.146,0.443c0.152,0.123,0.24-0.171,0.549-0.281c0.08-0.028,0.449,0.012,0.519-0.164c0.03-0.077-0.19-0.164-0.321-0.291c-0.133-0.125-0.262-0.236-0.386-0.229C16.938,2.451,17.096,2.798,17.044,2.953L17.044,2.953zM18.934,9.35c0.115-0.121,0.174,0.207,0.483,0.402c0.244,0.154,0.481,0.04,0.545,0.354c0.044,0.225-0.097,0.467-0.284,0.436C19.35,10.486,18.596,9.705,18.934,9.35L18.934,9.35zM13.832,7.375c-0.508-0.037-0.543,0.33-0.375,0.324C13.629,7.693,13.523,7.408,13.832,7.375L13.832,7.375zM12.96,6.436c0.06-0.013,0.146,0.09,0.119,0.233c-0.037,0.199-0.021,0.324,0.117,0.325c0.022,0,0.048-0.005,0.056-0.057c0.066-0.396-0.14-0.688-0.225-0.711C12.834,6.178,12.857,6.458,12.96,6.436L12.96,6.436zM16.663,6.268c0.129,0.039,0.253,0.262,0.28,0.504c0.002,0.021,0.168-0.035,0.17-0.088c0.011-0.389-0.321-0.571-0.408-0.562C16.506,6.139,16.562,6.238,16.663,6.268L16.663,6.268zM14.765,7.423c0.463-0.214,0.625,0.118,0.465,0.171C15.066,7.648,15.065,7.345,14.765,7.423L14.765,7.423zM9.178,15.304c-0.219-0.026,0.063-0.19,0.184-0.397c0.131-0.227,0.105-0.511,0.244-0.469s0.061,0.2-0.033,0.461C9.491,15.121,9.258,15.313,9.178,15.304L9.178,15.304z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.List();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.List = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.List.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.List\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.082,4.083v2.999h22.835V4.083H4.082zM4.082,20.306h22.835v-2.999H4.082V20.306zM4.082,13.694h22.835v-2.999H4.082V13.694zM4.082,26.917h22.835v-2.999H4.082V26.917z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Location();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Location = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Location.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Location\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,3.5c-4.142,0-7.5,3.358-7.5,7.5c0,4.143,7.5,18.121,7.5,18.121S23.5,15.143,23.5,11C23.5,6.858,20.143,3.5,16,3.5z M16,14.584c-1.979,0-3.584-1.604-3.584-3.584S14.021,7.416,16,7.416S19.584,9.021,19.584,11S17.979,14.584,16,14.584z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Lock();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Lock = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Lock.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Lock\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.335,12.833V9.999h-0.001C22.333,6.501,19.498,3.666,16,3.666S9.666,6.502,9.666,10h0v2.833H7.375V25h17.25V12.833H22.335zM11.667,10C11.667,10,11.667,10,11.667,10c0-2.39,1.944-4.334,4.333-4.334c2.391,0,4.335,1.944,4.335,4.333c0,0,0,0,0,0v2.834h-8.668V10z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Locked();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Locked = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Locked.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Locked\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.711,14.085L16.914,4.29c-0.778-0.778-2.051-0.778-2.829,0L4.29,14.086c-0.778,0.778-0.778,2.05,0,2.829l9.796,9.796c0.778,0.777,2.051,0.777,2.829,0l9.797-9.797C27.488,16.136,27.488,14.863,26.711,14.085zM8.218,16.424c-0.4-0.153-0.687-0.533-0.687-0.987s0.287-0.834,0.687-0.987V16.424zM8.969,16.424v-1.974c0.4,0.152,0.687,0.533,0.687,0.987S9.369,16.272,8.969,16.424zM13.5,19.188l1.203-3.609c-0.689-0.306-1.172-0.994-1.172-1.797c0-1.087,0.881-1.969,1.969-1.969c1.087,0,1.969,0.881,1.969,1.969c0,0.803-0.482,1.491-1.172,1.797l1.203,3.609H13.5zM22.03,16.549c-0.399-0.152-0.687-0.533-0.687-0.986s0.287-0.834,0.687-0.987V16.549zM22.781,16.549v-1.973c0.4,0.152,0.688,0.533,0.688,0.987S23.182,16.397,22.781,16.549z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Magic();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Magic = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Magic.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Magic\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.043,4.649l-0.404-2.312l-1.59,1.727l-2.323-0.33l1.151,2.045l-1.032,2.108l2.302-0.463l1.686,1.633l0.271-2.332l2.074-1.099L23.043,4.649zM26.217,18.198l-0.182-1.25l-0.882,0.905l-1.245-0.214l0.588,1.118l-0.588,1.118l1.245-0.214l0.882,0.905l0.182-1.25l1.133-0.56L26.217,18.198zM4.92,7.672L5.868,7.3l0.844,0.569L6.65,6.853l0.802-0.627L6.467,5.97L6.118,5.013L5.571,5.872L4.553,5.908l0.647,0.786L4.92,7.672zM10.439,10.505l1.021-1.096l1.481,0.219l-0.727-1.31l0.667-1.341l-1.47,0.287l-1.069-1.048L10.16,7.703L8.832,8.396l1.358,0.632L10.439,10.505zM17.234,12.721c-0.588-0.368-1.172-0.618-1.692-0.729c-0.492-0.089-1.039-0.149-1.425,0.374L2.562,30.788h6.68l9.669-15.416c0.303-0.576,0.012-1.041-0.283-1.447C18.303,13.508,17.822,13.09,17.234,12.721zM13.613,21.936c-0.254-0.396-0.74-0.857-1.373-1.254c-0.632-0.396-1.258-0.634-1.726-0.69l4.421-7.052c0.064-0.013,0.262-0.021,0.543,0.066c0.346,0.092,0.785,0.285,1.225,0.562c0.504,0.313,0.908,0.677,1.133,0.97c0.113,0.145,0.178,0.271,0.195,0.335c0.002,0.006,0.004,0.011,0.004,0.015L13.613,21.936z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Magnet();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Magnet = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Magnet.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Magnet\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.812,19.5h5.002v-6.867c-0.028-1.706-0.61-3.807-2.172-5.841c-1.539-2.014-4.315-3.72-7.939-3.687C12.076,3.073,9.3,4.779,7.762,6.792C6.2,8.826,5.617,10.928,5.588,12.634V19.5h5v-6.866c-0.027-0.377,0.303-1.789,1.099-2.748c0.819-0.979,1.848-1.747,4.014-1.778c2.165,0.032,3.195,0.799,4.013,1.778c0.798,0.959,1.126,2.372,1.099,2.748V19.5L20.812,19.5zM25.814,25.579c0,0,0-2.354,0-5.079h-5.002c0,2.727,0,5.08,0,5.08l5.004-0.001H25.814zM5.588,25.58h5c0,0,0-2.354,0-5.08h-5C5.588,23.227,5.588,25.58,5.588,25.58z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Mail();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Mail = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Mail.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Mail\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.516,7.167H3.482l12.517,7.108L28.516,7.167zM16.74,17.303C16.51,17.434,16.255,17.5,16,17.5s-0.51-0.066-0.741-0.197L2.5,10.06v14.773h27V10.06L16.74,17.303z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Man();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Man = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Man.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Man\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.021,16.349c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.103,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.55,0.307,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.932,1.139,5.307,2.543,5.307c0.846,0,1.265-0.865,1.466-2.189c0.201,1.324,0.62,2.189,1.463,2.189c1.406,0,2.545-2.375,2.545-5.307c0-0.66-0.061-1.291-0.168-1.873c0.598,0.574,1.174,0.803,1.725,0.496C22.602,21.541,22.443,18.912,21.021,16.349zM15.808,13.757c2.362,0,4.278-1.916,4.278-4.279s-1.916-4.279-4.278-4.279c-2.363,0-4.28,1.916-4.28,4.279S13.445,13.757,15.808,13.757z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Merge();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Merge = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Merge.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Merge\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.342,15.5l-7.556-4.363v2.613h-1.411c-0.788-0.01-1.331-0.241-2.019-0.743c-1.021-0.745-2.094-2.181-3.551-3.568C13.367,8.06,11.291,6.73,8.5,6.749H2.812v3.5H8.5c2.231,0.012,3.441,1.185,5.07,2.934c0.697,0.753,1.428,1.58,2.324,2.323c-1.396,1.165-2.412,2.516-3.484,3.501c-1.183,1.081-2.202,1.723-3.912,1.741H2.813v3.5h5.716c3.752,0.001,6.035-2.319,7.619-4.066c0.817-0.895,1.537-1.691,2.209-2.191c0.686-0.502,1.23-0.732,2.017-0.742h1.412v2.614L29.342,15.5z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Mic();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Mic = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Mic.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Mic\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,21.125c2.682,0,4.875-2.25,4.875-5V5.875c0-2.75-2.193-5-4.875-5s-4.875,2.25-4.875,5v10.25C10.625,18.875,12.818,21.125,15.5,21.125zM21.376,11v5.125c0,3.308-2.636,6-5.876,6s-5.875-2.691-5.875-6V11H6.626v5.125c0,4.443,3.194,8.132,7.372,8.861v2.139h-3.372v3h9.749v-3h-3.376v-2.139c4.181-0.727,7.375-4.418,7.375-8.861V11H21.376z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.MicMute();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.MicMute = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.MicMute.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.MicMute\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.121,18.529c-0.317-0.736-0.496-1.549-0.496-2.404V11H6.626v5.125c0,1.693,0.466,3.275,1.272,4.627L10.121,18.529zM20.375,8.276V5.875c0-2.75-2.193-5-4.875-5s-4.875,2.25-4.875,5v10.25c0,0.568,0.113,1.105,0.285,1.615L20.375,8.276zM21.376,12.931v3.195c0,3.308-2.636,6-5.876,6c-0.958,0-1.861-0.24-2.661-0.657l-2.179,2.179c0.995,0.659,2.123,1.128,3.338,1.34v2.139h-3.372v3h9.749v-3h-3.376v-2.139c4.181-0.727,7.375-4.418,7.375-8.861V11h-1.068L21.376,12.931zM20.375,16.125v-2.194l-6.788,6.788c0.588,0.26,1.234,0.405,1.913,0.405C18.182,21.125,20.375,18.875,20.375,16.125zM25.542,4.522L4.855,25.209l1.415,1.416L26.956,5.937L25.542,4.522z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Minus();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Minus = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Minus.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Minus\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.979,12.896,5.979,12.896,5.979,19.562,25.979,19.562z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.NewWindow();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.NewWindow = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.NewWindow.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.NewWindow\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M5.896,5.333V21.25h23.417V5.333H5.896zM26.312,18.25H8.896V8.334h17.417V18.25L26.312,18.25zM4.896,9.542H1.687v15.917h23.417V22.25H4.896V9.542z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.No();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.No = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.No.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.No\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,2.939C9.006,2.942,3.338,8.61,3.335,15.605C3.335,22.6,9.005,28.268,16,28.27c6.994-0.002,12.662-5.67,12.664-12.664C28.663,8.61,22.995,2.939,16,2.939zM25.663,15.605c-0.003,1.943-0.583,3.748-1.569,5.264L10.736,7.513c1.515-0.988,3.32-1.569,5.265-1.573C21.337,5.951,25.654,10.269,25.663,15.605zM6.335,15.605c0.004-1.943,0.584-3.75,1.573-5.266l13.355,13.357c-1.516,0.986-3.32,1.566-5.264,1.569C10.664,25.26,6.346,20.941,6.335,15.605z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.NoMagnet();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.NoMagnet = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.NoMagnet.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.NoMagnet\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.59,17.857v-5.225c-0.027-0.376,0.303-1.789,1.099-2.748c0.819-0.979,1.849-1.748,4.014-1.778c1.704,0.026,2.699,0.508,3.447,1.189l3.539-3.539c-1.616-1.526-4.01-2.679-6.986-2.652C12.077,3.073,9.3,4.779,7.762,6.793C6.2,8.826,5.617,10.928,5.59,12.634V19.5h3.357L10.59,17.857zM5.59,20.5v2.357L7.947,20.5H5.59zM20.812,13.29v6.21h5.002v-6.866c-0.021-1.064-0.252-2.283-0.803-3.542L20.812,13.29zM25.339,4.522L4.652,25.209l1.415,1.416L26.753,5.937L25.339,4.522zM20.812,25.58h5.002c0,0,0-2.354,0-5.08h-5.002C20.812,23.227,20.812,25.58,20.812,25.58zM10.59,25.58c0,0,0-0.827,0-2.064L8.525,25.58H10.59z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.NodeJs();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.NodeJs = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.NodeJs.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.NodeJs\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.783,4.458L2.59,3.196C2.553,3.174,2.511,3.163,2.469,3.161H2.447C2.405,3.163,2.363,3.174,2.326,3.196L0.133,4.458C0.051,4.505,0,4.593,0,4.688l0.005,3.398c0,0.047,0.024,0.092,0.066,0.114c0.041,0.024,0.091,0.024,0.132,0l1.303-0.746c0.083-0.049,0.132-0.136,0.132-0.229V5.637c0-0.095,0.05-0.183,0.132-0.229l0.555-0.32c0.041-0.023,0.086-0.035,0.132-0.035c0.045,0,0.092,0.012,0.132,0.035l0.555,0.32c0.082,0.047,0.133,0.135,0.133,0.229v1.588c0,0.094,0.051,0.182,0.132,0.229l1.303,0.746c0.041,0.024,0.092,0.024,0.132,0c0.041-0.022,0.066-0.067,0.066-0.114l0.004-3.398C4.915,4.593,4.865,4.505,4.783,4.458zM17.93,0.745l-1.305-0.729c-0.042-0.023-0.091-0.022-0.132,0.001c-0.041,0.024-0.065,0.067-0.065,0.114v3.365c0,0.033-0.018,0.064-0.046,0.081s-0.064,0.017-0.093,0l-0.549-0.316c-0.082-0.047-0.183-0.047-0.265,0l-2.193,1.266c-0.082,0.047-0.133,0.135-0.133,0.229V7.29c0,0.095,0.051,0.182,0.132,0.229l2.194,1.267c0.082,0.048,0.183,0.048,0.265,0l2.194-1.267c0.082-0.048,0.133-0.135,0.133-0.229V0.977C18.066,0.88,18.014,0.792,17.93,0.745zM16.421,6.458c0,0.023-0.013,0.045-0.033,0.057l-0.753,0.435c-0.021,0.012-0.045,0.012-0.066,0l-0.753-0.435c-0.021-0.012-0.033-0.034-0.033-0.057v-0.87c0-0.023,0.013-0.045,0.033-0.058l0.753-0.435c0.021-0.012,0.045-0.012,0.066,0l0.753,0.435c0.021,0.012,0.033,0.034,0.033,0.058V6.458zM24.473,4.493l-2.18-1.266c-0.082-0.047-0.183-0.048-0.265,0l-2.193,1.266c-0.082,0.047-0.132,0.135-0.132,0.229v2.532c0,0.096,0.051,0.184,0.133,0.23l2.18,1.242c0.08,0.045,0.179,0.046,0.26,0.001l1.318-0.732c0.042-0.023,0.067-0.067,0.068-0.115c0-0.048-0.025-0.092-0.066-0.116l-2.207-1.266c-0.041-0.023-0.066-0.067-0.066-0.115V5.59c0-0.047,0.025-0.091,0.065-0.115l0.688-0.396c0.041-0.024,0.091-0.024,0.132,0l0.688,0.396c0.041,0.023,0.066,0.067,0.066,0.115v0.625c0,0.047,0.025,0.091,0.066,0.114c0.041,0.024,0.092,0.024,0.132,0l1.314-0.764c0.081-0.047,0.132-0.135,0.132-0.229V4.722C24.605,4.628,24.555,4.541,24.473,4.493zM11.363,4.48L9.169,3.214c-0.082-0.047-0.183-0.047-0.265,0L6.711,4.48C6.629,4.527,6.579,4.615,6.579,4.709v2.534c0,0.095,0.051,0.182,0.133,0.229l2.193,1.267c0.082,0.048,0.183,0.048,0.265,0l2.193-1.267c0.082-0.048,0.132-0.135,0.132-0.229V4.709C11.495,4.615,11.445,4.527,11.363,4.48zM31.019,4.382L28.95,3.187c-0.13-0.074-0.304-0.074-0.435,0l-2.068,1.195c-0.135,0.077-0.218,0.222-0.218,0.377v2.386c0,0.156,0.083,0.301,0.218,0.378l0.542,0.312c0.263,0.13,0.356,0.13,0.477,0.13c0.389,0,0.612-0.236,0.612-0.646V4.962c0-0.033-0.027-0.06-0.06-0.06h-0.263c-0.033,0-0.061,0.026-0.061,0.06v2.356c0,0.182-0.188,0.363-0.495,0.209l-0.566-0.326c-0.021-0.012-0.033-0.033-0.033-0.057V4.759c0-0.023,0.013-0.045,0.033-0.057l2.067-1.193c0.019-0.011,0.044-0.011,0.063,0l2.067,1.193c0.02,0.012,0.032,0.034,0.032,0.057v2.386c0,0.023-0.013,0.046-0.032,0.057l-2.068,1.193c-0.018,0.012-0.045,0.012-0.063,0l-0.53-0.314c-0.017-0.01-0.036-0.013-0.052-0.004c-0.146,0.083-0.175,0.094-0.312,0.143c-0.034,0.012-0.084,0.031,0.019,0.09l0.691,0.408c0.065,0.038,0.141,0.059,0.217,0.059s0.151-0.021,0.218-0.059l2.068-1.194c0.134-0.078,0.217-0.222,0.217-0.378V4.759C31.235,4.604,31.152,4.459,31.019,4.382zM29.371,6.768c-0.548,0-0.668-0.138-0.708-0.41c-0.005-0.029-0.029-0.051-0.06-0.051h-0.268c-0.033,0-0.06,0.026-0.06,0.06c0,0.349,0.189,0.765,1.095,0.765c0.655,0,1.031-0.259,1.031-0.709c0-0.447-0.302-0.566-0.938-0.65c-0.643-0.085-0.708-0.128-0.708-0.279c0-0.125,0.056-0.29,0.531-0.29c0.425,0,0.581,0.091,0.646,0.378c0.006,0.027,0.03,0.047,0.059,0.047h0.269c0.017,0,0.032-0.007,0.044-0.019c0.011-0.013,0.017-0.029,0.016-0.046c-0.042-0.493-0.37-0.723-1.032-0.723c-0.59,0-0.941,0.249-0.941,0.666c0,0.453,0.35,0.578,0.916,0.634c0.677,0.066,0.729,0.166,0.729,0.298C29.992,6.669,29.807,6.768,29.371,6.768zM22.128,5.446l-0.42,0.243c-0.016,0.009-0.025,0.026-0.025,0.044v0.486c0,0.019,0.01,0.035,0.025,0.044l0.42,0.243c0.016,0.009,0.035,0.009,0.052,0l0.421-0.243c0.016-0.009,0.025-0.025,0.025-0.044V5.733c0-0.018-0.01-0.035-0.025-0.044L22.18,5.446C22.163,5.438,22.144,5.438,22.128,5.446z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Notebook();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Notebook = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Notebook.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Notebook\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.875,1.375H8c-1.033,0-1.874,0.787-1.979,1.792h1.604c1.102,0,2,0.898,2,2c0,1.102-0.898,2-2,2H6v0.999h1.625c1.104,0,2.002,0.898,2.002,2.002c0,1.104-0.898,2.001-2.002,2.001H6v0.997h1.625c1.102,0,2,0.898,2,2c0,1.104-0.898,2.004-2,2.004H6v0.994h1.625c1.102,0,2,0.898,2,2.002s-0.898,2.002-2,2.002H6v0.997h1.624c1.104,0,2.002,0.897,2.002,2.001c0,1.104-0.898,2.002-2.002,2.002H6.004C6.027,28.252,6.91,29.125,8,29.125h16.875c1.104,0,2-0.896,2-2V3.375C26.875,2.271,25.979,1.375,24.875,1.375zM25.25,8.375c0,0.552-0.447,1-1,1H14c-0.553,0-1-0.448-1-1V4c0-0.552,0.447-1,1-1h10.25c0.553,0,1,0.448,1,1V8.375zM8.625,25.166c0-0.554-0.449-1.001-1-1.001h-3.25c-0.552,0-1,0.447-1,1.001c0,0.552,0.449,1,1,1h3.25C8.176,26.166,8.625,25.718,8.625,25.166zM4.375,6.166h3.251c0.551,0,0.999-0.448,0.999-0.999c0-0.555-0.448-1-0.999-1H4.375c-0.553,0-1,0.445-1,1C3.374,5.718,3.822,6.166,4.375,6.166zM4.375,11.167h3.25c0.553,0,1-0.448,1-1s-0.448-1-1-1h-3.25c-0.553,0-1,0.448-1,1S3.822,11.167,4.375,11.167zM4.375,16.167h3.25c0.551,0,1-0.448,1-1.001s-0.448-0.999-1-0.999h-3.25c-0.553,0-1.001,0.446-1.001,0.999S3.822,16.167,4.375,16.167zM3.375,20.165c0,0.553,0.446,1.002,1,1.002h3.25c0.551,0,1-0.449,1-1.002c0-0.552-0.448-1-1-1h-3.25C3.821,19.165,3.375,19.613,3.375,20.165z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Noview();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Noview = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Noview.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Noview\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M11.478,17.568c-0.172-0.494-0.285-1.017-0.285-1.568c0-2.65,2.158-4.807,4.807-4.807c0.552,0,1.074,0.113,1.568,0.285l2.283-2.283C18.541,8.647,17.227,8.286,16,8.286C8.454,8.286,2.5,16,2.5,16s2.167,2.791,5.53,5.017L11.478,17.568zM23.518,11.185l-3.056,3.056c0.217,0.546,0.345,1.138,0.345,1.76c0,2.648-2.158,4.807-4.807,4.807c-0.622,0-1.213-0.128-1.76-0.345l-2.469,2.47c1.327,0.479,2.745,0.783,4.229,0.783c5.771,0,13.5-7.715,13.5-7.715S26.859,13.374,23.518,11.185zM25.542,4.917L4.855,25.604L6.27,27.02L26.956,6.332L25.542,4.917z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Opera();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Opera = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Opera.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Opera\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.954,2.046c-7.489,0-12.872,5.432-12.872,13.581c0,7.25,5.234,13.835,12.873,13.835c7.712,0,12.974-6.583,12.974-13.835C28.929,7.413,23.375,2.046,15.954,2.046zM15.952,26.548L15.952,26.548c-2.289,0-3.49-1.611-4.121-3.796c-0.284-1.037-0.458-2.185-0.563-3.341c-0.114-1.374-0.129-2.773-0.129-4.028c0-0.993,0.018-1.979,0.074-2.926c0.124-1.728,0.386-3.431,0.89-4.833c0.694-1.718,1.871-2.822,3.849-2.822c2.5,0,3.763,1.782,4.385,4.322c0.429,1.894,0.56,4.124,0.56,6.274c0,2.299-0.103,5.153-0.763,7.442C19.473,24.979,18.242,26.548,15.952,26.548z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Package();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Package = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Package.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Package\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M17.078,22.004l-1.758-4.129l-2.007,4.752l-7.519-3.289l0.174,3.905l9.437,4.374l10.909-5.365l-0.149-4.989L17.078,22.004zM29.454,6.619L18.521,3.383l-3.006,2.671l-3.091-2.359L1.546,8.199l3.795,3.048l-3.433,5.302l10.879,4.757l2.53-5.998l2.257,5.308l11.393-5.942l-3.105-4.709L29.454,6.619zM15.277,14.579l-9.059-3.83l9.275-4.101l9.608,3.255L15.277,14.579z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Page();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Page = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Page.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Page\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.024,5.673c-1.744-1.694-3.625-3.051-5.168-3.236c-0.084-0.012-0.171-0.019-0.263-0.021H7.438c-0.162,0-0.322,0.063-0.436,0.18C6.889,2.71,6.822,2.87,6.822,3.033v25.75c0,0.162,0.063,0.317,0.18,0.435c0.117,0.116,0.271,0.179,0.436,0.179h18.364c0.162,0,0.317-0.062,0.434-0.179c0.117-0.117,0.182-0.272,0.182-0.435V11.648C26.382,9.659,24.824,7.49,23.024,5.673zM25.184,28.164H8.052V3.646h9.542v0.002c0.416-0.025,0.775,0.386,1.05,1.326c0.25,0.895,0.313,2.062,0.312,2.871c0.002,0.593-0.027,0.991-0.027,0.991l-0.049,0.652l0.656,0.007c0.003,0,1.516,0.018,3,0.355c1.426,0.308,2.541,0.922,2.645,1.617c0.004,0.062,0.005,0.124,0.004,0.182V28.164z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Page2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Page2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Page2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Page2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.024,5.673c-1.744-1.694-3.625-3.051-5.168-3.236c-0.084-0.012-0.171-0.019-0.263-0.021H7.438c-0.162,0-0.322,0.063-0.436,0.18C6.889,2.71,6.822,2.87,6.822,3.033v25.75c0,0.162,0.063,0.317,0.18,0.435c0.117,0.116,0.271,0.179,0.436,0.179h18.364c0.162,0,0.317-0.062,0.434-0.179c0.117-0.117,0.182-0.272,0.182-0.435V11.648C26.382,9.659,24.824,7.49,23.024,5.673zM22.157,6.545c0.805,0.786,1.529,1.676,2.069,2.534c-0.468-0.185-0.959-0.322-1.42-0.431c-1.015-0.228-2.008-0.32-2.625-0.357c0.003-0.133,0.004-0.283,0.004-0.446c0-0.869-0.055-2.108-0.356-3.2c-0.003-0.01-0.005-0.02-0.009-0.03C20.584,5.119,21.416,5.788,22.157,6.545zM25.184,28.164H8.052V3.646h9.542v0.002c0.416-0.025,0.775,0.386,1.05,1.326c0.25,0.895,0.313,2.062,0.312,2.871c0.002,0.593-0.027,0.991-0.027,0.991l-0.049,0.652l0.656,0.007c0.003,0,1.516,0.018,3,0.355c1.426,0.308,2.541,0.922,2.645,1.617c0.004,0.062,0.005,0.124,0.004,0.182V28.164z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Pallete();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Pallete = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Pallete.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Pallete\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.653,7.25c-3.417,0-8.577,0.983-8.577,3.282c0,1.91,2.704,3.229,1.691,3.889c-1.02,0.666-2.684-1.848-4.048-1.848c-1.653,0-2.815,1.434-2.815,2.926c0,4.558,6.326,8.25,13.749,8.25c7.424,0,13.443-3.692,13.443-8.25C29.096,10.944,23.077,7.25,15.653,7.25zM10.308,13.521c0-0.645,0.887-1.166,1.98-1.166c1.093,0,1.979,0.521,1.979,1.166c0,0.644-0.886,1.166-1.979,1.166C11.195,14.687,10.308,14.164,10.308,13.521zM14.289,22.299c-1.058,0-1.914-0.68-1.914-1.518s0.856-1.518,1.914-1.518c1.057,0,1.914,0.68,1.914,1.518S15.346,22.299,14.289,22.299zM19.611,21.771c-1.057,0-1.913-0.681-1.913-1.519c0-0.84,0.856-1.521,1.913-1.521c1.059,0,1.914,0.681,1.914,1.521C21.525,21.092,20.67,21.771,19.611,21.771zM20.075,10.66c0-0.838,0.856-1.518,1.914-1.518s1.913,0.68,1.913,1.518c0,0.839-0.855,1.518-1.913,1.518C20.934,12.178,20.075,11.499,20.075,10.66zM24.275,19.482c-1.057,0-1.914-0.681-1.914-1.519s0.857-1.518,1.914-1.518c1.059,0,1.914,0.68,1.914,1.518S25.334,19.482,24.275,19.482zM25.286,15.475c-1.058,0-1.914-0.68-1.914-1.519c0-0.838,0.856-1.518,1.914-1.518c1.057,0,1.913,0.68,1.913,1.518C27.199,14.795,26.343,15.475,25.286,15.475z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Palm();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Palm = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Palm.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Palm\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.296,27.885v-2.013c0,0-0.402-1.408-1.073-2.013c-0.671-0.604-1.274-1.274-1.409-1.61c0,0-0.268,0.135-0.737-0.335s-1.812-2.616-1.812-2.616l-0.671-0.872c0,0-0.47-0.671-1.275-1.342c-0.805-0.672-0.938-0.067-1.476-0.738s0.604-1.275,1.006-1.409c0.403-0.134,1.946,0.134,2.684,0.872c0.738,0.738,0.738,0.738,0.738,0.738l1.073,1.141l0.537,0.201l0.671-1.073l-0.269-2.281c0,0-0.604-2.55-0.737-4.764c-0.135-2.214-0.47-5.703,1.006-5.837s1.007,2.55,1.073,3.489c0.067,0.938,0.806,5.232,1.208,5.568c0.402,0.335,0.671,0.066,0.671,0.066l0.402-7.514c0,0-0.479-2.438,1.073-2.549c0.939-0.067,0.872,1.543,0.872,2.147c0,0.604,0.269,7.514,0.269,7.514l0.537,0.135c0,0,0.402-2.214,0.604-3.153s0.604-2.416,0.537-3.087c-0.067-0.671-0.135-2.348,1.006-2.348s0.872,1.812,0.939,2.415s-0.134,3.153-0.134,3.757c0,0.604-0.738,3.623-0.537,3.824s2.08-2.817,2.349-3.958c0.268-1.141,0.201-3.02,1.408-2.885c1.208,0.134,0.47,2.817,0.402,3.086c-0.066,0.269-0.671,2.349-0.872,2.952s-0.805,1.476-1.006,2.013s0.402,2.349,0,4.629c-0.402,2.281-1.61,5.166-1.61,5.166l0.604,2.08c0,0-1.744,0.671-3.824,0.805C16.443,28.221,14.296,27.885,14.296,27.885z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Paper();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Paper = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Paper.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Paper\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.916,8.009L15.953,1.888c-0.251-0.119-0.548-0.115-0.798,0.008c-0.25,0.125-0.433,0.357-0.491,0.629c-0.002,0.01-1.04,4.83-2.578,9.636c-0.526,1.646-1.114,3.274-1.728,4.704l1.665,0.786c2-4.643,3.584-11.052,4.181-13.614l11.264,5.316c-0.346,1.513-1.233,5.223-2.42,8.927c-0.767,2.399-1.665,4.797-2.585,6.532c-0.889,1.79-1.958,2.669-2.197,2.552c-1.419,0.03-2.418-1.262-3.09-2.918c-0.32-0.803-0.53-1.63-0.657-2.246c-0.127-0.618-0.166-1.006-0.168-1.006c-0.034-0.317-0.232-0.597-0.52-0.731l-12.962-6.12c-0.301-0.142-0.654-0.11-0.925,0.081c-0.27,0.193-0.416,0.518-0.38,0.847c0.008,0.045,0.195,1.848,0.947,3.736c0.521,1.321,1.406,2.818,2.845,3.575l12.956,6.131l0.006-0.013c0.562,0.295,1.201,0.487,1.947,0.496c1.797-0.117,2.777-1.668,3.818-3.525c3-5.69,5.32-16.602,5.338-16.642C29.512,8.615,29.302,8.19,28.916,8.009z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Parent();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Parent = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Parent.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Parent\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.423,12.17c-0.875,0.641-1.941,1.031-3.102,1.031c-1.164,0-2.231-0.391-3.104-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.549,0.312,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.938,1.139,5.312,2.543,5.312c0.846,0,1.265-0.865,1.466-2.188c0.2,1.314,0.62,2.188,1.461,2.188c1.396,0,2.545-2.375,2.545-5.312c0-0.66-0.062-1.291-0.168-1.873c0.6,0.574,1.176,0.812,1.726,0.496c1.227-0.682,1.068-3.311-0.354-5.874C15.921,13.689,15.173,12.795,14.423,12.17zM11.32,12.201c2.361,0,4.277-1.916,4.277-4.279s-1.916-4.279-4.277-4.279c-2.363,0-4.28,1.916-4.28,4.279S8.957,12.201,11.32,12.201zM21.987,17.671c1.508,0,2.732-1.225,2.732-2.735c0-1.51-1.225-2.735-2.732-2.735c-1.511,0-2.736,1.225-2.736,2.735C19.251,16.446,20.477,17.671,21.987,17.671zM25.318,19.327c-0.391-0.705-0.869-1.277-1.349-1.677c-0.56,0.41-1.24,0.659-1.982,0.659c-0.744,0-1.426-0.25-1.983-0.659c-0.479,0.399-0.958,0.972-1.35,1.677c-0.909,1.638-1.009,3.318-0.224,3.754c0.351,0.2,0.721,0.05,1.101-0.317c-0.067,0.372-0.105,0.775-0.105,1.197c0,1.878,0.728,3.396,1.625,3.396c0.54,0,0.808-0.553,0.937-1.398c0.128,0.841,0.396,1.398,0.934,1.398c0.893,0,1.627-1.518,1.627-3.396c0-0.422-0.04-0.825-0.107-1.197c0.383,0.367,0.752,0.52,1.104,0.317C26.328,22.646,26.227,20.965,25.318,19.327z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Pc();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Pc = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Pc.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Pc\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.249,3.14h-9.188l-0.459,0.459v18.225l0.33,2.389H19.57v0.245h-0.307v-0.306h-0.611v0.244h-0.311v-0.367h-0.486v0.307h-1.104l-2.022-0.367v-0.92h0.858l0.302-1.47h2.728c0.188,0,0.339-0.152,0.339-0.339V7.828c0-0.187-0.149-0.338-0.339-0.338H1.591c-0.187,0-0.339,0.152-0.339,0.338V21.24c0,0.187,0.152,0.339,0.339,0.339h3.016l0.199,1.47h1.409l-3.4,3.4L2.11,27.951c0,0,2.941,1.102,6.678,1.102c3.737,0,9.679-0.857,10.476-0.857s4.84,0,4.84,0v-1.225l-0.137-1.068h1.744c-0.2,0.106-0.322,0.244-0.322,0.396v0.979c0,0.341,0.604,0.613,1.352,0.613c0.742,0,1.348-0.272,1.348-0.613v-0.979c0-0.339-0.604-0.611-1.348-0.611c-0.188,0-0.364,0.019-0.525,0.049v-0.17h-2.29l-0.055-0.432h5.382L29.249,3.14L29.249,3.14zM2.478,20.17V8.714h15.07V20.17H2.478z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Pen();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Pen = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Pen.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Pen\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M13.587,12.074c-0.049-0.074-0.11-0.147-0.188-0.202c-0.333-0.243-0.803-0.169-1.047,0.166c-0.244,0.336-0.167,0.805,0.167,1.048c0.303,0.22,0.708,0.167,0.966-0.091l-7.086,9.768l-2.203,7.997l6.917-4.577L26.865,4.468l-4.716-3.42l-1.52,2.096c-0.087-0.349-0.281-0.676-0.596-0.907c-0.73-0.529-1.751-0.369-2.28,0.363C14.721,6.782,16.402,7.896,13.587,12.074zM10.118,25.148L6.56,27.503l1.133-4.117L10.118,25.148zM14.309,11.861c2.183-3.225,1.975-4.099,3.843-6.962c0.309,0.212,0.664,0.287,1.012,0.269L14.309,11.861z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Pensil();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Pensil = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Pensil.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Pensil\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.31,2.872l-3.384-2.127c-0.854-0.536-1.979-0.278-2.517,0.576l-1.334,2.123l6.474,4.066l1.335-2.122C26.42,4.533,26.164,3.407,25.31,2.872zM6.555,21.786l6.474,4.066L23.581,9.054l-6.477-4.067L6.555,21.786zM5.566,26.952l-0.143,3.819l3.379-1.787l3.14-1.658l-6.246-3.925L5.566,26.952z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.People();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.People = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.People.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.People\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.066,20.667c1.227-0.682,1.068-3.311-0.354-5.874c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.102,1.031c-1.164,0-2.231-0.391-3.104-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.578,5.192-0.35,5.874c0.549,0.312,1.127,0.078,1.723-0.496c-0.105,0.582-0.166,1.213-0.166,1.873c0,2.938,1.139,5.312,2.543,5.312c0.846,0,1.265-0.865,1.466-2.188c0.2,1.314,0.62,2.188,1.461,2.188c1.396,0,2.545-2.375,2.545-5.312c0-0.66-0.062-1.291-0.168-1.873C19.939,20.745,20.516,20.983,21.066,20.667zM15.5,12.201c2.361,0,4.277-1.916,4.277-4.279S17.861,3.644,15.5,3.644c-2.363,0-4.28,1.916-4.28,4.279S13.137,12.201,15.5,12.201zM24.094,14.914c1.938,0,3.512-1.573,3.512-3.513c0-1.939-1.573-3.513-3.512-3.513c-1.94,0-3.513,1.573-3.513,3.513C20.581,13.341,22.153,14.914,24.094,14.914zM28.374,17.043c-0.502-0.907-1.116-1.641-1.732-2.154c-0.718,0.526-1.594,0.846-2.546,0.846c-0.756,0-1.459-0.207-2.076-0.55c0.496,1.093,0.803,2.2,0.861,3.19c0.093,1.516-0.381,2.641-1.329,3.165c-0.204,0.117-0.426,0.183-0.653,0.224c-0.056,0.392-0.095,0.801-0.095,1.231c0,2.412,0.935,4.361,2.088,4.361c0.694,0,1.039-0.71,1.204-1.796c0.163,1.079,0.508,1.796,1.199,1.796c1.146,0,2.09-1.95,2.09-4.361c0-0.542-0.052-1.06-0.139-1.538c0.492,0.472,0.966,0.667,1.418,0.407C29.671,21.305,29.541,19.146,28.374,17.043zM6.906,14.914c1.939,0,3.512-1.573,3.512-3.513c0-1.939-1.573-3.513-3.512-3.513c-1.94,0-3.514,1.573-3.514,3.513C3.392,13.341,4.966,14.914,6.906,14.914zM9.441,21.536c-1.593-0.885-1.739-3.524-0.457-6.354c-0.619,0.346-1.322,0.553-2.078,0.553c-0.956,0-1.832-0.321-2.549-0.846c-0.616,0.513-1.229,1.247-1.733,2.154c-1.167,2.104-1.295,4.262-0.287,4.821c0.451,0.257,0.925,0.064,1.414-0.407c-0.086,0.479-0.136,0.996-0.136,1.538c0,2.412,0.935,4.361,2.088,4.361c0.694,0,1.039-0.71,1.204-1.796c0.165,1.079,0.509,1.796,1.201,1.796c1.146,0,2.089-1.95,2.089-4.361c0-0.432-0.04-0.841-0.097-1.233C9.874,21.721,9.651,21.656,9.441,21.536z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Phone();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Phone = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Phone.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Phone\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.065,18.53c-0.467-0.29-1.167-0.21-1.556,0.179l-3.093,3.092c-0.389,0.389-1.025,0.389-1.414,0L9.05,14.848c-0.389-0.389-0.389-1.025,0-1.414l2.913-2.912c0.389-0.389,0.447-1.075,0.131-1.524L6.792,1.485C6.476,1.036,5.863,0.948,5.433,1.29c0,0-4.134,3.281-4.134,6.295c0,12.335,10,22.334,22.334,22.334c3.015,0,5.948-5.533,5.948-5.533c0.258-0.486,0.087-1.122-0.38-1.412L22.065,18.53z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Photo();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Photo = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Photo.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Photo\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.25,10.25H20.5v-1.5h-9.375v1.5h-3.75c-1.104,0-2,0.896-2,2v10.375c0,1.104,0.896,2,2,2H24.25c1.104,0,2-0.896,2-2V12.25C26.25,11.146,25.354,10.25,24.25,10.25zM15.812,23.499c-3.342,0-6.06-2.719-6.06-6.061c0-3.342,2.718-6.062,6.06-6.062s6.062,2.72,6.062,6.062C21.874,20.78,19.153,23.499,15.812,23.499zM15.812,13.375c-2.244,0-4.062,1.819-4.062,4.062c0,2.244,1.819,4.062,4.062,4.062c2.244,0,4.062-1.818,4.062-4.062C19.875,15.194,18.057,13.375,15.812,13.375z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Picker();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Picker = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Picker.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Picker\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.221,10.853c-0.111-0.414-0.261-0.412,0.221-1.539l1.66-3.519c0.021-0.051,0.2-0.412,0.192-0.946c0.015-0.529-0.313-1.289-1.119-1.642c-1.172-0.555-1.17-0.557-2.344-1.107c-0.784-0.396-1.581-0.171-1.979,0.179c-0.42,0.333-0.584,0.7-0.609,0.75L16.58,6.545c-0.564,1.084-0.655,0.97-1.048,1.147c-0.469,0.129-1.244,0.558-1.785,1.815c-1.108,2.346-1.108,2.346-1.108,2.346l-0.276,0.586l1.17,0.553l-3.599,7.623c-0.38,0.828-0.166,1.436-0.166,2.032c0.01,0.627-0.077,1.509-0.876,3.21l-0.276,0.586l3.517,1.661l0.276-0.585c0.808-1.699,1.431-2.326,1.922-2.717c0.46-0.381,1.066-0.6,1.465-1.42l3.599-7.618l1.172,0.554l0.279-0.589c0,0,0,0,1.105-2.345C22.578,12.166,22.419,11.301,22.221,10.853zM14.623,22.83c-0.156,0.353-0.413,0.439-1.091,0.955c-0.577,0.448-1.264,1.172-2.009,2.6l-1.191-0.562c0.628-1.48,0.75-2.474,0.73-3.203c-0.031-0.851-0.128-1.104,0.045-1.449l3.599-7.621l3.517,1.662L14.623,22.83z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Picture();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Picture = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Picture.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Picture\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M2.5,4.833v22.334h27V4.833H2.5zM25.25,25.25H6.75V6.75h18.5V25.25zM11.25,14c1.426,0,2.583-1.157,2.583-2.583c0-1.427-1.157-2.583-2.583-2.583c-1.427,0-2.583,1.157-2.583,2.583C8.667,12.843,9.823,14,11.25,14zM24.251,16.25l-4.917-4.917l-6.917,6.917L10.5,16.333l-2.752,2.752v5.165h16.503V16.25z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.PieChart();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.PieChart = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.PieChart.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.PieChart\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.583,15.917l1.648-10.779C16.692,5.056,16.145,5,15.583,5C9.554,5,4.666,9.888,4.666,15.917c0,6.029,4.888,10.917,10.917,10.917S26.5,21.946,26.5,15.917c0-0.256-0.021-0.507-0.038-0.759L15.583,15.917zM19.437,3.127l-1.648,10.779l10.879-0.759C28.313,8.026,24.436,3.886,19.437,3.127z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Plane();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Plane = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Plane.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Plane\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M19.671,8.11l-2.777,2.777l-3.837-0.861c0.362-0.505,0.916-1.683,0.464-2.135c-0.518-0.517-1.979,0.278-2.305,0.604l-0.913,0.913L7.614,8.804l-2.021,2.021l2.232,1.061l-0.082,0.082l1.701,1.701l0.688-0.687l3.164,1.504L9.571,18.21H6.413l-1.137,1.138l3.6,0.948l1.83,1.83l0.947,3.598l1.137-1.137V21.43l3.725-3.725l1.504,3.164l-0.687,0.687l1.702,1.701l0.081-0.081l1.062,2.231l2.02-2.02l-0.604-2.689l0.912-0.912c0.326-0.326,1.121-1.789,0.604-2.306c-0.452-0.452-1.63,0.101-2.135,0.464l-0.861-3.838l2.777-2.777c0.947-0.947,3.599-4.862,2.62-5.839C24.533,4.512,20.618,7.163,19.671,8.11z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Plugin();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Plugin = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Plugin.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Plugin\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.33,15.836l-3.893-1.545l3.136-7.9c0.28-0.705-0.064-1.505-0.771-1.785c-0.707-0.28-1.506,0.065-1.785,0.771l-3.136,7.9l-4.88-1.937l3.135-7.9c0.281-0.706-0.064-1.506-0.77-1.786c-0.706-0.279-1.506,0.065-1.785,0.771l-3.136,7.9L8.554,8.781l-1.614,4.066l2.15,0.854l-2.537,6.391c-0.61,1.54,0.143,3.283,1.683,3.895l1.626,0.646L8.985,26.84c-0.407,1.025,0.095,2.188,1.122,2.596l0.93,0.369c1.026,0.408,2.188-0.095,2.596-1.121l0.877-2.207l1.858,0.737c1.54,0.611,3.284-0.142,3.896-1.682l2.535-6.391l1.918,0.761L26.33,15.836z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Plus();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Plus = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Plus.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Plus\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.979,12.896 19.312,12.896 19.312,6.229 12.647,6.229 12.647,12.896 5.979,12.896 5.979,19.562 12.647,19.562 12.647,26.229 19.312,26.229 19.312,19.562 25.979,19.562z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Power();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Power = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Power.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Power\",\r\n\r\n  /**\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.542,8.354c-1.47-1.766-2.896-2.617-3.025-2.695c-0.954-0.565-2.181-0.241-2.739,0.724c-0.556,0.961-0.24,2.194,0.705,2.763c0,0,0.001,0,0.002,0.001c0.001,0,0.002,0.001,0.003,0.002c0.001,0,0.003,0.001,0.004,0.001c0.102,0.062,1.124,0.729,2.08,1.925c1.003,1.261,1.933,3.017,1.937,5.438c-0.001,2.519-1.005,4.783-2.64,6.438c-1.637,1.652-3.877,2.668-6.368,2.669c-2.491-0.001-4.731-1.017-6.369-2.669c-1.635-1.654-2.639-3.919-2.64-6.438c0.005-2.499,0.995-4.292,2.035-5.558c0.517-0.625,1.043-1.098,1.425-1.401c0.191-0.152,0.346-0.263,0.445-0.329c0.049-0.034,0.085-0.058,0.104-0.069c0.005-0.004,0.009-0.006,0.012-0.008s0.004-0.002,0.004-0.002l0,0c0.946-0.567,1.262-1.802,0.705-2.763c-0.559-0.965-1.785-1.288-2.739-0.724c-0.128,0.079-1.555,0.93-3.024,2.696c-1.462,1.751-2.974,4.511-2.97,8.157C2.49,23.775,8.315,29.664,15.5,29.667c7.186-0.003,13.01-5.892,13.012-13.155C28.516,12.864,27.005,10.105,25.542,8.354zM15.5,17.523c1.105,0,2.002-0.907,2.002-2.023h-0.001V3.357c0-1.118-0.896-2.024-2.001-2.024s-2.002,0.906-2.002,2.024V15.5C13.498,16.616,14.395,17.523,15.5,17.523z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ppt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ppt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ppt.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ppt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16.604,1.914c0-0.575-0.466-1.041-1.041-1.041s-1.041,0.466-1.041,1.041v1.04h2.082V1.914zM16.604,22.717h-2.082v3.207c0,0.574-4.225,4.031-4.225,4.031l2.468-0.003l2.807-2.673l3.013,2.693l2.272-0.039l-4.254-4.011V22.717L16.604,22.717zM28.566,7.113c0.86,0,1.56-0.698,1.56-1.56c0-0.861-0.698-1.56-1.56-1.56H2.561c-0.861,0-1.56,0.699-1.56,1.56c0,0.862,0.699,1.56,1.56,1.56h1.583v12.505l-0.932-0.022c-0.861,0-1.213,0.467-1.213,1.04c0,0.576,0.352,1.041,1.213,1.041h24.597c0.86,0,1.299-0.465,1.299-1.041c0-1.094-1.299-1.04-1.299-1.04l-0.804,0.109V7.113H28.566zM11.435,17.516c-3.771,0-4.194-4.191-4.194-4.191c0-4.096,4.162-4.161,4.162-4.161v4.161h4.193C15.596,17.516,11.435,17.516,11.435,17.516zM18.716,13.388h-1.071v-1.073h1.071V13.388zM18.716,10.267h-1.071V9.194h1.071V10.267zM23.314,13.388H20.26c-0.296,0-0.535-0.24-0.535-0.536c0-0.297,0.239-0.537,0.535-0.537h3.057c0.297,0,0.535,0.24,0.535,0.537C23.852,13.147,23.611,13.388,23.314,13.388zM23.314,10.267H20.26c-0.296,0-0.535-0.239-0.535-0.535c0-0.297,0.239-0.537,0.535-0.537h3.057c0.297,0,0.535,0.24,0.535,0.537C23.852,10.027,23.611,10.267,23.314,10.267z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Printer();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Printer = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Printer.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Printer\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.569,12.125h-2.12c-0.207-1.34-1.247-2.759-2.444-3.967c-1.277-1.24-2.654-2.234-3.784-2.37c-0.062-0.008-0.124-0.014-0.198-0.015H8.594c-0.119,0-0.235,0.047-0.319,0.132c-0.083,0.083-0.132,0.2-0.132,0.32v5.9H6.069c-1.104,0-2,0.896-2,2V23h4.074v2.079c0,0.118,0.046,0.23,0.132,0.318c0.086,0.085,0.199,0.131,0.319,0.131h13.445c0.118,0,0.232-0.046,0.318-0.131s0.138-0.199,0.138-0.318V23h4.074v-8.875C26.569,13.021,25.674,12.125,24.569,12.125zM21.589,24.626H9.043V21.5h12.546V24.626zM21.589,13.921c0-0.03,0-0.063-0.003-0.096c-0.015-0.068-0.062-0.135-0.124-0.2H9.043v-6.95h6.987v0.001c0.305-0.019,0.567,0.282,0.769,0.971c0.183,0.655,0.229,1.509,0.229,2.102c0.001,0.433-0.019,0.725-0.019,0.725l-0.037,0.478l0.48,0.005c0.002,0,1.109,0.014,2.196,0.26c1.044,0.226,1.86,0.675,1.938,1.184c0.003,0.045,0.003,0.091,0.003,0.133V13.921z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Quote();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Quote = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Quote.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Quote\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.505,5.873c-3.937,2.52-5.904,5.556-5.904,9.108c0,1.104,0.192,1.656,0.576,1.656l0.396-0.107c0.312-0.12,0.563-0.18,0.756-0.18c1.128,0,2.07,0.411,2.826,1.229c0.756,0.82,1.134,1.832,1.134,3.037c0,1.157-0.408,2.14-1.224,2.947c-0.816,0.807-1.801,1.211-2.952,1.211c-1.608,0-2.935-0.661-3.979-1.984c-1.044-1.321-1.565-2.98-1.565-4.977c0-2.259,0.443-4.327,1.332-6.203c0.888-1.875,2.243-3.57,4.067-5.085c1.824-1.514,2.988-2.272,3.492-2.272c0.336,0,0.612,0.162,0.828,0.486c0.216,0.324,0.324,0.606,0.324,0.846L14.505,5.873zM27.465,5.873c-3.937,2.52-5.904,5.556-5.904,9.108c0,1.104,0.192,1.656,0.576,1.656l0.396-0.107c0.312-0.12,0.563-0.18,0.756-0.18c1.104,0,2.04,0.411,2.808,1.229c0.769,0.82,1.152,1.832,1.152,3.037c0,1.157-0.408,2.14-1.224,2.947c-0.816,0.807-1.801,1.211-2.952,1.211c-1.608,0-2.935-0.661-3.979-1.984c-1.044-1.321-1.565-2.98-1.565-4.977c0-2.284,0.449-4.369,1.35-6.256c0.9-1.887,2.256-3.577,4.068-5.067c1.812-1.49,2.97-2.236,3.474-2.236c0.336,0,0.612,0.162,0.828,0.486c0.216,0.324,0.324,0.606,0.324,0.846L27.465,5.873z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Rain();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Rain = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Rain.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Rain\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.371,7.306c-0.092-3.924-3.301-7.077-7.248-7.079c-2.638,0.001-4.942,1.412-6.208,3.517c-0.595-0.327-1.28-0.517-2.01-0.517C7.626,3.229,5.772,5.033,5.689,7.293c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.874c3.312,0,6-2.688,6-6C29.434,10.34,27.732,8.11,25.371,7.306zM23.436,16.979H7.561c-2.209-0.006-3.997-1.792-4.001-4.001c-0.002-1.982,1.45-3.618,3.35-3.931c0.265-0.043,0.502-0.191,0.657-0.414C7.722,8.41,7.779,8.136,7.73,7.87C7.702,7.722,7.685,7.582,7.685,7.446C7.689,6.221,8.68,5.23,9.905,5.228c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.309c0.342-0.066,0.626-0.307,0.748-0.63c0.749-1.992,2.662-3.412,4.911-3.41c2.899,0.004,5.244,2.35,5.251,5.249c0,0.161-0.009,0.326-0.027,0.497c-0.049,0.517,0.305,0.984,0.815,1.079c1.86,0.344,3.274,1.966,3.271,3.923C27.43,15.186,25.645,16.973,23.436,16.979zM9.029,26.682c0-1.115,0.021-5.425,0.021-5.432c0.002-0.409-0.247-0.779-0.628-0.932c-0.38-0.152-0.815-0.059-1.099,0.24c-0.006,0.008-1.037,1.098-2.081,2.342c-0.523,0.627-1.048,1.287-1.463,1.896c-0.399,0.648-0.753,1.066-0.811,1.885C2.971,28.355,4.324,29.711,6,29.714C7.672,29.71,9.029,28.354,9.029,26.682zM4.971,26.727c0.091-0.349,1.081-1.719,1.993-2.764c0.025-0.029,0.051-0.061,0.076-0.089c-0.005,1.124-0.01,2.294-0.01,2.808c0,0.567-0.461,1.028-1.029,1.03C5.447,27.71,4.997,27.273,4.971,26.727zM16.425,26.682c0-1.115,0.021-5.424,0.021-5.43c0.002-0.41-0.247-0.779-0.628-0.934c-0.381-0.152-0.814-0.058-1.1,0.242c-0.006,0.008-1.035,1.094-2.08,2.342c-0.522,0.623-1.047,1.285-1.463,1.894c-0.399,0.649-0.753,1.068-0.809,1.888c0,1.672,1.354,3.028,3.029,3.028C15.068,29.711,16.425,28.354,16.425,26.682zM12.365,26.729c0.092-0.349,1.081-1.72,1.993-2.765c0.025-0.03,0.05-0.06,0.075-0.089c-0.005,1.123-0.011,2.294-0.011,2.807c-0.002,0.568-0.461,1.027-1.028,1.029C12.84,27.709,12.392,27.273,12.365,26.729zM23.271,20.317c-0.38-0.153-0.816-0.06-1.099,0.24c-0.009,0.008-1.037,1.097-2.08,2.342c-0.523,0.625-1.049,1.285-1.462,1.896c-0.402,0.649-0.754,1.067-0.812,1.886c0,1.672,1.354,3.029,3.03,3.029c1.673,0,3.027-1.357,3.027-3.029c0-1.115,0.022-5.425,0.022-5.431C23.9,20.84,23.651,20.47,23.271,20.317zM21.879,26.681c-0.004,0.568-0.463,1.027-1.031,1.029c-0.553-0.002-1.002-0.438-1.028-0.982c0.092-0.349,1.081-1.72,1.993-2.765c0.025-0.028,0.05-0.059,0.074-0.088C21.883,24.998,21.879,26.167,21.879,26.681z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Raphael();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Raphael = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Raphael.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Raphael\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.777,18.941c0.584-0.881,0.896-1.914,0.896-2.998c0-1.457-0.567-2.826-1.598-3.854l-6.91-6.911l-0.003,0.002c-0.985-0.988-2.35-1.6-3.851-1.6c-1.502,0-2.864,0.612-3.85,1.6H12.46l-6.911,6.911c-1.031,1.029-1.598,2.398-1.598,3.854c0,1.457,0.567,2.826,1.598,3.854l6.231,6.229c0.25,0.281,0.512,0.544,0.789,0.785c1.016,0.961,2.338,1.49,3.743,1.49c1.456,0,2.825-0.565,3.854-1.598l6.723-6.725c0.021-0.019,0.034-0.032,0.051-0.051l0.14-0.138c0.26-0.26,0.487-0.54,0.688-0.838c0.004-0.008,0.01-0.015,0.014-0.021L27.777,18.941zM26.658,15.946c0,0.678-0.197,1.326-0.561,1.879c-0.222,0.298-0.447,0.559-0.684,0.784L25.4,18.625c-1.105,1.052-2.354,1.35-3.414,1.35c-0.584,0-1.109-0.09-1.523-0.195c-2.422-0.608-5.056-2.692-6.261-5.732c0.649,0.274,1.362,0.426,2.11,0.426c2.811,0,5.129-2.141,5.415-4.877l3.924,3.925C26.301,14.167,26.658,15.029,26.658,15.946zM16.312,5.6c1.89,0,3.426,1.538,3.426,3.427c0,1.89-1.536,3.427-3.426,3.427c-1.889,0-3.426-1.537-3.426-3.427C12.886,7.138,14.423,5.6,16.312,5.6zM6.974,18.375c-0.649-0.648-1.007-1.512-1.007-2.429c0-0.917,0.357-1.78,1.007-2.428l2.655-2.656c-0.693,2.359-0.991,4.842-0.831,7.221c0.057,0.854,0.175,1.677,0.345,2.46L6.974,18.375zM11.514,11.592c0.583,4.562,4.195,9.066,8.455,10.143c0.693,0.179,1.375,0.265,2.033,0.265c0.01,0,0.02,0,0.027,0l-3.289,3.289c-0.648,0.646-1.512,1.006-2.428,1.006c-0.638,0-1.248-0.177-1.779-0.5l0.001-0.002c-0.209-0.142-0.408-0.295-0.603-0.461c-0.015-0.019-0.031-0.026-0.046-0.043l-0.665-0.664c-1.367-1.567-2.227-3.903-2.412-6.671C10.669,15.856,10.921,13.673,11.514,11.592\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ReflectH();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ReflectH = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ReflectH.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.ReflectH\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.57,20.273h0.854v-1.705H15.57V20.273zM15.57,23.686h0.854V21.98H15.57V23.686zM15.57,27.096h0.854v-1.705H15.57V27.096zM15.57,29.689h0.854V28.8H15.57V29.689zM15.57,16.865h0.854V15.16H15.57V16.865zM15.57,3.225h0.854V1.52H15.57V3.225zM15.57,6.635h0.854V4.93H15.57V6.635zM15.57,10.045h0.854V8.34H15.57V10.045zM15.57,13.455h0.854V11.75H15.57V13.455zM18.41,3.327V25.46h12.015L18.41,3.327zM19.264,6.68l9.729,17.93h-9.729V6.68zM13.535,25.46V3.327L1.521,25.46H13.535z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ReflectV();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ReflectV = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ReflectV.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.ReflectV\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.643,16.008v-0.854h-1.705v0.854H20.643zM24.053,16.008v-0.854h-1.705v0.854H24.053zM27.463,16.008v-0.854h-1.705v0.854H27.463zM30.059,16.008v-0.854h-0.891v0.854H30.059zM17.232,16.008v-0.854h-1.709v0.854H17.232zM3.593,16.008v-0.854H1.888v0.854H3.593zM7.003,16.008v-0.854H5.298v0.854H7.003zM10.414,16.008v-0.854H8.709v0.854H10.414zM13.824,16.008v-0.854h-1.705v0.854H13.824zM3.694,13.167h22.134V1.152L3.694,13.167zM7.048,12.314l17.929-9.729v9.729H7.048zM25.828,18.042H3.694l22.134,12.015V18.042z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Refresh();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Refresh = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Refresh.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Refresh\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.083,15.5c-0.009,4.739-3.844,8.574-8.583,8.583c-4.741-0.009-8.577-3.844-8.585-8.583c0.008-4.741,3.844-8.577,8.585-8.585c1.913,0,3.665,0.629,5.09,1.686l-1.782,1.783l8.429,2.256l-2.26-8.427l-1.89,1.89c-2.072-1.677-4.717-2.688-7.587-2.688C8.826,3.418,3.418,8.826,3.416,15.5C3.418,22.175,8.826,27.583,15.5,27.583S27.583,22.175,27.583,15.5H24.083z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Resize2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Resize2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Resize2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Resize2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M1.999,2.332v26.499H28.5V2.332H1.999zM26.499,26.832H4V12.5h8.167V4.332h14.332V26.832zM15.631,17.649l5.468,5.469l-1.208,1.206l5.482,1.469l-1.47-5.481l-1.195,1.195l-5.467-5.466l1.209-1.208l-5.482-1.469l1.468,5.48L15.631,17.649z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Rotate();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Rotate = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Rotate.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Rotate\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,5.27c1.914,0,3.666,0.629,5.089,1.686l-1.781,1.783l8.428,2.256l-2.26-8.427l-1.889,1.89C21.016,2.781,18.371,1.77,15.5,1.77C8.827,1.773,3.418,7.181,3.417,13.855c0.001,4.063,2.012,7.647,5.084,9.838v-4.887c-0.993-1.4-1.583-3.105-1.585-4.952C6.923,9.114,10.759,5.278,15.5,5.27zM9.5,29.23h12V12.355h-12V29.23z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Ruler();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Ruler = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Ruler.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Ruler\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M6.63,21.796l-5.122,5.121h25.743V1.175L6.63,21.796zM18.702,10.48c0.186-0.183,0.48-0.183,0.664,0l1.16,1.159c0.184,0.183,0.186,0.48,0.002,0.663c-0.092,0.091-0.213,0.137-0.332,0.137c-0.121,0-0.24-0.046-0.33-0.137l-1.164-1.159C18.519,10.96,18.519,10.664,18.702,10.48zM17.101,12.084c0.184-0.183,0.48-0.183,0.662,0l2.156,2.154c0.184,0.183,0.184,0.48,0.002,0.661c-0.092,0.092-0.213,0.139-0.334,0.139s-0.24-0.046-0.33-0.137l-2.156-2.154C16.917,12.564,16.917,12.267,17.101,12.084zM15.497,13.685c0.184-0.183,0.48-0.183,0.664,0l1.16,1.161c0.184,0.183,0.182,0.48-0.002,0.663c-0.092,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.24-0.046-0.332-0.138l-1.16-1.16C15.314,14.166,15.314,13.868,15.497,13.685zM13.896,15.288c0.184-0.183,0.48-0.181,0.664,0.002l1.158,1.159c0.183,0.184,0.183,0.48,0,0.663c-0.092,0.092-0.212,0.138-0.332,0.138c-0.119,0-0.24-0.046-0.332-0.138l-1.158-1.161C13.713,15.767,13.713,15.471,13.896,15.288zM12.293,16.892c0.183-0.184,0.479-0.184,0.663,0l2.154,2.153c0.184,0.184,0.184,0.481,0,0.665c-0.092,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.242-0.046-0.334-0.138l-2.153-2.155C12.11,17.371,12.11,17.075,12.293,16.892zM10.302,24.515c-0.091,0.093-0.212,0.139-0.332,0.139c-0.119,0-0.238-0.045-0.33-0.137l-2.154-2.153c-0.184-0.183-0.184-0.479,0-0.663s0.479-0.184,0.662,0l2.154,2.153C10.485,24.036,10.485,24.332,10.302,24.515zM10.912,21.918c-0.093,0.093-0.214,0.139-0.333,0.139c-0.12,0-0.24-0.045-0.33-0.137l-1.162-1.161c-0.184-0.183-0.184-0.479,0-0.66c0.184-0.185,0.48-0.187,0.664-0.003l1.161,1.162C11.095,21.438,11.095,21.735,10.912,21.918zM12.513,20.316c-0.092,0.092-0.211,0.138-0.332,0.138c-0.119,0-0.239-0.046-0.331-0.138l-1.159-1.16c-0.184-0.184-0.184-0.48,0-0.664s0.48-0.182,0.663,0.002l1.159,1.161C12.696,19.838,12.696,20.135,12.513,20.316zM22.25,21.917h-8.67l8.67-8.67V21.917zM22.13,10.7c-0.09,0.092-0.211,0.138-0.33,0.138c-0.121,0-0.242-0.046-0.334-0.138l-1.16-1.159c-0.184-0.183-0.184-0.479,0-0.663c0.182-0.183,0.479-0.183,0.662,0l1.16,1.159C22.312,10.221,22.313,10.517,22.13,10.7zM24.726,10.092c-0.092,0.092-0.213,0.137-0.332,0.137s-0.24-0.045-0.33-0.137l-2.154-2.154c-0.184-0.183-0.184-0.481,0-0.664s0.482-0.181,0.664,0.002l2.154,2.154C24.911,9.613,24.909,9.91,24.726,10.092z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Run();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Run = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Run.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Run\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M17.41,20.395l-0.778-2.723c0.228-0.2,0.442-0.414,0.644-0.643l2.721,0.778c0.287-0.418,0.534-0.862,0.755-1.323l-2.025-1.96c0.097-0.288,0.181-0.581,0.241-0.883l2.729-0.684c0.02-0.252,0.039-0.505,0.039-0.763s-0.02-0.51-0.039-0.762l-2.729-0.684c-0.061-0.302-0.145-0.595-0.241-0.883l2.026-1.96c-0.222-0.46-0.469-0.905-0.756-1.323l-2.721,0.777c-0.201-0.228-0.416-0.442-0.644-0.643l0.778-2.722c-0.418-0.286-0.863-0.534-1.324-0.755l-1.96,2.026c-0.287-0.097-0.581-0.18-0.883-0.241l-0.683-2.73c-0.253-0.019-0.505-0.039-0.763-0.039s-0.51,0.02-0.762,0.039l-0.684,2.73c-0.302,0.061-0.595,0.144-0.883,0.241l-1.96-2.026C7.048,3.463,6.604,3.71,6.186,3.997l0.778,2.722C6.736,6.919,6.521,7.134,6.321,7.361L3.599,6.583C3.312,7.001,3.065,7.446,2.844,7.907l2.026,1.96c-0.096,0.288-0.18,0.581-0.241,0.883l-2.73,0.684c-0.019,0.252-0.039,0.505-0.039,0.762s0.02,0.51,0.039,0.763l2.73,0.684c0.061,0.302,0.145,0.595,0.241,0.883l-2.026,1.96c0.221,0.46,0.468,0.905,0.755,1.323l2.722-0.778c0.2,0.229,0.415,0.442,0.643,0.643l-0.778,2.723c0.418,0.286,0.863,0.533,1.323,0.755l1.96-2.026c0.288,0.097,0.581,0.181,0.883,0.241l0.684,2.729c0.252,0.02,0.505,0.039,0.763,0.039s0.51-0.02,0.763-0.039l0.683-2.729c0.302-0.061,0.596-0.145,0.883-0.241l1.96,2.026C16.547,20.928,16.992,20.681,17.41,20.395zM11.798,15.594c-1.877,0-3.399-1.522-3.399-3.399s1.522-3.398,3.399-3.398s3.398,1.521,3.398,3.398S13.675,15.594,11.798,15.594zM27.29,22.699c0.019-0.547-0.06-1.104-0.23-1.654l1.244-1.773c-0.188-0.35-0.4-0.682-0.641-0.984l-2.122,0.445c-0.428-0.364-0.915-0.648-1.436-0.851l-0.611-2.079c-0.386-0.068-0.777-0.105-1.173-0.106l-0.974,1.936c-0.279,0.054-0.558,0.128-0.832,0.233c-0.257,0.098-0.497,0.22-0.727,0.353L17.782,17.4c-0.297,0.262-0.568,0.545-0.813,0.852l0.907,1.968c-0.259,0.495-0.437,1.028-0.519,1.585l-1.891,1.06c0.019,0.388,0.076,0.776,0.164,1.165l2.104,0.519c0.231,0.524,0.541,0.993,0.916,1.393l-0.352,2.138c0.32,0.23,0.66,0.428,1.013,0.6l1.715-1.32c0.536,0.141,1.097,0.195,1.662,0.15l1.452,1.607c0.2-0.057,0.399-0.118,0.596-0.193c0.175-0.066,0.34-0.144,0.505-0.223l0.037-2.165c0.455-0.339,0.843-0.747,1.152-1.206l2.161-0.134c0.152-0.359,0.279-0.732,0.368-1.115L27.29,22.699zM23.127,24.706c-1.201,0.458-2.545-0.144-3.004-1.345s0.143-2.546,1.344-3.005c1.201-0.458,2.547,0.144,3.006,1.345C24.931,22.902,24.328,24.247,23.127,24.706z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Rw();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Rw = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Rw.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Rw\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M5.5,15.499,15.8,21.447,15.8,15.846,25.5,21.447,25.5,9.552,15.8,15.152,15.8,9.552z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Safari();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Safari = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Safari.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Safari\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16.154,5.135c-0.504,0-1,0.031-1.488,0.089l-0.036-0.18c-0.021-0.104-0.06-0.198-0.112-0.283c0.381-0.308,0.625-0.778,0.625-1.306c0-0.927-0.751-1.678-1.678-1.678s-1.678,0.751-1.678,1.678c0,0.745,0.485,1.376,1.157,1.595c-0.021,0.105-0.021,0.216,0,0.328l0.033,0.167C7.645,6.95,3.712,11.804,3.712,17.578c0,6.871,5.571,12.441,12.442,12.441c6.871,0,12.441-5.57,12.441-12.441C28.596,10.706,23.025,5.135,16.154,5.135zM16.369,8.1c4.455,0,8.183,3.116,9.123,7.287l-0.576,0.234c-0.148-0.681-0.755-1.191-1.48-1.191c-0.837,0-1.516,0.679-1.516,1.516c0,0.075,0.008,0.148,0.018,0.221l-2.771-0.028c-0.054-0.115-0.114-0.226-0.182-0.333l3.399-5.11l0.055-0.083l-4.766,4.059c-0.352-0.157-0.74-0.248-1.148-0.256l0.086-0.018l-1.177-2.585c0.64-0.177,1.111-0.763,1.111-1.459c0-0.837-0.678-1.515-1.516-1.515c-0.075,0-0.147,0.007-0.219,0.018l0.058-0.634C15.357,8.141,15.858,8.1,16.369,8.1zM12.146,3.455c0-0.727,0.591-1.318,1.318-1.318c0.727,0,1.318,0.591,1.318,1.318c0,0.425-0.203,0.802-0.516,1.043c-0.183-0.123-0.413-0.176-0.647-0.13c-0.226,0.045-0.413,0.174-0.535,0.349C12.542,4.553,12.146,4.049,12.146,3.455zM7.017,17.452c0-4.443,3.098-8.163,7.252-9.116l0.297,0.573c-0.61,0.196-1.051,0.768-1.051,1.442c0,0.837,0.678,1.516,1.515,1.516c0.068,0,0.135-0.006,0.2-0.015l-0.058,2.845l0.052-0.011c-0.442,0.204-0.824,0.513-1.116,0.895l0.093-0.147l-1.574-0.603l1.172,1.239l0.026-0.042c-0.19,0.371-0.306,0.788-0.324,1.229l-0.003-0.016l-2.623,1.209c-0.199-0.604-0.767-1.041-1.438-1.041c-0.837,0-1.516,0.678-1.516,1.516c0,0.064,0.005,0.128,0.013,0.191l-0.783-0.076C7.063,18.524,7.017,17.994,7.017,17.452zM16.369,26.805c-4.429,0-8.138-3.078-9.106-7.211l0.691-0.353c0.146,0.686,0.753,1.2,1.482,1.2c0.837,0,1.515-0.679,1.515-1.516c0-0.105-0.011-0.207-0.031-0.307l2.858,0.03c0.045,0.095,0.096,0.187,0.15,0.276l-3.45,5.277l0.227-0.195l4.529-3.92c0.336,0.153,0.705,0.248,1.094,0.266l-0.019,0.004l1.226,2.627c-0.655,0.166-1.142,0.76-1.142,1.468c0,0.837,0.678,1.515,1.516,1.515c0.076,0,0.151-0.007,0.225-0.018l0.004,0.688C17.566,26.746,16.975,26.805,16.369,26.805zM18.662,26.521l-0.389-0.6c0.661-0.164,1.152-0.759,1.152-1.47c0-0.837-0.68-1.516-1.516-1.516c-0.066,0-0.13,0.005-0.193,0.014v-2.86l-0.025,0.004c0.409-0.185,0.77-0.459,1.055-0.798l1.516,0.659l-1.104-1.304c0.158-0.335,0.256-0.704,0.278-1.095l2.552-1.164c0.19,0.618,0.766,1.068,1.447,1.068c0.838,0,1.516-0.679,1.516-1.516c0-0.069-0.006-0.137-0.016-0.204l0.65,0.12c0.089,0.517,0.136,1.049,0.136,1.591C25.722,21.826,22.719,25.499,18.662,26.521z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ScrewDriver();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ScrewDriver = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ScrewDriver.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ScrewDriver\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M19.387,14.373c2.119-2.619,5.322-6.77,5.149-7.75c-0.128-0.729-0.882-1.547-1.763-2.171c-0.883-0.625-1.916-1.044-2.645-0.915c-0.98,0.173-3.786,4.603-5.521,7.49c-0.208,0.344,0.328,1.177,0.156,1.468c-0.172,0.292-1.052,0.042-1.18,0.261c-0.263,0.451-0.417,0.722-0.417,0.722s-0.553,0.823,1.163,2.163l-5.233,7.473c-0.267,0.381-1.456,0.459-1.456,0.459l-1.184,3.312l0.859,0.602l2.708-2.246c0,0-0.334-1.143-0.068-1.523l5.242-7.489c1.719,1,2.377,0.336,2.377,0.336s0.201-0.238,0.536-0.639c0.161-0.194-0.374-0.936-0.159-1.197C18.169,14.467,19.133,14.685,19.387,14.373z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Search();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Search = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Search.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Search\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.772,26.433l-7.126-7.126c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127L29.772,26.433zM7.203,13.885c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486c-0.007,3.58-2.905,6.476-6.484,6.484C10.106,20.361,7.209,17.465,7.203,13.885z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Sencha();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Sencha = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Sencha.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Sencha\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M18.265,22.734c1.365,0.662,2.309,2.062,2.309,3.682c0,1.566-0.881,2.928-2.176,3.615l1.922-0.98c3.16-1.58,5.332-4.846,5.332-8.617c0-3.719-2.109-6.945-5.195-8.547l-6.272-3.144c-1.366-0.662-2.308-2.062-2.308-3.682c0-1.567,0.881-2.928,2.175-3.614L12.13,2.428c-3.161,1.578-5.332,4.843-5.332,8.616c0,3.718,2.108,6.944,5.195,8.546L18.265,22.734z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Settings();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Settings = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Settings.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Settings\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16.015,12.03c-2.156,0-3.903,1.747-3.903,3.903c0,2.155,1.747,3.903,3.903,3.903c0.494,0,0.962-0.102,1.397-0.27l0.836,1.285l1.359-0.885l-0.831-1.276c0.705-0.706,1.142-1.681,1.142-2.757C19.918,13.777,18.171,12.03,16.015,12.03zM16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM26.174,20.809c-0.241,0.504-0.513,0.99-0.826,1.45L22.19,21.58c-0.481,0.526-1.029,0.994-1.634,1.385l0.119,3.202c-0.507,0.23-1.028,0.421-1.569,0.57l-1.955-2.514c-0.372,0.051-0.75,0.086-1.136,0.086c-0.356,0-0.706-0.029-1.051-0.074l-1.945,2.5c-0.541-0.151-1.065-0.342-1.57-0.569l0.117-3.146c-0.634-0.398-1.208-0.88-1.712-1.427L6.78,22.251c-0.313-0.456-0.583-0.944-0.826-1.448l2.088-2.309c-0.226-0.703-0.354-1.451-0.385-2.223l-2.768-1.464c0.055-0.563,0.165-1.107,0.301-1.643l3.084-0.427c0.29-0.702,0.675-1.352,1.135-1.942L8.227,7.894c0.399-0.389,0.83-0.744,1.283-1.07l2.663,1.672c0.65-0.337,1.349-0.593,2.085-0.75l0.968-3.001c0.278-0.021,0.555-0.042,0.837-0.042c0.282,0,0.56,0.022,0.837,0.042l0.976,3.028c0.72,0.163,1.401,0.416,2.036,0.75l2.704-1.697c0.455,0.326,0.887,0.681,1.285,1.07l-1.216,2.986c0.428,0.564,0.793,1.181,1.068,1.845l3.185,0.441c0.135,0.535,0.247,1.081,0.302,1.643l-2.867,1.516c-0.034,0.726-0.15,1.43-0.355,2.1L26.174,20.809z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.SettingsAlt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.SettingsAlt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.SettingsAlt.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.SettingsAlt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM24.386,14.968c-1.451,1.669-3.706,2.221-5.685,1.586l-7.188,8.266c-0.766,0.88-2.099,0.97-2.979,0.205s-0.973-2.099-0.208-2.979l7.198-8.275c-0.893-1.865-0.657-4.164,0.787-5.824c1.367-1.575,3.453-2.151,5.348-1.674l-2.754,3.212l0.901,2.621l2.722,0.529l2.761-3.22C26.037,11.229,25.762,13.387,24.386,14.968z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Shuffle();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Shuffle = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Shuffle.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Shuffle\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.786,20.654c-0.618-0.195-1.407-0.703-2.291-1.587c-0.757-0.742-1.539-1.698-2.34-2.741c-0.191,0.256-0.382,0.51-0.574,0.77c-0.524,0.709-1.059,1.424-1.604,2.127c1.904,2.31,3.88,4.578,6.809,4.952v2.701l7.556-4.362l-7.556-4.362V20.654zM9.192,11.933c0.756,0.741,1.538,1.697,2.339,2.739c0.195-0.262,0.39-0.521,0.587-0.788c0.52-0.703,1.051-1.412,1.592-2.11c-2.032-2.463-4.133-4.907-7.396-5.025h-3.5v3.5h3.5C6.969,10.223,7.996,10.735,9.192,11.933zM21.786,10.341v2.535l7.556-4.363l-7.556-4.363v2.647c-1.904,0.219-3.425,1.348-4.751,2.644c-2.196,2.183-4.116,5.167-6.011,7.538c-1.867,2.438-3.741,3.888-4.712,3.771h-3.5v3.5h3.5c2.185-0.029,3.879-1.266,5.34-2.693c2.194-2.184,4.116-5.167,6.009-7.538C19.205,12.003,20.746,10.679,21.786,10.341z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Skull();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Skull = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Skull.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Skull\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.947,11.14c0-5.174-3.979-9.406-10.613-9.406c-6.633,0-10.282,4.232-10.282,9.406c0,5.174,1.459,4.511,1.459,7.43c0,1.095-1.061,0.564-1.061,2.919c0,2.587,3.615,2.223,4.677,3.283c1.061,1.062,0.961,3.019,0.961,3.019s0.199,0.796,0.564,0.563c0,0,0.232,0.564,0.498,0.232c0,0,0.265,0.563,0.531,0.1c0,0,0.265,0.631,0.696,0.166c0,0,0.431,0.63,0.929,0.133c0,0,0.564,0.53,1.194,0.133c0.63,0.397,1.194-0.133,1.194-0.133c0.497,0.497,0.929-0.133,0.929-0.133c0.432,0.465,0.695-0.166,0.695-0.166c0.268,0.464,0.531-0.1,0.531-0.1c0.266,0.332,0.498-0.232,0.498-0.232c0.365,0.232,0.564-0.563,0.564-0.563s-0.1-1.957,0.961-3.019c1.062-1.061,4.676-0.696,4.676-3.283c0-2.354-1.061-1.824-1.061-2.919C24.488,15.651,25.947,16.314,25.947,11.14zM10.333,20.992c-1.783,0.285-2.59-0.215-2.785-1.492c-0.508-3.328,2.555-3.866,4.079-3.683c0.731,0.088,1.99,0.862,1.99,1.825C13.617,20.229,11.992,20.727,10.333,20.992zM16.461,25.303c-0.331,0-0.862-0.431-0.895-1.227c-0.033,0.796-0.63,1.227-0.961,1.227c-0.332,0-0.83-0.331-0.863-1.127c-0.033-0.796,1.028-4.013,1.792-4.013c0.762,0,1.824,3.217,1.791,4.013S16.794,25.303,16.461,25.303zM23.361,19.5c-0.195,1.277-1.004,1.777-2.787,1.492c-1.658-0.266-3.283-0.763-3.283-3.35c0-0.963,1.258-1.737,1.99-1.825C20.805,15.634,23.869,16.172,23.361,19.5z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Skype();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Skype = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Skype.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Skype\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.777,18.438c0.209-0.948,0.318-1.934,0.318-2.944c0-7.578-6.144-13.722-13.724-13.722c-0.799,0-1.584,0.069-2.346,0.2C11.801,1.199,10.35,0.75,8.793,0.75c-4.395,0-7.958,3.562-7.958,7.958c0,1.47,0.399,2.845,1.094,4.024c-0.183,0.893-0.277,1.814-0.277,2.76c0,7.58,6.144,13.723,13.722,13.723c0.859,0,1.699-0.078,2.515-0.23c1.119,0.604,2.399,0.945,3.762,0.945c4.395,0,7.957-3.562,7.957-7.959C29.605,20.701,29.309,19.502,28.777,18.438zM22.412,22.051c-0.635,0.898-1.573,1.609-2.789,2.115c-1.203,0.5-2.646,0.754-4.287,0.754c-1.971,0-3.624-0.346-4.914-1.031C9.5,23.391,8.74,22.717,8.163,21.885c-0.583-0.842-0.879-1.676-0.879-2.479c0-0.503,0.192-0.939,0.573-1.296c0.375-0.354,0.857-0.532,1.432-0.532c0.471,0,0.878,0.141,1.209,0.422c0.315,0.269,0.586,0.662,0.805,1.174c0.242,0.558,0.508,1.027,0.788,1.397c0.269,0.355,0.656,0.656,1.151,0.89c0.497,0.235,1.168,0.354,1.992,0.354c1.135,0,2.064-0.241,2.764-0.721c0.684-0.465,1.016-1.025,1.016-1.711c0-0.543-0.173-0.969-0.529-1.303c-0.373-0.348-0.865-0.621-1.465-0.807c-0.623-0.195-1.47-0.404-2.518-0.623c-1.424-0.306-2.634-0.668-3.596-1.076c-0.984-0.419-1.777-1-2.357-1.727c-0.59-0.736-0.889-1.662-0.889-2.75c0-1.036,0.314-1.971,0.933-2.776c0.613-0.8,1.51-1.423,2.663-1.849c1.139-0.422,2.494-0.635,4.027-0.635c1.225,0,2.303,0.141,3.201,0.421c0.904,0.282,1.668,0.662,2.267,1.13c0.604,0.472,1.054,0.977,1.335,1.5c0.284,0.529,0.43,1.057,0.43,1.565c0,0.49-0.189,0.937-0.563,1.324c-0.375,0.391-0.851,0.589-1.408,0.589c-0.509,0-0.905-0.124-1.183-0.369c-0.258-0.227-0.523-0.58-0.819-1.09c-0.342-0.65-0.756-1.162-1.229-1.523c-0.463-0.351-1.232-0.529-2.292-0.529c-0.984,0-1.784,0.197-2.379,0.588c-0.572,0.375-0.85,0.805-0.85,1.314c0,0.312,0.09,0.574,0.273,0.799c0.195,0.238,0.471,0.447,0.818,0.621c0.36,0.182,0.732,0.326,1.104,0.429c0.382,0.106,1.021,0.263,1.899,0.466c1.11,0.238,2.131,0.506,3.034,0.793c0.913,0.293,1.703,0.654,2.348,1.072c0.656,0.429,1.178,0.979,1.547,1.635c0.369,0.658,0.558,1.471,0.558,2.416C23.371,20.119,23.049,21.148,22.412,22.051z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.SlideShare();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.SlideShare = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.SlideShare.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.SlideShare\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.952,12.795c-0.956,1.062-5.073,2.409-5.604,2.409h-4.513c-0.749,0-1.877,0.147-2.408,0.484c0.061,0.054,0.122,0.108,0.181,0.163c0.408,0.379,1.362,0.913,2.206,0.913c0.397,0,0.723-0.115,1-0.354c1.178-1.007,1.79-1.125,2.145-1.125c0.421,0,0.783,0.193,0.996,0.531c0.4,0.626,0.106,1.445-0.194,2.087c-0.718,1.524-3.058,3.171-5.595,3.171c-0.002,0-0.002,0-0.004,0c-0.354,0-0.701-0.033-1.033-0.099v3.251c0,0.742,1.033,2.533,4.167,2.533s3.955-3.701,3.955-4.338v-4.512c2.23-1.169,4.512-1.805,5.604-3.895C30.882,12.05,29.907,11.733,28.952,12.795zM21.942,17.521c0.796-1.699-0.053-1.699-1.54-0.425s-3.665,0.105-4.408-0.585c-0.743-0.689-1.486-1.22-2.814-1.167c-1.328,0.053-4.46-0.161-6.267-0.585c-1.805-0.425-4.895-3-5.15-2.335c-0.266,0.69,0.211,1.168,1.168,2.335c0.955,1.169,5.075,2.778,5.075,2.778s0,3.453,0,4.886c0,1.435,2.973,3.61,4.512,3.61s2.708-1.062,2.708-1.806v-4.512C17.775,21.045,21.146,19.221,21.942,17.521zM20.342,13.73c1.744,0,3.159-1.414,3.159-3.158c0-1.745-1.415-3.159-3.159-3.159s-3.158,1.414-3.158,3.159C17.184,12.316,18.598,13.73,20.342,13.73zM12.019,13.73c1.744,0,3.158-1.414,3.158-3.158c0-1.745-1.414-3.159-3.158-3.159c-1.745,0-3.159,1.414-3.159,3.159C8.86,12.316,10.273,13.73,12.019,13.73z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Smile();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Smile = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Smile.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Smile\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM20.729,7.375c0.934,0,1.688,1.483,1.688,3.312S21.661,14,20.729,14c-0.932,0-1.688-1.483-1.688-3.312S19.798,7.375,20.729,7.375zM11.104,7.375c0.932,0,1.688,1.483,1.688,3.312S12.037,14,11.104,14s-1.688-1.483-1.688-3.312S10.172,7.375,11.104,7.375zM16.021,26c-2.873,0-5.563-1.757-7.879-4.811c2.397,1.564,5.021,2.436,7.774,2.436c2.923,0,5.701-0.98,8.215-2.734C21.766,24.132,18.99,26,16.021,26z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Smile2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Smile2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Smile2.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Smile2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,1.466C7.973,1.466,1.466,7.973,1.466,16c0,8.027,6.507,14.534,14.534,14.534c8.027,0,14.534-6.507,14.534-14.534C30.534,7.973,24.027,1.466,16,1.466zM16,29.534C8.539,29.534,2.466,23.462,2.466,16C2.466,8.539,8.539,2.466,16,2.466c7.462,0,13.535,6.072,13.535,13.533C29.534,23.462,23.462,29.534,16,29.534zM11.104,14c0.932,0,1.688-1.483,1.688-3.312s-0.755-3.312-1.688-3.312s-1.688,1.483-1.688,3.312S10.172,14,11.104,14zM20.729,14c0.934,0,1.688-1.483,1.688-3.312s-0.756-3.312-1.688-3.312c-0.932,0-1.688,1.483-1.688,3.312S19.798,14,20.729,14zM8.143,21.189C10.458,24.243,13.148,26,16.021,26c2.969,0,5.745-1.868,8.11-5.109c-2.515,1.754-5.292,2.734-8.215,2.734C13.164,23.625,10.54,22.756,8.143,21.189z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Snow();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Snow = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Snow.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Snow\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.372,6.912c-0.093-3.925-3.302-7.078-7.248-7.08c-2.638,0.002-4.942,1.412-6.208,3.518c-0.595-0.327-1.28-0.518-2.01-0.518C7.627,2.834,5.773,4.639,5.69,6.898c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h15.875c3.312,0,6-2.688,6-6C29.434,9.944,27.732,7.715,25.372,6.912zM23.436,16.584H7.562c-2.209-0.006-3.997-1.793-4.001-4c-0.002-1.983,1.45-3.619,3.35-3.933c0.265-0.043,0.502-0.19,0.657-0.414C7.723,8.015,7.78,7.74,7.731,7.475C7.703,7.326,7.686,7.187,7.686,7.051c0.004-1.225,0.995-2.217,2.22-2.219c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.31c0.342-0.066,0.626-0.308,0.748-0.631c0.749-1.992,2.662-3.412,4.911-3.41c2.898,0.004,5.244,2.351,5.251,5.25c0,0.16-0.009,0.325-0.026,0.496c-0.05,0.518,0.305,0.984,0.814,1.079c1.859,0.345,3.273,1.966,3.271,3.923C27.43,14.791,25.645,16.578,23.436,16.584zM16.667,24.09l1.119-1.119c0.389-0.391,0.389-1.025,0-1.416c-0.392-0.391-1.025-0.391-1.415,0l-1.119,1.119l-1.119-1.119c-0.391-0.391-1.025-0.391-1.415,0c-0.391,0.391-0.391,1.025,0,1.416l1.118,1.117l-1.12,1.121c-0.389,0.393-0.389,1.021,0,1.414c0.195,0.188,0.451,0.293,0.707,0.293c0.256,0,0.512-0.104,0.708-0.293l1.12-1.119l1.12,1.119c0.195,0.188,0.451,0.293,0.708,0.293c0.256,0,0.512-0.104,0.707-0.293c0.391-0.396,0.391-1.021,0-1.414L16.667,24.09zM25.119,21.817c-0.393-0.392-1.025-0.392-1.415,0l-1.12,1.121l-1.12-1.121c-0.391-0.392-1.022-0.392-1.414,0c-0.39,0.392-0.39,1.022,0,1.416l1.119,1.119l-1.119,1.119c-0.39,0.391-0.39,1.022,0,1.413c0.195,0.195,0.451,0.294,0.707,0.294c0.257,0,0.513-0.099,0.707-0.294l1.12-1.118l1.12,1.118c0.194,0.195,0.45,0.294,0.707,0.294c0.256,0,0.513-0.099,0.708-0.294c0.389-0.391,0.389-1.022,0-1.413l-1.12-1.119l1.12-1.119C25.507,22.842,25.507,22.209,25.119,21.817zM9.334,23.953l1.119-1.119c0.389-0.394,0.389-1.021,0-1.414c-0.391-0.394-1.025-0.394-1.415,0l-1.119,1.119l-1.12-1.121c-0.391-0.39-1.023-0.39-1.415,0c-0.391,0.396-0.391,1.024,0,1.418l1.119,1.117l-1.12,1.118c-0.391,0.394-0.391,1.025,0,1.414c0.196,0.195,0.452,0.293,0.708,0.293c0.256,0,0.511-0.098,0.707-0.293l1.12-1.119l1.121,1.121c0.195,0.195,0.451,0.293,0.707,0.293s0.513-0.098,0.708-0.293c0.389-0.391,0.389-1.022,0-1.416L9.334,23.953z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Split();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Split = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Split.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Split\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.786,20.698c-1.792-0.237-2.912-1.331-4.358-2.886c-0.697-0.751-1.428-1.577-2.324-2.319c1.396-1.165,2.411-2.519,3.483-3.503c1.01-0.92,1.901-1.519,3.199-1.688v2.574l7.556-4.363L21.786,4.15v2.652c-3.34,0.266-5.45,2.378-6.934,4.013c-0.819,0.896-1.537,1.692-2.212,2.192c-0.685,0.501-1.227,0.731-2.013,0.742c-0.001,0-0.002,0-0.003,0H2.812v3.5h0.001v0.001c0,0,0.046-0.001,0.136-0.001h7.677c0.786,0.011,1.33,0.241,2.017,0.743c1.021,0.743,2.095,2.181,3.552,3.568c1.312,1.258,3.162,2.46,5.592,2.649v2.664l7.556-4.36l-7.556-4.361V20.698z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Star();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Star = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Star.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Star\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,22.375L7.116,28.83l3.396-10.438l-8.883-6.458l10.979,0.002L16.002,1.5l3.391,10.434h10.981l-8.886,6.457l3.396,10.439L16,22.375L16,22.375z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Star2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Star2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Star2.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Star2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.615,4.928c0.487-0.986,1.284-0.986,1.771,0l2.249,4.554c0.486,0.986,1.775,1.923,2.864,2.081l5.024,0.73c1.089,0.158,1.335,0.916,0.547,1.684l-3.636,3.544c-0.788,0.769-1.28,2.283-1.095,3.368l0.859,5.004c0.186,1.085-0.459,1.553-1.433,1.041l-4.495-2.363c-0.974-0.512-2.567-0.512-3.541,0l-4.495,2.363c-0.974,0.512-1.618,0.044-1.432-1.041l0.858-5.004c0.186-1.085-0.307-2.6-1.094-3.368L3.93,13.977c-0.788-0.768-0.542-1.525,0.547-1.684l5.026-0.73c1.088-0.158,2.377-1.095,2.864-2.081L14.615,4.928z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Star2Off();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Star2Off = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Star2Off.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Star2Off\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.522,12.293l-5.024-0.73c-1.089-0.158-2.378-1.095-2.864-2.081l-2.249-4.554c-0.487-0.986-1.284-0.986-1.771,0l-2.247,4.554c-0.487,0.986-1.776,1.923-2.864,2.081l-5.026,0.73c-1.088,0.158-1.334,0.916-0.547,1.684l3.637,3.544c0.788,0.769,1.28,2.283,1.094,3.368l-0.858,5.004c-0.186,1.085,0.458,1.553,1.432,1.041l4.495-2.363c0.974-0.512,2.566-0.512,3.541,0l4.495,2.363c0.974,0.512,1.618,0.044,1.433-1.041l-0.859-5.004c-0.186-1.085,0.307-2.6,1.095-3.368l3.636-3.544C27.857,13.209,27.611,12.452,26.522,12.293zM22.037,16.089c-1.266,1.232-1.966,3.394-1.67,5.137l0.514,2.984l-2.679-1.409c-0.757-0.396-1.715-0.612-2.702-0.612s-1.945,0.216-2.7,0.61l-2.679,1.409l0.511-2.982c0.297-1.743-0.404-3.905-1.671-5.137l-2.166-2.112l2.995-0.435c1.754-0.255,3.592-1.591,4.373-3.175L15.5,7.652l1.342,2.716c0.781,1.583,2.617,2.92,4.369,3.173l2.992,0.435L22.037,16.089z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Star3();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Star3 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Star3.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Star3\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.441,28.181c-0.419,0-0.835-0.132-1.189-0.392l-5.751-4.247L9.75,27.789c-0.354,0.26-0.771,0.392-1.189,0.392c-0.412,0-0.824-0.128-1.175-0.384c-0.707-0.511-1-1.422-0.723-2.25l2.26-6.783l-5.815-4.158c-0.71-0.509-1.009-1.416-0.74-2.246c0.268-0.826,1.037-1.382,1.904-1.382c0.004,0,0.01,0,0.014,0l7.15,0.056l2.157-6.816c0.262-0.831,1.035-1.397,1.906-1.397s1.645,0.566,1.906,1.397l2.155,6.816l7.15-0.056c0.004,0,0.01,0,0.015,0c0.867,0,1.636,0.556,1.903,1.382c0.271,0.831-0.028,1.737-0.739,2.246l-5.815,4.158l2.263,6.783c0.276,0.826-0.017,1.737-0.721,2.25C23.268,28.053,22.854,28.181,22.441,28.181L22.441,28.181z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Star3Off();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Star3Off = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Star3Off.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Star3Off\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M28.631,12.359c-0.268-0.826-1.036-1.382-1.903-1.382h-0.015l-7.15,0.056l-2.155-6.816c-0.262-0.831-1.035-1.397-1.906-1.397s-1.645,0.566-1.906,1.397l-2.157,6.816l-7.15-0.056H4.273c-0.868,0-1.636,0.556-1.904,1.382c-0.27,0.831,0.029,1.737,0.74,2.246l5.815,4.158l-2.26,6.783c-0.276,0.828,0.017,1.739,0.723,2.25c0.351,0.256,0.763,0.384,1.175,0.384c0.418,0,0.834-0.132,1.189-0.392l5.751-4.247l5.751,4.247c0.354,0.26,0.771,0.392,1.189,0.392c0.412,0,0.826-0.128,1.177-0.384c0.704-0.513,0.997-1.424,0.721-2.25l-2.263-6.783l5.815-4.158C28.603,14.097,28.901,13.19,28.631,12.359zM19.712,17.996l2.729,8.184l-6.94-5.125L8.56,26.18l2.729-8.184l-7.019-5.018l8.627,0.066L15.5,4.82l2.603,8.225l8.627-0.066L19.712,17.996z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.StarOff();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.StarOff = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.StarOff.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.StarOff\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,22.375L7.116,28.83l3.396-10.438l-8.883-6.458l10.979,0.002L16.002,1.5l3.391,10.434h10.981l-8.886,6.457l3.396,10.439L16,22.375L16,22.375zM22.979,26.209l-2.664-8.205l6.979-5.062h-8.627L16,4.729l-2.666,8.206H4.708l6.979,5.07l-2.666,8.203L16,21.146L22.979,26.209L22.979,26.209z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Start();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Start = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Start.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Start\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.316,5.318,9.833,13.682,9.833,5.5,5.5,5.5,5.5,25.5,9.833,25.5,9.833,17.318,24.316,25.682z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Sticker();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Sticker = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Sticker.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Sticker\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,1.999c-1.042,0-1.916,0.377-2.57,1.088L2.895,13.138C2.302,13.784,1.999,14.58,1.999,15.5C1.999,22.943,8.057,29,15.5,29S29,22.943,29,15.5S22.943,1.999,15.5,1.999zM15.5,28C8.596,28,3,22.404,3,15.5c0-3.452,5.239-2.737,7.501-4.999C12.762,8.239,12.048,3,15.5,3C22.404,3,28,8.597,28,15.5S22.404,28,15.5,28z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Stop();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Stop = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Stop.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Stop\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M5.5,5.5h20v20h-20z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.StopWatch();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.StopWatch = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.StopWatch.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.StopWatch\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.216,18.533c0-3.636-1.655-6.883-4.253-9.032l0.733-0.998l0.482,0.354c0.198,0.146,0.481,0.104,0.628-0.097l0.442-0.604c0.146-0.198,0.103-0.482-0.097-0.628l-2.052-1.506c-0.199-0.146-0.481-0.103-0.628,0.097L22.03,6.724c-0.146,0.199-0.104,0.482,0.096,0.628l0.483,0.354l-0.736,1.003c-1.28-0.834-2.734-1.419-4.296-1.699c0.847-0.635,1.402-1.638,1.403-2.778h-0.002c0-1.922-1.557-3.48-3.479-3.48c-1.925,0-3.48,1.559-3.48,3.48c0,1.141,0.556,2.144,1.401,2.778c-1.549,0.277-2.99,0.857-4.265,1.68L8.424,7.684l0.484-0.353c0.198-0.145,0.245-0.428,0.098-0.628l-0.44-0.604C8.42,5.899,8.136,5.855,7.937,6.001L5.881,7.5c-0.2,0.146-0.243,0.428-0.099,0.628l0.442,0.604c0.145,0.2,0.428,0.244,0.627,0.099l0.483-0.354l0.729,0.999c-2.615,2.149-4.282,5.407-4.282,9.057c0,6.471,5.245,11.716,11.718,11.716c6.47,0,11.716-5.243,11.718-11.716H27.216zM12.918,4.231c0.002-1.425,1.155-2.58,2.582-2.582c1.426,0.002,2.579,1.157,2.581,2.582c-0.002,1.192-0.812,2.184-1.908,2.482v-1.77h0.6c0.246,0,0.449-0.203,0.449-0.449V3.746c0-0.247-0.203-0.449-0.449-0.449h-2.545c-0.247,0-0.449,0.202-0.449,0.449v0.749c0,0.246,0.202,0.449,0.449,0.449h0.599v1.77C13.729,6.415,12.919,5.424,12.918,4.231zM15.5,27.554c-4.983-0.008-9.015-4.038-9.022-9.021c0.008-4.982,4.039-9.013,9.022-9.022c4.981,0.01,9.013,4.04,9.021,9.022C24.513,23.514,20.481,27.546,15.5,27.554zM15.5,12.138c0.476,0,0.861-0.385,0.861-0.86s-0.386-0.861-0.861-0.861s-0.861,0.386-0.861,0.861S15.024,12.138,15.5,12.138zM15.5,24.927c-0.476,0-0.861,0.386-0.861,0.861s0.386,0.861,0.861,0.861s0.861-0.386,0.861-0.861S15.976,24.927,15.5,24.927zM12.618,11.818c-0.237-0.412-0.764-0.553-1.176-0.315c-0.412,0.238-0.554,0.765-0.315,1.177l2.867,6.722c0.481,0.831,1.543,1.116,2.375,0.637c0.829-0.479,1.114-1.543,0.635-2.374L12.618,11.818zM18.698,24.07c-0.412,0.237-0.555,0.765-0.316,1.176c0.237,0.412,0.764,0.554,1.176,0.315c0.413-0.238,0.553-0.765,0.316-1.176C19.635,23.974,19.108,23.832,18.698,24.07zM8.787,15.65c0.412,0.238,0.938,0.097,1.176-0.315c0.237-0.413,0.097-0.938-0.314-1.176c-0.412-0.239-0.938-0.098-1.177,0.313C8.234,14.886,8.375,15.412,8.787,15.65zM22.215,21.413c-0.412-0.236-0.938-0.096-1.176,0.316c-0.238,0.412-0.099,0.938,0.314,1.176c0.41,0.238,0.937,0.098,1.176-0.314C22.768,22.178,22.625,21.652,22.215,21.413zM9.107,18.531c-0.002-0.476-0.387-0.86-0.861-0.86c-0.477,0-0.862,0.385-0.862,0.86c0.001,0.476,0.386,0.86,0.861,0.861C8.722,19.393,9.106,19.008,9.107,18.531zM21.896,18.531c0,0.477,0.384,0.862,0.859,0.86c0.476,0.002,0.862-0.382,0.862-0.859s-0.387-0.86-0.862-0.862C22.279,17.671,21.896,18.056,21.896,18.531zM8.787,21.413c-0.412,0.238-0.554,0.765-0.316,1.176c0.239,0.412,0.765,0.553,1.177,0.316c0.413-0.239,0.553-0.765,0.315-1.178C9.725,21.317,9.198,21.176,8.787,21.413zM21.352,14.157c-0.411,0.238-0.551,0.764-0.312,1.176c0.237,0.413,0.764,0.555,1.174,0.315c0.412-0.236,0.555-0.762,0.316-1.176C22.29,14.06,21.766,13.921,21.352,14.157zM12.304,24.067c-0.413-0.235-0.939-0.096-1.176,0.315c-0.238,0.413-0.098,0.939,0.312,1.178c0.413,0.236,0.939,0.096,1.178-0.315C12.857,24.832,12.715,24.308,12.304,24.067zM18.698,12.992c0.41,0.238,0.938,0.099,1.174-0.313c0.238-0.411,0.1-0.938-0.314-1.177c-0.414-0.238-0.937-0.097-1.177,0.315C18.144,12.229,18.286,12.755,18.698,12.992z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Sun();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Sun = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Sun.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Sun\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.502,7.504c-4.35,0-7.873,3.523-7.873,7.873c0,4.347,3.523,7.872,7.873,7.872c4.346,0,7.871-3.525,7.871-7.872C23.374,11.027,19.85,7.504,15.502,7.504zM15.502,21.25c-3.244-0.008-5.866-2.63-5.874-5.872c0.007-3.243,2.63-5.866,5.874-5.874c3.242,0.008,5.864,2.631,5.871,5.874C21.366,18.62,18.744,21.242,15.502,21.25zM15.502,6.977c0.553,0,1-0.448,1-1.001V1.125c-0.002-0.553-0.448-1-1-1c-0.553,0-1.001,0.449-1,1.002v4.85C14.502,6.528,14.949,6.977,15.502,6.977zM18.715,7.615c0.125,0.053,0.255,0.076,0.382,0.077c0.394,0,0.765-0.233,0.925-0.618l1.856-4.483c0.21-0.511-0.031-1.095-0.541-1.306c-0.511-0.211-1.096,0.031-1.308,0.541L18.174,6.31C17.963,6.82,18.205,7.405,18.715,7.615zM21.44,9.436c0.195,0.194,0.451,0.293,0.707,0.293s0.512-0.098,0.707-0.293l3.43-3.433c0.391-0.39,0.39-1.023,0-1.415c-0.392-0.39-1.025-0.39-1.415,0.002L21.44,8.021C21.049,8.412,21.049,9.045,21.44,9.436zM23.263,12.16c0.158,0.385,0.531,0.617,0.923,0.617c0.127,0,0.257-0.025,0.383-0.078l4.48-1.857c0.511-0.211,0.753-0.797,0.541-1.307s-0.796-0.752-1.307-0.54l-4.481,1.857C23.292,11.064,23.051,11.65,23.263,12.16zM29.752,14.371l-4.851,0.001c-0.552,0-1,0.448-0.998,1.001c0,0.553,0.447,0.999,0.998,0.999l4.852-0.002c0.553,0,0.999-0.449,0.999-1C30.752,14.817,30.304,14.369,29.752,14.371zM29.054,19.899l-4.482-1.854c-0.512-0.212-1.097,0.03-1.307,0.541c-0.211,0.511,0.031,1.096,0.541,1.308l4.482,1.854c0.126,0.051,0.256,0.075,0.383,0.075c0.393,0,0.765-0.232,0.925-0.617C29.806,20.695,29.563,20.109,29.054,19.899zM22.86,21.312c-0.391-0.391-1.023-0.391-1.414,0.001c-0.391,0.39-0.39,1.022,0,1.413l3.434,3.429c0.195,0.195,0.45,0.293,0.706,0.293s0.513-0.098,0.708-0.293c0.391-0.392,0.389-1.025,0-1.415L22.86,21.312zM20.029,23.675c-0.211-0.511-0.796-0.752-1.307-0.541c-0.51,0.212-0.752,0.797-0.54,1.308l1.86,4.48c0.159,0.385,0.531,0.617,0.925,0.617c0.128,0,0.258-0.024,0.383-0.076c0.511-0.211,0.752-0.797,0.54-1.309L20.029,23.675zM15.512,23.778c-0.553,0-1,0.448-1,1l0.004,4.851c0,0.553,0.449,0.999,1,0.999c0.553,0,1-0.448,0.998-1l-0.003-4.852C16.511,24.226,16.062,23.777,15.512,23.778zM12.296,23.142c-0.51-0.21-1.094,0.031-1.306,0.543l-1.852,4.483c-0.21,0.511,0.033,1.096,0.543,1.307c0.125,0.052,0.254,0.076,0.382,0.076c0.392,0,0.765-0.234,0.924-0.619l1.853-4.485C13.051,23.937,12.807,23.353,12.296,23.142zM9.57,21.325c-0.392-0.391-1.025-0.389-1.415,0.002L4.729,24.76c-0.391,0.392-0.389,1.023,0.002,1.415c0.195,0.194,0.45,0.292,0.706,0.292c0.257,0,0.513-0.098,0.708-0.293l3.427-3.434C9.961,22.349,9.961,21.716,9.57,21.325zM7.746,18.604c-0.213-0.509-0.797-0.751-1.307-0.54L1.96,19.925c-0.511,0.212-0.752,0.798-0.54,1.308c0.16,0.385,0.531,0.616,0.924,0.616c0.127,0,0.258-0.024,0.383-0.076l4.479-1.861C7.715,19.698,7.957,19.113,7.746,18.604zM7.1,15.392c0-0.553-0.447-0.999-1-0.999l-4.851,0.006c-0.553,0-1.001,0.448-0.999,1.001c0.001,0.551,0.449,1,1,0.998l4.852-0.006C6.654,16.392,7.102,15.942,7.1,15.392zM1.944,10.869l4.485,1.85c0.125,0.053,0.254,0.076,0.381,0.076c0.393,0,0.766-0.232,0.925-0.618c0.212-0.511-0.032-1.097-0.544-1.306L2.708,9.021c-0.511-0.21-1.095,0.032-1.306,0.542C1.19,10.074,1.435,10.657,1.944,10.869zM8.137,9.451c0.195,0.193,0.449,0.291,0.705,0.291s0.513-0.098,0.709-0.295c0.391-0.389,0.389-1.023-0.004-1.414L6.113,4.609C5.723,4.219,5.088,4.221,4.699,4.612c-0.391,0.39-0.389,1.024,0.002,1.414L8.137,9.451zM10.964,7.084c0.16,0.384,0.532,0.615,0.923,0.615c0.128,0,0.258-0.025,0.384-0.077c0.51-0.212,0.753-0.798,0.54-1.307l-1.864-4.479c-0.212-0.51-0.798-0.751-1.308-0.539C9.129,1.51,8.888,2.096,9.1,2.605L10.964,7.084z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Svg();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Svg = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Svg.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Svg\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M31.274,15.989c0-2.473-2.005-4.478-4.478-4.478l0,0c0.81-0.811,1.312-1.93,1.312-3.167c0-2.474-2.005-4.479-4.479-4.479c-1.236,0-2.356,0.501-3.167,1.312c0-2.473-2.005-4.478-4.478-4.478c-2.474,0-4.479,2.005-4.479,4.478c-0.811-0.81-1.93-1.312-3.167-1.312c-2.474,0-4.479,2.005-4.479,4.479c0,1.236,0.501,2.356,1.312,3.166c-2.474,0-4.479,2.005-4.479,4.479c0,2.474,2.005,4.479,4.479,4.479c-0.811,0.81-1.312,1.93-1.312,3.167c0,2.473,2.005,4.478,4.479,4.478c1.236,0,2.356-0.501,3.167-1.312c0,2.473,2.005,4.479,4.479,4.479c2.473,0,4.478-2.006,4.478-4.479l0,0c0.811,0.811,1.931,1.312,3.167,1.312c2.474,0,4.478-2.005,4.478-4.478c0-1.237-0.501-2.357-1.312-3.168c0.001,0,0.001,0,0.001,0C29.27,20.467,31.274,18.463,31.274,15.989zM23.583,21.211c0.016,0,0.031-0.001,0.047-0.001c1.339,0,2.424,1.085,2.424,2.425c0,1.338-1.085,2.424-2.424,2.424s-2.424-1.086-2.424-2.424c0-0.017,0.001-0.031,0.001-0.047l-3.541-3.542v5.009c0.457,0.44,0.743,1.06,0.743,1.746c0,1.339-1.086,2.424-2.424,2.424c-1.339,0-2.425-1.085-2.425-2.424c0-0.687,0.286-1.306,0.743-1.746v-5.009l-3.541,3.542c0,0.016,0.001,0.031,0.001,0.047c0,1.338-1.085,2.424-2.424,2.424s-2.424-1.086-2.424-2.424c0-1.34,1.085-2.425,2.424-2.425c0.015,0,0.031,0.001,0.046,0.001l3.542-3.541H6.919c-0.44,0.458-1.06,0.743-1.746,0.743c-1.339,0-2.424-1.085-2.424-2.424s1.085-2.424,2.424-2.424c0.686,0,1.305,0.285,1.746,0.744h5.008l-3.542-3.542c-0.015,0-0.031,0.001-0.046,0.001c-1.339,0-2.424-1.085-2.424-2.424S7.001,5.92,8.34,5.92s2.424,1.085,2.424,2.424c0,0.015-0.001,0.031-0.001,0.046l3.541,3.542V6.924c-0.457-0.441-0.743-1.06-0.743-1.746c0-1.339,1.086-2.425,2.425-2.425c1.338,0,2.424,1.085,2.424,2.425c0,0.686-0.286,1.305-0.743,1.746v5.008l3.541-3.542c0-0.015-0.001-0.031-0.001-0.046c0-1.339,1.085-2.424,2.424-2.424s2.424,1.085,2.424,2.424c0,1.339-1.085,2.424-2.424,2.424c-0.016,0-0.031-0.001-0.047-0.001l-3.541,3.542h5.008c0.441-0.458,1.061-0.744,1.747-0.744c1.338,0,2.423,1.085,2.423,2.424s-1.085,2.424-2.423,2.424c-0.687,0-1.306-0.285-1.747-0.743h-5.008L23.583,21.211z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.TShirt();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.TShirt = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.TShirt.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.TShirt\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.1,4.039c-0.681,1.677-2.32,2.862-4.24,2.862c-1.921,0-3.56-1.185-4.24-2.862L1.238,8.442l2.921,6.884l3.208-1.361V28h17.099V14.015l3.093,1.312l2.922-6.884L20.1,4.039z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Tag();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Tag = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Tag.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Tag\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.263,2.826H7.904L2.702,8.028v6.359L18.405,30.09l11.561-11.562L14.263,2.826zM6.495,8.859c-0.619-0.619-0.619-1.622,0-2.24C7.114,6,8.117,6,8.736,6.619c0.62,0.62,0.619,1.621,0,2.241C8.117,9.479,7.114,9.479,6.495,8.859z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.TakeOff();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.TakeOff = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.TakeOff.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.TakeOff\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M10.27,19.267c0,0,9.375-1.981,16.074-8.681c0,0,1.395-1.339-1.338-1.339c-2.305,0-5.6,2.438-5.6,2.438l-9.137-1.42l-1.769,1.769l4.983,2.411l-3.001,2.035l-2.571-1.285L6.09,16.052C6.09,16.052,8.02,18.062,10.27,19.267zM3.251,23.106v1.998h24.498v-1.998H3.251z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Talke();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Talke = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Talke.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Talke\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM16.982,21.375h-1.969v-1.889h1.969V21.375zM16.982,17.469v0.625h-1.969v-0.769c0-2.321,2.641-2.689,2.641-4.337c0-0.752-0.672-1.329-1.553-1.329c-0.912,0-1.713,0.672-1.713,0.672l-1.12-1.393c0,0,1.104-1.153,3.009-1.153c1.81,0,3.49,1.121,3.49,3.009C19.768,15.437,16.982,15.741,16.982,17.469z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Talkq();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Talkq = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Talkq.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Talkq\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM16.868,21.375h-1.969v-1.889h1.969V21.375zM16.772,18.094h-1.777l-0.176-8.083h2.113L16.772,18.094z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Thunder();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Thunder = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Thunder.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Thunder\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.371,7.306c-0.092-3.924-3.301-7.077-7.248-7.079c-2.638,0.001-4.942,1.412-6.208,3.517c-0.595-0.327-1.28-0.517-2.01-0.517C7.626,3.229,5.772,5.033,5.689,7.293c-2.393,0.786-4.125,3.025-4.127,5.686c0,3.312,2.687,6,6,6v-0.002h5.271l-2.166,3.398l1.977-0.411L10,30.875l9.138-10.102L17,21l2.167-2.023h4.269c3.312,0,6-2.688,6-6C29.434,10.34,27.732,8.11,25.371,7.306zM23.436,16.979H7.561c-2.209-0.006-3.997-1.792-4.001-4.001c-0.002-1.982,1.45-3.618,3.35-3.931c0.265-0.043,0.502-0.191,0.657-0.414C7.722,8.41,7.779,8.136,7.73,7.87C7.702,7.722,7.685,7.582,7.685,7.446C7.689,6.221,8.68,5.23,9.905,5.228c0.647,0,1.217,0.278,1.633,0.731c0.233,0.257,0.587,0.375,0.927,0.309c0.342-0.066,0.626-0.307,0.748-0.63c0.749-1.992,2.662-3.412,4.911-3.41c2.899,0.004,5.244,2.35,5.251,5.249c0,0.161-0.009,0.326-0.027,0.497c-0.049,0.517,0.305,0.984,0.815,1.079c1.86,0.344,3.274,1.966,3.271,3.923C27.43,15.186,25.645,16.973,23.436,16.979z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Trash();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Trash = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Trash.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Trash\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.826,5.75l0.396,1.188c1.54,0.575,2.589,1.44,2.589,2.626c0,2.405-4.308,3.498-8.312,3.498c-4.003,0-8.311-1.093-8.311-3.498c0-1.272,1.21-2.174,2.938-2.746l0.388-1.165c-2.443,0.648-4.327,1.876-4.327,3.91v2.264c0,1.224,0.685,2.155,1.759,2.845l0.396,9.265c0,1.381,3.274,2.5,7.312,2.5c4.038,0,7.313-1.119,7.313-2.5l0.405-9.493c0.885-0.664,1.438-1.521,1.438-2.617V9.562C24.812,7.625,23.101,6.42,20.826,5.75zM11.093,24.127c-0.476-0.286-1.022-0.846-1.166-1.237c-1.007-2.76-0.73-4.921-0.529-7.509c0.747,0.28,1.58,0.491,2.45,0.642c-0.216,2.658-0.43,4.923,0.003,7.828C11.916,24.278,11.567,24.411,11.093,24.127zM17.219,24.329c-0.019,0.445-0.691,0.856-1.517,0.856c-0.828,0-1.498-0.413-1.517-0.858c-0.126-2.996-0.032-5.322,0.068-8.039c0.418,0.022,0.835,0.037,1.246,0.037c0.543,0,1.097-0.02,1.651-0.059C17.251,18.994,17.346,21.325,17.219,24.329zM21.476,22.892c-0.143,0.392-0.69,0.95-1.165,1.235c-0.474,0.284-0.817,0.151-0.754-0.276c0.437-2.93,0.214-5.209-0.005-7.897c0.881-0.174,1.708-0.417,2.44-0.731C22.194,17.883,22.503,20.076,21.476,22.892zM11.338,9.512c0.525,0.173,1.092-0.109,1.268-0.633h-0.002l0.771-2.316h4.56l0.771,2.316c0.14,0.419,0.53,0.685,0.949,0.685c0.104,0,0.211-0.017,0.316-0.052c0.524-0.175,0.808-0.742,0.633-1.265l-1.002-3.001c-0.136-0.407-0.518-0.683-0.945-0.683h-6.002c-0.428,0-0.812,0.275-0.948,0.683l-1,2.999C10.532,8.77,10.815,9.337,11.338,9.512z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Twitter();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Twitter = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Twitter.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Twitter\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M23.295,22.567h-7.213c-2.125,0-4.103-2.215-4.103-4.736v-1.829h11.232c1.817,0,3.291-1.469,3.291-3.281c0-1.813-1.474-3.282-3.291-3.282H11.979V6.198c0-1.835-1.375-3.323-3.192-3.323c-1.816,0-3.29,1.488-3.29,3.323v11.633c0,6.23,4.685,11.274,10.476,11.274h7.211c1.818,0,3.318-1.463,3.318-3.298S25.112,22.567,23.295,22.567z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.TwitterBird();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.TwitterBird = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.TwitterBird.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.TwitterBird\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.605,13.11c0.913-2.851,2.029-4.698,3.313-6.038c0.959-1,1.453-1.316,0.891-0.216c0.25-0.199,0.606-0.464,0.885-0.605c1.555-0.733,1.442-0.119,0.373,0.54c2.923-1.045,2.82,0.286-0.271,0.949c2.527,0.047,5.214,1.656,5.987,5.077c0.105,0.474-0.021,0.428,0.464,0.514c1.047,0.186,2.03,0.174,2.991-0.13c-0.104,0.708-1.039,1.167-2.497,1.471c-0.541,0.112-0.651,0.083-0.005,0.229c0.799,0.179,1.69,0.226,2.634,0.182c-0.734,0.846-1.905,1.278-3.354,1.296c-0.904,3.309-2.976,5.678-5.596,7.164c-6.152,3.492-15.108,2.984-19.599-3.359c2.947,2.312,7.312,2.821,10.555-0.401c-2.125,0-2.674-1.591-0.99-2.449c-1.595-0.017-2.608-0.521-3.203-1.434c-0.226-0.347-0.229-0.374,0.14-0.64c0.405-0.293,0.958-0.423,1.528-0.467c-1.651-0.473-2.66-1.335-3.009-2.491c-0.116-0.382-0.134-0.363,0.256-0.462c0.38-0.097,0.87-0.148,1.309-0.17C6.11,10.88,5.336,9.917,5.139,8.852c-0.186-1.006,0.005-0.748,0.758-0.46C9.263,9.68,12.619,11.062,14.605,13.11L14.605,13.11z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Umbrella();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Umbrella = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Umbrella.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Umbrella\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M14.784,26.991c0,1.238-1.329,1.696-1.835,1.696c-0.504,0-1.536-0.413-1.65-1.812c0-0.354-0.288-0.642-0.644-0.642c-0.354,0-0.641,0.287-0.641,0.642c0.045,1.056,0.756,3.052,2.935,3.052c2.432,0,3.166-1.882,3.166-3.144v-8.176l-1.328-0.024C14.787,18.584,14.784,25.889,14.784,26.991zM15.584,9.804c-6.807,0-11.084,4.859-11.587,8.326c0.636-0.913,1.694-1.51,2.89-1.51c1.197,0,2.22,0.582,2.855,1.495c0.638-0.904,1.69-1.495,2.88-1.495c1.2,0,2.26,0.6,2.896,1.517c0.635-0.917,1.83-1.517,3.03-1.517c1.19,0,2.241,0.591,2.879,1.495c0.636-0.913,1.659-1.495,2.855-1.495c1.197,0,2.254,0.597,2.89,1.51C26.669,14.663,22.393,9.804,15.584,9.804zM14.733,7.125v2.081h1.323V7.125c0-0.365-0.296-0.661-0.661-0.661C15.029,6.464,14.733,6.76,14.733,7.125z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Undo();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Undo = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Undo.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Undo\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M12.981,9.073V6.817l-12.106,6.99l12.106,6.99v-2.422c3.285-0.002,9.052,0.28,9.052,2.269c0,2.78-6.023,4.263-6.023,4.263v2.132c0,0,13.53,0.463,13.53-9.823C29.54,9.134,17.952,8.831,12.981,9.073z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Unlock();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Unlock = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Unlock.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Unlock\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.375,12.833h-2.209V10c0,0,0,0,0-0.001c0-2.389,1.945-4.333,4.334-4.333c2.391,0,4.335,1.944,4.335,4.333c0,0,0,0,0,0v2.834h2V9.999h-0.001c-0.001-3.498-2.836-6.333-6.334-6.333S16.166,6.502,16.166,10v2.833H3.125V25h17.25V12.833z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Usb();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Usb = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Usb.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Usb\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M15.5,1.667L13.745,4.74h1.252v15.709L11.8,17.391c-0.205-0.26-0.351-0.601-0.358-0.952c0-1.417-0.001-2.258-0.001-2.568c0.592-0.21,1.02-0.774,1.02-1.444c0-0.849-0.682-1.538-1.521-1.538c-0.84,0-1.521,0.689-1.521,1.538c0,0.67,0.427,1.234,1.019,1.444l-0.001,2.539c0,0.688,0.373,1.409,0.812,1.868c-0.013-0.013-0.027-0.025,0,0c0.011,0.01,3.392,3.245,3.392,3.245c0.205,0.26,0.35,0.6,0.357,0.951v1.776c-1.161,0.236-2.036,1.272-2.036,2.517c0,1.418,1.137,2.566,2.539,2.566c1.403,0,2.54-1.148,2.54-2.566c0-1.244-0.875-2.28-2.038-2.517v-1.746c0-0.005,0-0.009,0-0.014v-3.861c0.008-0.35,0.152-0.689,0.358-0.949c0,0,3.38-3.234,3.392-3.245c0.027-0.026,0.012-0.013,0,0c0.438-0.459,0.811-1.181,0.811-1.869V10.12h1.02V7.046h-3.041v3.075h1.018c0,0-0.002,0.644-0.002,2.476c-0.008,0.351-0.152,0.692-0.357,0.952l-3.198,3.06V4.74h1.254L15.5,1.667z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.User();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.User = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.User.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.User\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.771,12.364c0,0,0.849-3.51,0-4.699c-0.85-1.189-1.189-1.981-3.058-2.548s-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.792-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.321s0.283,3.058,0.566,3.624l-0.337,0.113c-0.283,3.283,1.132,3.68,1.132,3.68c0.509,3.058,1.019,1.756,1.019,2.548s-0.51,0.51-0.51,0.51s-0.452,1.245-1.584,1.698c-1.132,0.452-7.416,2.886-7.927,3.396c-0.511,0.511-0.453,2.888-0.453,2.888h26.947c0,0,0.059-2.377-0.452-2.888c-0.512-0.511-6.796-2.944-7.928-3.396c-1.132-0.453-1.584-1.698-1.584-1.698s-0.51,0.282-0.51-0.51s0.51,0.51,1.02-2.548c0,0,1.414-0.397,1.132-3.68H20.771z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Users();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Users = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Users.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Users\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.053,20.8c-1.132-0.453-1.584-1.698-1.584-1.698s-0.51,0.282-0.51-0.51s0.51,0.51,1.02-2.548c0,0,1.414-0.397,1.132-3.68h-0.34c0,0,0.849-3.51,0-4.699c-0.85-1.189-1.189-1.981-3.058-2.548s-1.188-0.454-2.547-0.396c-1.359,0.057-2.492,0.792-2.492,1.188c0,0-0.849,0.057-1.188,0.397c-0.34,0.34-0.906,1.924-0.906,2.321s0.283,3.058,0.566,3.624l-0.337,0.113c-0.283,3.283,1.132,3.68,1.132,3.68c0.509,3.058,1.019,1.756,1.019,2.548s-0.51,0.51-0.51,0.51s-0.452,1.245-1.584,1.698c-1.132,0.452-7.416,2.886-7.927,3.396c-0.511,0.511-0.453,2.888-0.453,2.888h26.947c0,0,0.059-2.377-0.452-2.888C28.469,23.686,22.185,21.252,21.053,20.8zM8.583,20.628c-0.099-0.18-0.148-0.31-0.148-0.31s-0.432,0.239-0.432-0.432s0.432,0.432,0.864-2.159c0,0,1.199-0.336,0.959-3.119H9.538c0,0,0.143-0.591,0.237-1.334c-0.004-0.308,0.006-0.636,0.037-0.996l0.038-0.426c-0.021-0.492-0.107-0.939-0.312-1.226C8.818,9.619,8.53,8.947,6.947,8.467c-1.583-0.48-1.008-0.385-2.159-0.336C3.636,8.179,2.676,8.802,2.676,9.139c0,0-0.72,0.048-1.008,0.336c-0.271,0.271-0.705,1.462-0.757,1.885v0.281c0.047,0.653,0.258,2.449,0.469,2.872l-0.286,0.096c-0.239,2.783,0.959,3.119,0.959,3.119c0.432,2.591,0.864,1.488,0.864,2.159s-0.432,0.432-0.432,0.432s-0.383,1.057-1.343,1.439c-0.061,0.024-0.139,0.056-0.232,0.092v5.234h0.575c-0.029-1.278,0.077-2.927,0.746-3.594C2.587,23.135,3.754,22.551,8.583,20.628zM30.913,11.572c-0.04-0.378-0.127-0.715-0.292-0.946c-0.719-1.008-1.008-1.679-2.59-2.159c-1.584-0.48-1.008-0.385-2.16-0.336C24.72,8.179,23.76,8.802,23.76,9.139c0,0-0.719,0.048-1.008,0.336c-0.271,0.272-0.709,1.472-0.758,1.891h0.033l0.08,0.913c0.02,0.231,0.022,0.436,0.027,0.645c0.09,0.666,0.21,1.35,0.33,1.589l-0.286,0.096c-0.239,2.783,0.96,3.119,0.96,3.119c0.432,2.591,0.863,1.488,0.863,2.159s-0.432,0.432-0.432,0.432s-0.053,0.142-0.163,0.338c4.77,1.9,5.927,2.48,6.279,2.834c0.67,0.667,0.775,2.315,0.746,3.594h0.48v-5.306c-0.016-0.006-0.038-0.015-0.052-0.021c-0.959-0.383-1.343-1.439-1.343-1.439s-0.433,0.239-0.433-0.432s0.433,0.432,0.864-2.159c0,0,0.804-0.229,0.963-1.841v-1.227c-0.001-0.018-0.001-0.033-0.003-0.051h-0.289c0,0,0.215-0.89,0.292-1.861V11.572z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Video();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Video = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Video.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Video\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.188,4.875v1.094h-4.5V4.875H8.062v1.094h-4.5V4.875h-1v21.25h1v-1.094h4.5v1.094h14.625v-1.094h4.5v1.094h1.25V4.875H27.188zM8.062,23.719h-4.5v-3.125h4.5V23.719zM8.062,19.281h-4.5v-3.125h4.5V19.281zM8.062,14.844h-4.5v-3.125h4.5V14.844zM8.062,10.406h-4.5V7.281h4.5V10.406zM11.247,20.59V9.754l9.382,5.418L11.247,20.59zM27.188,23.719h-4.5v-3.125h4.5V23.719zM27.188,19.281h-4.5v-3.125h4.5V19.281zM27.188,14.844h-4.5v-3.125h4.5V14.844zM27.188,10.406h-4.5V7.281h4.5V10.406z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.View();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.View = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.View.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.View\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M16,8.286C8.454,8.286,2.5,16,2.5,16s5.954,7.715,13.5,7.715c5.771,0,13.5-7.715,13.5-7.715S21.771,8.286,16,8.286zM16,20.807c-2.649,0-4.807-2.157-4.807-4.807s2.158-4.807,4.807-4.807s4.807,2.158,4.807,4.807S18.649,20.807,16,20.807zM16,13.194c-1.549,0-2.806,1.256-2.806,2.806c0,1.55,1.256,2.806,2.806,2.806c1.55,0,2.806-1.256,2.806-2.806C18.806,14.451,17.55,13.194,16,13.194z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Vim();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Vim = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Vim.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Vim\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M25.012,10.44l4.571-4.645c0.11-0.113,0.173-0.264,0.173-0.423V3.134c0-0.159-0.064-0.314-0.177-0.427l-0.604-0.602c-0.111-0.112-0.261-0.176-0.42-0.177l-9.646-0.086C18.71,1.84,18.523,1.935,18.41,2.099L17.807,2.96c-0.033,0.047-0.059,0.099-0.076,0.154l-2.144-2.156l0,0l-1.646,1.666l-0.447-0.497c-0.112-0.125-0.27-0.197-0.438-0.199L3.324,1.756c-0.163-0.003-0.322,0.06-0.437,0.176L2.284,2.535C2.171,2.647,2.107,2.803,2.107,2.962v2.325c0,0.164,0.066,0.32,0.183,0.434l0.657,0.635C3.056,6.461,3.2,6.521,3.352,6.525l0.285,0.007l0.007,6.512l-2.527,2.557l2.533,2.533l0.008,8.084c0,0.159,0.065,0.314,0.177,0.427l0.861,0.861c0.112,0.111,0.268,0.176,0.427,0.176h2.67c0.161,0,0.317-0.064,0.43-0.181l2.378-2.417l4.9,4.9l14.47-14.558L25.012,10.44zM9.747,24.232l-2.208,2.242H5.372l-0.509-0.509L4.856,19.34l-0.008-7.515L4.842,5.943c0-0.328-0.261-0.594-0.588-0.603L3.617,5.326L3.313,5.031v-1.82l0.245-0.245l9.215,0.163l0.319,0.354l0.126,0.141v1.419l-0.352,0.362H12.26c-0.331,0-0.6,0.266-0.603,0.597l-0.076,7.203c-0.002,0.244,0.141,0.463,0.365,0.56c0.224,0.096,0.482,0.049,0.657-0.12l7.495-7.235c0.174-0.171,0.23-0.432,0.139-0.66c-0.09-0.228-0.312-0.377-0.56-0.377h-0.479l-0.296-0.379V3.496l0.312-0.445l9.083,0.081l0.252,0.252v1.743l-4.388,4.458L9.747,24.232z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Volume0();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Volume0 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Volume0.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Volume0\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Volume1();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Volume1 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Volume1.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.Volume1\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Volume2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Volume2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Volume2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Volume2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z M21.101,8.925c-0.393-0.391-1.024-0.391-1.413,0c-0.392,0.391-0.392,1.025,0,1.414c1.45,1.451,2.344,3.447,2.344,5.661c0,2.212-0.894,4.207-2.342,5.659c-0.392,0.39-0.392,1.023,0,1.414c0.195,0.195,0.451,0.293,0.708,0.293c0.256,0,0.512-0.098,0.707-0.293c1.808-1.809,2.929-4.315,2.927-7.073C24.033,13.24,22.912,10.732,21.101,8.925z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Volume3();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Volume3 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Volume3.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Volume3\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M4.998,12.127v7.896h4.495l6.729,5.526l0.004-18.948l-6.73,5.526H4.998z M18.806,11.219c-0.393-0.389-1.024-0.389-1.415,0.002c-0.39,0.391-0.39,1.024,0.002,1.416v-0.002c0.863,0.864,1.395,2.049,1.395,3.366c0,1.316-0.531,2.497-1.393,3.361c-0.394,0.389-0.394,1.022-0.002,1.415c0.195,0.195,0.451,0.293,0.707,0.293c0.257,0,0.513-0.098,0.708-0.293c1.222-1.22,1.98-2.915,1.979-4.776C20.788,14.136,20.027,12.439,18.806,11.219z M21.101,8.925c-0.393-0.391-1.024-0.391-1.413,0c-0.392,0.391-0.392,1.025,0,1.414c1.45,1.451,2.344,3.447,2.344,5.661c0,2.212-0.894,4.207-2.342,5.659c-0.392,0.39-0.392,1.023,0,1.414c0.195,0.195,0.451,0.293,0.708,0.293c0.256,0,0.512-0.098,0.707-0.293c1.808-1.809,2.929-4.315,2.927-7.073C24.033,13.24,22.912,10.732,21.101,8.925z M23.28,6.746c-0.393-0.391-1.025-0.389-1.414,0.002c-0.391,0.389-0.391,1.023,0.002,1.413h-0.002c2.009,2.009,3.248,4.773,3.248,7.839c0,3.063-1.239,5.828-3.246,7.838c-0.391,0.39-0.391,1.023,0.002,1.415c0.194,0.194,0.45,0.291,0.706,0.291s0.513-0.098,0.708-0.293c2.363-2.366,3.831-5.643,3.829-9.251C27.115,12.389,25.647,9.111,23.28,6.746z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Warning();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Warning = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Warning.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Warning\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M29.225,23.567l-3.778-6.542c-1.139-1.972-3.002-5.2-4.141-7.172l-3.778-6.542c-1.14-1.973-3.003-1.973-4.142,0L9.609,9.853c-1.139,1.972-3.003,5.201-4.142,7.172L1.69,23.567c-1.139,1.974-0.207,3.587,2.071,3.587h23.391C29.432,27.154,30.363,25.541,29.225,23.567zM16.536,24.58h-2.241v-2.151h2.241V24.58zM16.428,20.844h-2.023l-0.201-9.204h2.407L16.428,20.844z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.WheelChair();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.WheelChair = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.WheelChair.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.WheelChair\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.373,19.85c0,4.079-3.318,7.397-7.398,7.397c-4.079,0-7.398-3.318-7.398-7.397c0-2.466,1.213-4.652,3.073-5.997l-0.251-2.21c-2.875,1.609-4.825,4.684-4.825,8.207c0,5.184,4.217,9.4,9.401,9.4c4.395,0,8.093-3.031,9.117-7.111L20.37,19.73C20.37,19.771,20.373,19.81,20.373,19.85zM11.768,6.534c1.321,0,2.392-1.071,2.392-2.392c0-1.321-1.071-2.392-2.392-2.392c-1.321,0-2.392,1.071-2.392,2.392C9.375,5.463,10.446,6.534,11.768,6.534zM27.188,22.677l-5.367-7.505c-0.28-0.393-0.749-0.579-1.226-0.538c-0.035-0.003-0.071-0.006-0.106-0.006h-6.132l-0.152-1.335h4.557c0.53,0,0.96-0.429,0.96-0.959c0-0.53-0.43-0.959-0.96-0.959h-4.776l-0.25-2.192c-0.146-1.282-1.303-2.203-2.585-2.057C9.869,7.271,8.948,8.428,9.094,9.71l0.705,6.19c0.136,1.197,1.154,2.078,2.332,2.071c0.004,0,0.007,0.001,0.012,0.001h8.023l4.603,6.436c0.439,0.615,1.338,0.727,2.007,0.248C27.442,24.178,27.628,23.292,27.188,22.677z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Windows();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Windows = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Windows.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Windows\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M20.023,17.484c-1.732-0.205-3.022-0.908-4.212-1.701l0,0l-0.559,0.279l-2.578,8.924l0,0c1.217,0.805,2.905,1.707,4.682,1.914c2.686,0.312,5.56-0.744,6.391-1.195l2.617-9.061l-0.559-0.279C25.805,16.365,23.193,17.857,20.023,17.484zM14.424,14.825c-1.267-0.87-2.578-1.652-4.375-1.816c-0.318-0.029-0.627-0.042-0.925-0.042c-3.011,0-4.948,1.347-4.948,1.347l-2.565,8.877l0,0l0.526,0.281c0.981-0.476,2.78-1.145,5.09-0.984c1.665,0.113,2.92,0.781,4.117,1.531l0.507-0.26l0,0L14.424,14.825zM10.201,12.094c1.664,0.114,2.921,0.78,4.117,1.533l0.509-0.26l0,0L17.4,4.431c-1.27-0.87-2.579-1.653-4.377-1.816c-0.318-0.029-0.626-0.042-0.924-0.042C9.088,2.573,7.15,3.92,7.15,3.92l-2.566,8.878L5.11,13.08C6.092,12.604,7.891,11.936,10.201,12.094zM28.779,5.971L28.779,5.971c0,0.001-2.609,1.492-5.779,1.119c-1.734-0.204-3.023-0.907-4.213-1.701L18.227,5.67l-2.576,8.923l0,0c1.215,0.803,2.906,1.709,4.68,1.915c2.687,0.312,5.558-0.745,6.392-1.197l2.615-9.059L28.779,5.971z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Woman();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Woman = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Woman.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Woman\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M21.022,16.349c-0.611-1.104-1.359-1.998-2.109-2.623c-0.875,0.641-1.941,1.031-3.104,1.031c-1.164,0-2.231-0.391-3.105-1.031c-0.75,0.625-1.498,1.519-2.111,2.623c-1.422,2.563-1.579,5.192-0.351,5.874c0.55,0.307,1.127,0.078,1.723-0.496c-0.105,0.582-0.167,1.213-0.167,1.873c0,2.932,1.139,5.307,2.543,5.307c0.846,0,1.265-0.865,1.466-2.189c0.201,1.324,0.62,2.189,1.464,2.189c1.406,0,2.545-2.375,2.545-5.307c0-0.66-0.061-1.291-0.168-1.873c0.598,0.574,1.174,0.803,1.725,0.496C22.603,21.541,22.444,18.912,21.022,16.349zM15.808,13.757c2.363,0,4.279-1.916,4.279-4.279s-1.916-4.279-4.279-4.279c-2.363,0-4.28,1.916-4.28,4.279S13.445,13.757,15.808,13.757zM18.731,4.974c1.235,0.455,0.492-0.725,0.492-1.531s0.762-1.792-0.492-1.391c-1.316,0.422-2.383,0.654-2.383,1.461S17.415,4.489,18.731,4.974zM15.816,4.4c0.782,0,0.345-0.396,0.345-0.884c0-0.488,0.438-0.883-0.345-0.883s-0.374,0.396-0.374,0.883C15.442,4.005,15.034,4.4,15.816,4.4zM12.884,4.974c1.316-0.484,2.383-0.654,2.383-1.461S14.2,2.474,12.884,2.052c-1.254-0.402-0.492,0.584-0.492,1.391S11.648,5.428,12.884,4.974z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Wrench();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Wrench = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Wrench.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Wrench\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M26.834,14.693c1.816-2.088,2.181-4.938,1.193-7.334l-3.646,4.252l-3.594-0.699L19.596,7.45l3.637-4.242c-2.502-0.63-5.258,0.13-7.066,2.21c-1.907,2.193-2.219,5.229-1.039,7.693L5.624,24.04c-1.011,1.162-0.888,2.924,0.274,3.935c1.162,1.01,2.924,0.888,3.935-0.274l9.493-10.918C21.939,17.625,24.918,16.896,26.834,14.693z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Wrench2();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Wrench2 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Wrench2.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Wrench2\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M24.946,9.721l-2.872-0.768l-0.771-2.874l3.188-3.231c-1.992-0.653-4.268-0.192-5.848,1.391c-1.668,1.668-2.095,4.111-1.279,6.172l-3.476,3.478l-3.478,3.478c-2.062-0.816-4.504-0.391-6.173,1.277c-1.583,1.581-2.043,3.856-1.39,5.849l3.231-3.188l2.874,0.77l0.769,2.872l-3.239,3.197c1.998,0.665,4.288,0.207,5.876-1.384c1.678-1.678,2.1-4.133,1.271-6.202l3.463-3.464l3.464-3.463c2.069,0.828,4.523,0.406,6.202-1.272c1.592-1.589,2.049-3.878,1.384-5.876L24.946,9.721z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.Wrench3();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.Wrench3 = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.Wrench3.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.Wrench3\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M27.839,6.775l-3.197,3.239L21.77,9.246l-0.771-2.874l3.188-3.231c-1.992-0.653-4.268-0.192-5.848,1.391c-1.668,1.668-2.095,4.111-1.279,6.172L7.42,20.344c-0.204-0.032-0.408-0.062-0.621-0.062c-2.173,0-3.933,1.759-3.933,3.933c0,2.173,1.76,3.933,3.933,3.933c2.171,0,3.931-1.76,3.933-3.933c0-0.24-0.03-0.473-0.071-0.7l9.592-9.59c2.069,0.828,4.523,0.406,6.202-1.272C28.047,11.062,28.504,8.772,27.839,6.775zM6.799,25.146c-0.517,0-0.933-0.418-0.935-0.933c0.002-0.515,0.418-0.933,0.935-0.933c0.514,0,0.932,0.418,0.932,0.933S7.313,25.146,6.799,25.146z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ZoomIn();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ZoomIn = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ZoomIn.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.icon.ZoomIn\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.646,19.307c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127l3.535-3.537L22.646,19.307zM13.688,20.369c-3.582-0.008-6.478-2.904-6.484-6.484c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486C20.165,17.465,17.267,20.361,13.688,20.369zM15.687,9.051h-4v2.833H8.854v4.001h2.833v2.833h4v-2.834h2.832v-3.999h-2.833V9.051z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n\r\n *\r\n * @example\r\n *\r\n *    let icon =  new draw2d.shape.icon.ZoomOut();\r\n *\r\n *    canvas.add(icon,50,10);\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.icon.Icon\r\n */\r\ndraw2d.shape.icon.ZoomOut = draw2d.shape.icon.Icon.extend(\r\n  /** @lends draw2d.shape.icon.ZoomOut.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.icon.ZoomOut\",\r\n\r\n  /**\r\n   *\r\n   * Creates a new icon element which are not assigned to any canvas.\r\n   * \r\n   * @param {Object} attr the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 50, height: 50}, attr), setter, getter)\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @returns {Object} the raphaelJS path object\r\n   */\r\n  createSet: function () {\r\n    return this.canvas.paper.path(\"M22.646,19.307c0.96-1.583,1.523-3.435,1.524-5.421C24.169,8.093,19.478,3.401,13.688,3.399C7.897,3.401,3.204,8.093,3.204,13.885c0,5.789,4.693,10.481,10.484,10.481c1.987,0,3.839-0.563,5.422-1.523l7.128,7.127l3.535-3.537L22.646,19.307zM13.688,20.369c-3.582-0.008-6.478-2.904-6.484-6.484c0.006-3.582,2.903-6.478,6.484-6.486c3.579,0.008,6.478,2.904,6.484,6.486C20.165,17.465,17.267,20.361,13.688,20.369zM8.854,11.884v4.001l9.665-0.001v-3.999L8.854,11.884z\")\r\n  }\r\n})\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * FlexGridLayout is a powerful, flexible and precise layout manager that aligns components vertically and\r\n * horizontally in a dynamic rectangular grid of cells, with each component occupying in one or more cell.\r\n * To define a form layout you specify the form's columns, rows. Everyhing that applies to columns applies\r\n * to rows too - just with a different orientation. FlexGridLayout uses the same API, algorithms and implementation\r\n * for column and rows.\r\n *\r\n * FlexGridLayout focuses on form-oriented panels much like the 'Segment' panel. Nevertheless, it is a general purpose\r\n * layout system that can be used for the vast majority of rectangular layouts.\r\n *\r\n * Define your layout with:\r\n * <ul>\r\n *  <li>[number]px</li>\r\n *  <li>grow</li>\r\n *  <li>pref</li>\r\n * </ul>\r\n *\r\n * e.g. we want build a shape with a border on the left and right and a label in the\r\n * center. We allow the center to grow, the shape is resizeable.\r\n *\r\n * <pre>\r\n *    10px       grow         10px\r\n *\r\n *    -----+------------------+-----\r\n *    |    |  [LABEL]         |    |\r\n *    |    |                  |    |\r\n *    |    |                  |    |    grow\r\n *    |    |                  |    |\r\n *    |    |                  |    |\r\n *    -----+------------------+-----\r\n * </pre>\r\n *\r\n * The number forces the exact width or height of the cell. <b>grow</b> respect the minimum width of the\r\n * element and allows to resize the shape. The row/col with the <b>grow</b> declaration will be resized.\r\n * The <b>pref</b> declaration forces the cell to the minimum width/height of the embedded figure.\r\n *\r\n * Example Implementation of a shape:\r\n *\r\n * @example\r\n *    let PredefinedProcess = draw2d.shape.layout.FlexGridLayout.extend({\r\n *\r\n *\r\n *         //     10px       grow         10px\r\n *         //\r\n *         //    -----+------------------+-----\r\n *         //    |    |  [LABEL]         |    |\r\n *         //    |    |                  |    |\r\n *         //    |    |                  |    |    grow\r\n *         //    |    |                  |    |\r\n *         //    |    |                  |    |\r\n *         //    -----+------------------+-----\r\n *         //\r\n *         // @param attr\r\n *         //\r\n *        init: function(attr, setter, getter)\r\n *        {\r\n *           this._super(extend({\r\n *                columns:\"10px, grow, 10px\",\r\n *                rows:   \"grow\",\r\n *                bgColor:\"#FFFFFF\",\r\n *                stroke:2\r\n *            },attr),\r\n *           setter,\r\n *            getter);\r\n *\r\n *\r\n *            this.label = new draw2d.shape.basic.Label({text:\"Process Name\", resizeable:true, stroke:2});\r\n *            this.label.installEditor(new draw2d.ui.LabelInplaceEditor());\r\n *            this.add(this.label, {row:0, col:1});\r\n *\r\n *            this.setDimension(120,80);\r\n *        }\r\n *    });\r\n *    let shape = new PredefinedProcess();\r\n *    canvas.add(shape,10,10);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.layout.Layout\r\n * @since 2.5.1\r\n */\r\ndraw2d.shape.layout.FlexGridLayout = draw2d.shape.layout.Layout.extend(\r\n  /** @lends draw2d.shape.layout.FlexGridLayout.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.layout.FlexGridLayout\",\r\n\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.cellLocator = {\r\n      relocate: (index, figure) => {\r\n        if (this.gridDef.layoutRequired === true) {\r\n          this._layout()\r\n        }\r\n        let cell = figure.__cellConstraint\r\n        let x = cell.x\r\n        let y = cell.y\r\n\r\n        // stretch the figure to fill the complete cell\r\n        //\r\n        if (figure.isResizeable()) {\r\n          figure.setDimension(\r\n            Math.max(figure.getMinWidth(), cell.width),\r\n            Math.max(figure.getMinHeight(), cell.height))\r\n        }\r\n        // else apply the valign and align property\r\n        //\r\n        else {\r\n          // apply vertical alignment\r\n          //\r\n          switch (cell.valign) {\r\n            case \"middle\":\r\n              y += (cell.height - figure.getHeight()) / 2\r\n              break\r\n            case \"bottom\":\r\n              y += (cell.height - figure.getHeight())\r\n              break\r\n          }\r\n\r\n          // apply horizontal alignment\r\n          //\r\n          switch (cell.align) {\r\n            case \"center\":\r\n              x += (cell.width - figure.getWidth()) / 2\r\n              break\r\n            case \"right\":\r\n              x += (cell.width - figure.getWidth())\r\n              break\r\n          }\r\n        }\r\n        figure.setPosition(x, y)\r\n      },\r\n      bind: () => {},\r\n      unbind: () => { },\r\n      translate: (figure, diff) => {\r\n        figure.setPosition(figure.x + diff.x, figure.y + diff.y)\r\n      }\r\n    }\r\n\r\n    this.debug = false\r\n    this.gridDef = {\r\n      debugLines: [],\r\n      def_cols: [],\r\n      def_rows: [],\r\n      min_height: [],\r\n      min_width: [],\r\n      minGridWidth: 10,\r\n      minGridHeight: 10,\r\n      hResizeable: false,\r\n      vResizeable: false,\r\n      layoutRequired: true\r\n    }\r\n\r\n    this._super(\r\n      {stroke: 2, ...attr},\r\n      setter,\r\n      getter)\r\n\r\n    this.resizeListener =  (figure) => {\r\n      this.gridDef.layoutRequired = true\r\n      // propagate the event to the parent or other listener if existing\r\n      //\r\n      if (this.getParent() instanceof draw2d.shape.layout.Layout) {\r\n        this.fireEvent(\"resize\")\r\n      }\r\n      // or we are the parent and must consume it self\r\n      else {\r\n        this.setDimension(\r\n          this.gridDef.hResizeable === true ? this.getWidth() : 1,\r\n          this.gridDef.vResizeable === true ? this.getHeight() : 1\r\n        )\r\n      }\r\n    }\r\n\r\n    let rows = attr.rows.split(\",\")\r\n    let columns = attr.columns.split(\",\")\r\n    for (let i = 0; i < columns.length; i++) {\r\n      this.gridDef.def_cols[i] = this.cellWidthFromDef(columns[i])\r\n    }\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n      this.gridDef.def_rows[i] = this.cellWidthFromDef(rows[i])\r\n    }\r\n\r\n    this.installEditPolicy(new draw2d.policy.figure.RectangleSelectionFeedbackPolicy())\r\n  },\r\n\r\n  add: function (figure, cellConstraint) {\r\n\r\n    figure.__cellConstraint = {\r\n      row: 0,\r\n      col: 0,\r\n      rowspan: 1,\r\n      colspan: 1,\r\n      align: \"left\",\r\n      valign: \"top\",\r\n      width: 1,\r\n      height: 1,\r\n      ...cellConstraint}\r\n    this.gridDef.layoutRequired = true\r\n    this._super(figure, this.cellLocator)\r\n    this._layout()\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinWidth: function () {\r\n    return this.gridDef.minGridWidth\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinHeight: function () {\r\n    return this.gridDef.minGridHeight\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setCanvas: function (canvas) {\r\n    // layout must be recalculated if the shape will be assigned\r\n    // to a canvas. \"Text\" elements can now calculate correct with the right font settings.\r\n    //\r\n    this.gridDef.layoutRequired = true\r\n    this._super(canvas)\r\n\r\n    return this\r\n  },\r\n\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n    this._super(attributes)\r\n    if (this.debug) {\r\n      this.paintDebugGrid()\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  setDimension: function (w, h) {\r\n    // we need the calculated layout to determine the min width/height of the figure\r\n    //\r\n    if (this.gridDef.layoutRequired === true) {\r\n      this._layout()\r\n    }\r\n    // set the new dimension\r\n    this._super(w, h)\r\n\r\n    // after setting the new dimension a recalculation of the layout is required. May the shape\r\n    // has grown up\r\n    this.gridDef.layoutRequired = true\r\n    this.repaint()\r\n\r\n    return this\r\n  },\r\n\r\n  _layout: function () {\r\n    this.gridDef.layoutRequired = false\r\n\r\n    let figures = this.getChildren()\r\n\r\n    // copy the initial requested width/heights\r\n    //\r\n    this.gridDef.min_height = this.gridDef.def_rows.slice(0)\r\n    this.gridDef.min_width = this.gridDef.def_cols.slice(0)\r\n\r\n    // Calculate the basic width/height of the elements without considering the \"span\" and \"grow\"\r\n    //\r\n    for (let i = 0; i < figures.getSize(); i++) {\r\n      let figure = figures.get(i)\r\n      let cell = figure.__cellConstraint\r\n      // ermitteln der derzeitig zur verfügung stehenden weite\r\n      this.gridDef.min_width[cell.col] = Math.max(this.gridDef.min_width[cell.col], figure.getMinWidth())\r\n\r\n      // Falls das Elemente eine y_span hat, dann versuchen ob es auf die ganze\r\n      // höhe rein passt. Wenn nicht wird der Teil der 'grow' angegeben hat verändert.\r\n      // Wenn kein Element 'grow' angegeben hat, dann wird das letzte Element verändert\r\n      if (cell.rowspan > 1) {\r\n        let eHeight = figure.getMinHeight()\r\n        let cHeight = this.cellHeight(cell.row, cell.row + cell.rowspan)\r\n        if (cHeight < eHeight) {\r\n          let diff = eHeight - cHeight\r\n          this.gridDef.min_height[cell.row + cell.rowspan - 1] = this.gridDef.min_height[cell.row + cell.rowspan - 1] + diff\r\n        }\r\n      }\r\n      else {\r\n        this.gridDef.min_height[cell.row] = Math.max(this.gridDef.min_height[cell.row], figure.getMinHeight())\r\n      }\r\n    }\r\n    this.gridDef.minGridWidth = this._getGridWidth()\r\n    this.gridDef.minGridHeight = this._getGridHeight()\r\n\r\n    // Resize the grid height if at least one row supports \"grow\"\r\n    //\r\n    let gridHeight = this._getGridHeight()\r\n    for (let i = 0; i < this.gridDef.def_rows.length; i++) {\r\n      // row found which can grow\r\n      if (this.gridDef.def_rows[i] === -1) {\r\n        this.gridDef.min_height[i] = this.gridDef.min_height[i] + Math.max(0, this.getHeight() - gridHeight)\r\n        this.gridDef.vResizeable = true\r\n        break\r\n      }\r\n    }\r\n\r\n    // Resize the grid if at least one column supports \"grow\"\r\n    //\r\n    let gridWidth = this._getGridWidth()\r\n    for (let i = 0; i < this.gridDef.def_cols.length; i++) {\r\n      // column found which can grow\r\n      if (this.gridDef.def_cols[i] === -1) {\r\n        this.gridDef.min_width[i] = this.gridDef.min_width[i] + Math.max(0, this.getWidth() - gridWidth)\r\n        this.gridDef.hResizeable = true\r\n        break\r\n      }\r\n    }\r\n\r\n    // apply the cell constraints to the elements\r\n    //\r\n    for (let i = 0; i < figures.getSize(); i++) {\r\n      let cell = figures.get(i).__cellConstraint\r\n      cell.width = this.cellWidth(cell.col, cell.col + cell.colspan)\r\n      cell.height = this.cellHeight(cell.row, cell.row + cell.rowspan)\r\n      cell.x = this.cellX(cell.col)\r\n      cell.y = this.cellY(cell.row)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  cellX: function (col) {\r\n    let r = 0\r\n    for (let i = 0; i < col; i++) {\r\n      r = r + this.gridDef.min_width[i]\r\n    }\r\n\r\n    return r\r\n  },\r\n\r\n  cellY: function (row) {\r\n    let r = 0\r\n    for (let i = 0; i < row; i++) {\r\n      r = r + this.gridDef.min_height[i]\r\n    }\r\n\r\n    return r\r\n  },\r\n\r\n  cellWidth: function (from, to) {\r\n    let r = 0\r\n    for (let i = from; i < to; i++) {\r\n      r = r + this.gridDef.min_width[i]\r\n    }\r\n\r\n    return r\r\n  },\r\n\r\n  cellHeight: function (from, to) {\r\n    let r = 0\r\n    for (let i = from; i < to; i++) {\r\n      r = r + this.gridDef.min_height[i]\r\n    }\r\n\r\n    return r\r\n  },\r\n\r\n  paintDebugGrid: function () {\r\n    // alte Linien erstmal entfernen bevor man neue zeichnet\r\n    //\r\n    for (let i = 0; i < this.gridDef.debugLines.length; i++)\r\n      this.gridDef.debugLines[i].remove()\r\n    this.gridDef.debugLines = []\r\n\r\n    let gridHeight = this._getGridHeight()\r\n    let gridWidth = this._getGridWidth()\r\n    let posX = this.getAbsoluteX()\r\n    let posY = this.getAbsoluteY()\r\n\r\n    // draw the cols first\r\n    let x = posX\r\n    for (let i = 0; i <= this.gridDef.min_width.length; i++) {\r\n      let newLine = this.canvas.paper.path(\"M \" + x + \" \" + posY + \" l 0 \" + gridHeight).attr({\r\n        \"stroke\": \"#FF0000\",\r\n        \"stroke-width\": 1\r\n      })\r\n      this.gridDef.debugLines.push(newLine)\r\n      if (i < this.gridDef.min_width.length)\r\n        x = x + this.gridDef.min_width[i]\r\n    }\r\n\r\n    let y = posY\r\n    for (let i = 0; i <= this.gridDef.min_height.length; i++) {\r\n      let newLine = this.canvas.paper.path(\"M \" + posX + \" \" + y + \" l \" + gridWidth + \" 0\").attr({\r\n        \"stroke\": \"#FF0000\",\r\n        \"stroke-width\": 1\r\n      })\r\n      this.gridDef.debugLines.push(newLine)\r\n      if (i < this.gridDef.min_height.length)\r\n        y = y + this.gridDef.min_height[i]\r\n    }\r\n  },\r\n\r\n  _getGridWidth: function () {\r\n    let gridWidth = 0\r\n    for (let i = 0; i < this.gridDef.min_width.length; i++) {\r\n      gridWidth = gridWidth + this.gridDef.min_width[i]\r\n    }\r\n\r\n    return gridWidth\r\n  },\r\n\r\n  _getGridHeight: function () {\r\n    let gridHeight = 0\r\n    for (let i = 0; i < this.gridDef.min_height.length; i++) {\r\n      gridHeight = gridHeight + this.gridDef.min_height[i]\r\n    }\r\n\r\n    return gridHeight\r\n  },\r\n\r\n\r\n  cellWidthFromDef: function (def) {\r\n    let pattern = new RegExp(\"(\\\\d+)(?:px)?\")\r\n    let match = def.match(pattern)\r\n\r\n    if (match != null) {\r\n      return parseInt(match[1])\r\n    }\r\n\r\n    pattern = new RegExp(\"p(?:ref)?\")\r\n    match = def.match(pattern)\r\n    if (match != null) {\r\n      return 0\r\n    }\r\n\r\n    pattern = new RegExp(\"g(?:row)?\")\r\n    match = def.match(pattern)\r\n    if (match != null) {\r\n      this.autoResize = false\r\n      return -1\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * The HorizontalLayout class arranges the layout elements in a horizontal sequence,\r\n * left to right, with optional gaps between the elements.\r\n *\r\n * During the execution of the setDimension() method, the minimum width of the container is calculated\r\n * by accumulating the minimum sizes of the elements, including stroke, gaps and padding.\r\n *\r\n *\r\n * See the example below with and without gap and border settings\r\n *\r\n *\r\n * @example\r\n *\r\n *    // first container without any gap and a border of the parent\r\n *    // container\r\n *    let label1 =  new draw2d.shape.basic.Label({text:\"Label 1\"});\r\n *    let label2 =  new draw2d.shape.basic.Label({text:\"Label 2\"});\r\n *    let label3 =  new draw2d.shape.basic.Label({text:\"Label 3\"});\r\n *\r\n *    let container1 = new draw2d.shape.layout.HorizontalLayout();\r\n *\r\n *    container1.add(label1);\r\n *    container1.add(label2);\r\n *    container1.add(label3);\r\n *    container1.setGap(10);\r\n *    container1.setStroke(2);\r\n *    canvas.add(container1,50,10);\r\n *\r\n *    // second container without any gab or border\r\n *    //\r\n *    let label11 =  new draw2d.shape.basic.Label({text:\"Label 1\"});\r\n *    let label12 =  new draw2d.shape.basic.Label({text:\"Label 2\"});\r\n *    let label13 =  new draw2d.shape.basic.Label({text:\"Label 3\"});\r\n *\r\n *    let container2 = new draw2d.shape.layout.HorizontalLayout();\r\n *\r\n *    container2.add(label11);\r\n *    container2.add(label12);\r\n *    container2.add(label13);\r\n *\r\n *    canvas.add(container2,50,90);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.layout.Layout\r\n * @since 2.5.1\r\n */\r\ndraw2d.shape.layout.HorizontalLayout = draw2d.shape.layout.Layout.extend(\r\n  /** @lends draw2d.shape.layout.HorizontalLayout.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.layout.HorizontalLayout\",\r\n\r\n    /**\r\n     * Create a new instance\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.gap = 0\r\n      let _this = this\r\n      this.locator = {\r\n        translate: function (figure, diff) {\r\n          figure.setPosition(figure.x + diff.x, figure.y + diff.y)\r\n        },\r\n        bind: function () {\r\n        },\r\n        unbind: function () {\r\n        },\r\n        relocate: function (index, target) {\r\n          let stroke = _this.getStroke()\r\n          let yPos = stroke + _this.padding.top\r\n          let xPos = stroke + _this.padding.left // respect the border and padding of the parent\r\n          for (let i = 0; i < index; i++) {\r\n            let child = _this.children.get(i).figure\r\n            if (child.isVisible()) {\r\n              xPos += child.getWidth() + _this.gap\r\n            }\r\n          }\r\n\r\n          target.setPosition(xPos, yPos)\r\n        }\r\n      }\r\n\r\n      this._super(\r\n        {width: 1, height: 1, gap: 0, ...attr},\r\n        {\r\n          // @attr {Number} gap the gap between the children shapes */\r\n          gap: this.setGap,\r\n          ...setter},\r\n        {\r\n          gap: this.getGap,\r\n          ...getter}\r\n      )\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    add: function (child, locator, index) {\r\n      this._super(child, this.locator, index)\r\n\r\n      this.setDimension(1, 1)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the gap width between child components within this layout.\r\n     * This will only affect the space between components, not the space around all the components in the layout.\r\n     *\r\n     * @param {Number} gap The space, in pixels, between items.\r\n     * @since 2.5.1\r\n     */\r\n    setGap: function (gap) {\r\n      this.gap = gap\r\n      // this forces a relayout of the element\r\n      this.setDimension(1, 1)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the gap between the children shapes\r\n     *\r\n     * @since 5.0.0\r\n     *\r\n     */\r\n    getGap: function () {\r\n      return this.gap\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    getMinWidth: function () {\r\n      let _this = this\r\n      let width = this.stroke * 2 + this.padding.left + this.padding.right\r\n      let gap = 0\r\n\r\n      this.children.each(function (i, e) {\r\n        if (e.figure.isVisible()) {\r\n          width += (e.figure.isResizeable() ? e.figure.getMinWidth() : e.figure.getWidth() + gap)\r\n          gap = _this.gap\r\n        }\r\n      })\r\n\r\n      return width\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    getMinHeight: function () {\r\n      let markup = (this.stroke * 2) + this.padding.top + this.padding.bottom\r\n      let height = 0\r\n\r\n      this.children.each(function (i, e) {\r\n        height = Math.max(height, (e.figure.isResizeable() ? e.figure.getMinHeight() : e.figure.getHeight()))\r\n      })\r\n\r\n      return height + markup\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setDimension: function (w, h) {\r\n      this._super(w, h)\r\n\r\n      let diff = this.width - this.getMinWidth()\r\n      if (diff > 0) {\r\n        diff = (diff / this.children.getSize()) | 0\r\n        this.children.each(function (i, e) {\r\n          if (e.figure.isResizeable() === true) {\r\n            e.figure.setDimension(e.figure.getMinWidth() + diff, e.figure.getHeight())\r\n          }\r\n        })\r\n      } else {\r\n        let minHeight = this.getMinHeight()\r\n        this.children.each(function (i, e) {\r\n          // The layout respect the \"resizeable\" flag because a layout is a kind of layouter and\r\n          // any kind of autolayouter must respect this flag\r\n          if (e.figure.isResizeable() === true) {\r\n            // reset the shape to the minimum width/height. see setMinWidth/setMinHeight\r\n            e.figure.setDimension(1, minHeight)\r\n          }\r\n        })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n\r\n      memento.gap = this.gap\r\n\r\n      return memento\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this._super(memento)\r\n\r\n      if (typeof memento.gap === \"number\") {\r\n        this.gap = memento.gap\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n  })\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * A base class for positioning child figures and determining the ideal size for\r\n * a figure with children.\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.layout.Layout = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.shape.layout.Layout.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.layout.Layout\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // @since 4.3.3\r\n    this.padding = {top: 0, right: 0, bottom: 0, left: 0}\r\n\r\n    this._super({bgColor: null, radius: 0, stroke: 0, ...attr},\r\n      {\r\n        // @attr {Number} padding the padding in pixel around the text */\r\n        padding: this.setPadding,\r\n        ...setter\r\n      },\r\n      {\r\n        padding: this.getPadding,\r\n        ...getter\r\n      }\r\n    )\r\n\r\n\r\n    this.resizeListener =  figure => {\r\n      // propagate the event to the parent or other listener if existing\r\n      //\r\n      if (this.getParent() instanceof draw2d.shape.layout.Layout) {\r\n        this.fireEvent(\"resize\")\r\n      }\r\n      // or we are the parent and must consume it self\r\n      else {\r\n        this.setDimension(1, 1)\r\n        this.fireEvent(\"resize\")\r\n      }\r\n    }\r\n\r\n    this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  add: function (child, locator, index) {\r\n    this._super(child, locator, index)\r\n\r\n    child.on(\"resize\", this.resizeListener)\r\n    child.on(\"change:visibility\", this.resizeListener)\r\n\r\n    // don't use the getter/setter. This considers the canvas assignment and\r\n    // the child is always invisible. BIG BUG. The example shape_db will break if you change this.\r\n//       child.setVisible(this.isVisible());\r\n    // respect the \"visible\" flag of the child as well\r\n    child.visible = child.visible && this.visible\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  remove: function (child) {\r\n    let r = this._super(child)\r\n    child.off(this.resizeListener)\r\n    this.setDimension(1, 1)\r\n\r\n    return r\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the padding of the element\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     //\r\n   *     // set the padding for top,left,bottom,right in one call\r\n   *     figure.attr({\r\n   *       padding: 3\r\n   *     });\r\n   *\r\n   *     // update the padding left and top\r\n   *     figure.attr({\r\n   *       padding: {left:3, top:30}\r\n   *     });\r\n   *\r\n   * @param {Number|Object} padding The new padding\r\n   * @since 4.3.3\r\n   **/\r\n  setPadding: function (padding) {\r\n    if (typeof padding === \"number\") {\r\n      this.padding = {top: padding, right: padding, bottom: padding, left: padding}\r\n    }\r\n    else {\r\n      this.padding = {...this.padding, ...padding}\r\n    }\r\n    this.fireEvent(\"change:padding\", {value: this.padding})\r\n\r\n    // force a relayout of the figure\r\n    this.setDimension(1, 1)\r\n\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Get the padding of the element.\r\n   *\r\n   * @since 4.3.3\r\n   * @returns {this}\r\n   **/\r\n  getPadding: function () {\r\n    return this.padding\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   * @returns {this}\r\n   */\r\n  setVisible: function (flag) {\r\n    // propagate the visibility to all children too.\r\n    //\r\n    this.children.each(function (i, e) {\r\n      e.figure.setVisible(flag)\r\n    })\r\n\r\n\r\n    this._super(flag)\r\n\r\n    // force a relayout of the shape because the dimension has been changed\r\n    // by enable/disable of child shapes\r\n    this.setDimension(1, 1)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the Command to perform the specified Request or null.\r\n   *\r\n   * @param {draw2d.command.CommandType} request describes the Command being requested\r\n   * @returns {draw2d.command.Command} null or a Command\r\n   * @private\r\n   **/\r\n  createCommand: function (request) {\r\n    // it is not possible to rate a layout object\r\n    // ..at the moment\r\n    if (request.getPolicy() === draw2d.command.CommandType.ROTATE) {\r\n      return null\r\n    }\r\n\r\n\r\n    return this._super(request)\r\n  }\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n/**\r\n * @class\r\n * Using the StackLayout as their layout shape have their children placed on top of one another.\r\n * Order of placement is determined by the order in which the children were added, first child\r\n * added placed on the bottom. Only one child is visible at once.\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.layout.Layout\r\n */\r\ndraw2d.shape.layout.StackLayout = draw2d.shape.layout.Layout.extend(\r\n  /** @lends draw2d.shape.layout.StackLayout.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.layout.StackLayout\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.visibleLayer = 0\r\n    this.locator = new draw2d.layout.locator.XYAbsPortLocator(0, 0)\r\n\r\n    this._super(\r\n      {resizeable: true, width: 10, height: 10, ...attr},\r\n      { ...setter},\r\n      { ...getter})\r\n\r\n    this.resizeListener =  () => {}\r\n\r\n    // install default selection handler. Can be overridden or replaced\r\n    this.installEditPolicy(new draw2d.policy.figure.RectangleSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the current visible layer of the stack layout\r\n   *\r\n   * @param {Number} visibleLayer the layer to show or -1 to hide all of them\r\n   */\r\n  setVisibleLayer: function (visibleLayer, duration) {\r\n    if(this.visibleLayer>=0) {\r\n      this.getChildren().get(this.visibleLayer).setVisible(false, duration)\r\n    }\r\n    this.visibleLayer = Math.min(this.getChildren().getSize() - 1, Math.max(-1, visibleLayer))\r\n\r\n    if(this.visibleLayer>=0){\r\n      this.getChildren().get(this.visibleLayer).setVisible(true, duration)\r\n    }\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the current visible layer\r\n   *\r\n   * @returns {Number}\r\n   */\r\n  getVisibleLayer: function () {\r\n    return this.visibleLayer\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  add: function (child, locator, index) {\r\n    // the child didn't care about events...at the moment\r\n    //\r\n    child.hitTest =  () =>  false\r\n\r\n    // make all existing shapes invisible\r\n    //\r\n    this.getChildren().each( (i, c) => {\r\n      c.setVisible(false)\r\n    })\r\n    this.visibleLayer = this.getChildren().getSize()\r\n\r\n    // ignore the parameter \"locator\" and use the locator for the stack layout instead\r\n    return this._super(child, this.locator, index)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setVisible: function (flag) {\r\n    draw2d.shape.basic.Rectangle.prototype.setVisible.call(this, flag)\r\n\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinWidth: function () {\r\n    let markup = (this.stroke * 2) + this.padding.left + this.padding.right\r\n    let width = 10\r\n    this.children.each( (i, e)=> {\r\n      width = Math.max(width, e.figure.isResizeable() ? e.figure.getMinWidth() : e.figure.getWidth())\r\n    })\r\n    return width + markup\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinHeight: function () {\r\n    let markup = (this.stroke * 2) + this.padding.top + this.padding.bottom\r\n    let height = 10\r\n    this.children.each( (i, e) =>{\r\n      height = Math.max(height, e.figure.isResizeable() ? e.figure.getMinHeight() : e.figure.getHeight())\r\n    })\r\n    return height + markup\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    this._super(w, h)\r\n\r\n    let width = this.width - this.padding.left - this.padding.right\r\n    let height = this.height - this.padding.top - this.padding.bottom\r\n    if (width === this._recursiveWidth && height === this._recursiveHeight) {\r\n      return this\r\n    }\r\n    this._recursiveHeight = height\r\n    this._recursiveWidth = width\r\n\r\n    this.children.each( (i, e) =>{\r\n      if (e.figure.isResizeable()) {\r\n        e.figure.setDimension(width, height)\r\n      }\r\n    })\r\n\r\n    delete this._recursiveHeight\r\n    delete this._recursiveWidth\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The TableLayout class arranges the children in a row/column order. Each cell can be styled\r\n * with valign, align and padding.\r\n *\r\n *\r\n * See the example below with and without padding or alignment settings\r\n *\r\n *\r\n * @example\r\n *\r\n *        let label1 =  new draw2d.shape.basic.Label({text:\"[0,1] with long long long long label\", fontColor:\"#00AF00\"});\r\n *        let label2 =  new draw2d.shape.basic.Label({text:\"[1,1] padding:10\", fontColor:\"#00AF00\"});\r\n *        let label3 =  new draw2d.shape.basic.Label({text:\"[2,1] align:right\", fontColor:\"#00AF00\"});\r\n *        let label4 =  new draw2d.shape.basic.Label({text:\"[3,1] resize:true\",resizeable:true, fontColor:\"#00AF00\"});\r\n *\r\n *        let container = new draw2d.shape.layout.TableLayout();\r\n *\r\n *        container.addRow(\"[0,0]\", label1 ,\"[0,2] align:center\");\r\n *        container.addRow(\"[1,0] valign:bottom\", label2,\"[1,2] long long long label\");\r\n *        container.addRow(\"[2,0]\", label3,\"[2,2]\");\r\n *        container.addRow(\"[3,0]\", label4,\"[3,2]\");\r\n *\r\n *        container.setPadding(0);\r\n *        container.setCellPadding(1,1, 10);\r\n *\r\n *        container.setCellAlign(0,2, \"center\");\r\n *        container.setCellAlign(2,1, \"right\");\r\n *\r\n *        container.setCellVerticalAlign(1, 0, \"bottom\");\r\n *        canvas.add(container,10,10);\r\n *\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.layout.Layout\r\n * @since 5.3.0\r\n */\r\ndraw2d.shape.layout.TableLayout = draw2d.shape.layout.Layout.extend(\r\n  /** @lends draw2d.shape.layout.TableLayout.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.layout.TableLayout\",\r\n\r\n  DUMMY_CELL: {\r\n    getMinHeight: function () {\r\n      return 1\r\n    },\r\n    getMinWidth: function () {\r\n      return 1\r\n    },\r\n    off: function () {\r\n    }\r\n  },\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    let _this = this\r\n    this.cellLocator = {\r\n      relocate: function (index, figure) {\r\n        if (_this.repaintBlocked === true) {\r\n          return\r\n        }\r\n        let cell = figure.__cell\r\n        let layout = _this.getCellLayout(cell.row, cell.column)\r\n        let outerWidth = _this.getWidth()\r\n        let minWidth = _this.getMinWidth()\r\n        let widthOffset = 0\r\n        if (outerWidth != minWidth) {\r\n          widthOffset = ((outerWidth - minWidth) / _this.layoutInfos[0].length) * cell.column\r\n        }\r\n\r\n        let width = figure.getWidth()\r\n        let height = figure.getHeight()\r\n        let x = layout.x + _this.padding.left + layout.padding.left + widthOffset\r\n        let y = layout.y + _this.padding.top + layout.padding.top\r\n\r\n        // stretch the figure to fill the complete cell\r\n        //\r\n        if (figure.isResizeable()) {\r\n          let w = Math.max(figure.getMinWidth(), layout.w - (layout.padding.left + layout.padding.right) + widthOffset)\r\n          let h = Math.max(figure.getMinHeight(), layout.h - (layout.padding.top + layout.padding.bottom))\r\n          figure.setDimension(w, h)\r\n        }\r\n        // else apply the valign and align property\r\n        //\r\n        else {\r\n          // apply vertical alignment\r\n          //\r\n          switch (layout.valign) {\r\n            case \"middle\":\r\n              y = y + (layout.h - (height + layout.padding.top + layout.padding.bottom)) / 2\r\n              break\r\n            case \"bottom\":\r\n              y = y + (layout.h - (height + layout.padding.top + layout.padding.bottom))\r\n              break\r\n          }\r\n\r\n          // apply horizontal alignment\r\n          //\r\n          switch (layout.align) {\r\n            case \"center\":\r\n              x = x + (layout.w - (width + layout.padding.left + layout.padding.right)) / 2 + (widthOffset / 2)\r\n              break\r\n            case \"right\":\r\n              x = x + (layout.w - (width + layout.padding.left + layout.padding.right)) + widthOffset\r\n              break\r\n          }\r\n        }\r\n        figure.setPosition(x, y)\r\n      },\r\n      bind: function () {\r\n      },\r\n      unbind: function () {\r\n      },\r\n      translate: function (figure, diff) {\r\n        figure.setPosition(figure.x + diff.x, figure.y + diff.y)\r\n      }\r\n    }\r\n\r\n    this.padding = {top: 4, right: 4, bottom: 4, left: 4}\r\n\r\n    this.grid = []\r\n    this.layoutInfos = []\r\n    this.layoutInfos[0] = []\r\n    this.layoutInfos[0][0] = {x: 0, y: 0, w: 1, h: 1, valign: \"top\", align: \"left\"}\r\n\r\n\r\n    this._super(\r\n      extend({stroke: 1, resizeable: false}, attr),\r\n      extend({\r\n        // @attr {Number} padding the padding in pixel around the text */\r\n        padding: this.setPadding\r\n      }, setter),\r\n      extend({\r\n        padding: this.getPadding\r\n      }, getter))\r\n\r\n\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the padding of the given cell.\r\n   *\r\n   *\r\n   * @param {Number|Object} padding The new padding\r\n   **/\r\n  setCellPadding: function (row, column, padding) {\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null) {\r\n      return this\r\n    }\r\n\r\n    if (typeof padding === \"number\") {\r\n      layout.padding = {top: padding, right: padding, bottom: padding, left: padding}\r\n    }\r\n    else {\r\n      extend(layout.padding, padding)\r\n    }\r\n\r\n    this.calculateLayout()\r\n    this.setDimension(1, 1)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Get the padding of the outer grid.\r\n   *\r\n   **/\r\n  getCellPadding: function (row, column) {\r\n\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null || typeof layout.padding === \"undefined\") {\r\n      return {top: 0, right: 0, bottom: 0, left: 0}\r\n    }\r\n    return layout.padding\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the padding of the outer grid.\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     //\r\n   *     // set the padding for top,left,bottom,right in one call\r\n   *     figure.attr({\r\n   *       padding: 3\r\n   *     });\r\n   *\r\n   *     // update the padding left and top\r\n   *     figure.attr({\r\n   *       padding: {left:3, top:30}\r\n   *     });\r\n   *\r\n   * @param {Number|Object} padding The new padding\r\n   **/\r\n  setPadding: function (padding) {\r\n    if (typeof padding === \"number\") {\r\n      this.padding = {top: padding, right: padding, bottom: padding, left: padding}\r\n    }\r\n    else {\r\n      this.padding = extend(this.padding, padding)\r\n    }\r\n    this.calculateLayout()\r\n    this.setDimension(1, 1)\r\n    this.fireEvent(\"change:padding\", {value: this.padding})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Get the padding of the outer grid.\r\n   *\r\n   **/\r\n  getPadding: function () {\r\n    return this.padding\r\n  },\r\n\r\n  setCanvas: function (canvas) {\r\n    this._super(canvas)\r\n    this.calculateLayout()\r\n    this.setDimension(2, 2)\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  add: function (child, locator, index) {\r\n    this._super(child, locator, index)\r\n\r\n    this.setDimension(1, 1)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * \r\n   * Removes the row from the TableLayout\r\n   *\r\n   * @returns the removed row\r\n   */\r\n  removeRow: function (index) {\r\n    let _this = this\r\n    let removedRow = this.grid.splice(index, 1)\r\n    removedRow[0].forEach(function (figure) {\r\n      _this.remove(figure)\r\n    })\r\n\r\n    this.calculateLayout()\r\n    this.setDimension(2, 2)\r\n\r\n    return removedRow\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Add a row to the table grid.\r\n   * This method has a variable argument list. All arguments are added in one row.\r\n   *\r\n   * @param {Array} figures variable count of figures to add as one row\r\n   */\r\n  addRow: function () {\r\n    let figuresToAdd = []\r\n    let _this = this\r\n    let args = Array.prototype.slice.call(arguments) // sometimes js is stupid...\r\n\r\n    let rowCount = this.grid.length + 1\r\n    let columnCount = this.grid.length > 0 ? Math.max(this.grid[0].length, args.length) : args.length\r\n\r\n    let row = []\r\n\r\n    args.forEach(function (figure, index) {\r\n      if (typeof figure === \"string\") {\r\n        figure = new draw2d.shape.basic.Label({text: figure})\r\n      }\r\n      row.push(figure)\r\n      figuresToAdd.push(figure)\r\n    })\r\n    this.grid.push(row)\r\n\r\n    // adjust the columns. All rows must have the same column count. Add empty cells\r\n    // if required.\r\n    //\r\n    this.grid.forEach(function (row, index) {\r\n      let missingColumns = columnCount - row.length\r\n      for (let i = 0; i < missingColumns; i++) {\r\n        row.push(_this.DUMMY_CELL)\r\n      }\r\n    })\r\n\r\n    let orig = this.repaintBlocked\r\n    this.repaintBlocked = true\r\n    figuresToAdd.forEach(function (figure) {\r\n      _this.add(figure, _this.cellLocator)\r\n    })\r\n    this.repaintBlocked = orig\r\n\r\n    this.calculateLayout()\r\n    this.setDimension(1, 1)\r\n\r\n    return this\r\n  },\r\n\r\n  getMinWidth: function () {\r\n    // return some good default if we are not part of the canvas.\r\n    // A real width/height calculation isn'T possible if the canvas not set\r\n    if (this.canvas === null || this.layoutInfos.length === 0) {\r\n      return 10\r\n    }\r\n\r\n    let bottom = this.layoutInfos[this.layoutInfos.length - 1]\r\n    let layout = bottom[bottom.length - 1]\r\n\r\n    return layout.w + layout.x + this.padding.left + this.padding.right\r\n  },\r\n\r\n  getMinHeight: function () {\r\n    // return some good default if we are not part of the canvas.\r\n    // A real width/height calculation isn'T possible if the canvas not set\r\n    if (this.canvas === null || this.layoutInfos.length === 0) {\r\n      return 10\r\n    }\r\n\r\n    let bottom = this.layoutInfos[this.layoutInfos.length - 1]\r\n    let layout = bottom[bottom.length - 1]\r\n\r\n    return layout.h + layout.y + this.padding.top + this.padding.bottom\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the vertical alignment of a cell. Possible values are\r\n   * <ul>\r\n   * <li>top</li>\r\n   * <li>middle</li>\r\n   * <li>bottom</li>\r\n   * </ul>\r\n   *\r\n   * @param {Number} row  The row index of the cell. Starting by 0\r\n   * @param {Number} column The column index of the cell. Starting by 0\r\n   * @param {String} align The vertical alignment of the cell\r\n   */\r\n  setCellVerticalAlign: function (row, column, valign) {\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null) {\r\n      return // silently\r\n    }\r\n\r\n    switch (valign) {\r\n      case \"top\":\r\n      case \"middle\":\r\n      case \"bottom\":\r\n        layout.valign = valign\r\n        this.calculateLayout()\r\n        this.setDimension(1, 1)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Get the vertical alignment of a cell. Possible values are\r\n   * <ul>\r\n   * <li>top</li>\r\n   * <li>middle</li>\r\n   * <li>bottom</li>\r\n   * </ul>\r\n   *\r\n   * @param {Number} row  The row index of the cell. Starting by 0\r\n   * @param {Number} column The column index of the cell. Starting by 0\r\n   * @returns {String} The vertical alignment of the cell\r\n   */\r\n  getCellVerticalAlign: function (row, column) {\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null) {\r\n      return \"top\"\r\n    }\r\n\r\n    return layout.valign\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the alignment of a cell. Possible values are\r\n   * <ul>\r\n   * <li>left</li>\r\n   * <li>center</li>\r\n   * <li>right</li>\r\n   * </ul>\r\n   *\r\n   *\r\n   * @param {Number} row  The row index of the cell. Starting by 0\r\n   * @param {Number} column The column index of the cell. Starting by 0\r\n   * @param {String} align The horizontal alignment of the cell\r\n   */\r\n  setCellAlign: function (row, column, align) {\r\n\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null) {\r\n      return // silently\r\n    }\r\n\r\n    switch (align) {\r\n      case \"left\":\r\n      case \"center\":\r\n      case \"right\":\r\n        layout.align = align\r\n        this.calculateLayout()\r\n        this.setDimension(1, 1)\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Return the alignment of a cell. Possible values are\r\n   * <ul>\r\n   * <li>left</li>\r\n   * <li>center</li>\r\n   * <li>right</li>\r\n   * </ul>\r\n   *\r\n   *\r\n   * @param {Number} row  The row index of the cell. Starting by 0\r\n   * @param {Number} column The column index of the cell. Starting by 0\r\n   * return {String} The horizontal alignment of the cell\r\n   */\r\n  getCellAlign: function (row, column) {\r\n\r\n    let layout = this.getCellLayout(row, column)\r\n    if (layout === null) {\r\n      return \"left\"\r\n    }\r\n    return layout.align\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the layout information for the given row/column or <b>null</b>\r\n   * if the row/column index is out of range.\r\n   *\r\n   * @private\r\n   */\r\n  getCellLayout: function (row, column) {\r\n    if (row < 0 || column < 0) {\r\n      return null // silently\r\n    }\r\n\r\n    if (row >= this.layoutInfos.length) {\r\n      return null // silently\r\n    }\r\n\r\n    let layouts = this.layoutInfos[row]\r\n    if (column >= layouts.length) {\r\n      return null // silently\r\n    }\r\n\r\n    return layouts[column]\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Recalculate the layout of the table\r\n   *\r\n   * @private\r\n   */\r\n  calculateLayout: function () {\r\n    let _this = this\r\n    let rowCount = this.grid.length\r\n    let columnCount = this.grid.length > 0 ? this.grid[0].length : 0\r\n\r\n    let newLayoutInfos = []\r\n    for (let row = 0; row < rowCount; row++) {\r\n      newLayoutInfos[row] = []\r\n      for (let column = 0; column < columnCount; column++) {\r\n        newLayoutInfos[row][column] = {\r\n          width: 0,\r\n          height: 0,\r\n          x: 0,\r\n          y: 0,\r\n          valign: this.getCellVerticalAlign(row, column),\r\n          align: this.getCellAlign(row, column),\r\n          padding: this.getCellPadding(row, column)\r\n        }\r\n      }\r\n    }\r\n\r\n    // determine the heights/widths of the grid\r\n    //\r\n    let layoutWidths = new Array(columnCount + 1).join('0').split('').map(parseFloat)\r\n    let layoutHeights = new Array(rowCount + 1).join('0').split('').map(parseFloat)\r\n    this.grid.forEach(function (figures, row) {\r\n      for (let column = 0; column < columnCount; column++) {\r\n        let layout = newLayoutInfos[row][column]\r\n        let figure = figures[column]\r\n        figure.__cell = {row: row, column: column}\r\n        layoutHeights[row] = Math.max(layoutHeights[row], figure.getMinHeight() + layout.padding.top + layout.padding.bottom)\r\n        layoutWidths[column] = Math.max(layoutWidths[column], figure.getMinWidth() + layout.padding.left + layout.padding.right)\r\n      }\r\n    })\r\n\r\n    let x = 0, y = 0\r\n    for (let row = 0; row < rowCount; row++) {\r\n      for (let column = 0; column < columnCount; column++) {\r\n        let layout = newLayoutInfos[row][column]\r\n        layout.w = layoutWidths[column]\r\n        layout.h = layoutHeights[row]\r\n        layout.x = x\r\n        layout.y = y\r\n        x = x + layout.w\r\n      }\r\n      y = y + layoutHeights[row]\r\n      x = 0\r\n    }\r\n\r\n    this.layoutInfos = newLayoutInfos\r\n\r\n    return this\r\n  }\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * The VerticalLayout class arranges the layout elements in a vertical sequence,\r\n * left to right, with optional gaps between the elements.\r\n *\r\n * During the execution of the setDimension() method, the minimum height of the container is calculated\r\n * by accumulating the minimum sizes of the elements, including stroke, gaps and padding.\r\n *\r\n * See the example below with and without gap and border settings\r\n *\r\n *\r\n * @example\r\n *\r\n *    // first container without any gap and a border of the parent\r\n *    // container\r\n *    let label1 =  new draw2d.shape.basic.Label({text:\"Label 1\"});\r\n *    let label2 =  new draw2d.shape.basic.Label({text:\"Label 2\"});\r\n *    let label3 =  new draw2d.shape.basic.Label({text:\"Label 3\"});\r\n *\r\n *    let container1 = new draw2d.shape.layout.VerticalLayout();\r\n *\r\n *    container1.add(label1);\r\n *    container1.add(label2);\r\n *    container1.add(label3);\r\n *    container1.setGap(10);\r\n *    container1.setStroke(2);\r\n *    canvas.add(container1,50,10);\r\n *\r\n *    // second container without any gab or border\r\n *    //\r\n *    let label11 =  new draw2d.shape.basic.Label({text:\"Label 1\"});\r\n *    let label12 =  new draw2d.shape.basic.Label({text:\"Label 2\"});\r\n *    let label13 =  new draw2d.shape.basic.Label({text:\"Label 3\"});\r\n *\r\n *    let container2 = new draw2d.shape.layout.VerticalLayout();\r\n *\r\n *    container2.add(label11);\r\n *    container2.add(label12);\r\n *    container2.add(label13);\r\n *\r\n *    canvas.add(container2,150,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.layout.Layout\r\n */\r\ndraw2d.shape.layout.VerticalLayout = draw2d.shape.layout.Layout.extend(\r\n  /** @lends draw2d.shape.layout.VerticalLayout.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.layout.VerticalLayout\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // some layout parameter\r\n    //\r\n    this.gap = 0\r\n\r\n    // \"this\" shortcut to avoid $.proxy\r\n    let _this = this\r\n\r\n    this.locator = {\r\n      translate: function (figure, diff) {\r\n        figure.setPosition(figure.x + diff.x, figure.y + diff.y)\r\n      },\r\n      bind: function () {\r\n      },\r\n      unbind: function () {\r\n      },\r\n      relocate: function (index, target) {\r\n        let stroke = _this.getStroke()\r\n        let yPos = stroke + _this.padding.top // respect the border and padding of the shape\r\n        let xPos = _this.padding.left\r\n\r\n        for (let i = 0; i < index; i++) {\r\n          let child = _this.children.get(i).figure\r\n          if (child.isVisible()) {\r\n            yPos += child.getHeight() + _this.gap\r\n          }\r\n        }\r\n\r\n        target.setPosition(xPos, yPos)\r\n      }\r\n    }\r\n\r\n    this._super(\r\n      extend({width: 10, height: 10}, attr),\r\n      extend({\r\n        // @attr {Number} gap the gap between the children shapes */\r\n        gap: this.setGap\r\n      }, setter),\r\n      extend({\r\n        gap: this.getGap\r\n      }, getter))\r\n\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  add: function (child, locator, index) {\r\n    this._super(child, this.locator, index)\r\n\r\n    this.setDimension(1, 1)\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the gap width between child components within this layout.\r\n   * This will only affect the space between components, not the space around all the components in the layout.\r\n   *\r\n   * @param {Number} gap The space, in pixels, between items.\r\n   */\r\n  setGap: function (gap) {\r\n    this.gap = gap\r\n    // this forces a relayout of the element\r\n    this.setDimension(1, 1)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinWidth: function () {\r\n    let markup = (this.stroke * 2) + this.padding.left + this.padding.right\r\n    let width = 10\r\n    this.children.each(function (i, e) {\r\n      if (e.figure.isVisible())\r\n        width = Math.max(width, e.figure.isResizeable() ? e.figure.getMinWidth() : e.figure.getWidth())\r\n    })\r\n    return width + markup\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinHeight: function () {\r\n    let _this = this\r\n    let gap = 0\r\n    let markup = (this.stroke * 2) + this.padding.top + this.padding.bottom\r\n    let height = 0\r\n\r\n    this.children.each(function (i, e) {\r\n      if (e.figure.isVisible()) {\r\n        height += ((e.figure.isResizeable() ? e.figure.getMinHeight() : e.figure.getHeight()) + gap)\r\n        // first element is iterated. Now we must add the gap to all next elements\r\n        gap = _this.gap\r\n      }\r\n    })\r\n\r\n    return height + markup\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    this._super(w, h)\r\n\r\n    let width = this.width - this.padding.left - this.padding.right\r\n    if (width === this._recursiveWidth) {\r\n      return this\r\n    }\r\n    this._recursiveWidth = width\r\n\r\n    this.children.each(function (i, e) {\r\n      if (e.figure.isResizeable() && e.figure.isVisible()) {\r\n        e.figure.setDimension(width, e.figure.getMinHeight())\r\n      }\r\n    })\r\n\r\n    delete this._recursiveWidth\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    let memento = this._super()\r\n\r\n    memento.gap = this.gap\r\n\r\n    return memento\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.gap === \"number\") {\r\n      this.gap = memento.gap\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A simple Node which has a  InputPort and OutputPort. Mainly used for demo and examples.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.node.Between({color: \"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.node.Between = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.shape.node.Between.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.node.Between\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#4D90FE\"),\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({\r\n      bgColor: this.DEFAULT_COLOR,\r\n      color: this.DEFAULT_COLOR.darker(),\r\n      width: 50,\r\n      height: 50\r\n    }, attr), setter, getter)\r\n\r\n    this.createPort(\"output\")\r\n    this.createPort(\"input\")\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * A simple Node which has a InputPort. Mainly used for demo and examples.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.node.End({color: \"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.node.End = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.shape.node.End.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.node.End\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#4D90FE\"),\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({\r\n      bgColor: this.DEFAULT_COLOR,\r\n      color: this.DEFAULT_COLOR.darker(),\r\n      width: 50,\r\n      height: 50\r\n    }, attr), setter, getter)\r\n\r\n    this.createPort(\"input\")\r\n\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\nimport jsonUtil from '../../util/JSONUtil'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A horizontal bus shape with a special kind of port handling. The hole figure is a hybrid port.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.add( new draw2d.shape.node.Fulcrum(),50,10);\r\n *    canvas.add( new draw2d.shape.node.Fulcrum(),80,100);\r\n *    canvas.add( new draw2d.shape.node.Fulcrum(),150,50);\r\n *\r\n * @extends draw2d.shape.node.Hub\r\n */\r\ndraw2d.shape.node.Fulcrum = draw2d.shape.node.Hub.extend(\r\n  /** @lends draw2d.shape.node.Fulcrum.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.node.Fulcrum\",\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({width: 40, height: 40}, attr), setter, getter)\r\n\r\n\r\n    this.port.setConnectionAnchor(new draw2d.layout.anchor.ConnectionAnchor(this.port))\r\n    this.port.setVisible(true)\r\n    this.port.hitTest = this.port._orig_hitTest\r\n\r\n    this.setConnectionDirStrategy(0)\r\n    this.setColor(null)\r\n    this.setRadius(10)\r\n    this.setBackgroundColor(null)\r\n    this.setStroke(0)\r\n    this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy())\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    // set some good defaults if the parent didn't\r\n    attributes.fill ??=this.bgColor.rgba()\r\n\r\n    return this._super(attributes)\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A horizontal bus shape with a special kind of port handling. The hole figure is a hybrid port.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.node.HorizontalBus({width:300, height:20, text:\"Horizontal Bus\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.node.Hub\r\n */\r\ndraw2d.shape.node.HorizontalBus = draw2d.shape.node.Hub.extend(\r\n  /** @lends draw2d.shape.node.HorizontalBus.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.node.HorizontalBus\",\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.setConnectionDirStrategy(1)\r\n\r\n    this.installEditPolicy(new draw2d.policy.figure.HBusSelectionFeedbackPolicy())\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\nimport Color from '../../util/Color'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A hub is a shape with a special kind of port handling. The hole figure is a hybrid port. You can drag&drop a Port directly on\r\n * the figure.\r\n *\r\n *\r\n * @example\r\n *\r\n *\r\n *    canvas.add(new draw2d.shape.node.Start({x:50, y:50}));\r\n *    canvas.add(new draw2d.shape.node.Hub({x:150, y:50}));\r\n *\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.node.Hub = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.shape.node.Hub.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.shape.node.Hub\",\r\n\r\n    DEFAULT_COLOR: new Color(\"#4DF0FE\"),\r\n    BACKGROUND_COLOR: new Color(\"#29AA77\"),\r\n\r\n    /**\r\n     *\r\n     * @param {Object} [attr] the configuration of the shape\r\n     */\r\n    init: function (attr, setter, getter) {\r\n      this.label = null\r\n\r\n      this._super(\r\n        {\r\n          color: this.DEFAULT_COLOR.darker(), \r\n          bgColor: this.BACKGROUND_COLOR, \r\n          ...attr\r\n        },\r\n        extend({\r\n          // deprecated\r\n          label: this.setLabel,\r\n          // @attr {String} text the text to display in the center of the hub */\r\n          text: this.setLabel\r\n        }, setter),\r\n        extend({\r\n          label: this.getLabel,\r\n          text: this.getLabel\r\n        }, getter))\r\n\r\n      let _port = this.port = this.createPort(\"hybrid\", new draw2d.layout.locator.CenterLocator())\r\n\r\n      let r = draw2d.geo.Rectangle\r\n      this.CONNECTION_DIR_STRATEGY = [\r\n        function (peerPort) {\r\n          return _port.getParent().getBoundingBox().getDirection(peerPort.getAbsolutePosition())\r\n        },\r\n        function (peerPort) {\r\n          return _port.getAbsoluteY() > peerPort.getAbsoluteY() ? r.DIRECTION_UP : r.DIRECTION_DOWN\r\n        },\r\n        function (peerPort) {\r\n          return _port.getAbsoluteX() > peerPort.getAbsoluteX() ? r.DIRECTION_LEFT : r.DIRECTION_RIGHT\r\n        }]\r\n\r\n      // redirect the glow effect and the hitTest for the port to the parent node\r\n      //\r\n      this.port.setGlow = this.setGlow.bind(this)\r\n      this.port._orig_hitTest = this.port.hitTest\r\n      this.port.hitTest = this.hitTest.bind(this)\r\n\r\n\r\n      // provide a special connection anchor for this port. We use the bounding box of the\r\n      // parent as connection border\r\n      //\r\n      this.port.setConnectionAnchor(new draw2d.layout.anchor.ShortesPathConnectionAnchor(this.port))\r\n      this.port.setVisible(false)\r\n      this.port.setVisible = function () {\r\n      }\r\n\r\n      this.setConnectionDirStrategy(0)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Called by the framework during drag&drop operations if the user drag a figure over this figure\r\n     *\r\n     * @param {draw2d.Figure} draggedFigure The figure which is currently dragging\r\n     *\r\n     * @returns {draw2d.Figure} the figure which should receive the drop event or null if the element didn't want a drop event\r\n     **/\r\n    delegateTarget: function (draggedFigure) {\r\n      // redirect the dragEnter handling to the hybrid port\r\n      //\r\n      return this.getHybridPort(0).delegateTarget(draggedFigure)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * This value is relevant for the interactive resize of the figure.\r\n     *\r\n     * @returns {Number} Returns the min. width of this object.\r\n     */\r\n    getMinWidth: function () {\r\n      if (this.label !== null) {\r\n        return Math.max(this.label.getMinWidth(), this._super())\r\n      }\r\n      return this._super()\r\n    },\r\n\r\n\r\n    /**\r\n     * @inheritdoc\r\n     *\r\n     * @private\r\n     */\r\n    repaint: function (attributes) {\r\n      if (this.repaintBlocked === true || this.shape === null) {\r\n        return\r\n      }\r\n\r\n      attributes ??= {}\r\n\r\n      // set some good defaults if the parent didn't\r\n      if (typeof attributes.fill === \"undefined\") {\r\n        if (this.bgColor !== null) {\r\n          attributes.fill = \"90-\" + this.bgColor.hash() + \":5-\" + this.bgColor.lighter(0.3).hash() + \":95\"\r\n        } else {\r\n          attributes.fill = \"none\"\r\n        }\r\n      }\r\n\r\n      this._super(attributes)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the label for the Hub\r\n     *\r\n     *     // Alternatively you can use the attr method:\r\n     *     figure.attr({\r\n     *       text: label\r\n     *     });\r\n     *\r\n     *\r\n     * @param {String} label\r\n     * @since 3.0.4\r\n     */\r\n    setLabel: function (label) {\r\n      // Create any Draw2D figure as decoration for the connection\r\n      //\r\n      if (this.label === null) {\r\n\r\n        this.label = new draw2d.shape.basic.Label({text: label, color: \"#0d0d0d\", fontColor: \"#0d0d0d\", stroke: 0})\r\n        // add the new decoration to the connection with a position locator.\r\n        //\r\n        this.add(this.label, new draw2d.layout.locator.CenterLocator())\r\n        this.label.setSelectionAdapter( () => this )\r\n        this.label.delegateTarget = () => this.port\r\n      } else {\r\n        this.label.setText(label)\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Set the strategy for the connection direction calculation.<br>\r\n     * <br>\r\n     *\r\n     * <ul>\r\n     * <li>0 - Use the best/shortest direction (UP/RIGHT/DOWN/LEFT) for the connection routing (default)</li>\r\n     * <li>1 - Use UP/DOWN for the connection direction</li>\r\n     * <li>2 - Use LEFT/RIGHT</li>\r\n     * </ul>\r\n     * @param {Number} strategy the connection routing strategy to use\r\n     * @since 2.4.3\r\n     */\r\n    setConnectionDirStrategy: function (strategy) {\r\n      switch (strategy) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n          this.port.getConnectionDirection = this.CONNECTION_DIR_STRATEGY[strategy]\r\n          break\r\n      }\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    getPersistentAttributes: function () {\r\n      let memento = this._super()\r\n\r\n      memento.dirStrategy = this.CONNECTION_DIR_STRATEGY.indexOf(this.port.getConnectionDirection)\r\n      if (this.label !== null) {\r\n        memento.label = this.label.getText()\r\n      }\r\n\r\n      return memento\r\n    },\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this._super(memento)\r\n\r\n      if (typeof memento.dirStrategy === \"number\") {\r\n        this.setConnectionDirStrategy(memento.dirStrategy)\r\n      }\r\n\r\n      if (typeof memento.label !== \"undefined\") {\r\n        this.setLabel(memento.label)\r\n      }\r\n    }\r\n\r\n  })\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A Node is the base class for all figures which can have {@link draw2d.Port}s. A {@link draw2d.Port} is the\r\n * anchor for a {@link draw2d.Connection} line.<br><br>A {@link draw2d.Port} is a green dot which can\r\n * be dragged and dropped over another port.<br>\r\n * @inheritable\r\n * @author Andreas Herz\r\n * @extends draw2d.Figure\r\n */\r\ndraw2d.shape.node.Node = draw2d.Figure.extend(\r\n  /** @lends draw2d.shape.node.Node.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.node.Node\",\r\n\r\n  /**\r\n   * Creates a new Node element which are not assigned to any canvas.\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this.inputPorts = new draw2d.util.ArrayList()\r\n    this.outputPorts = new draw2d.util.ArrayList()\r\n    this.hybridPorts = new draw2d.util.ArrayList()\r\n\r\n    // flag which indicates if the figure should read/write ports to\r\n    // JSON\r\n    this.persistPorts = true\r\n\r\n    // Flags just for performance reasons\r\n    //\r\n    this.portRelayoutRequired = true\r\n\r\n    // just for performance reasons\r\n    //\r\n    this.cachedPorts = null\r\n\r\n    this._super(\r\n      {width: 50, height: 50, ...attr},\r\n      {\r\n        // @attr {Number} indicate whenever you want persists the ports too */\r\n        persistPorts: this.setPersistPorts,\r\n        ...setter\r\n      },\r\n      {\r\n        persistPorts: this.getPersistPorts,\r\n        ...getter\r\n      })\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Indicates if the node should read/write the ports via the draw2d.Figure.getPersistenAttributes\r\n   * to the JSON object\r\n   *\r\n   * @param {Boolean} flag\r\n   * @since 5.0.4\r\n   */\r\n  setPersistPorts: function (flag) {\r\n    this.persistPorts = flag\r\n    this.fireEvent(\"change:persistPorts\", {value: this.persistPorts})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Indicates if the figure writes the ports to the JSON structore too.\r\n   * Default is \"false\"\r\n   *\r\n   * @returns {Boolean}\r\n   */\r\n  getPersistPorts: function () {\r\n    return this.persistPorts\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  toFront: function (figure) {\r\n    this._super(figure)\r\n\r\n    this.getPorts().each((i, port) => {\r\n      port.getConnections().each((i, connection) => connection.toFront(figure))\r\n      port.toFront(this)\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  toBack: function (figure) {\r\n\r\n    this.getPorts().each((i, port) => {\r\n      port.getConnections().each((i, connection) => connection.toBack(figure))\r\n      port.toBack(figure)\r\n    })\r\n\r\n    this._super(figure)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setVisible: function (flag, duration) {\r\n    // adjust the visibility of the ports to the parent state\r\n    //\r\n    if (!flag) {\r\n      this.getPorts().each( (i, port) => {\r\n        port.__initialVisibilityState = port.isVisible()\r\n        port.setVisible(false, duration)\r\n      })\r\n    }\r\n    else {\r\n      this.getPorts().each( (i, port) => {\r\n        if (typeof port.__initialVisibilityState !== \"undefined\") {\r\n          port.setVisible(port.__initialVisibilityState, duration)\r\n        }\r\n        else {\r\n          port.setVisible(true, duration)\r\n        }\r\n        delete port.__initialVisibilityState\r\n      })\r\n    }\r\n    this._super(flag, duration)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return all ports of the node. The results contains\r\n   * all ports of the children too per default. Set <b>recursive</b>\r\n   * to false to retrieve direct assigned ports only.\r\n   *\r\n   * @param {Boolean} [recursive] indicates if the method should return children ports too. Default is <b>true</b>\r\n   * @returns  {draw2d.util.ArrayList}\r\n   **/\r\n  getPorts: function (recursive) {\r\n\r\n    if (typeof recursive === \"boolean\" && recursive === false) {\r\n      let ports = new draw2d.util.ArrayList()\r\n      ports.addAll(this.inputPorts)\r\n      ports.addAll(this.outputPorts)\r\n      ports.addAll(this.hybridPorts)\r\n      return ports\r\n    }\r\n\r\n    if (this.cachedPorts === null) {\r\n      this.cachedPorts = new draw2d.util.ArrayList()\r\n      this.cachedPorts.addAll(this.inputPorts)\r\n      this.cachedPorts.addAll(this.outputPorts)\r\n      this.cachedPorts.addAll(this.hybridPorts)\r\n\r\n      this.children.each((i, e) => {\r\n        this.cachedPorts.addAll(e.figure.getPorts())\r\n      })\r\n    }\r\n    return this.cachedPorts\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return all input ports of the node.\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   **/\r\n  getInputPorts: function () {\r\n    return this.inputPorts\r\n      .clone()\r\n      .addAll(this.hybridPorts)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return all output ports of the node.\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   **/\r\n  getOutputPorts: function () {\r\n    return this.outputPorts\r\n      .clone()\r\n      .addAll(this.hybridPorts)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Clone the figure. <br>\r\n   * You must override and implement the methods <b>getPersistentAttributes</b> and <b>setPersistentAttributes</b> for your custom\r\n   * figures if the have special attributes.\r\n   *\r\n   * The clone() method performs a deep copy of the object, meaning that it copies the children, ports and decorations\r\n   * per default. You can control the clone procedure with the 'cloneMetaData'.\r\n   *\r\n   *\r\n   * @param {Object} [cloneMetaData] controls the clone procedure\r\n   * @param {Boolean} [cloneMetaData.excludeChildren] set it to true if you want exclude the children.\r\n   * @param {Boolean} [cloneMetaData.excludePorts] set it to true if you want exclude the ports of the node.\r\n   *\r\n   * @since 4.1.0\r\n   * @experimental\r\n   */\r\n  clone: function (cloneMetaData) {\r\n    cloneMetaData = {excludePorts: false, ...cloneMetaData}\r\n\r\n    let clone = this._super(cloneMetaData)\r\n\r\n    // remove all ports of the clone. the \"init\" method can have create some. but this must\r\n    // removed because we want a clone of an existing figure\r\n    //\r\n    if (cloneMetaData.excludePorts === false) {\r\n      clone.resetPorts()\r\n      let ports = this.getPorts(false)\r\n\r\n      ports.each(function (i, port) {\r\n        let clonePort = port.clone()\r\n        let locator = port.getLocator().clone()\r\n        clone.addPort(clonePort, locator)\r\n      })\r\n    }\r\n\r\n    return clone\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the port with the corresponding name.\r\n   *\r\n   *\r\n   * @param {String} portName The name of the port to return.\r\n   * @returns {draw2d.Port} Returns the port with the hands over name or null.\r\n   **/\r\n  getPort: function (portName) {\r\n    return this.getPorts().find(e => e.getName() === portName)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the input port with the corresponding name.\r\n   *\r\n   *\r\n   * @param {String/Number} portNameOrIndex The name or numeric index of the port to return.\r\n   * @returns {draw2d.InputPort} Returns the port with the hands over name or null.\r\n   **/\r\n  getInputPort: function (portNameOrIndex) {\r\n    if (typeof portNameOrIndex === \"number\") {\r\n      return this.inputPorts.get(portNameOrIndex)\r\n    }\r\n\r\n    return this.inputPorts.find( port => port.getName()===portNameOrIndex )\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the output port with the corresponding name.\r\n   *\r\n   * @param {String/Number} portNameOrIndex The name or the numeric index of the port to return.\r\n   * @returns {draw2d.OutputPort} Returns the port with the hands over name or null.\r\n   **/\r\n  getOutputPort: function (portNameOrIndex) {\r\n    if (typeof portNameOrIndex === \"number\") {\r\n      return this.outputPorts.get(portNameOrIndex)\r\n    }\r\n\r\n    return this.outputPorts.find( port => port.getName()===portNameOrIndex )\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return the input port with the corresponding name.\r\n   *\r\n   *\r\n   * @param {String/Number} portNameOrIndex The name or numeric index of the port to return.\r\n   * @returns {draw2d.InputPort} Returns the port with the hands over name or null.\r\n   **/\r\n  getHybridPort: function (portNameOrIndex) {\r\n    if (typeof portNameOrIndex === \"number\") {\r\n      return this.hybridPorts.get(portNameOrIndex)\r\n    }\r\n\r\n    return this.hybridPorts.find( port => port.getName()===portNameOrIndex )\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Add a port to this node at the given position.<br>\r\n   *\r\n   * @param {draw2d.Port} port The new port to add.\r\n   * @param {draw2d.layout.locator.Locator} locator The layout for the port.\r\n   **/\r\n  addPort: function (port, locator) {\r\n    if (!(port instanceof draw2d.Port)) {\r\n      throw \"Argument is not typeof 'draw2d.Port'. \\nFunction: draw2d.shape.node.Node#addPort\"\r\n    }\r\n\r\n    // add to the internal cache if already build\r\n    if (this.cachedPorts !== null) {\r\n      this.cachedPorts.add(port)\r\n    }\r\n\r\n    this.portRelayoutRequired = true\r\n\r\n    if (port instanceof draw2d.InputPort) {\r\n      this.inputPorts.add(port)\r\n    }\r\n    else if (port instanceof draw2d.OutputPort) {\r\n      this.outputPorts.add(port)\r\n    }\r\n    else if (port instanceof draw2d.HybridPort) {\r\n      this.hybridPorts.add(port)\r\n    }\r\n\r\n    if ((typeof locator !== \"undefined\") && (locator instanceof draw2d.layout.locator.Locator)) {\r\n      port.setLocator(locator)\r\n    }\r\n\r\n    port.setParent(this)\r\n    port.setCanvas(this.canvas)\r\n\r\n    // You can't delete a port with the [DEL] key if a port is a child of a node\r\n    port.setDeleteable(false)\r\n\r\n    if (this.canvas !== null) {\r\n      port.getShapeElement()\r\n      this.canvas.registerPort(port)\r\n    }\r\n\r\n    return port\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Remove all ports of this node\r\n   *\r\n   * @since 5.0.0\r\n   * @returns {this}\r\n   */\r\n  resetPorts: function () {\r\n    this.getPorts().each((i, port) => this.removePort(port))\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Removes a port and all related connections from this node.<br>\r\n   *\r\n   * @param {draw2d.Port} port The port to remove.\r\n   * @returns {this}\r\n   **/\r\n  removePort: function (port) {\r\n    this.portRelayoutRequired = true\r\n\r\n    this.cachedPorts = null\r\n    this.inputPorts.remove(port)\r\n    this.outputPorts.remove(port)\r\n    this.hybridPorts.remove(port)\r\n\r\n    if (port.getCanvas() !== null) {\r\n      let canvas = port.getCanvas()\r\n      canvas.unregisterPort(port)\r\n      // remove the related connections of the port too.\r\n      let connections = port.getConnections().clone()\r\n      connections.each( (i, connection) => {\r\n        canvas.remove(connection)\r\n      })\r\n    }\r\n\r\n    port.setCanvas(null)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Create a standard Port for this element. Inherited class can override this\r\n   * method to create its own type of ports.\r\n   *\r\n   * @param {String} type the type of the requested port. possible [\"input\", \"output\"]\r\n   * @param {draw2d.layout.locator.Locator} [locator] the layouter to use for this port\r\n   * @template\r\n   */\r\n  createPort: function (type, locator) {\r\n    let newPort = null\r\n    let count = 0\r\n\r\n    switch (type) {\r\n      case \"input\":\r\n        newPort = draw2d.Configuration.factory.createInputPort(this)\r\n        count = this.inputPorts.getSize()\r\n        break\r\n      case \"output\":\r\n        newPort = draw2d.Configuration.factory.createOutputPort(this)\r\n        count = this.outputPorts.getSize()\r\n        break\r\n      case \"hybrid\":\r\n        newPort = draw2d.Configuration.factory.createHybridPort(this)\r\n        count = this.hybridPorts.getSize()\r\n        break\r\n      default:\r\n        throw \"Unknown type [\" + type + \"] of port requested\"\r\n    }\r\n\r\n    newPort.setName(type + count)\r\n\r\n    this.addPort(newPort, locator)\r\n    // relayout the ports\r\n    this.setDimension(this.width, this.height)\r\n\r\n    return newPort\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Return all connections related to this node.\r\n   *\r\n   * @returns {draw2d.util.ArrayList}\r\n   */\r\n  getConnections: function () {\r\n    let connections = new draw2d.util.ArrayList()\r\n    let ports = this.getPorts()\r\n    for (let i = 0; i < ports.getSize(); i++) {\r\n      let port = ports.get(i)\r\n      // Do NOT add twice the same connection if it is linking ports from the same node\r\n      for (let c = 0, c_size = port.getConnections().getSize(); c < c_size; c++) {\r\n        if (!connections.contains(port.getConnections().get(c))) {\r\n          connections.add(port.getConnections().get(c))\r\n        }\r\n      }\r\n    }\r\n    return connections\r\n  },\r\n\r\n\r\n  /**\r\n   * @returns {this}\r\n   */\r\n  setCanvas: function (canvas) {\r\n    let oldCanvas = this.canvas\r\n    this._super(canvas)\r\n\r\n    let ports = this.getPorts()\r\n    if (oldCanvas !== null) {\r\n      ports.each((i, port) => oldCanvas.unregisterPort(port))\r\n    }\r\n\r\n    if (canvas !== null) {\r\n      ports.each((i, port) => {\r\n        port.setCanvas(canvas)\r\n        canvas.registerPort(port)\r\n      })\r\n      // relayout the ports\r\n      this.setDimension(this.width, this.height)\r\n    }\r\n    else {\r\n      ports.each((i, port) => port.setCanvas(null))\r\n    }\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @returns {this}\r\n   */\r\n  setRotationAngle: function (angle) {\r\n    this.portRelayoutRequired = true\r\n    this._super(angle)\r\n\r\n    this.layoutPorts()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * @returns {this}\r\n   */\r\n  setDimension: function (w, h) {\r\n    this.portRelayoutRequired = true\r\n    this._super(w, h)\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Called if the value of any port has been changed\r\n   *\r\n   * @param {draw2d.Port} relatedPort\r\n   * @template\r\n   */\r\n  onPortValueChanged: function (relatedPort) {\r\n  },\r\n\r\n  /**\r\n   * @private\r\n   * @return {this}\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return this\r\n    }\r\n\r\n    this._super(attributes)\r\n    this.layoutPorts()\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @private\r\n   * @returns {this}\r\n   */\r\n  layoutPorts: function () {\r\n    if (this.portRelayoutRequired === false) {\r\n      return this//silently\r\n    }\r\n    this.portRelayoutRequired = false\r\n\r\n    // layout the ports\r\n    //\r\n    this.outputPorts.each((i, port) => port.locator.relocate(i, port))\r\n    this.inputPorts.each((i, port) => port.locator.relocate(i, port))\r\n    this.hybridPorts.each((i, port) => port.locator.relocate(i, port))\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Returns the Command to perform the specified Request or null.\r\n   *\r\n   * @param {draw2d.command.CommandType} request describes the Command being requested\r\n   * @returns {draw2d.command.Command} null or a Command\r\n   * @private\r\n   **/\r\n  createCommand: function (request) {\r\n    if (request === null) {\r\n      return null\r\n    }\r\n\r\n    if (request.getPolicy() === draw2d.command.CommandType.ROTATE) {\r\n      return new draw2d.command.CommandRotate(this, (this.getRotationAngle() + 90) % 360)\r\n    }\r\n\r\n\r\n    return this._super(request)\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return an objects with all important attributes for XML or JSON serialization\r\n   *\r\n   * @returns {Object}\r\n   */\r\n  getPersistentAttributes: function () {\r\n    let memento = this._super()\r\n\r\n    // write all ports to the JSON\r\n    //\r\n    if (this.persistPorts === true) {\r\n      memento.ports = []\r\n      this.getPorts().each(function (i, port) {\r\n        memento.ports.push(\r\n          {...port.getPersistentAttributes(), \r\n            name: port.getName(),\r\n            port: port.NAME,\r\n            locator: port.getLocator().NAME,\r\n            locatorAttr: port.getLocator().attr()\r\n          }\r\n        )\r\n      })\r\n    }\r\n\r\n    return memento\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Read all attributes from the serialized properties and transfer them into the shape.\r\n   *\r\n   * @param {Object} memento\r\n   * @returns {this}\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.ports !== \"undefined\") {\r\n      // we read the ports from the JSON and now we save it to the JSON too.\r\n      this.persistPorts = true\r\n\r\n      // remove all ports created in the init method\r\n      //\r\n      this.resetPorts()\r\n\r\n      // and restore all ports of the JSON document instead.\r\n      //\r\n      memento.ports.forEach((e) => {\r\n        let locator = Function(`return new ${e.locator}()`)()\r\n        if(e.locatorAttr) {\r\n          locator.attr(e.locatorAttr)\r\n        }\r\n\r\n        let port = Function(`return new ${e.port}()`)()\r\n        port.setPersistentAttributes(e)\r\n        this.addPort(port, locator)\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A generic Node which has an OutputPort. Mainly used for demos and examples.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.node.Start({color: \"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.node.Start = draw2d.shape.basic.Rectangle.extend(\r\n  /** @lends draw2d.shape.node.Start.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.node.Start\",\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#4D90FE\"),\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({\r\n      bgColor: this.DEFAULT_COLOR,\r\n      color: this.DEFAULT_COLOR.darker(),\r\n      width: 50,\r\n      height: 50\r\n    }, attr), setter, getter)\r\n    this.createPort(\"output\")\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A horizontal bus shape with a special kind of port handling. The hole figure is a hybrid port.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.node.VerticalBus({width:40, height:300, text:\"Vertical Bus\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.node.Hub\r\n */\r\ndraw2d.shape.node.VerticalBus = draw2d.shape.node.Hub.extend(\r\n  /** @lends draw2d.shape.node.VerticalBus.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.node.VerticalBus\",\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.setConnectionDirStrategy(2)\r\n    this.installEditPolicy(new draw2d.policy.figure.VBusSelectionFeedbackPolicy())\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * set the label for the Hub\r\n   *\r\n   * @param {String} labelString\r\n   * @since 3.0.4\r\n   */\r\n  setLabel: function (labelString) {\r\n    let mustAdjustTheAngel = this.label === null\r\n\r\n    this._super(labelString)\r\n\r\n    if (mustAdjustTheAngel === true && this.label !== null) {\r\n      this.label.setRotationAngle(90)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinHeight: function () {\r\n    if (this.shape === null && this.label === null) {\r\n      return 0\r\n    }\r\n\r\n    if (this.label !== null) {\r\n      return this.label.getMinWidth()\r\n    }\r\n\r\n    return this._super()\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getMinWidth: function () {\r\n    if (this.shape === null && this.label === null) {\r\n      return 0\r\n    }\r\n\r\n    if (this.label !== null) {\r\n      return this.label.getMinHeight()\r\n    }\r\n\r\n    return this._super()\r\n  }\r\n\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Simple Post-it like figure with text. Can be used for annotations or documentation.\r\n *\r\n *\r\n * @example\r\n *\r\n *    let shape =  new draw2d.shape.note.PostIt({\r\n *       text:\"This is a simple sticky note\",\r\n *       color:\"#000000\",\r\n *       padding:20\r\n *    });\r\n *\r\n *    canvas.add(shape,40,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.shape.basic.Label\r\n */\r\ndraw2d.shape.note.PostIt = draw2d.shape.basic.Label.extend(\r\n  /** @lends draw2d.shape.note.PostIt.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.note.PostIt\",\r\n\r\n  /**\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.setStroke(1)\r\n    this.setBackgroundColor(\"#5b5b5b\")\r\n    this.setColor(\"#FFFFFF\")\r\n    this.setFontColor(\"#ffffff\")\r\n    this.setFontSize(14)\r\n    this.setPadding(5)\r\n    this.setRadius(5)\r\n  }\r\n})\r\n\r\n\r\n\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * NOT FOR PRODUCTIVE\r\n *\r\n * Checkout [Wikipedia PERT][1] for more information.\r\n * [1] http://en.wikipedia.org/wiki/Program_Evaluation_and_Review_Technique\r\n *\r\n * Double click on the Task name or the top middle number to change the value.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.add( new draw2d.shape.pert.Start(),10,10);\r\n *    canvas.add( new draw2d.shape.pert.Activity(),80,130);\r\n *    canvas.add( new draw2d.shape.pert.Activity(),180,50);\r\n *\r\n *\r\n *\r\n *\r\n * @extends draw2d.shape.layout.VerticalLayout\r\n */\r\ndraw2d.shape.pert.Activity = draw2d.shape.layout.VerticalLayout.extend(\r\n  /** @lends draw2d.shape.pert.Activity.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.pert.Activity\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // shortcut for some callback methods to avoid $.proxy wrapper\r\n    let _this = this\r\n\r\n    // persistence values for the activity\r\n    // will be stored/read in the JSON\r\n    this.mementoValues = {\r\n      duration: null\r\n    }\r\n\r\n    // just some color attributes for the rendering/gradient\r\n    this.bgColor = new draw2d.util.Color(\"#f3f3f3\")\r\n    this.lighterBgColor = this.bgColor.lighter(0.2).rgba()\r\n    this.darkerBgColor = this.bgColor.darker(0.2).rgba()\r\n\r\n\r\n    this._super(extend({bgColor: this.bgColor, stroke: 2, radius: 2, color: this.darkerBgColor}, attr), setter, getter)\r\n\r\n    // Compose the top row of the shape\r\n    //\r\n    let top = new draw2d.shape.layout.HorizontalLayout({stroke: 0})\r\n\r\n\r\n    this.earlyStartLabel = this.createLabel(\"Early Start\").setStroke(0)\r\n\r\n    this.durationLabel = new draw2d.shape.basic.Label({\r\n      text: \"Duration\",\r\n      stroke: 1,\r\n      color: this.darkerBgColor,\r\n      radius: 0,\r\n      bgColor: null,\r\n      padding: 5\r\n    })\r\n    // duration label has a inplaceEditor for the value\r\n    this.durationLabel.installEditor(new draw2d.ui.LabelEditor({\r\n      onCommit: function (value) {\r\n        _this.setDuration(parseFloat(value))\r\n      }\r\n    }))\r\n\r\n    this.earlyEndLabel = this.createLabel({text: \"Early End\", stroke: 0})\r\n\r\n    top.add(this.earlyStartLabel)\r\n    top.add(this.durationLabel)\r\n    top.add(this.earlyEndLabel)\r\n\r\n\r\n    // the middle part of the shape\r\n    // This part contains the ports for the connection\r\n    //\r\n    this.activityLabel = new draw2d.shape.basic.Label({\r\n      text: \"Activity Name\",\r\n      radius: 0,\r\n      padding: 10,\r\n      color: this.darkerBgColor,\r\n      bgColor: null\r\n    })\r\n    // direct editor for the label\r\n    this.activityLabel.installEditor(new draw2d.ui.LabelInplaceEditor())\r\n\r\n    this.inputPort = this.activityLabel.createPort(\"input\")\r\n    this.inputPort.getActivity = function () {\r\n      return _this\r\n    }\r\n    this.inputPort.onConnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n    this.inputPort.onDisconnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n    this.inputPort.setValue = function (anyValue) {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n\r\n    this.outputPort = this.activityLabel.createPort(\"output\")\r\n    this.outputPort.getActivity = function () {\r\n      return _this\r\n    }\r\n    this.outputPort.onConnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n    this.outputPort.onDisconnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n\r\n\r\n    // the bottom of the activity shape\r\n    //\r\n    let bottom = new draw2d.shape.layout.HorizontalLayout({stroke: 0})\r\n\r\n\r\n    this.lateStartLabel = this.createLabel(\"Late Start\").setStroke(0)\r\n    this.stackLabel = this.createLabel(\"Stack\")\r\n    this.lateEndLabel = this.createLabel(\"Late End\").setStroke(0)\r\n\r\n    bottom.add(this.lateStartLabel)\r\n    bottom.add(this.stackLabel)\r\n    bottom.add(this.lateEndLabel)\r\n\r\n    // finally compose the shape with top/middle/bottom in VerticalLayout\r\n    //\r\n    this.add(top)\r\n    this.add(this.activityLabel)\r\n    this.add(bottom)\r\n\r\n\r\n    // set some good default value for the activity\r\n    //\r\n    this.setDuration(1)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the duration for the activity. This triggers a complete recalculation of the complete\r\n   * diagram. No further calls are required\r\n   *\r\n   * @param {Number} duration the new Duration for the activity\r\n   */\r\n  setDuration: function (duration) {\r\n\r\n    if (this.mementoValues.duration !== duration) {\r\n      // store the new value\r\n      this.mementoValues.duration = duration\r\n\r\n      // update the labels for duration\r\n      this.durationLabel.setText(this.mementoValues.duration)\r\n    }\r\n\r\n    // calculate the earlyStart and latestEnd and set the labels\r\n    //\r\n    let start = this.getEarlyStart()\r\n\r\n    this.earlyStartLabel.setText(start)\r\n    this.earlyEndLabel.setText(start + this.mementoValues.duration)\r\n\r\n    // notify all children that a parent value has been changed\r\n    // Just knock on the inputPort...\r\n    //\r\n    let connections = this.outputPort.getConnections()\r\n    connections.each(function (i, conn) {\r\n      let targetPort = conn.getTarget()\r\n      targetPort.setValue()\r\n    })\r\n\r\n    // propagate the lateFinish up to all parent nodes if we are a leaf\r\n    //\r\n    if (connections.getSize() === 0) {\r\n      let lateFinish = parseFloat(this.earlyEndLabel.getText())\r\n      this.setLateFinish(lateFinish)\r\n    }\r\n  },\r\n\r\n  getEarlyEnd: function () {\r\n    return this.getEarlyStart() + this.mementoValues.duration\r\n  },\r\n\r\n  getEarlyStart: function () {\r\n    let latestEarlyEnd = 0\r\n\r\n    // retrieve the greatest \"earlyStart\" from all parent activities\r\n    this.inputPort.getConnections().each(function (i, conn) {\r\n      let parentActivity = conn.getSource().getActivity()\r\n      latestEarlyEnd = Math.max(latestEarlyEnd, parentActivity.getEarlyEnd())\r\n    })\r\n\r\n    return latestEarlyEnd\r\n  },\r\n\r\n  setLateFinish: function (value) {\r\n    let lateStart = value - this.mementoValues.duration\r\n\r\n    this.lateEndLabel.setText(value)\r\n    this.lateStartLabel.setText(lateStart)\r\n    this.stackLabel.setText(lateStart - parseFloat(this.earlyStartLabel.getText()))\r\n\r\n    let connections = this.inputPort.getConnections()\r\n    connections.each(function (i, conn) {\r\n      let sourcePort = conn.getSource()\r\n      sourcePort.getActivity().setLateFinish(lateStart)\r\n    })\r\n  },\r\n\r\n  /**\r\n   * \r\n   * help method to create some labels\r\n   *\r\n   * @param {String} txt the label to display\r\n   * @returns {draw2d.shape.basic.Label}\r\n   */\r\n  createLabel: function (txt) {\r\n    let label = new draw2d.shape.basic.Label({text: txt})\r\n    label.setStroke(1)\r\n    label.setColor(this.darkerBgColor)\r\n    label.setRadius(0)\r\n    label.setBackgroundColor(null)\r\n    label.setPadding(5)\r\n    label.setColor(this.bgColor.darker(0.2))\r\n    label.onDoubleClick = function (angle) {/* ignore them for the layout elements*/\r\n    }\r\n\r\n    return label\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setBackgroundColor: function (color) {\r\n    this._super(color)\r\n\r\n    // calculate the new lighter and darker colors for the gradient\r\n    //\r\n    this.lighterBgColor = this.bgColor.lighter(0.2).rgba()\r\n    this.darkerBgColor = this.bgColor.darker(0.2).rgba()\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n\r\n    // repaint can be blocked during deserialization and if the shape\r\n    // not part of any canvas.\r\n    //\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n\r\n    attributes ??= {}\r\n\r\n    if (this.getAlpha() < 0.9) {\r\n      attributes.fill = this.bgColor.rgba()\r\n    }\r\n    else {\r\n      attributes.fill = [\"90\", this.bgColor.hash(), this.lighterBgColor].join(\"-\")\r\n    }\r\n\r\n\r\n    this._super(attributes)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * NOT FOR PRODUCTIVE\r\n *\r\n * Checkout [Wikipedia PERT][1] for more information.\r\n *\r\n * Double click on the Task name or the top middle number to change the value.\r\n *\r\n *\r\n * @example\r\n *\r\n *    canvas.add( new draw2d.shape.pert.Start(),10,10);\r\n *    canvas.add( new draw2d.shape.pert.Activity(),80,130);\r\n *    canvas.add( new draw2d.shape.pert.Activity(),180,50);\r\n *\r\n * [1] http://en.wikipedia.org/wiki/Program_Evaluation_and_Review_Technique\r\n *\r\n * @extends draw2d.shape.layout.VerticalLayout\r\n */\r\ndraw2d.shape.pert.Start = draw2d.shape.layout.VerticalLayout.extend(\r\n  /** @lends draw2d.shape.pert.Start.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.pert.Start\",\r\n\r\n  /**\r\n   * Create a new instance\r\n   *\r\n   * @param {Object} [attr] the configuration of the shape\r\n   */\r\n  init: function (attr, setter, getter) {\r\n    // shortcut for some callback methods to avoid $.proxy wrapper\r\n    let _this = this\r\n\r\n    // persistence values for the activity\r\n    // will be stored/read in the JSON\r\n    this.mementoValues = {\r\n      duration: null\r\n    }\r\n\r\n    // just some color attributes for the rendering/gradient\r\n    this.bgColor = new draw2d.util.Color(\"#f3f3f3\")\r\n    this.lighterBgColor = this.bgColor.lighter(0.2).rgba()\r\n    this.darkerBgColor = this.bgColor.darker(0.2).rgba()\r\n\r\n\r\n    this._super(extend({bgColor: this.bgColor, stroke: 2, radius: 2, color: this.darkerBgColor}, attr), setter, getter)\r\n\r\n    // Compose the top row of the shape\r\n    //\r\n    let top = new draw2d.shape.layout.HorizontalLayout({stroke: 0})\r\n\r\n\r\n    this.durationLabel = new draw2d.shape.basic.Label({\r\n      text: \"Duration\",\r\n      stroke: 1,\r\n      color: this.darkerBgColor,\r\n      radius: 0,\r\n      bgColor: null,\r\n      padding: 5\r\n    })\r\n    // duration label has a inplaceEditor for the value\r\n    this.durationLabel.installEditor(new draw2d.ui.LabelEditor({\r\n      text: \"Enter new duration\",\r\n      onCommit: function (value) {\r\n        _this.setDuration(parseFloat(value))\r\n      }\r\n    }))\r\n\r\n    this.earlyEndLabel = this.createLabel({text: \"Early End\", stroke: 0})\r\n\r\n    top.add(this.durationLabel)\r\n    top.add(this.earlyEndLabel)\r\n\r\n\r\n    // the middle part of the shape\r\n    // This part contains the ports for the connection\r\n    //\r\n    this.activityLabel = new draw2d.shape.basic.Label({\r\n      text: \"Start\",\r\n      radius: 0,\r\n      padding: 10,\r\n      color: this.darkerBgColor,\r\n      bgColor: null\r\n    })\r\n    // direct editor for the label\r\n    this.activityLabel.installEditor(new draw2d.ui.LabelInplaceEditor())\r\n\r\n    this.outputPort = this.activityLabel.createPort(\"output\")\r\n    this.outputPort.getActivity = function () {\r\n      return _this\r\n    }\r\n    this.outputPort.onConnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n    this.outputPort.onDisconnect = function () {\r\n      _this.setDuration(_this.mementoValues.duration)\r\n    }\r\n\r\n\r\n    // the bottom of the activity shape\r\n    //\r\n    let bottom = this.createLabel(\" \")\r\n    bottom.setPadding(10)\r\n    bottom.setStroke(0)\r\n    this.lateEndLabel = bottom\r\n\r\n    // finally compose the shape with top/middle/bottom in VerticalLayout\r\n    //\r\n    this.add(top)\r\n    this.add(this.activityLabel)\r\n    this.add(bottom)\r\n\r\n    // set some good default value for the activity\r\n    //\r\n    this.setDuration(1)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the duration for the activity. This triggers a complete recalculation of the complete\r\n   * diagram. No further calls are required\r\n   *\r\n   * @param {Number} duration the new Duration for the activity\r\n   */\r\n  setDuration: function (duration) {\r\n\r\n    if (this.mementoValues.duration !== duration) {\r\n      // store the new value\r\n      this.mementoValues.duration = duration\r\n\r\n      // update the labels for duration\r\n      this.durationLabel.setText(this.mementoValues.duration)\r\n    }\r\n\r\n    this.earlyEndLabel.setText(this.mementoValues.duration)\r\n\r\n    // notify all children that a parent value has been changed\r\n    // Just knock on the inputPort...\r\n    //\r\n    let connections = this.outputPort.getConnections()\r\n    connections.each(function (i, conn) {\r\n      let targetPort = conn.getTarget()\r\n      targetPort.setValue()\r\n    })\r\n\r\n    // propagate the lateFinish up to all parent nodes if we are a leaf\r\n    //\r\n    if (connections.getSize() === 0) {\r\n      let lateFinish = parseFloat(this.earlyEndLabel.getText())\r\n      this.setLateFinish(lateFinish)\r\n    }\r\n  },\r\n\r\n  getEarlyEnd: function () {\r\n    return this.mementoValues.duration\r\n  },\r\n\r\n\r\n  setLateFinish: function (value) {\r\n    let lateStart = value - this.mementoValues.duration\r\n\r\n    this.lateEndLabel.setText(value)\r\n\r\n  },\r\n\r\n  /**\r\n   * \r\n   * help method to create some labels\r\n   *\r\n   * @param {String} txt the label to display\r\n   * @returns {draw2d.shape.basic.Label}\r\n   */\r\n  createLabel: function (txt) {\r\n    let label = new draw2d.shape.basic.Label({text: txt})\r\n    label.setStroke(1)\r\n    label.setColor(this.darkerBgColor)\r\n    label.setRadius(0)\r\n    label.setBackgroundColor(null)\r\n    label.setPadding(5)\r\n    label.setColor(this.bgColor.darker(0.2))\r\n    label.onDoubleClick = function (angle) {/* ignore them for the layout elements*/\r\n    }\r\n\r\n    return label\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setBackgroundColor: function (color) {\r\n    this._super(color)\r\n\r\n    // calculate the new lighter and darker colors for the gradient\r\n    //\r\n    this.lighterBgColor = this.bgColor.lighter(0.2).rgba()\r\n    this.darkerBgColor = this.bgColor.darker(0.2).rgba()\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  repaint: function (attributes) {\r\n\r\n    // repaint can be blocked during deserialization and if the shape\r\n    // not part of any canvas.\r\n    //\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n\r\n    attributes ??= {}\r\n\r\n    if (this.getAlpha() < 0.9) {\r\n      attributes.fill = this.bgColor.rgba()\r\n    }\r\n    else {\r\n      attributes.fill = [\"90\", this.bgColor.hash(), this.lighterBgColor].join(\"-\")\r\n    }\r\n\r\n    this._super(attributes)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Connection designed for a state diagram with arrow decoration at the\r\n * target of the connection and a label\r\n *\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.state.Start();\r\n *    let end   = new draw2d.shape.state.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( end, 230,180);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    let c = new draw2d.shape.state.Connection({\r\n *    \t source : start.getOutputPort(0),\r\n *      target : end.getInputPort(0)\r\n *    });\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n *\r\n * @extends draw2d.Connection\r\n */\r\ndraw2d.shape.state.Connection = draw2d.Connection.extend(\r\n  /** @lends draw2d.shape.state.Connection.prototype */\r\n  {\r\n  NAME: \"draw2d.shape.state.Connection\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#4D90FE\"),\r\n\r\n  init: function (attr, setter, getter) {\r\n    this._super(extend({router: null, stroke: 2}, attr), setter, getter)\r\n\r\n    this.setTargetDecorator(new draw2d.decoration.connection.ArrowDecorator(17, 8))\r\n\r\n\r\n    this.label = new draw2d.shape.basic.Label({text: \"label\"})\r\n    this.label.setStroke(1)\r\n    this.label.setPadding(2)\r\n    this.label.setBackgroundColor(\"#f0f0f0\")\r\n    this.add(this.label, new draw2d.layout.locator.ParallelMidpointLocator())\r\n\r\n  },\r\n  /**\r\n   * \r\n   * Set the text to show if the state shape\r\n   *\r\n   * @param {String} text\r\n   */\r\n  setLabel: function (text) {\r\n    this.label.setText(text)\r\n\r\n    // hide the label if no text available\r\n    this.label.setVisible(!(text === null || text === \"\"))\r\n    this.fireEvent(\"change:label\", {value: text})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Return the label of the shape\r\n   *\r\n   */\r\n  getLabel: function () {\r\n    return this.label.getText()\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    return extend(this._super(), {\r\n      label: this.getLabel()\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.label !== \"undefined\") {\r\n      this.setLabel(memento.label)\r\n    }\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The end node for a state diagram\r\n *\r\n *\r\n * @example\r\n *    let end   = new draw2d.shape.state.End();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( end, 230,80);\r\n *\r\n * @extends draw2d.shape.basic.Circle\r\n */\r\ndraw2d.shape.state.End = draw2d.shape.basic.Circle.extend(\r\n  /** @lends draw2d.shape.state.End.prototype */\r\n  {\r\n  \r\n  NAME: \"draw2d.shape.state.End\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#4D90FE\"),\r\n\r\n  init: function (attr, setter, getter) {\r\n    this.innerCircle = new draw2d.shape.basic.Circle(20)\r\n\r\n    this._super(attr, setter, getter)\r\n\r\n    this.port = this.createPort(\"input\", new draw2d.layout.locator.TopLocator())\r\n    this.port.setConnectionAnchor(new draw2d.layout.anchor.ShortesPathConnectionAnchor(this.port))\r\n\r\n    this.setDimension(50, 50)\r\n    this.setBackgroundColor(this.DEFAULT_COLOR)\r\n    this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy())\r\n\r\n    this.innerCircle.setStroke(2)\r\n    this.innerCircle.setBackgroundColor(null)\r\n    this.add(this.innerCircle, new draw2d.layout.locator.CenterLocator())\r\n\r\n    this.setStroke(0)\r\n    //this.setColor(this.DEFAULT_COLOR.darker());\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    this._super(w, h)\r\n    this.innerCircle.setDimension(this.getWidth() - 10, this.getHeight() - 10)\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * The start node for a state diagram\r\n *\r\n *\r\n * @example\r\n *\r\n *    let figure =  new draw2d.shape.state.Start({color:\"#3d3d3d\"});\r\n *\r\n *    canvas.add(figure,50,10);\r\n *\r\n * @extends draw2d.shape.basic.Rectangle\r\n */\r\ndraw2d.shape.state.Start = draw2d.shape.basic.Circle.extend(\r\n  /** @lends draw2d.shape.state.Start.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.state.Start\",\r\n\r\n  DEFAULT_COLOR: new draw2d.util.Color(\"#3369E8\"),\r\n\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.port = this.createPort(\"output\", new draw2d.layout.locator.BottomLocator())\r\n    this.port.setConnectionAnchor(new draw2d.layout.anchor.ShortesPathConnectionAnchor(this.port))\r\n\r\n    this.setDimension(50, 50)\r\n    this.setBackgroundColor(this.DEFAULT_COLOR)\r\n    this.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy())\r\n\r\n    this.setStroke(0)\r\n    //this.setColor(this.DEFAULT_COLOR.darker());\r\n\r\n    let label = new draw2d.shape.basic.Label({text: \"START\"})\r\n    label.setStroke(0)\r\n    label.setFontColor(\"#ffffff\")\r\n    label.setFontFamily('\"Open Sans\",sans-serif')\r\n    this.add(label, new draw2d.layout.locator.CenterLocator())\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * a state shape for a state diagram\r\n *\r\n * @example\r\n *\r\n *    // create and add two nodes which contains Ports (In and OUT)\r\n *    //\r\n *    let start = new draw2d.shape.state.Start();\r\n *    let state   = new draw2d.shape.state.State();\r\n\r\n *    // ...add it to the canvas\r\n *    canvas.add( start, 50,50);\r\n *    canvas.add( state, 230,180);\r\n *\r\n *    // Create a Connection and connect the Start and End node\r\n *    //\r\n *    let c = new draw2d.shape.state.Connection({\r\n *    \t\tsource : start.getOutputPort(0),\r\n *         target : state.getInputPort(0)\r\n *    });\r\n *\r\n *\r\n *    // and finally add the connection to the canvas\r\n *    canvas.add(c);\r\n *\r\n * @extends draw2d.shape.layout.VerticalLayout\r\n */\r\ndraw2d.shape.state.State = draw2d.shape.layout.VerticalLayout.extend(\r\n  /** @lends draw2d.shape.state.State.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.state.State\",\r\n\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n\r\n    this.port = this.createPort(\"hybrid\", new draw2d.layout.locator.BottomLocator())\r\n    this.port.setConnectionAnchor(new draw2d.layout.anchor.ChopboxConnectionAnchor(this.port))\r\n\r\n\r\n    this.setBackgroundColor(\"#f3f3f3\")\r\n\r\n    // UI representation\r\n    this.setStroke(1)\r\n    this.setColor(\"#e0e0e0\")\r\n    this.setRadius(5)\r\n\r\n    // Compose the top row of the shape\r\n    //\r\n    let top = this.createLabel(\"State\").setStroke(0)\r\n    this.label = top\r\n\r\n    // the middle part of the shape\r\n    // This part contains the ports for the connection\r\n    //\r\n    let center = new draw2d.shape.basic.Rectangle()\r\n    center.getHeight = function () {\r\n      return 1\r\n    }\r\n    center.setMinWidth(90)\r\n    center.setColor(\"#e0e0e0\")\r\n\r\n    // the bottom of the activity shape\r\n    //\r\n    let bottom = new draw2d.shape.basic.Rectangle()\r\n    bottom.setMinHeight(30)\r\n    bottom.setStroke(0)\r\n    bottom.setBackgroundColor(null)\r\n\r\n    // finally compose the shape with top/middle/bottom in VerticalLayout\r\n    //\r\n    this.add(top)\r\n    this.add(center)\r\n    this.add(bottom)\r\n  },\r\n\r\n  /**\r\n   *\r\n   * Set the text to show if the state shape\r\n   *\r\n   * @param {String} text\r\n   */\r\n  setLabel: function (text) {\r\n    this.label.setText(text)\r\n    this.fireEvent(\"change:label\", {value: text})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * Return the label of the shape\r\n   *\r\n   */\r\n  getLabel: function () {\r\n    return this.label.getText()\r\n  },\r\n\r\n\r\n  /**\r\n   *\r\n   * helper method to create some labels\r\n   *\r\n   * @param {String} txt the label to display\r\n   * @returns {draw2d.shape.basic.Label}\r\n   * @private\r\n   */\r\n  createLabel: function (txt) {\r\n    let label = new draw2d.shape.basic.Label(txt)\r\n    label.setStroke(1)\r\n    label.setColor(this.darkerBgColor)\r\n    label.setRadius(0)\r\n    label.setBackgroundColor(null)\r\n    label.setPadding(5)\r\n    label.setColor(this.bgColor.darker(0.2))\r\n    label.onDoubleClick = function (angle) {/* ignore them for the layout elements*/\r\n    }\r\n\r\n    return label\r\n  },\r\n\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  getPersistentAttributes: function () {\r\n    return extend(this._super(), {\r\n      label: this.getLabel()\r\n    })\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setPersistentAttributes: function (memento) {\r\n    this._super(memento)\r\n\r\n    if (typeof memento.label !== \"undefined\") {\r\n      this.setLabel(memento.label)\r\n    }\r\n\r\n  }\r\n})\r\n","import draw2d from '../../packages'\r\nimport {Tweenable} from 'shifty'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * @example\r\n *\r\n *    let slider = new draw2d.shape.widget.Slider({width:120, height:20});\r\n *    canvas.add( slider,100,60);\r\n *\r\n * @extends draw2d.shape.widget.Widget\r\n */\r\ndraw2d.shape.widget.Slider = draw2d.shape.widget.Widget.extend(\r\n  /** @lends draw2d.shape.widget.Slider.prototype */\r\n  {\r\n\r\n  NAME: \"draw2d.shape.widget.Slider\",\r\n\r\n  DEFAULT_COLOR_THUMB: new draw2d.util.Color(\"#bddf69\"),\r\n  DEFAULT_COLOR_BG: new draw2d.util.Color(\"#d3d3d3\"),\r\n\r\n\r\n  init: function (attr, setter, getter) {\r\n    this.currentValue = 0 // [0..100]\r\n    this.slideBoundingBox = new draw2d.geo.Rectangle(0, 0, 10, 20)\r\n    this.padding = {top: 4, right: 4, bottom: 4, left: 4}\r\n    this.panning = false\r\n    this.thumbGrow = 0\r\n\r\n    this._super(\r\n      {\r\n        width: 150,\r\n        height: 15,\r\n        stroke: 1,\r\n        radius: 4,\r\n        resizeable: true,\r\n        color: this.DEFAULT_COLOR_THUMB,\r\n        bgColor: this.DEFAULT_COLOR_BG,\r\n        value: 50,\r\n        ...attr},\r\n      extend({\r\n        // @attr {Number} padding the padding in pixel around the text */\r\n        padding: this.setPadding,\r\n        // @attr {Number} value the new value of the slider. values must be in range of [0..100] */\r\n        value: this.setValue\r\n      }, setter),\r\n      extend({\r\n        padding: this.getPadding,\r\n        value: this.getValue\r\n      }, getter))\r\n\r\n    this.setMinHeight(15)\r\n    this.setMinWidth(80)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Create the additional elements for the figure\r\n   *\r\n   */\r\n  createSet: function () {\r\n    let result = this.canvas.paper.set()\r\n    let thumb = this.canvas.paper.rect(0, 0, 10, 20)\r\n    thumb.node.style.cursor = \"col-resize\"\r\n    result.push(thumb)\r\n\r\n    return result\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  setDimension: function (w, h) {\r\n    this._super(w, h)\r\n    this.slideBoundingBox.setBoundary(this.padding.left, 0, this.getWidth() - this.padding.right, this.getHeight())\r\n    this.slideBoundingBox.setHeight(this.getHeight() + 1)\r\n\r\n    // TODO: and repaint again.....two repaints for one \"setDimension\"....BAD\r\n    //\r\n    this.repaint()\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Set the padding of the element\r\n   *\r\n   *     // Alternatively you can use the attr method:\r\n   *     //\r\n   *     // set the padding for top,left,bottom,right in one call\r\n   *     figure.attr({\r\n   *       padding: 3\r\n   *     });\r\n   *\r\n   *     // update the padding left and top\r\n   *     figure.attr({\r\n   *       padding: {left:3, top:30}\r\n   *     });\r\n   *\r\n   * @param {Number|Object} padding The new padding\r\n   * @since 5.6.0\r\n   **/\r\n  setPadding: function (padding) {\r\n    this.clearCache()\r\n    if (typeof padding === \"number\") {\r\n      this.padding = {top: padding, right: padding, bottom: padding, left: padding}\r\n    }\r\n    else {\r\n      this.padding = extend(this.padding, padding)\r\n    }\r\n    this.repaint()\r\n    this.fireEvent(\"change:padding\", {value: this.padding})\r\n\r\n    return this\r\n  },\r\n\r\n\r\n  /**\r\n   * \r\n   * Get the padding of the element.\r\n   *\r\n   * @since 5.6.0\r\n   **/\r\n  getPadding: function () {\r\n    return this.padding\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called if the value of the slider has been changed.\r\n   *\r\n   * @param {Number} value The new value of the slider in percentage [0..100]\r\n   * @template\r\n   */\r\n  onValueChange: function (value) {\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Will be called if the drag and drop action begins. You can return [false] if you\r\n   * want avoid that the figure can be move.\r\n   *\r\n   * @param {Number} x the x-coordinate of the mouse up event\r\n   * @param {Number} y the y-coordinate of the mouse up event\r\n   * @param {Boolean} shiftKey true if the shift key has been pressed during this event\r\n   * @param {Boolean} ctrlKey true if the ctrl key has been pressed during the event\r\n   *\r\n   * @returns {Boolean} true if the figure accepts dragging\r\n   **/\r\n  onDragStart: function (x, y, shiftKey, ctrlKey) {\r\n    // check if the use has been clicked on the thumb.\r\n    // Return \"false\" to prevent drag&drop operation.\r\n    //\r\n    if (this.slideBoundingBox.hitTest(x, y)) {\r\n\r\n      this.panningX = x\r\n      this.panningY = y\r\n      this.panning = true\r\n      let tweenable = new Tweenable()\r\n      tweenable.tween({\r\n        from: {grow: this.thumbGrow},\r\n        to: {grow: 10},\r\n        duration: 500,\r\n        easing: 'easeOutQuart',\r\n        step: function (state) {\r\n          this.thumbGrow = state.grow\r\n          this.repaint()\r\n        }.bind(this),\r\n        finish: function () {\r\n          tweenable.dispose()\r\n        }\r\n      })\r\n      return false\r\n    }\r\n\r\n    return this._super(x, y, shiftKey, ctrlKey)\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Called by the framework if the figure returns false for the drag operation. In this\r\n   * case we send a \"panning\" event - mouseDown + mouseMove. This is very useful for\r\n   * UI-Widget like slider, spinner,...\r\n   *\r\n   * @param {Number} dx the x difference between the mouse down operation and now\r\n   * @param {Number} dy the y difference between the mouse down operation and now\r\n   * @param {Number} dx2 The x diff since the last call of this dragging operation\r\n   * @param {Number} dy2 The y diff since the last call of this dragging operation\r\n   */\r\n\r\n\r\n  onPanning: function (dx, dy, dx2, dy2) {\r\n    // calculate the current position of the mouse pos\r\n    //\r\n    let width = this.getWidth()\r\n    let sliderWidth = width - this.padding.left - this.padding.right\r\n\r\n    let figurePos = Math.min(width, Math.max(0, this.panningX + dx))\r\n    let sliderPos = Math.min(width - this.padding.left - this.padding.right, figurePos)\r\n\r\n    this.setValue(100 / sliderWidth * sliderPos)\r\n  },\r\n\r\n  /**\r\n   * @inheritdoc\r\n   */\r\n  onPanningEnd: function () {\r\n    this.panning = false\r\n\r\n    let tweenable = new Tweenable()\r\n    tweenable.tween({\r\n      from: {grow: this.thumbGrow},\r\n      to: {grow: 0},\r\n      duration: 300,\r\n      easing: 'easeOutQuart',\r\n      step: function (state) {\r\n        this.thumbGrow = state.grow\r\n        this.repaint()\r\n      }.bind(this),\r\n      finish: function () {\r\n        tweenable.dispose()\r\n      }\r\n    })\r\n    this.thumbGrow = 0\r\n    this.repaint()\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Set the current value of the slider. Valid values are [0..100]\r\n   *\r\n   * @param {Number} value values between [0..100]\r\n   */\r\n  setValue: function (value) {\r\n    this.currentValue = Math.min(Math.max(0, (value | 0)), 100)\r\n    this.repaint()\r\n    this.onValueChange(this.currentValue)\r\n    this.fireEvent(\"change:value\", {value: this.currentValue})\r\n\r\n    return this\r\n  },\r\n\r\n  /**\r\n   * \r\n   * Returns the current value of the slider\r\n   *\r\n   * @since 5.6.0\r\n   *\r\n   * @returns {Number}\r\n   */\r\n  getValue: function () {\r\n    return this.currentValue\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param attributes\r\n   */\r\n  repaint: function (attributes) {\r\n    if (this.repaintBlocked === true || this.shape === null) {\r\n      return\r\n    }\r\n\r\n    attributes ??= {}\r\n\r\n    // adjust the slider to the current value and the new dimension of the widget\r\n    //\r\n    let thumbX = (((this.getWidth() - this.padding.left - this.padding.right) / 100 * this.currentValue) + this.padding.left) | 0\r\n    this.slideBoundingBox.setX(thumbX)\r\n\r\n\r\n    // update slider\r\n    //\r\n    if (this.svgNodes !== null) {\r\n      let attr = this.slideBoundingBox.toJSON()\r\n      attr.y -= (this.thumbGrow / 2)\r\n      attr.height += this.thumbGrow\r\n      attr.fill = this.getColor().rgba()\r\n      attr.stroke = this.getColor().darker(0.2).rgba()\r\n      attr.r = 4\r\n      this.svgNodes.attr(attr)\r\n    }\r\n\r\n\r\n    attributes.fill = \"90-\" + this.bgColor.hash() + \":5-\" + this.bgColor.lighter(0.3).hash() + \":95\"\r\n    attributes.stroke = this.bgColor.darker(0.1).rgba()\r\n\r\n    this._super(attributes)\r\n  },\r\n\r\n\r\n  applyTransformation: function () {\r\n    this.svgNodes.transform(\"T\" + this.getAbsoluteX() + \",\" + this.getAbsoluteY())\r\n\r\n    return this\r\n  }\r\n\r\n})\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n * Base class for all diagrams.\r\n *\r\n * @extends draw2d.SetFigure\r\n */\r\ndraw2d.shape.widget.Widget = draw2d.SetFigure.extend({\r\n\r\n  init: function (attr, setter, getter) {\r\n    this._super(attr, setter, getter)\r\n  }\r\n})\r\n","import draw2d from '../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Base class for all draw2d.shape.basic.Label editors. The default implementation is to open\r\n * a simple javascript prompt dialog.<br>\r\n * Use LabelInplaceEditor or your own implementation if you need more comfort.\r\n *\r\n * @example\r\n *\r\n *    let label =  new draw2d.shape.basic.Label({text:\"Double Click on me\"});\r\n *\r\n *    label.installEditor(new draw2d.ui.LabelEditor({\r\n *       // called after the value has been set to the LabelFigure\r\n *       onCommit: $.proxy(function(value){\r\n *           alert(\"new value set to:\"+value);\r\n *       },this),\r\n *       // called if the user abort the operation\r\n *       onCancel: function(){\r\n *       }\r\n *    }));\r\n *\r\n *    canvas.add(label,50,10);\r\n *\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.ui.LabelEditor = Class.extend(\r\n  /** @lends draw2d.ui.LabelEditor.prototype */\r\n  {\r\n    NAME: \"draw2d.ui.LabelEditor\",\r\n\r\n    /**\r\n     *\r\n     * @param {Object} attr callback handler and configuration. **{ onCommit:function(){}}, onCancel: function(){}, onStart: function(){}, text:'My Dialog Title' }**\r\n     */\r\n    init: function (attr) {\r\n     this.configuration = {\r\n          onCommit:  () =>{},\r\n          onCancel:  () =>{},\r\n          onStart:   () =>{},\r\n          text: \"Value\"\r\n        ,...attr}\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Trigger the edit of the label text.\r\n     *\r\n     * @param {draw2d.shape.basic.Label} label the label to edit\r\n     */\r\n    start: function (label) {\r\n      this.configuration.onStart()\r\n      let newText = prompt(this.configuration.text, label.getText())\r\n      if (newText) {\r\n        let cmd = new draw2d.command.CommandAttr(label, {text: newText})\r\n        label.getCanvas().getCommandStack().execute(cmd)\r\n\r\n        this.configuration.onCommit(label.getText())\r\n      } else {\r\n        this.configuration.onCancel()\r\n      }\r\n    }\r\n  })\r\n","import draw2d from '../packages'\r\nimport r from \"lib/jquery.autoresize\"\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * Inplace editor for draw2d.shape.base.Label\r\n *\r\n * @example\r\n *\r\n *    var label =  new draw2d.shape.basic.Label({text:\"Double Click on me\"});\r\n *\r\n *    label.installEditor(new draw2d.ui.LabelInplaceEditor({\r\n *       // called after the value has been set to the LabelFigure\r\n *       onCommit: $.proxy(function(value){\r\n *           alert(\"new value set to:\"+value);\r\n *       },this),\r\n *       // called if the user abort the operation\r\n *       onCancel: function(){\r\n *       }\r\n *    }));\r\n *\r\n *    canvas.add(label,50,10);\r\n *\r\n * @author Andreas Herz\r\n * @extends draw2d.ui.LabelEditor\r\n */\r\ndraw2d.ui.LabelInplaceEditor = draw2d.ui.LabelEditor.extend(\r\n  /** @lends draw2d.ui.LabelInplaceEditor.prototype */\r\n  {\r\n\r\n    NAME: \"draw2d.ui.LabelInplaceEditor\",\r\n\r\n    init: function (listener) {\r\n      this._super();\r\n\r\n      // register some default listener and override this with the handover one\r\n      this.listener = extend({\r\n        onCommit: function () {\r\n        },\r\n        onCancel: function () {\r\n        },\r\n        onStart: function () {\r\n        }\r\n      }, listener);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Trigger the edit of the label text.\r\n     *\r\n     * @param {draw2d.shape.basic.Label} label the label to edit\r\n     */\r\n    start: function (label) {\r\n      this.label = label;\r\n\r\n      this.commitCallback = this.commit.bind(this);\r\n\r\n      // commit the editor if the user clicks anywhere in the document\r\n      //\r\n      $(\"body\").bind(\"click\", this.commitCallback);\r\n\r\n      // append the input field to the document and register\r\n      // the ENTER and ESC key to commit /cancel the operation\r\n      //\r\n      this.html = $('<input id=\"inplaceeditor\">');\r\n      this.html.val(label.getText());\r\n      this.html.hide();\r\n\r\n      $(\"body\").append(this.html);\r\n\r\n      this.html.autoResize();\r\n\r\n      this.html.bind(\"keyup\", function (e) {\r\n        switch (e.which) {\r\n          case 13:\r\n            this.commit();\r\n            break;\r\n          case 27:\r\n            this.cancel();\r\n            break;\r\n        }\r\n      }.bind(this));\r\n\r\n      this.html.bind(\"blur\", this.commitCallback);\r\n\r\n      // avoid commit of the operation if we click inside the editor\r\n      //\r\n      this.html.bind(\"click\", function (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      });\r\n\r\n      // Position the INPUT and init the autoresize of the element\r\n      //\r\n      var canvas = this.label.getCanvas();\r\n      var bb = this.label.getBoundingBox();\r\n\r\n      bb.setPosition(canvas.fromCanvasToDocumentCoordinate(bb.x, bb.y));\r\n\r\n      // remove the scroll from the body if we add the canvas directly into the body\r\n      var scrollDiv = canvas.getScrollArea();\r\n      if (scrollDiv.is($(\"body\"))) {\r\n        bb.translate(canvas.getScrollLeft(), canvas.getScrollTop());\r\n      }\r\n\r\n      bb.translate(-1, -1);\r\n      bb.resize(2, 2);\r\n\r\n      this.html.css({\r\n        position: \"absolute\",\r\n        \"top\": bb.y,\r\n        \"left\": bb.x,\r\n        \"min-width\": bb.w * (1 / canvas.getZoom()),\r\n        \"height\": Math.max(25, bb.h * (1 / canvas.getZoom()))\r\n      });\r\n      this.html.fadeIn(() => {\r\n        this.html.focus();\r\n        this.listener.onStart()\r\n      });\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Transfer the data from the editor into the label.<br>\r\n     * Remove the editor.<br>\r\n     *\r\n     * @private\r\n     */\r\n    commit: function () {\r\n      this.html.unbind(\"blur\", this.commitCallback);\r\n      $(\"body\").unbind(\"click\", this.commitCallback);\r\n      var label = this.html.val();\r\n      var cmd = new draw2d.command.CommandAttr(this.label, {text: label});\r\n      this.label.getCanvas().getCommandStack().execute(cmd);\r\n      this.html.fadeOut(() => {\r\n        this.html.remove();\r\n        this.html = null;\r\n        this.listener.onCommit(this.label.getText());\r\n      });\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Transfer the data from the editor into the label.<br>\r\n     * Remove the editor.<br>\r\n     * @private\r\n     */\r\n    cancel: function () {\r\n      this.html.unbind(\"blur\", this.commitCallback);\r\n      $(\"body\").unbind(\"click\", this.commitCallback);\r\n      this.html.fadeOut(() => {\r\n        this.html.remove();\r\n        this.html = null;\r\n        this.listener.onCancel();\r\n      });\r\n\r\n    }\r\n  });\r\n\r\n","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n *\r\n * <Disclaimer> Writing my own class for arrays was one of my worst ideas...\r\n *\r\n * An ArrayList stores a variable number of objects. This is similar to making an array of\r\n * objects, but with an ArrayList, items can be easily added and removed from the ArrayList\r\n * and it is resized dynamically. This can be very convenient, but it's slower than making\r\n * an array of objects when using many elements.\r\n */\r\ndraw2d.util.ArrayList = Class.extend(\r\n  /** @lends draw2d.util.ArrayList */\r\n  {\r\n\r\n    init: function (a) {\r\n      if (Array.isArray(a)) {\r\n        this.data = a\r\n      } else {\r\n        this.data = []\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Clears the array\r\n     *\r\n     * @since 6.1.0\r\n     * @returns {this}\r\n     */\r\n    clear: function () {\r\n      this.data = []\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Reverses the order of the elements in the ArrayList. The array will be modified!\r\n     *\r\n     * @returns {this}\r\n     */\r\n    reverse: function () {\r\n      this.data.reverse()\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * The size/count of the stored objects.\r\n     *\r\n     * @returns {Number}\r\n     */\r\n    getSize: function () {\r\n      return this.data.length\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * checks to see if the Vector has any elements.\r\n     *\r\n     * @returns {Boolean} true if the list is empty\r\n     **/\r\n    isEmpty: function () {\r\n      return this.getSize() === 0\r\n    },\r\n\r\n    /**\r\n     *\r\n     * return the last element.\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    last: function () {\r\n      return this.data[this.data.length - 1]\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return a reference to the internal javascript native array.\r\n     *\r\n     * @returns {Array}\r\n     */\r\n    asArray: function () {\r\n      return this.data\r\n    },\r\n\r\n    /**\r\n     *\r\n     * returns the first element\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    first: function () {\r\n      if (this.data.length > 0) {\r\n        return this.data[0]\r\n      }\r\n      return null\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * returns an element at a specified index\r\n     *\r\n     * @param {Number} i\r\n     * @returns {Object}\r\n     */\r\n    get: function (i) {\r\n      return this.data[i]\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Adds a element at the end of the Vector.\r\n     *\r\n     * @param {Object} obj the object to add\r\n     * @returns {this}\r\n     */\r\n    add: function (...objs) {\r\n      this.data.push(...objs)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * The method modifies the array and removes items from an array as necessary so that all remaining items pass a\r\n     * provided test. The test is a function that is passed an array item and the index of the\r\n     * item within the array. Only if the test returns true will the item stay in the array.\r\n     *\r\n     * @param {Function} func the filter function(element,index)\r\n     * @param {Object} func.value value of the element in iteration.\r\n     * @since 2.0.0\r\n     * @returns {this}\r\n     */\r\n    grep: function (func) {\r\n      this.data = this.data.filter(func)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     *\r\n     * Return ONE element which matches by the given function or <b>null</b>\r\n     * if no element is found.\r\n     *\r\n     *    var r1= figures.find(function(figure){\r\n     *                  return figure.id===123456\r\n     *            });\r\n     *\r\n     * @param {Function} func the filter function\r\n     * @param {Object} func.value value of the element in iteration.\r\n     * @param {Object} func.index index of the element in collection.\r\n     * @since 2.0.0\r\n     */\r\n    find: function (func) {\r\n      return this.data.find(func)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Translate all items in the array into new items. The array list is modified after this call.\r\n     * You must clone the array before if you want avoid this.\r\n     *\r\n     *    var labels = this.commands.clone().map(function(e){\r\n     *         return e.getLabel();\r\n     *    });\r\n     *\r\n     * @param {Function} func The function to process each item against. The first argument to the function is the value; the second argument is the index or key of the array or object property.\r\n     * @param {Object} func.value value of the element in iteration.\r\n     * @param {Number} func.i index of the element in iteration\r\n     *\r\n     * @since 4.0.0\r\n     * @returns {this}\r\n     */\r\n    map: function (func) {\r\n      this.data = this.data.map(func)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Removes any duplicate elements from the array. The array is modified after this call. You\r\n     * must clone the array before if you want avoid this\r\n     *\r\n     * @since 4.0.0\r\n     * @returns {this}\r\n     */\r\n    unique: function () {\r\n      this.data = this.data.filter((value, index, self) => self.indexOf(value) === index)\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Add all elements into this array.\r\n     *\r\n     * @param {draw2d.util.ArrayList} list\r\n     * @param {Boolean} [avoidDuplicates] checks whenever the new elements exists before insert if the parameter is to [true]\r\n     * @returns {this}\r\n     */\r\n    addAll: function (list, avoidDuplicates) {\r\n      if (!(list instanceof draw2d.util.ArrayList)) {\r\n        throw \"Unable to handle unknown object type in ArrayList.addAll\"\r\n      }\r\n\r\n      this.data = this.data.concat(list.data)\r\n      if (avoidDuplicates) {\r\n        this.unique()\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * You can use the Array list as Stack as well. this is the pop method to remove one element\r\n     * at the end of the stack.\r\n     *\r\n     * @returns {Object} the remove object\r\n     */\r\n    pop: function () {\r\n      return this.removeElementAt(this.data.length - 1)\r\n    },\r\n\r\n    /**\r\n     * Push one element at the top of the stack/array\r\n     *\r\n     * @param {Object} value The object to add\r\n     * @returns {this}\r\n     */\r\n    push: function (value) {\r\n      this.add(value)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Remove the element from the list\r\n     *\r\n     * @param {Object} obj the object to remove\r\n     *\r\n     * @returns {Object} the removed object or null\r\n     */\r\n    remove: function (obj) {\r\n      let index = this.indexOf(obj)\r\n      if (index >= 0) {\r\n        return this.removeElementAt(index)\r\n      }\r\n\r\n      return null\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Inserts an element at a given position. Existing elements will be shifted\r\n     * to the right.\r\n     *\r\n     * @param {Object} obj the object to insert.\r\n     * @param {Number} index the insert position.\r\n     * @returns {this}\r\n     */\r\n    insertElementAt: function (obj, index) {\r\n      this.data.splice(index, 0, obj)\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Removes an element at a specific index.\r\n     *\r\n     * @param {Number} index the index of the element to remove\r\n     * @returns {Object} the removed object\r\n     */\r\n    removeElementAt: function (index) {\r\n      let element = this.data[index]\r\n\r\n      this.data.splice(index, 1)\r\n\r\n      return element\r\n    },\r\n\r\n    /**\r\n     *\r\n     * removes all given elements in the ArrayList\r\n     *\r\n     * @param {draw2d.util.ArrayList} elements The elements to remove\r\n     * @returns {this}\r\n     */\r\n    removeAll: function (elements) {\r\n      if (elements instanceof draw2d.util.ArrayList) {\r\n        elements = elements.data\r\n      }\r\n\r\n      if (Array.isArray(elements)) {\r\n        elements.forEach((e) => {\r\n          this.remove(e)\r\n        })\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Return the zero based index of the given element or -1 if the element\r\n     * not in the list.\r\n     *\r\n     * @param {Object} obj the element to check\r\n     *\r\n     * @returns {Number} the index of the element or -1\r\n     */\r\n    indexOf: function (obj) {\r\n      return this.data.indexOf(obj)\r\n    },\r\n\r\n    /**\r\n     *\r\n     * returns true if the element is in the Vector, otherwise false.\r\n     *\r\n     * @param {Object} obj the object to check\r\n     *\r\n     * @returns {Boolean}\r\n     */\r\n    contains: function (obj) {\r\n      return this.data.includes(obj)\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Sorts the collection based on a field name or sort a function. See on http://www.w3schools.com/jsref/jsref_sort.asp\r\n     * if you use a sort function.\r\n     *\r\n     * @param {String|Function} f the field name for the sorting or a sort function\r\n     *\r\n     * @returns {this}\r\n     *\r\n     */\r\n    sort: function (f) {\r\n      if (typeof f === \"function\") {\r\n        this.data.sort(f)\r\n      } else {\r\n        this.data.sort(function (a, b) {\r\n          if (a[f] < b[f])\r\n            return -1\r\n          if (a[f] > b[f])\r\n            return 1\r\n          return 0\r\n        })\r\n      }\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Copies the contents of a Vector to another Vector returning the new Vector.\r\n     *\r\n     * @param {Boolean} [deep] call \"clone\" of each elements and add the clone to the new ArrayList\r\n     *\r\n     * @returns {draw2d.util.ArrayList} the new ArrayList\r\n     */\r\n    clone: function (deep) {\r\n      let newVector = new draw2d.util.ArrayList()\r\n\r\n\r\n      if (deep) {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          newVector.data.push(this.data[i].clone())\r\n        }\r\n      } else {\r\n        newVector.data = this.data.slice(0)\r\n      }\r\n\r\n      return newVector\r\n    },\r\n\r\n\r\n    /**\r\n     *\r\n     * Iterates over the list of elements, yielding each in turn to an iterator\r\n     * function.\r\n     * Each invocation of iterator is called with two arguments: (index, element).\r\n     *\r\n     * @param {Function} func the callback function to call for each element\r\n     * @param {Number} func.i index of the element in iteration\r\n     * @param {Object} func.value value of the element in iteration.\r\n     * @param {Boolean} [reverse] optional parameter. Iterate the collection reverse if it set to <b>true</b>\r\n     * @returns {this}\r\n     */\r\n    each: function (func, reverse) {\r\n      if (typeof reverse !== \"undefined\" && reverse === true) {\r\n        for (let i = this.data.length - 1; i >= 0; i--) {\r\n          if (func(i, this.data[i]) === false)\r\n            break\r\n        }\r\n      } else {\r\n        for (let i = 0; i < this.data.length; i++) {\r\n          if (func(i, this.data[i]) === false)\r\n            break\r\n        }\r\n      }\r\n\r\n      return this\r\n    },\r\n\r\n\r\n    /**\r\n     * overwrites the element with an object at the specific index.\r\n     *\r\n     * @param {Object} obj The object to add\r\n     * @param {Number} index the index where the object should places.\r\n     *\r\n     * @returns {this}\r\n     */\r\n    overwriteElementAt: function (obj, index) {\r\n      this.data[index] = obj\r\n\r\n      return this\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {Object} the attributes which are required for persistence\r\n     */\r\n    getPersistentAttributes: function () {\r\n      return {data: this.data}\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Read all attributes from the serialized properties and transfer them into the shape.\r\n     *\r\n     * @param {Object} memento\r\n     * @returns {this}\r\n     */\r\n    setPersistentAttributes: function (memento) {\r\n      this.data = memento.data\r\n\r\n      return this\r\n    }\r\n  })\r\n\r\ndraw2d.util.ArrayList.EMPTY_LIST = new draw2d.util.ArrayList()\r\n\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\ndraw2d.util.Base64 = {\r\n\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_ :null,\r\n\r\n\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n\r\n\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_ : null,\r\n\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_ : null,\r\n\r\n\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',\r\n\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' + '+/=',\r\n\r\n\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_WEBSAFE :'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' + '-_.',\r\n\r\n\r\n    encodeByteArray: function(input, opt_webSafe) {\r\n        draw2d.util.Base64.init();\r\n\r\n        var byteToCharMap = opt_webSafe ?  draw2d.util.Base64.byteToCharMapWebSafe_ : draw2d.util.Base64.byteToCharMap_;\r\n\r\n        var output = [];\r\n\r\n        for (var i = 0; i < input.length; i += 3) {\r\n          var byte1 = input[i];\r\n          var haveByte2 = i + 1 < input.length;\r\n          var byte2 = haveByte2 ? input[i + 1] : 0;\r\n          var haveByte3 = i + 2 < input.length;\r\n          var byte3 = haveByte3 ? input[i + 2] : 0;\r\n\r\n          var outByte1 = byte1 >> 2;\r\n          var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n          var outByte3 = ((byte2 & 0x0F) << 2) | (byte3 >> 6);\r\n          var outByte4 = byte3 & 0x3F;\r\n\r\n          if (!haveByte3) {\r\n            outByte4 = 64;\r\n\r\n            if (!haveByte2) {\r\n              outByte3 = 64;\r\n            }\r\n          }\r\n\r\n          output.push(byteToCharMap[outByte1],\r\n                      byteToCharMap[outByte2],\r\n                      byteToCharMap[outByte3],\r\n                      byteToCharMap[outByte4]);\r\n        }\r\n\r\n        return output.join('');\r\n      },\r\n\r\n\r\n      /**\r\n       * \r\n       * Base64-encode a string.\r\n       *\r\n       * @param {string} input A string to encode.\r\n       * @param {boolean=} opt_webSafe If true, we should use the alternative alphabet.\r\n       * @returns {string} The base64 encoded string.\r\n       */\r\n     encode: function(input, opt_webSafe) {\r\n        return draw2d.util.Base64.encodeByteArray( draw2d.util.Base64.stringToByteArray(input), opt_webSafe);\r\n      },\r\n\r\n\r\n      /**\r\n       * \r\n       * Base64-decode a string.\r\n       *\r\n       * @param {String} input to decode (length not required to be a multiple of 4).\r\n       * @param {boolean=} opt_webSafe True if we should use the\r\n       *    alternative alphabet.\r\n       * @returns {Array} bytes representing the decoded value.\r\n       */\r\n      decode: function(input, opt_webSafe) {\r\n        draw2d.util.Base64.init();\r\n\r\n        var charToByteMap = opt_webSafe ?draw2d.util.Base64.charToByteMapWebSafe_ : draw2d.util.Base64.charToByteMap_;\r\n\r\n        var output = [];\r\n\r\n        for (var i = 0; i < input.length; ) {\r\n          var byte1 = charToByteMap[input.charAt(i++)];\r\n\r\n          var haveByte2 = i < input.length;\r\n          var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n          ++i;\r\n\r\n          var haveByte3 = i < input.length;\r\n          var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 0;\r\n          ++i;\r\n\r\n          var haveByte4 = i < input.length;\r\n          var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 0;\r\n          ++i;\r\n\r\n          if (byte1 == null || byte2 == null ||\r\n              byte3 == null || byte4 == null) {\r\n            throw Error();\r\n          }\r\n\r\n          var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n          output.push(outByte1);\r\n\r\n          if (byte3 != 64) {\r\n            var outByte2 = ((byte2 << 4) & 0xF0) | (byte3 >> 2);\r\n            output.push(outByte2);\r\n\r\n            if (byte4 != 64) {\r\n              var outByte3 = ((byte3 << 6) & 0xC0) | byte4;\r\n              output.push(outByte3);\r\n            }\r\n          }\r\n        }\r\n\r\n        return output;\r\n     },\r\n\r\n    /**\r\n     * Turns a string into an array of bytes; a \"byte\" being a JS number in the\r\n     * range 0-255.\r\n     * @param {string} str String value to arrify.\r\n     * @returns {!Array.<number>} Array of numbers corresponding to the\r\n     *    UCS character codes of each character in str.\r\n     */\r\n    stringToByteArray: function(str) {\r\n      var output = [], p = 0;\r\n      for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        while (c > 0xff) {\r\n          output[p++] = c & 0xff;\r\n          c >>= 8;\r\n        }\r\n        output[p++] = c;\r\n      }\r\n      return output;\r\n    },\r\n\r\n    init: function() {\r\n        if (!draw2d.util.Base64.byteToCharMap_) {\r\n            draw2d.util.Base64.byteToCharMap_ = {};\r\n            draw2d.util.Base64.charToByteMap_ = {};\r\n            draw2d.util.Base64.byteToCharMapWebSafe_ = {};\r\n            draw2d.util.Base64.charToByteMapWebSafe_ = {};\r\n\r\n          // We want quick mappings back and forth, so we precompute two maps.\r\n          for (var i = 0; i < draw2d.util.Base64.ENCODED_VALS.length; i++) {\r\n              draw2d.util.Base64.byteToCharMap_[i] = draw2d.util.Base64.ENCODED_VALS.charAt(i);\r\n              draw2d.util.Base64.charToByteMap_[draw2d.util.Base64.byteToCharMap_[i]] = i;\r\n              draw2d.util.Base64.byteToCharMapWebSafe_[i] = draw2d.util.Base64.ENCODED_VALS_WEBSAFE.charAt(i);\r\n              draw2d.util.Base64.charToByteMapWebSafe_[draw2d.util.Base64.byteToCharMapWebSafe_[i]] = i;\r\n          }\r\n        }\r\n    }\r\n};\r\n","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n * Util class to handle colors in the draw2d enviroment.\r\n *\r\n * @example\r\n *     // Create a new Color with RGB values\r\n *     var color = new draw2d.util.Color(127,0,0);\r\n *\r\n *     // of from a hex string\r\n *     var color2 = new draw2d.util.Color(\"#f00000\");\r\n *\r\n *     // Create a little bit darker color\r\n *     var darkerColor = color.darker(0.2); // 20% darker\r\n *\r\n *     // create a optimal text color if 'color' the background color\r\n *     // (best in meaning of contrast and readability)\r\n *     var fontColor = color.getIdealTextColor();\r\n *\r\n * @param {Number|String|draw2d.util.Color|Array} red\r\n * @param {Number} green\r\n * @param {Number} blue\r\n * @param {Number} [alpha]\r\n */\r\ndraw2d.util.Color = Class.extend(\r\n  /** @lends draw2d.util.Color */\r\n  {\r\n\r\n    init: function(red, green, blue, alpha) {\r\n\r\n      this.hashString = null;\r\n\r\n      if(typeof red === \"undefined\" || red===null){\r\n          this.hashString = \"none\";\r\n      }\r\n      else if(red instanceof draw2d.util.Color){\r\n          if(red.hashString===\"none\"){\r\n              this.hashString = \"none\";\r\n          }\r\n          else{\r\n              this.red = red.red;\r\n              this.green = red.green;\r\n              this.blue = red.blue;\r\n              this.alpha = red.alpha;\r\n          }\r\n      }\r\n      else if(typeof red === \"string\")\r\n      {\r\n           if (red === \"none\") {\r\n              this.hashString = \"none\";\r\n           }\r\n           else {\r\n              let rgba = this.hex2rgb(red);\r\n              this.red = rgba[0];\r\n              this.green = rgba[1];\r\n              this.blue = rgba[2];\r\n              this.alpha = rgba[3];\r\n          }\r\n      }\r\n      // JSON struct of {red:###, green:###, blue:### }\r\n      else if(typeof red === \"object\" && typeof red.red===\"number\")\r\n      {\r\n        this.red= red.red;\r\n        this.green = red.green;\r\n        this.blue = red.blue;\r\n        this.alpha = red.alpha;\r\n      }\r\n      // array detection 1\r\n      else if(red instanceof Array && red.length===3)\r\n      {\r\n        this.red= red[0];\r\n        this.green = red[1];\r\n        this.blue = red[2];\r\n        this.alpha = red[3];\r\n      }\r\n      // array detection 2\r\n      else if(typeof red === \"object\" && typeof red.length ===\"number\" && red.length===3)\r\n      {\r\n        this.red= red[0]\r\n        this.green = red[1]\r\n        this.blue = red[2]\r\n        this.alpha = red[3]\r\n      }\r\n      else\r\n      {\r\n        this.red= parseInt(red)\r\n        this.green = parseInt(green)\r\n        this.blue = parseInt(blue)\r\n        this.alpha = (typeof alpha === 'undefined')? 1 : parseFloat(alpha)\r\n      }\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Convert the color object into a HTML CSS representation\r\n     * @returns {String} the color in rgb(##,##,##) representation\r\n     **/\r\n    getHTMLStyle: function()\r\n    {\r\n      if(typeof this.red ===\"undefined\")\r\n        return \"rgba(0,0,0,0)\";\r\n\r\n      return \"rgba(\"+this.red+\",\"+this.green+\",\"+this.blue+\",\"+this.alpha+\")\"\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * The red part of the color.\r\n     *\r\n     * @returns {Number} the [red] part of the color.\r\n     **/\r\n    getRed: function()\r\n    {\r\n      return this.red\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * The green part of the color.\r\n     *\r\n     * @returns {Number} the [green] part of the color.\r\n     **/\r\n    getGreen: function()\r\n    {\r\n      return this.green;\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * The blue part of the color\r\n     *\r\n     * @returns {Number} the [blue] part of the color.\r\n     **/\r\n    getBlue: function()\r\n    {\r\n      return this.blue;\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * The alpha part of the color\r\n     *\r\n     * @returns {Number} the [alpha] part of the color.\r\n     **/\r\n    getAlpha: function()\r\n    {\r\n      return this.alpha;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns the ideal Text Color. Useful for font color selection by a given background color.\r\n     *\r\n     * @returns {draw2d.util.Color} The <i>ideal</i> inverse color.\r\n     **/\r\n    getIdealTextColor: function()\r\n    {\r\n       let nThreshold = 105;\r\n       let bgDelta = (this.red * 0.299) + (this.green * 0.587) + (this.blue * 0.114);\r\n       return (255 - bgDelta < nThreshold) ? new  draw2d.util.Color(0,0,0) : new  draw2d.util.Color(255,255,255);\r\n    },\r\n\r\n    /**\r\n     * return array of [r,g,b,a] from any valid color. if failed returns [0,0,0,1]\r\n     *\r\n     * @param hexcolor\r\n     * @returns {*}\r\n     */\r\n    hex2rgb: function(color)\r\n    {\r\n      if (!color) {\r\n        return [0, 0, 0, 1]\r\n      }\r\n\r\n      if (color.toLowerCase() === 'transparent') {\r\n        return [0, 0, 0, 0]\r\n      }\r\n\r\n      if (color[0] === '#'){\r\n        if (color.length < 7){\r\n          // convert #RGB and #RGBA to #RRGGBB and #RRGGBBAA\r\n          color = '#' + color[1] + color[1] + color[2] + color[2] + color[3] + color[3] + (color.length > 4 ? color[4] + color[4] : '');\r\n        }\r\n        return [parseInt(color.substr(1, 2), 16),\r\n          parseInt(color.substr(3, 2), 16),\r\n          parseInt(color.substr(5, 2), 16),\r\n          color.length > 7 ? parseInt(color.substr(7, 2), 16)/255 : 1]\r\n      }\r\n\r\n      if (color.indexOf('rgb') === -1){\r\n        // convert named colors\r\n        let temp_elem = document.body.appendChild(document.createElement('fictum')); // intentionally use unknown tag to lower chances of css rule override with !important\r\n        let flag = 'rgb(1, 2, 3)' // this flag tested on chrome 59, ff 53, ie9, ie10, ie11, edge 14\r\n        temp_elem.style.color = flag\r\n        if (temp_elem.style.color !== flag) {\r\n          return [0, 0, 0, 1] // color set failed - some monstrous css rule is probably taking over the color of our object\r\n        }\r\n        temp_elem.style.color = color\r\n\r\n        if (temp_elem.style.color === flag || temp_elem.style.color === '') {\r\n          return [0, 0, 0, 1] // color parse failed\r\n        }\r\n        color = getComputedStyle(temp_elem).color\r\n        document.body.removeChild(temp_elem)\r\n      }\r\n\r\n      if (color.indexOf('rgb') === 0) {\r\n        if (color.indexOf('rgba') === -1) {\r\n          color += ',1'; // convert 'rgb(R,G,B)' to 'rgb(R,G,B)A' which looks awful but will pass the regxep below\r\n        }\r\n        return color.match(/[\\.\\d]+/g).map( a => +a);\r\n      }\r\n    },\r\n\r\n    /**\r\n     *\r\n     **/\r\n    hex: function()\r\n    {\r\n      return(\r\n        this.int2hex(this.red)+\r\n        this.int2hex(this.green)+\r\n        this.int2hex(this.blue)\r\n        // breaks raphaelJS...so don'T use it right now\r\n        //(this.alpha * 255).toString(16).substring(0,2).toUpperCase()\r\n      );\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Convert the color object into a HTML CSS representation\r\n     * @returns {String} the color in rgb(##,##,##) representation\r\n     **/\r\n    rgba: function()\r\n    {\r\n      return this.getHTMLStyle()\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Convert the color object into a HTML CSS representation\r\n     * @returns {String} the color in #RRGGBB representation\r\n     **/\r\n    hash: function()\r\n    {\r\n        if(this.hashString===null){\r\n            this.hashString= \"#\"+this.hex();\r\n        }\r\n        return this.hashString;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    int2hex: function(v)\r\n    {\r\n      v=Math.round(Math.min(Math.max(0,v),255));\r\n      return(\"0123456789ABCDEF\".charAt((v-v%16)/16)+\"0123456789ABCDEF\".charAt(v%16));\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Returns a darker color of the given one. The original color is unchanged.\r\n     *\r\n     * @param {Number} fraction  Darkness fraction between [0..1].\r\n     * @return{draw2d.util.Color}        Darker color.\r\n     */\r\n    darker: function(fraction)\r\n    {\r\n       // we can't \"darker\" a undefined color. In this case we return the undefnied color itself\r\n       //\r\n       if(this.hashString===\"none\")\r\n           return this;\r\n\r\n       fraction = (typeof fraction === 'undefined') ? 0.1 : fraction;\r\n\r\n       let red   = parseInt(Math.round (this.getRed()   * (1.0 - fraction)));\r\n       let green = parseInt(Math.round (this.getGreen() * (1.0 - fraction)));\r\n       let blue  = parseInt(Math.round (this.getBlue()  * (1.0 - fraction)));\r\n\r\n       if (red   < 0) red   = 0; else if (red   > 255) red   = 255;\r\n       if (green < 0) green = 0; else if (green > 255) green = 255;\r\n       if (blue  < 0) blue  = 0; else if (blue  > 255) blue  = 255;\r\n\r\n       return new draw2d.util.Color(red, green, blue, this.alpha);\r\n    },\r\n\r\n\r\n    /**\r\n     * \r\n     * Make a color lighter. The original color is unchanged.\r\n     *\r\n     * @param {Number} fraction  lighter fraction between [0..1].\r\n     * @returns {draw2d.util.Color} Lighter color.\r\n     */\r\n    lighter: function( fraction)\r\n    {\r\n        // we can't \"lighter\" a undefined color. In this case we return the undefined color itself\r\n        //\r\n        if(this.hashString===\"none\")\r\n            return this;\r\n\r\n        fraction = (typeof fraction === 'undefined') ? 0.1 : fraction;\r\n\r\n        let red   = parseInt(Math.round (this.getRed()   * (1.0 + fraction)));\r\n        let green = parseInt(Math.round (this.getGreen() * (1.0 + fraction)));\r\n        let blue  = parseInt(Math.round (this.getBlue()  * (1.0 + fraction)));\r\n\r\n        if (red   < 0) red   = 0; else if (red   > 255) red   = 255;\r\n        if (green < 0) green = 0; else if (green > 255) green = 255;\r\n        if (blue  < 0) blue  = 0; else if (blue  > 255) blue  = 255;\r\n\r\n        return new draw2d.util.Color(red, green, blue, this.alpha);\r\n    },\r\n\r\n    /**\r\n     * \r\n     * Return a new color wich is faded to the given color.\r\n     * @param {draw2d.util.Color} color\r\n     * @param {Number} pc the fade percentage in [0..1]\r\n     * @returns {draw2d.util.Color}\r\n     *\r\n     * @since 2.1.0\r\n     */\r\n    fadeTo: function(color, pc){\r\n\r\n        let r= Math.floor(this.red+(pc*(color.red-this.red)) + .5);\r\n        let g= Math.floor(this.green+(pc*(color.green-this.green)) + .5);\r\n        let b= Math.floor(this.blue+(pc*(color.blue-this.blue)) + .5);\r\n        let a= Math.floor(this.alpha+(pc*(color.alpha-this.alpha)) + .5);\r\n\r\n        return new draw2d.util.Color(r,g,b,a);\r\n    },\r\n\r\n\t/**\r\n\t * \r\n\t * Compares two color objects\r\n\t *\r\n\t * @param {draw2d.util.Color} o\r\n\t * @returns {Boolean}\r\n\t **/\r\n\tequals: function( o)\r\n\t{\r\n\t\tif(!(o instanceof draw2d.util.Color)){\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.rgba()===o.rgba();\r\n\t}\r\n\r\n});\r\n\r\nexport default draw2d.util.Color;\r\n","\r\n\r\n/*!\r\n * JavaScript Debug - v0.4 - 6/22/2010\r\n * http://benalman.com/projects/javascript-debug-console-log/\r\n *\r\n * Copyright (c) 2010 \"Cowboy\" Ben Alman\r\n * Dual licensed under the MIT and GPL licenses.\r\n * http://benalman.com/about/license/\r\n *\r\n * With lots of help from Paul Irish!\r\n * http://paulirish.com/\r\n */\r\n// Script: JavaScript Debug: A simple wrapper for console.log\r\n//\r\n// *Version: 0.4, Last Updated: 6/22/2010*\r\n//\r\n// Tested with Internet Explorer 6-8, Firefox 3-3.6, Safari 3-4, Chrome 3-5, Opera 9.6-10.5\r\n//\r\n// Home       - http://benalman.com/projects/javascript-debug-console-log/\r\n// GitHub     - http://github.com/cowboy/javascript-debug/\r\n// Source     - http://github.com/cowboy/javascript-debug/raw/master/ba-debug.js\r\n// (Minified) - http://github.com/cowboy/javascript-debug/raw/master/ba-debug.min.js (1.1kb)\r\n//\r\n// About: License\r\n//\r\n// Copyright (c) 2010 \"Cowboy\" Ben Alman,\r\n// Dual licensed under the MIT and GPL licenses.\r\n// http://benalman.com/about/license/\r\n//\r\n// About: Support and Testing\r\n//\r\n// Information about what browsers this code has been tested in.\r\n//\r\n// Browsers Tested - Internet Explorer 6-8, Firefox 3-3.6, Safari 3-4, Chrome\r\n// 3-5, Opera 9.6-10.5\r\n//\r\n// About: Examples\r\n//\r\n// These working examples, complete with fully commented code, illustrate a few\r\n// ways in which this plugin can be used.\r\n//\r\n// Examples - http://benalman.com/code/projects/javascript-debug/examples/debug/\r\n//\r\n// About: Revision History\r\n//\r\n// 0.4 - (6/22/2010) Added missing passthrough methods: exception,\r\n//       groupCollapsed, table\r\n// 0.3 - (6/8/2009) Initial release\r\n//\r\n// Topic: Pass-through console methods\r\n//\r\n// assert, clear, count, dir, dirxml, exception, group, groupCollapsed,\r\n// groupEnd, profile, profileEnd, table, time, timeEnd, trace\r\n//\r\n// These console methods are passed through (but only if both the console and\r\n// the method exists), so use them without fear of reprisal. Note that these\r\n// methods will not be passed through if the logging level is set to 0 via\r\n// <debug.setLevel>.\r\n\r\nwindow.debug = (function(){\r\n  var window = this,\r\n\r\n    // Some convenient shortcuts.\r\n    aps = Array.prototype.slice,\r\n    con = console,\r\n\r\n    // Public object to be returned.\r\n    that = {},\r\n\r\n    callback_func,\r\n    callback_force,\r\n\r\n    // Default logging level, show everything.\r\n    log_level = 9,\r\n\r\n    // Logging methods, in \"priority order\". Not all console implementations\r\n    // will utilize these, but they will be used in the callback passed to\r\n    // setCallback.\r\n    log_methods = [ 'error', 'warn', 'info', 'debug', 'log' ],\r\n\r\n    // Pass these methods through to the console if they exist, otherwise just\r\n    // fail gracefully. These methods are provided for convenience.\r\n    pass_methods = 'assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace'.split(' '),\r\n    idx = pass_methods.length,\r\n\r\n    // Logs are stored here so that they can be recalled as necessary.\r\n    logs = [];\r\n\r\n  while ( --idx >= 0 ) {\r\n    (function( method ){\r\n\r\n      // Generate pass-through methods. These methods will be called, if they\r\n      // exist, as long as the logging level is non-zero.\r\n      that[ method ] = function() {\r\n        log_level !== 0 && con && con[ method ]\r\n          && con[ method ].apply( con, arguments );\r\n      };\r\n\r\n    })( pass_methods[idx] );\r\n  }\r\n\r\n  idx = log_methods.length;\r\n  while ( --idx >= 0 ) {\r\n    (function( idx, level ){\r\n\r\n      // Method: debug.log\r\n      //\r\n      // Call the console.log method if available. Adds an entry into the logs\r\n      // array for a callback specified via <debug.setCallback>.\r\n      //\r\n      // Usage:\r\n      //\r\n      //  debug.log( object [, object, ...] );                               - -\r\n      //\r\n      // Arguments:\r\n      //\r\n      //  object - (Object) Any valid JavaScript object.\r\n\r\n      // Method: debug.debug\r\n      //\r\n      // Call the console.debug method if available, otherwise call console.log.\r\n      // Adds an entry into the logs array for a callback specified via\r\n      // <debug.setCallback>.\r\n      //\r\n      // Usage:\r\n      //\r\n      //  debug.debug( object [, object, ...] );                             - -\r\n      //\r\n      // Arguments:\r\n      //\r\n      //  object - (Object) Any valid JavaScript object.\r\n\r\n      // Method: debug.info\r\n      //\r\n      // Call the console.info method if available, otherwise call console.log.\r\n      // Adds an entry into the logs array for a callback specified via\r\n      // <debug.setCallback>.\r\n      //\r\n      // Usage:\r\n      //\r\n      //  debug.info( object [, object, ...] );                              - -\r\n      //\r\n      // Arguments:\r\n      //\r\n      //  object - (Object) Any valid JavaScript object.\r\n\r\n      // Method: debug.warn\r\n      //\r\n      // Call the console.warn method if available, otherwise call console.log.\r\n      // Adds an entry into the logs array for a callback specified via\r\n      // <debug.setCallback>.\r\n      //\r\n      // Usage:\r\n      //\r\n      //  debug.warn( object [, object, ...] );                              - -\r\n      //\r\n      // Arguments:\r\n      //\r\n      //  object - (Object) Any valid JavaScript object.\r\n\r\n      // Method: debug.error\r\n      //\r\n      // Call the console.error method if available, otherwise call console.log.\r\n      // Adds an entry into the logs array for a callback specified via\r\n      // <debug.setCallback>.\r\n      //\r\n      // Usage:\r\n      //\r\n      //  debug.error( object [, object, ...] );                             - -\r\n      //\r\n      // Arguments:\r\n      //\r\n      //  object - (Object) Any valid JavaScript object.\r\n\r\n      that[ level ] = function() {\r\n        var args = aps.call( arguments ),\r\n          log_arr = [ level ].concat( args );\r\n\r\n        logs.push( log_arr );\r\n        exec_callback( log_arr );\r\n\r\n        if ( !con || !is_level( idx ) ) { return; }\r\n\r\n        con.firebug ? con[ level ].apply( window, args )\r\n          : con[ level ] ? con[ level ]( args )\r\n          : con.log( args );\r\n      };\r\n\r\n    })( idx, log_methods[idx] );\r\n  }\r\n\r\n  // Execute the callback function if set.\r\n  function exec_callback( args ) {\r\n    if ( callback_func && (callback_force || !con || !con.log) ) {\r\n      callback_func.apply( window, args );\r\n    }\r\n  };\r\n\r\n  // Method: debug.setLevel\r\n  //\r\n  // Set a minimum or maximum logging level for the console. Doesn't affect\r\n  // the <debug.setCallback> callback function, but if set to 0 to disable\r\n  // logging, <Pass-through console methods> will be disabled as well.\r\n  //\r\n  // Usage:\r\n  //\r\n  //  debug.setLevel( [ level ] )                                            - -\r\n  //\r\n  // Arguments:\r\n  //\r\n  //  level - (Number) If 0, disables logging. If negative, shows N lowest\r\n  //    priority levels of log messages. If positive, shows N highest priority\r\n  //    levels of log messages.\r\n  //\r\n  // Priority levels:\r\n  //\r\n  //   log (1) < debug (2) < info (3) < warn (4) < error (5)\r\n\r\n  that.setLevel = function( level ) {\r\n    log_level = typeof level === 'number' ? level : 9;\r\n  };\r\n\r\n  // Determine if the level is visible given the current log_level.\r\n  function is_level( level ) {\r\n    return log_level > 0\r\n      ? log_level > level\r\n      : log_methods.length + log_level <= level;\r\n  };\r\n\r\n  // Method: debug.setCallback\r\n  //\r\n  // Set a callback to be used if logging isn't possible due to console.log\r\n  // not existing. If unlogged logs exist when callback is set, they will all\r\n  // be logged immediately unless a limit is specified.\r\n  //\r\n  // Usage:\r\n  //\r\n  //  debug.setCallback( callback [, force ] [, limit ] )\r\n  //\r\n  // Arguments:\r\n  //\r\n  //  callback - (Function) The aforementioned callback function. The first\r\n  //    argument is the logging level, and all subsequent arguments are those\r\n  //    passed to the initial debug logging method.\r\n  //  force - (Boolean) If false, log to console.log if available, otherwise\r\n  //    callback. If true, log to both console.log and callback.\r\n  //  limit - (Number) If specified, number of lines to limit initial scrollback\r\n  //    to.\r\n\r\n  that.setCallback = function() {\r\n    var args = aps.call( arguments ),\r\n      max = logs.length,\r\n      i = max;\r\n\r\n    callback_func = args.shift() || null;\r\n    callback_force = typeof args[0] === 'boolean' ? args.shift() : false;\r\n\r\n    i -= typeof args[0] === 'number' ? args.shift() : max;\r\n\r\n    while ( i < max ) {\r\n      exec_callback( logs[i++] );\r\n    }\r\n  };\r\n\r\n  return that;\r\n})();\r\n\r\n","import draw2d from '../packages'\r\n\r\n\r\ndraw2d.util.JSON = {\r\n\r\n        /**\r\n         * \r\n         * Given a dot deliminated string set will create an object\r\n         * based on the structure of the string with the desired value\r\n         *\r\n         * @param {Object} data   the json object to modify\r\n         * @param {String} path   path indicating where value should be placed\r\n         * @param {Object} value  the value desired to be set at the location determined by path\r\n         */\r\n        set: function(data, path, value) {\r\n          if(!path || path===''){\r\n              return;\r\n          }\r\n\r\n          let re = /[\\w-]+|\\[\\]|([^\\[[\\w]\\]]|[\"'](.*?)['\"])/g;\r\n          // parse path on dots, and brackets\r\n          let pathList = path.match(re);\r\n          let parent = data;\r\n          let parentKey;\r\n          let grandParent = null;\r\n          let grandParentKey = null;\r\n\r\n          let addObj = function(obj, key, data) {\r\n            if(key === '[]') {\r\n              obj.push(data);\r\n            } else {\r\n              obj[key] = data;\r\n            }\r\n          };\r\n\r\n          while(pathList.length > 0) {\r\n            parentKey = pathList.shift().replace(/[\"']/g, '');\r\n\r\n            // Number, treat it as an array\r\n            if (!isNaN(+parentKey) || parentKey === \"[]\") {\r\n              if(parent.constructor !== Array ) {\r\n                parent = [];\r\n                addObj(grandParent, grandParentKey, parent);\r\n              }\r\n            // String, treat it as a key\r\n            }\r\n            else if (typeof parentKey===\"string\") {\r\n              if(!$.isPlainObject(parent)) {\r\n                parent = {};\r\n                addObj(grandParent, grandParentKey, parent);\r\n              }\r\n            }\r\n            // Next\r\n            grandParent = parent;\r\n            grandParentKey = parentKey;\r\n            parent = parent[parentKey];\r\n          }\r\n\r\n          addObj(grandParent, grandParentKey, value);\r\n        },\r\n\r\n        /**\r\n         * \r\n         * Returns the value defined by the path passed in\r\n         *\r\n         * @param  {Object} data the JSON data object\r\n         * @param  {String} path string leading to a desired value\r\n         */\r\n        get: function(data, path) {\r\n          let regex = /[\\w-]+|\\[\\]|([^\\[[\\w]\\]]|[\"'](.*?)['\"])/g;\r\n          //check if path is truthy\r\n          if (!path){\r\n              return undefined;\r\n          }\r\n          //parse path on dots and brackets\r\n          let paths = path.match(regex);\r\n          //step through data object until all keys in path have been processed\r\n          while (data !== null && paths.length > 0) {\r\n            if(data.propertyIsEnumerable(paths[0].replace(/\"/g, ''))){\r\n              data = data[paths.shift().replace(/\"/g, '')];\r\n            }\r\n            else{\r\n              return undefined;\r\n            }\r\n          }\r\n          return data;\r\n        },\r\n\r\n        /**\r\n         * \r\n         * calculates the diff between the given json objects\r\n         *\r\n         */\r\n        diff: function(obj1, obj2) {\r\n            let result = {};\r\n            for(let key in obj1) {\r\n              let v1 = obj1[key];\r\n              let v2 = obj2[key];\r\n                if(v1 !== v2) {\r\n                \tif(v1.equals ){\r\n                \t\tif(!v1.equals(v2)){\r\n                \t\t\tresult[key] = obj1[key];\r\n                \t\t}\r\n                \t}\r\n                \telse{\r\n            \t\t\tresult[key] = obj1[key];\r\n                \t}\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        flatDiff: function(obj1, obj2) {\r\n          let result = {};\r\n            for(let key in obj1) {\r\n                if(obj1[key] !== obj2[key]) {\r\n                    result[key] = obj1[key];\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n\r\n        ensureDefault:function( json, attribute, value)\r\n        {\r\n            if (!json.hasOwnProperty(attribute)) {\r\n                json[attribute] = value;\r\n            }\r\n        }\r\n};\r\n\r\nexport default draw2d.util.JSON;\r\n","// avoid iPad bounce effect during DragDrop//\r\ndocument.ontouchmove = function(e){e.preventDefault();};\r\n\r\n\r\n","\r\n// extending raphael with a polygon function\r\nRaphael.fn.polygon = function(pointString) {\r\n  var poly  = ['M'];\r\n  var point = pointString.split(' ');\r\n      \r\n  for(var i=0; i < point.length; i++) {\r\n     var c = point[i].split(',');\r\n     for(var j=0; j < c.length; j++) {\r\n        var d = parseFloat(c[j]);\r\n        if (!isNaN(d))\r\n          poly.push(d);\r\n     };\r\n     if (i == 0)\r\n      poly.push('L');\r\n  }\r\n  poly.push('Z');\r\n  \r\n  return this.path(poly);\r\n};","import draw2d from '../packages'\r\n\r\n/**\r\n * @class\r\n * Generates a (pseudo) UUID's\r\n *\r\n * @example\r\n *     // a UUID in the format\r\n *     // xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12)\r\n *     var id = draw2d.util.UUID.create();\r\n *\r\n * @author Andreas Herz\r\n */\r\ndraw2d.util.UUID = {\r\n  /**\r\n   *\r\n   * Generates a unique id.<br>\r\n   * But just for the correctness: <strong>this is no Global Unique Identifier</strong>, it is just a random generator\r\n   * with the output that looks like a GUID. <br>\r\n   * But may be also useful.\r\n   *\r\n   * @returns {String} the  UUID in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx (8-4-4-4-12)\r\n   **/\r\n  create: function () {\r\n    let segment = function () {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\r\n    }\r\n    return (segment() + segment() + \"-\" + segment() + \"-\" + segment() + \"-\" + segment() + \"-\" + segment() + segment() + segment())\r\n  }\r\n}\r\n\r\nexport default draw2d.util.UUID\r\n","\r\n\r\n// Pass in the objects to merge as arguments.// For a deep extend, set the first argument to `true`.\r\nlet fn = function () {\r\n\r\n  // Variables\r\n  let extended = {}\r\n  let deep = false\r\n  let i = 0\r\n  let length = arguments.length\r\n\r\n  // Check if a deep merge\r\n  if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n    deep = arguments[0]\r\n    i++\r\n  }\r\n\r\n  // Merge the object into the extended object\r\n  /**\r\n   *\r\n   * @param obj\r\n   */\r\n  let merge = function (obj) {\r\n    for ( let prop in obj ) {\r\n      if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\r\n        // If deep merge and property is an object, merge properties\r\n        if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\r\n          extended[prop] = extend( true, extended[prop], obj[prop] )\r\n        } else {\r\n          extended[prop] = obj[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loop through each object and conduct a merge\r\n  for ( ; i < length; i++ ) {\r\n    let obj = arguments[i]\r\n    merge(obj)\r\n  }\r\n\r\n  return extended\r\n\r\n}\r\nmodule.exports = fn\r\nglobal.extend = fn\r\n","/**\r\n * adding support method to check if the node is already visible\r\n **/\r\n(function() {\r\n    Raphael.el.isVisible = function() {\r\n        return (this.node.style.display !== \"none\");\r\n    }\r\n})();\r\n","\r\n\r\n/**\r\n * @class\r\n *\r\n * A bezier spline object.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.util.spline.Spline\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.util.spline.BezierSpline = draw2d.util.spline.Spline.extend(\r\n\r\n    /** @lends draw2d.util.spline.BezierSpline.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.util.spline.BezierSpline\",\r\n\r\n    /**\r\n     */\r\n    init: function()\r\n    {\r\n        this._super();\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Create a spline based on the given control points.\r\n     * The generated curve starts in the first control point and ends\r\n     * in the last control point.\r\n     *\r\n     * @param {Array} controlPoints  Control points of spline (x0,y0,z0,x1,y1,z1,...).\r\n     * @param {Number} parts Number of parts to divide each leg into.\r\n     *\r\n     * @returns {Array} the new generated array with new draw2d.geo.Point\r\n     */\r\n    generate: function(controlPoints, parts)\r\n    {\r\n      var n = controlPoints.getSize();\r\n      // This implementation of an bezier Spline needs at least 4 control points. Return the \r\n      // original point if they do not meet them\r\n      if(n<4) {\r\n        return controlPoints.clone(true)\r\n      }\r\n\r\n      var spline = new draw2d.util.ArrayList();\r\n\r\n      spline.add(this.p(0, 0, controlPoints));\r\n\r\n      for (var i = 0; i < n - 3; i += 3) {\r\n        for (var j = 1; j <= parts; j++) {\r\n           spline.add(this.p (i, j /  parts, controlPoints));\r\n        }\r\n      }\r\n      return spline;\r\n    },\r\n\r\n    p: function( i,  t,  cp)\r\n    {\r\n      var x = 0.0;\r\n      var y = 0.0;\r\n\r\n      var k = i;\r\n      for (var j = 0; j <= 3; j++) {\r\n        var b = this.blend (j, t);\r\n        var p = cp.get(k++);\r\n        x += b * p.x;\r\n        y += b * p.y;\r\n     }\r\n\r\n      return new draw2d.geo.Point( x, y);\r\n    },\r\n\r\n    blend: function ( i,  t)\r\n    {\r\n      if      (i == 0) return (1 - t) * (1 - t) * (1 - t);\r\n      else if (i == 1) return 3 * t * (1 - t) * (1 - t);\r\n      else if (i == 2) return 3 * t * t * (1 - t);\r\n      else             return t * t * t;\r\n    }\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A catmull-rom spline object.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.util.spline.CubicSpline\r\n */\r\ndraw2d.util.spline.CatmullRomSpline = draw2d.util.spline.CubicSpline.extend(\r\n\r\n    /** @lends draw2d.util.spline.CatmullRomSpline.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.util.spline.CatmullRomSpline\",\r\n\r\n    /**\r\n     */\r\n    init: function()\r\n    {\r\n        this._super();\r\n    },\r\n\r\n\r\n    blend: function(i, t) \r\n    {\r\n        if (i == -2)\r\n            return ((-t + 2) * t - 1) * t / 2;\r\n        else if (i == -1)\r\n            return (((3 * t - 5) * t) * t + 2) / 2;\r\n        else if (i == 0)\r\n            return ((-3 * t + 4) * t + 1) * t / 2;\r\n        else\r\n            return ((t - 1) * t * t) / 2;\r\n    }\r\n\r\n});\r\n","import draw2d from '../../packages'\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A cubic spline object.\r\n *\r\n * @inheritable\r\n * @author Andreas Herz\r\n *\r\n * @extends draw2d.util.spline.Spline\r\n */\r\ndraw2d.util.spline.CubicSpline = draw2d.util.spline.Spline.extend(\r\n\r\n    /** @lends draw2d.util.spline.CubicSpline.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.util.spline.CubicSpline\",\r\n\r\n    /**\r\n     */\r\n    init: function()\r\n    {\r\n        this._super();\r\n    },\r\n\r\n\r\n    /**\r\n    * Create a spline based on the given control points.\r\n    * The generated curve starts in the first control point and ends\r\n    * in the last control point.\r\n    *\r\n    * @param {Array} controlPoints  Control points of spline (x0,y0,z0,x1,y1,z1,...).\r\n    * @param {Number} parts Number of parts to divide each leg into.\r\n    *\r\n    * @returns {Array} the new generated array with new draw2d.geo.Point\r\n    */\r\n    generate: function(controlPoints, parts)\r\n    {\r\n      // This implementation of an cubic spline needs at least 3 control points. Return the \r\n      // original point if they do not meet them\r\n      if(n<3) {\r\n        return controlPoints.clone(true)\r\n      }\r\n\r\n      // Endpoints are added twice to get them include in the\r\n      // generated array\r\n      var cp = new draw2d.util.ArrayList();\r\n      cp.add(controlPoints.get(0));\r\n      cp.addAll(controlPoints);\r\n      cp.add(controlPoints.get(controlPoints.getSize()-1));\r\n\r\n      var n = cp.getSize();\r\n      var spline = new draw2d.util.ArrayList();\r\n      spline.add(controlPoints.get(0));\r\n      spline.add( this.p(1, 0, cp) );\r\n\r\n      for (var i = 1; i < n - 2; i++) {\r\n        for (var j = 1; j <= parts; j++) {\r\n          spline.add( this.p(i, j / parts, cp));\r\n        }\r\n      }\r\n      spline.add(controlPoints.get(controlPoints.getSize()-1));\r\n\r\n      return spline;\r\n    },\r\n\r\n\r\n    p: function( i,  t,  cp)\r\n    {\r\n      var x = 0.0;\r\n      var y = 0.0;\r\n\r\n      var k = i-1;\r\n      for (var j = -2; j <= 1; j++) {\r\n        var b = this.blend (j, t);\r\n        var p = cp.get(k++);\r\n        if(!p){\r\n          console.log(\"error\")\r\n        }\r\n        x += b * p.x;\r\n        y += b * p.y;\r\n      }\r\n\r\n      return new draw2d.geo.Point(x, y);\r\n    },\r\n\r\n    blend: function(i, t)\r\n    {\r\n      if (i === -2)\r\n          return (((-t + 3) * t - 3) * t + 1) / 6;\r\n      else if (i === -1)\r\n          return (((3 * t - 6) * t) * t + 4) / 6;\r\n      else if (i === 0)\r\n          return (((-3 * t + 3) * t + 3) * t + 1) / 6;\r\n\r\n      return (t * t * t) / 6;\r\n    }\r\n\r\n});\r\n","\r\n/**\r\n * @class\r\n *\r\n *  An abstract class defining a general spline object.\r\n */\r\nimport draw2d from '../../packages'\r\n\r\ndraw2d.util.spline.Spline = Class.extend(\r\n    /** @lends draw2d.util.spline.Spline.prototype */\r\n    {\r\n    \r\n    NAME: \"draw2d.util.spline.Spline\",\r\n\r\n    /**\r\n     */\r\n    init: function()\r\n    {\r\n    },\r\n\r\n   /**\r\n    * Create a spline based on the given control points.\r\n    * The generated curve starts in the first control point and ends\r\n    * in the last control point.\r\n    *\r\n    * @param {Array} controlPoints  Control points of spline (x0,y0,z0,x1,y1,z1,...).\r\n    * @param {Number} parts Number of parts to divide each leg into.\r\n    **/\r\n    generate: function(controlPoints, parts){\r\n        throw \"inherit classes must implement the method 'draw2d.util.spline.Spline.generate()'\";\r\n    }\r\n\r\n});\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n\\r\\n/*!\\r\\n * jQuery contextMenu - Plugin for simple contextMenu handling\\r\\n *\\r\\n * Version: 1.5.24\\r\\n *\\r\\n * Authors: Rodney Rehm, Addy Osmani (patches for FF)\\r\\n * Web: http://medialize.github.com/jQuery-contextMenu/\\r\\n *\\r\\n * Licensed under\\r\\n *   MIT License http://www.opensource.org/licenses/mit-license\\r\\n *   GPL v3 http://opensource.org/licenses/GPL-3.0\\r\\n *\\r\\n */\\r\\n.context-menu-list {\\r\\n    margin:0;\\r\\n    padding:0;\\r\\n\\r\\n    min-width: 120px;\\r\\n    max-width: 250px;\\r\\n    display: inline-block;\\r\\n    position: absolute;\\r\\n    list-style-type: none;\\r\\n\\r\\n    border: 1px solid #DDD;\\r\\n    background: #EEE;\\r\\n\\r\\n    -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n       -moz-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n        -ms-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n         -o-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n\\r\\n    font-family: Verdana, Arial, Helvetica, sans-serif;\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.context-menu-item {\\r\\n    padding: 2px 2px 2px 24px;\\r\\n    background-color: #EEE;\\r\\n    position: relative;\\r\\n    -webkit-user-select: none;\\r\\n       -moz-user-select: -moz-none;\\r\\n        -ms-user-select: none;\\r\\n            user-select: none;\\r\\n}\\r\\n\\r\\n.context-menu-separator {\\r\\n    padding-bottom:0;\\r\\n    border-bottom: 1px solid #DDD;\\r\\n}\\r\\n\\r\\n.context-menu-item > label > input,\\r\\n.context-menu-item > label > textarea {\\r\\n    -webkit-user-select: text;\\r\\n       -moz-user-select: text;\\r\\n        -ms-user-select: text;\\r\\n            user-select: text;\\r\\n}\\r\\n\\r\\n.context-menu-item.hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #39F;\\r\\n}\\r\\n\\r\\n.context-menu-item.disabled {\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\n.context-menu-input.hover,\\r\\n.context-menu-item.disabled.hover {\\r\\n    cursor: default;\\r\\n    background-color: #EEE;\\r\\n}\\r\\n\\r\\n.context-menu-submenu:after {\\r\\n    content: \\\">\\\";\\r\\n    color: #666;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 3px;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/* icons\\r\\n    #protip:\\r\\n    In case you want to use sprites for icons (which I would suggest you do) have a look at\\r\\n    http://css-tricks.com/13224-pseudo-spriting/ to get an idea of how to implement\\r\\n    .context-menu-item.icon:before {}\\r\\n */\\r\\n.context-menu-item.icon { min-height: 18px; background-repeat: no-repeat; background-position: 4px 2px; }\\r\\n\\r\\n/* vertically align inside labels */\\r\\n.context-menu-input > label > * { vertical-align: top; }\\r\\n\\r\\n/* position checkboxes and radios as icons */\\r\\n.context-menu-input > label > input[type=\\\"checkbox\\\"],\\r\\n.context-menu-input > label > input[type=\\\"radio\\\"] {\\r\\n    margin-left: -17px;\\r\\n}\\r\\n.context-menu-input > label > span {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.context-menu-input > label,\\r\\n.context-menu-input > label > input[type=\\\"text\\\"],\\r\\n.context-menu-input > label > textarea,\\r\\n.context-menu-input > label > select {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n\\r\\n    -webkit-box-sizing: border-box;\\r\\n       -moz-box-sizing: border-box;\\r\\n        -ms-box-sizing: border-box;\\r\\n         -o-box-sizing: border-box;\\r\\n            box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.context-menu-input > label > textarea {\\r\\n    height: 100px;\\r\\n}\\r\\n.context-menu-item > .context-menu-list {\\r\\n    display: none;\\r\\n    /* re-positioned by js */\\r\\n    right: -5px;\\r\\n    top: 5px;\\r\\n}\\r\\n\\r\\n.context-menu-item.hover > .context-menu-list {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.context-menu-accesskey {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/contextmenu.css\"],\"names\":[],\"mappings\":\";;AAEA;;;;;;;;;;;;EAYE;AACF;IACI,QAAQ;IACR,SAAS;;IAET,gBAAgB;IAChB,gBAAgB;IAChB,qBAAqB;IACrB,kBAAkB;IAClB,qBAAqB;;IAErB,sBAAsB;IACtB,gBAAgB;;IAEhB,gDAAgD;OAC7C,6CAA6C;QAC5C,4CAA4C;SAC3C,2CAA2C;YACxC,wCAAwC;;IAEhD,kDAAkD;IAClD,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,kBAAkB;IAClB,yBAAyB;OACtB,2BAA2B;QAC1B,qBAAqB;YACjB,iBAAiB;AAC7B;;AAEA;IACI,gBAAgB;IAChB,6BAA6B;AACjC;;AAEA;;IAEI,yBAAyB;OACtB,sBAAsB;QACrB,qBAAqB;YACjB,iBAAiB;AAC7B;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;;IAEI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,MAAM;IACN,UAAU;IACV,UAAU;AACd;;AAEA;;;;;EAKE;AACF,0BAA0B,gBAAgB,EAAE,4BAA4B,EAAE,4BAA4B,EAAE;;AAExG,mCAAmC;AACnC,kCAAkC,mBAAmB,EAAE;;AAEvD,4CAA4C;AAC5C;;IAEI,kBAAkB;AACtB;AACA;IACI,gBAAgB;AACpB;;AAEA;;;;IAII,cAAc;IACd,WAAW;;IAEX,8BAA8B;OAC3B,2BAA2B;QAC1B,0BAA0B;SACzB,yBAAyB;YACtB,sBAAsB;AAClC;;AAEA;IACI,aAAa;AACjB;AACA;IACI,aAAa;IACb,wBAAwB;IACxB,WAAW;IACX,QAAQ;AACZ;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,0BAA0B;AAC9B\",\"sourcesContent\":[\"\\r\\n\\r\\n/*!\\r\\n * jQuery contextMenu - Plugin for simple contextMenu handling\\r\\n *\\r\\n * Version: 1.5.24\\r\\n *\\r\\n * Authors: Rodney Rehm, Addy Osmani (patches for FF)\\r\\n * Web: http://medialize.github.com/jQuery-contextMenu/\\r\\n *\\r\\n * Licensed under\\r\\n *   MIT License http://www.opensource.org/licenses/mit-license\\r\\n *   GPL v3 http://opensource.org/licenses/GPL-3.0\\r\\n *\\r\\n */\\r\\n.context-menu-list {\\r\\n    margin:0;\\r\\n    padding:0;\\r\\n\\r\\n    min-width: 120px;\\r\\n    max-width: 250px;\\r\\n    display: inline-block;\\r\\n    position: absolute;\\r\\n    list-style-type: none;\\r\\n\\r\\n    border: 1px solid #DDD;\\r\\n    background: #EEE;\\r\\n\\r\\n    -webkit-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n       -moz-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n        -ms-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n         -o-box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\\r\\n\\r\\n    font-family: Verdana, Arial, Helvetica, sans-serif;\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.context-menu-item {\\r\\n    padding: 2px 2px 2px 24px;\\r\\n    background-color: #EEE;\\r\\n    position: relative;\\r\\n    -webkit-user-select: none;\\r\\n       -moz-user-select: -moz-none;\\r\\n        -ms-user-select: none;\\r\\n            user-select: none;\\r\\n}\\r\\n\\r\\n.context-menu-separator {\\r\\n    padding-bottom:0;\\r\\n    border-bottom: 1px solid #DDD;\\r\\n}\\r\\n\\r\\n.context-menu-item > label > input,\\r\\n.context-menu-item > label > textarea {\\r\\n    -webkit-user-select: text;\\r\\n       -moz-user-select: text;\\r\\n        -ms-user-select: text;\\r\\n            user-select: text;\\r\\n}\\r\\n\\r\\n.context-menu-item.hover {\\r\\n    cursor: pointer;\\r\\n    background-color: #39F;\\r\\n}\\r\\n\\r\\n.context-menu-item.disabled {\\r\\n    color: #666;\\r\\n}\\r\\n\\r\\n.context-menu-input.hover,\\r\\n.context-menu-item.disabled.hover {\\r\\n    cursor: default;\\r\\n    background-color: #EEE;\\r\\n}\\r\\n\\r\\n.context-menu-submenu:after {\\r\\n    content: \\\">\\\";\\r\\n    color: #666;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 3px;\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/* icons\\r\\n    #protip:\\r\\n    In case you want to use sprites for icons (which I would suggest you do) have a look at\\r\\n    http://css-tricks.com/13224-pseudo-spriting/ to get an idea of how to implement\\r\\n    .context-menu-item.icon:before {}\\r\\n */\\r\\n.context-menu-item.icon { min-height: 18px; background-repeat: no-repeat; background-position: 4px 2px; }\\r\\n\\r\\n/* vertically align inside labels */\\r\\n.context-menu-input > label > * { vertical-align: top; }\\r\\n\\r\\n/* position checkboxes and radios as icons */\\r\\n.context-menu-input > label > input[type=\\\"checkbox\\\"],\\r\\n.context-menu-input > label > input[type=\\\"radio\\\"] {\\r\\n    margin-left: -17px;\\r\\n}\\r\\n.context-menu-input > label > span {\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.context-menu-input > label,\\r\\n.context-menu-input > label > input[type=\\\"text\\\"],\\r\\n.context-menu-input > label > textarea,\\r\\n.context-menu-input > label > select {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n\\r\\n    -webkit-box-sizing: border-box;\\r\\n       -moz-box-sizing: border-box;\\r\\n        -ms-box-sizing: border-box;\\r\\n         -o-box-sizing: border-box;\\r\\n            box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.context-menu-input > label > textarea {\\r\\n    height: 100px;\\r\\n}\\r\\n.context-menu-item > .context-menu-list {\\r\\n    display: none;\\r\\n    /* re-positioned by js */\\r\\n    right: -5px;\\r\\n    top: 5px;\\r\\n}\\r\\n\\r\\n.context-menu-item.hover > .context-menu-list {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.context-menu-accesskey {\\r\\n    text-decoration: underline;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","module.exports = \"/* \\r\\n * Simple JavaScript Inheritance \\r\\n * By John Resig http://ejohn.org/ \\r\\n * MIT Licensed. \\r\\n * \\r\\n ****************************************************** \\r\\n * Example Usage \\r\\n ****************************************************** \\r\\n var Person = Class.extend({ \\r\\n  init: function(isDancing){ \\r\\n    this.dancing = isDancing; \\r\\n  }, \\r\\n  dance: function(){ \\r\\n    return this.dancing; \\r\\n  } \\r\\n}); \\r\\n\\r\\nvar Ninja = Person.extend({ \\r\\n  init: function(){ \\r\\n    this._super( false ); \\r\\n  }, \\r\\n  dance: function(){ \\r\\n    // Call the inherited version of dance() \\r\\n    return this._super(); \\r\\n  }, \\r\\n  swingSword: function(){ \\r\\n    return true; \\r\\n  } \\r\\n}); \\r\\n\\r\\nvar p = new Person(true); \\r\\np.dance(); // => true \\r\\n\\r\\nvar n = new Ninja(); \\r\\nn.dance(); // => false \\r\\nn.swingSword(); // => true \\r\\n\\r\\n// Should all be true \\r\\np instanceof Person && p instanceof Class && \\r\\nn instanceof Ninja && n instanceof Person && n instanceof Class \\r\\n\\r\\n ****************************************************** \\r\\n */ \\r\\n  \\r\\n// Inspired by base2 and Prototype \\r\\n(function(){ \\r\\n  var fnTest = /xyz/.test(function(){xyz;}) ? /\\\\b_super\\\\b/ : /.*/; \\r\\n\\r\\n  // The base Class implementation (does nothing) \\r\\n  this.Class = function(){}; \\r\\n  \\r\\n\\r\\n  // Create a new Class that inherits from this class \\r\\n  Class.extend = function(prop) { \\r\\n    var _super = this.prototype; \\r\\n    \\r\\n    // Instantiate a base class (but only create the instance, \\r\\n    // don't run the init constructor) \\r\\n    initializing = true; \\r\\n    var prototype = new this(); \\r\\n    initializing = false; \\r\\n    \\r\\n     \\r\\n    // Copy the properties over onto the new prototype \\r\\n    for (var name in prop) { \\r\\n      // Check if we're overwriting an existing function \\r\\n      prototype[name] = typeof prop[name] == \\\"function\\\" && \\r\\n        typeof _super[name] == \\\"function\\\" && fnTest.test(prop[name]) ? \\r\\n        (function(name, fn){ \\r\\n          return function() { \\r\\n            var tmp = this._super; \\r\\n            \\r\\n            // Add a new ._super() method that is the same method \\r\\n            // but on the super-class \\r\\n            this._super = _super[name]; \\r\\n            \\r\\n            // The method only need to be bound temporarily, so we \\r\\n            // remove it when we're done executing \\r\\n            var ret = fn.apply(this, arguments);        \\r\\n            this._super = tmp; \\r\\n            \\r\\n            return ret; \\r\\n          }; \\r\\n        })(name, prop[name]) : \\r\\n        prop[name]; \\r\\n    } \\r\\n    \\r\\n    // The dummy class constructor \\r\\n    function Class() { \\r\\n      // All construction is actually done in the init method \\r\\n      if ( !initializing && this.init ) \\r\\n        this.init.apply(this, arguments); \\r\\n    } \\r\\n    \\r\\n    // Populate our constructed prototype object \\r\\n    Class.prototype = prototype; \\r\\n    \\r\\n    // Enforce the constructor to be what we expect \\r\\n    Class.prototype.constructor = Class; \\r\\n\\r\\n    // And make this class extendable \\r\\n    Class.extend = arguments.callee; \\r\\n    \\r\\n    // EXTENSION BY Draw2D.org to inject methods into an existing class to provide plugins or \\r\\n    // bugfixes for further releases \\r\\n    // \\r\\n    Class.inject = function (prop) { \\r\\n        var proto = this.prototype; \\r\\n        var parent = {}; \\r\\n        for (var name in prop) { \\r\\n            if (typeof (prop[name]) == \\\"function\\\" && typeof (proto[name]) == \\\"function\\\" && fnTest.test(prop[name])) { \\r\\n                parent[name] = proto[name]; \\r\\n                proto[name] = (function (name, fn) { \\r\\n                    return function () { \\r\\n                        var tmp = this.parent; \\r\\n                        this.parent = parent[name]; \\r\\n                        var ret = fn.apply(this, arguments); \\r\\n                        this.parent = tmp; \\r\\n                        return ret; \\r\\n                    }; \\r\\n                })(name, prop[name]); \\r\\n            } else { \\r\\n                proto[name] = prop[name]; \\r\\n            } \\r\\n        } \\r\\n    }; \\r\\n     \\r\\n    return Class; \\r\\n  }; \\r\\n})();\\r\\n \\r\\n\"","module.exports = \"var PF=function(){var e=function(t,n){var r=e.resolve(t,n||\\\"/\\\"),i=e.modules[r];if(!i)throw new Error(\\\"Failed to resolve module \\\"+t+\\\", tried \\\"+r);var s=i._cached?i._cached:i();return s};return e.paths=[],e.modules={},e.extensions=[\\\".js\\\",\\\".coffee\\\"],e._core={assert:!0,events:!0,fs:!0,path:!0,vm:!0},e.resolve=function(){return function(t,n){function u(t){if(e.modules[t])return t;for(var n=0;n<e.extensions.length;n++){var r=e.extensions[n];if(e.modules[t+r])return t+r}}function a(t){t=t.replace(/\\\\/+$/,\\\"\\\");var n=t+\\\"/package.json\\\";if(e.modules[n]){var i=e.modules[n](),s=i.browserify;if(typeof s==\\\"object\\\"&&s.main){var o=u(r.resolve(t,s.main));if(o)return o}else if(typeof s==\\\"string\\\"){var o=u(r.resolve(t,s));if(o)return o}else if(i.main){var o=u(r.resolve(t,i.main));if(o)return o}}return u(t+\\\"/index\\\")}function f(e,t){var n=l(t);for(var r=0;r<n.length;r++){var i=n[r],s=u(i+\\\"/\\\"+e);if(s)return s;var o=a(i+\\\"/\\\"+e);if(o)return o}var s=u(e);if(s)return s}function l(e){var t;e===\\\"/\\\"?t=[\\\"\\\"]:t=r.normalize(e).split(\\\"/\\\");var n=[];for(var i=t.length-1;i>=0;i--){if(t[i]===\\\"node_modules\\\")continue;var s=t.slice(0,i+1).join(\\\"/\\\")+\\\"/node_modules\\\";n.push(s)}return n}n||(n=\\\"/\\\");if(e._core[t])return t;var r=e.modules.path();n=r.resolve(\\\"/\\\",n);var i=n||\\\"/\\\";if(t.match(/^(?:\\\\.\\\\.?\\\\/|\\\\/)/)){var s=u(r.resolve(i,t))||a(r.resolve(i,t));if(s)return s}var o=f(t,i);if(o)return o;throw new Error(\\\"Cannot find module '\\\"+t+\\\"'\\\")}}(),e.alias=function(t,n){var r=e.modules.path(),i=null;try{i=e.resolve(t+\\\"/package.json\\\",\\\"/\\\")}catch(s){i=e.resolve(t,\\\"/\\\")}var o=r.dirname(i),u=(Object.keys||function(e){var t=[];for(var n in e)t.push(n);return t})(e.modules);for(var a=0;a<u.length;a++){var f=u[a];if(f.slice(0,o.length+1)===o+\\\"/\\\"){var l=f.slice(o.length);e.modules[n+l]=e.modules[o+l]}else f===o&&(e.modules[n]=e.modules[o])}},e.define=function(t,n){var r=e._core[t]?\\\"\\\":e.modules.path().dirname(t),i=function(t){return e(t,r)};i.resolve=function(t){return e.resolve(t,r)},i.modules=e.modules,i.define=e.define;var s={exports:{}};e.modules[t]=function(){return e.modules[t]._cached=s.exports,n.call(s.exports,i,s,s.exports,r,t),e.modules[t]._cached=s.exports,s.exports}},typeof process==\\\"undefined\\\"&&(process={}),process.nextTick||(process.nextTick=function(){var e=[],t=typeof window!=\\\"undefined\\\"&&window.postMessage&&window.addEventListener;return t&&window.addEventListener(\\\"message\\\",function(t){if(t.source===window&&t.data===\\\"browserify-tick\\\"){t.stopPropagation();if(e.length>0){var n=e.shift();n()}}},!0),function(n){t?(e.push(n),window.postMessage(\\\"browserify-tick\\\",\\\"*\\\")):setTimeout(n,0)}}()),process.title||(process.title=\\\"browser\\\"),process.binding||(process.binding=function(t){if(t===\\\"evals\\\")return e(\\\"vm\\\");throw new Error(\\\"No such module\\\")}),process.cwd||(process.cwd=function(){return\\\".\\\"}),process.env||(process.env={}),process.argv||(process.argv=[]),e.define(\\\"path\\\",function(e,t,n,r,i){function s(e,t){var n=[];for(var r=0;r<e.length;r++)t(e[r],r,e)&&n.push(e[r]);return n}function o(e,t){var n=0;for(var r=e.length;r>=0;r--){var i=e[r];i==\\\".\\\"?e.splice(r,1):i===\\\"..\\\"?(e.splice(r,1),n++):n&&(e.splice(r,1),n--)}if(t)for(;n--;n)e.unshift(\\\"..\\\");return e}var u=/^(.+\\\\/(?!$)|\\\\/)?((?:.+?)?(\\\\.[^.]*)?)$/;n.resolve=function(){var e=\\\"\\\",t=!1;for(var n=arguments.length;n>=-1&&!t;n--){var r=n>=0?arguments[n]:process.cwd();if(typeof r!=\\\"string\\\"||!r)continue;e=r+\\\"/\\\"+e,t=r.charAt(0)===\\\"/\\\"}return e=o(s(e.split(\\\"/\\\"),function(e){return!!e}),!t).join(\\\"/\\\"),(t?\\\"/\\\":\\\"\\\")+e||\\\".\\\"},n.normalize=function(e){var t=e.charAt(0)===\\\"/\\\",n=e.slice(-1)===\\\"/\\\";return e=o(s(e.split(\\\"/\\\"),function(e){return!!e}),!t).join(\\\"/\\\"),!e&&!t&&(e=\\\".\\\"),e&&n&&(e+=\\\"/\\\"),(t?\\\"/\\\":\\\"\\\")+e},n.join=function(){var e=Array.prototype.slice.call(arguments,0);return n.normalize(s(e,function(e,t){return e&&typeof e==\\\"string\\\"}).join(\\\"/\\\"))},n.dirname=function(e){var t=u.exec(e)[1]||\\\"\\\",n=!1;return t?t.length===1||n&&t.length<=3&&t.charAt(1)===\\\":\\\"?t:t.substring(0,t.length-1):\\\".\\\"},n.basename=function(e,t){var n=u.exec(e)[2]||\\\"\\\";return t&&n.substr(-1*t.length)===t&&(n=n.substr(0,n.length-t.length)),n},n.extname=function(e){return u.exec(e)[3]||\\\"\\\"}}),e.define(\\\"/core/Node.js\\\",function(e,t,n,r,i){function s(e,t,n){this.x=e,this.y=t,this.walkable=n===undefined?!0:n}t.exports=s}),e.define(\\\"/core/Grid.js\\\",function(e,t,n,r,i){function o(e,t,n){this.width=e,this.height=t,this.nodes=this._buildNodes(e,t,n)}var s=e(\\\"./Node\\\");o.prototype._buildNodes=function(e,t,n){var r,i,o=new Array(t),u;for(r=0;r<t;++r){o[r]=new Array(e);for(i=0;i<e;++i)o[r][i]=new s(i,r)}if(n===undefined)return o;if(n.length!==t||n[0].length!==e)throw new Error(\\\"Matrix size does not fit\\\");for(r=0;r<t;++r)for(i=0;i<e;++i)n[r][i]&&(o[r][i].walkable=!1);return o},o.prototype.getNodeAt=function(e,t){return this.nodes[t][e]},o.prototype.isWalkableAt=function(e,t){return this.isInside(e,t)&&this.nodes[t][e].walkable},o.prototype.isInside=function(e,t){return e>=0&&e<this.width&&t>=0&&t<this.height},o.prototype.setWalkableAt=function(e,t,n){this.nodes[t][e].walkable=n},o.prototype.getNeighbors=function(e,t,n){var r=e.x,i=e.y,s=[],o=!1,u=!1,a=!1,f=!1,l=!1,c=!1,h=!1,p=!1,d=this.nodes;return this.isWalkableAt(r,i-1)&&(s.push(d[i-1][r]),o=!0),this.isWalkableAt(r+1,i)&&(s.push(d[i][r+1]),a=!0),this.isWalkableAt(r,i+1)&&(s.push(d[i+1][r]),l=!0),this.isWalkableAt(r-1,i)&&(s.push(d[i][r-1]),h=!0),t?(n?(u=h&&o,f=o&&a,c=a&&l,p=l&&h):(u=h||o,f=o||a,c=a||l,p=l||h),u&&this.isWalkableAt(r-1,i-1)&&s.push(d[i-1][r-1]),f&&this.isWalkableAt(r+1,i-1)&&s.push(d[i-1][r+1]),c&&this.isWalkableAt(r+1,i+1)&&s.push(d[i+1][r+1]),p&&this.isWalkableAt(r-1,i+1)&&s.push(d[i+1][r-1]),s):s},o.prototype.clone=function(){var e,t,n=this.width,r=this.height,i=this.nodes,u=new o(n,r),a=new Array(r),f;for(e=0;e<r;++e){a[e]=new Array(n);for(t=0;t<n;++t)a[e][t]=new s(t,e,i[e][t].walkable)}return u.nodes=a,u},t.exports=o}),e.define(\\\"/core/Heap.js\\\",function(e,t,n,r,i){(function(){var e,n,r,i,s,o,u,a,f,l,c,h,p,d,v;r=Math.floor,l=Math.min,n=function(e,t){return e<t?-1:e>t?1:0},f=function(e,t,i,s,o){var u;i==null&&(i=0),o==null&&(o=n);if(i<0)throw new Error(\\\"lo must be non-negative\\\");s==null&&(s=e.length);while(o(i,s)<0)u=r((i+s)/2),o(t,e[u])<0?s=u:i=u+1;return[].splice.apply(e,[i,i-i].concat(t)),t},o=function(e,t,r){return r==null&&(r=n),e.push(t),d(e,0,e.length-1,r)},s=function(e,t){var r,i;return t==null&&(t=n),r=e.pop(),e.length?(i=e[0],e[0]=r,v(e,0,t)):i=r,i},a=function(e,t,r){var i;return r==null&&(r=n),i=e[0],e[0]=t,v(e,0,r),i},u=function(e,t,r){var i;return r==null&&(r=n),e.length&&r(e[0],t)<0&&(i=[e[0],t],t=i[0],e[0]=i[1],v(e,0,r)),t},i=function(e,t){var i,s,o,u,a,f,l,c;t==null&&(t=n),f=function(){c=[];for(var t=0,n=r(e.length/2);0<=n?t<n:t>n;0<=n?t++:t--)c.push(t);return c}.apply(this).reverse(),l=[];for(s=0,u=f.length;s<u;s++)i=f[s],l.push(v(e,i,t));return l},p=function(e,t,r){var i;return r==null&&(r=n),i=e.indexOf(t),d(e,0,i,r),v(e,i,r)},c=function(e,t,r){var s,o,a,f,l;r==null&&(r=n),o=e.slice(0,t);if(!o.length)return o;i(o,r),l=e.slice(t);for(a=0,f=l.length;a<f;a++)s=l[a],u(o,s,r);return o.sort(r).reverse()},h=function(e,t,r){var o,u,a,c,h,p,d,v,m,g;r==null&&(r=n);if(t*10<=e.length){c=e.slice(0,t).sort(r);if(!c.length)return c;a=c[c.length-1],v=e.slice(t);for(h=0,d=v.length;h<d;h++)o=v[h],r(o,a)<0&&(f(c,o,0,null,r),c.pop(),a=c[c.length-1]);return c}i(e,r),g=[];for(u=p=0,m=l(t,e.length);0<=m?p<m:p>m;u=0<=m?++p:--p)g.push(s(e,r));return g},d=function(e,t,r,i){var s,o,u;i==null&&(i=n),s=e[r];while(r>t){u=r-1>>1,o=e[u];if(i(s,o)<0){e[r]=o,r=u;continue}break}return e[r]=s},v=function(e,t,r){var i,s,o,u,a;r==null&&(r=n),s=e.length,a=t,o=e[t],i=2*t+1;while(i<s)u=i+1,u<s&&!(r(e[i],e[u])<0)&&(i=u),e[t]=e[i],t=i,i=2*t+1;return e[t]=o,d(e,a,t,r)},e=function(){function e(e){this.cmp=e!=null?e:n,this.nodes=[]}return e.name=\\\"Heap\\\",e.push=o,e.pop=s,e.replace=a,e.pushpop=u,e.heapify=i,e.nlargest=c,e.nsmallest=h,e.prototype.push=function(e){return o(this.nodes,e,this.cmp)},e.prototype.pop=function(){return s(this.nodes,this.cmp)},e.prototype.peek=function(){return this.nodes[0]},e.prototype.contains=function(e){return this.nodes.indexOf(e)!==-1},e.prototype.replace=function(e){return a(this.nodes,e,this.cmp)},e.prototype.pushpop=function(e){return u(this.nodes,e,this.cmp)},e.prototype.heapify=function(){return i(this.nodes,this.cmp)},e.prototype.updateItem=function(e){return p(this.nodes,e,this.cmp)},e.prototype.clear=function(){return this.nodes=[]},e.prototype.empty=function(){return this.nodes.length===0},e.prototype.size=function(){return this.nodes.length},e.prototype.clone=function(){var t;return t=new e,t.nodes=this.nodes.slice(0),t},e.prototype.toArray=function(){return this.nodes.slice(0)},e.prototype.insert=e.prototype.push,e.prototype.remove=e.prototype.pop,e.prototype.top=e.prototype.peek,e.prototype.front=e.prototype.peek,e.prototype.has=e.prototype.contains,e.prototype.copy=e.prototype.clone,e}(),(typeof t!=\\\"undefined\\\"&&t!==null?t.exports:void 0)?t.exports=e:window.Heap=e}).call(this)}),e.define(\\\"/core/Util.js\\\",function(e,t,n,r,i){function s(e){var t=[[e.x,e.y]];while(e.parent)e=e.parent,t.push([e.x,e.y]);return t.reverse()}function o(e,t){var n=s(e),r=s(t);return n.concat(r.reverse())}function u(e){var t,n=0,r,i,s,o;for(t=1;t<e.length;++t)r=e[t-1],i=e[t],s=r[0]-i[0],o=r[1]-i[1],n+=Math.sqrt(s*s+o*o);return n}function a(e,t,n,r){var i=Math.abs,s=[],o,u,a,f,l,c;a=i(n-e),f=i(r-t),o=e<n?1:-1,u=t<r?1:-1,l=a-f;for(;;){s.push([e,t]);if(e===n&&t===r)break;c=2*l,c>-f&&(l-=f,e+=o),c<a&&(l+=a,t+=u)}return s}function f(e,t){var n=t.length,r=t[0][0],i=t[0][1],s=t[n-1][0],o=t[n-1][1],u,f,l,c,h,p,d,v,m,g,y,b,w;u=r,f=i,h=t[1][0],p=t[1][1],d=[[u,f]];for(v=2;v<n;++v){g=t[v],l=g[0],c=g[1],y=a(u,f,l,c),w=!1;for(m=1;m<y.length;++m){b=y[m];if(!e.isWalkableAt(b[0],b[1])){w=!0,d.push([h,p]),u=h,f=p;break}}w||(h=l,p=c)}return d.push([s,o]),d}n.backtrace=s,n.biBacktrace=o,n.pathLength=u,n.getLine=a,n.smoothenPath=f}),e.define(\\\"/core/Heuristic.js\\\",function(e,t,n,r,i){t.exports={manhattan:function(e,t){return e+t},euclidean:function(e,t){return Math.sqrt(e*e+t*t)},chebyshev:function(e,t){return Math.max(e,t)}}}),e.define(\\\"/finders/AStarFinder.js\\\",function(e,t,n,r,i){function a(e){e=e||{},this.allowDiagonal=e.allowDiagonal,this.dontCrossCorners=e.dontCrossCorners,this.heuristic=e.heuristic||u.manhattan}var s=e(\\\"../core/Heap\\\"),o=e(\\\"../core/Util\\\"),u=e(\\\"../core/Heuristic\\\");a.prototype.findPath=function(e,t,n,r,i){var u=new s(function(e,t){return e.f-t.f}),a=i.getNodeAt(e,t),f=i.getNodeAt(n,r),l=this.heuristic,c=this.allowDiagonal,h=this.dontCrossCorners,p=Math.abs,d=Math.SQRT2,v,m,g,y,b,w,E,S;a.g=0,a.f=0,u.push(a),a.opened=!0;while(!u.empty()){v=u.pop(),v.closed=!0;if(v===f)return o.backtrace(f);m=i.getNeighbors(v,c,h);for(y=0,b=m.length;y<b;++y){g=m[y];if(g.closed)continue;w=g.x,E=g.y,S=v.g+(w-v.x===0||E-v.y===0?1:d);if(!g.opened||S<g.g)g.g=S,g.h=g.h||l(p(w-n),p(E-r)),g.f=g.g+g.h,g.parent=v,g.opened?u.updateItem(g):(u.push(g),g.opened=!0)}}return[]},t.exports=a}),e.define(\\\"/finders/BestFirstFinder.js\\\",function(e,t,n,r,i){function o(e){s.call(this,e);var t=this.heuristic;this.heuristic=function(e,n){return t(e,n)*1e6}}var s=e(\\\"./AStarFinder\\\");o.prototype=new s,o.prototype.constructor=o,t.exports=o}),e.define(\\\"/finders/BreadthFirstFinder.js\\\",function(e,t,n,r,i){function o(e){e=e||{},this.allowDiagonal=e.allowDiagonal,this.dontCrossCorners=e.dontCrossCorners}var s=e(\\\"../core/Util\\\");o.prototype.findPath=function(e,t,n,r,i){var o=[],u=this.allowDiagonal,a=this.dontCrossCorners,f=i.getNodeAt(e,t),l=i.getNodeAt(n,r),c,h,p,d,v;o.push(f),f.opened=!0;while(o.length){p=o.shift(),p.closed=!0;if(p===l)return s.backtrace(l);c=i.getNeighbors(p,u,a);for(d=0,v=c.length;d<v;++d){h=c[d];if(h.closed||h.opened)continue;o.push(h),h.opened=!0,h.parent=p}}return[]},t.exports=o}),e.define(\\\"/finders/DijkstraFinder.js\\\",function(e,t,n,r,i){function o(e){s.call(this,e),this.heuristic=function(e,t){return 0}}var s=e(\\\"./AStarFinder\\\");o.prototype=new s,o.prototype.constructor=o,t.exports=o}),e.define(\\\"/finders/BiAStarFinder.js\\\",function(e,t,n,r,i){function a(e){e=e||{},this.allowDiagonal=e.allowDiagonal,this.dontCrossCorners=e.dontCrossCorners,this.heuristic=e.heuristic||u.manhattan}var s=e(\\\"../core/Heap\\\"),o=e(\\\"../core/Util\\\"),u=e(\\\"../core/Heuristic\\\");a.prototype.findPath=function(e,t,n,r,i){var u=function(e,t){return e.f-t.f},a=new s(u),f=new s(u),l=i.getNodeAt(e,t),c=i.getNodeAt(n,r),h=this.heuristic,p=this.allowDiagonal,d=this.dontCrossCorners,v=Math.abs,m=Math.SQRT2,g,y,b,w,E,S,x,T,N=1,C=2;l.g=0,l.f=0,a.push(l),l.opened=N,c.g=0,c.f=0,f.push(c),c.opened=C;while(!a.empty()&&!f.empty()){g=a.pop(),g.closed=!0,y=i.getNeighbors(g,p,d);for(w=0,E=y.length;w<E;++w){b=y[w];if(b.closed)continue;if(b.opened===C)return o.biBacktrace(g,b);S=b.x,x=b.y,T=g.g+(S-g.x===0||x-g.y===0?1:m);if(!b.opened||T<b.g)b.g=T,b.h=b.h||h(v(S-n),v(x-r)),b.f=b.g+b.h,b.parent=g,b.opened?a.updateItem(b):(a.push(b),b.opened=N)}g=f.pop(),g.closed=!0,y=i.getNeighbors(g,p,d);for(w=0,E=y.length;w<E;++w){b=y[w];if(b.closed)continue;if(b.opened===N)return o.biBacktrace(b,g);S=b.x,x=b.y,T=g.g+(S-g.x===0||x-g.y===0?1:m);if(!b.opened||T<b.g)b.g=T,b.h=b.h||h(v(S-e),v(x-t)),b.f=b.g+b.h,b.parent=g,b.opened?f.updateItem(b):(f.push(b),b.opened=C)}}return[]},t.exports=a}),e.define(\\\"/finders/BiBestFirstFinder.js\\\",function(e,t,n,r,i){function o(e){s.call(this,e);var t=this.heuristic;this.heuristic=function(e,n){return t(e,n)*1e6}}var s=e(\\\"./BiAStarFinder\\\");o.prototype=new s,o.prototype.constructor=o,t.exports=o}),e.define(\\\"/finders/BiBreadthFirstFinder.js\\\",function(e,t,n,r,i){function o(e){e=e||{},this.allowDiagonal=e.allowDiagonal,this.dontCrossCorners=e.dontCrossCorners}var s=e(\\\"../core/Util\\\");o.prototype.findPath=function(e,t,n,r,i){var o=i.getNodeAt(e,t),u=i.getNodeAt(n,r),a=[],f=[],l,c,h,p=this.allowDiagonal,d=this.dontCrossCorners,v=0,m=1,g,y;a.push(o),o.opened=!0,o.by=v,f.push(u),u.opened=!0,u.by=m;while(a.length&&f.length){h=a.shift(),h.closed=!0,l=i.getNeighbors(h,p,d);for(g=0,y=l.length;g<y;++g){c=l[g];if(c.closed)continue;if(c.opened){if(c.by===m)return s.biBacktrace(h,c);continue}a.push(c),c.parent=h,c.opened=!0,c.by=v}h=f.shift(),h.closed=!0,l=i.getNeighbors(h,p,d);for(g=0,y=l.length;g<y;++g){c=l[g];if(c.closed)continue;if(c.opened){if(c.by===v)return s.biBacktrace(c,h);continue}f.push(c),c.parent=h,c.opened=!0,c.by=m}}return[]},t.exports=o}),e.define(\\\"/finders/BiDijkstraFinder.js\\\",function(e,t,n,r,i){function o(e){s.call(this,e),this.heuristic=function(e,t){return 0}}var s=e(\\\"./BiAStarFinder\\\");o.prototype=new s,o.prototype.constructor=o,t.exports=o}),e.define(\\\"/finders/JumpPointFinder.js\\\",function(e,t,n,r,i){function a(e){e=e||{},this.heuristic=e.heuristic||u.manhattan}var s=e(\\\"../core/Heap\\\"),o=e(\\\"../core/Util\\\"),u=e(\\\"../core/Heuristic\\\");a.prototype.findPath=function(e,t,n,r,i){var u=this.openList=new s(function(e,t){return e.f-t.f}),a=this.startNode=i.getNodeAt(e,t),f=this.endNode=i.getNodeAt(n,r),l;this.grid=i,a.g=0,a.f=0,u.push(a),a.opened=!0;while(!u.empty()){l=u.pop(),l.closed=!0;if(l===f)return o.backtrace(f);this._identifySuccessors(l)}return[]},a.prototype._identifySuccessors=function(e){var t=this.grid,n=this.heuristic,r=this.openList,i=this.endNode.x,s=this.endNode.y,o,a,f,l,c,h=e.x,p=e.y,d,v,m,g,y,b,w,E=Math.abs,S=Math.max;o=this._findNeighbors(e);for(l=0,c=o.length;l<c;++l){a=o[l],f=this._jump(a[0],a[1],h,p);if(f){d=f[0],v=f[1],w=t.getNodeAt(d,v);if(w.closed)continue;y=u.euclidean(E(d-h),E(v-p)),b=e.g+y;if(!w.opened||b<w.g)w.g=b,w.h=w.h||n(E(d-i),E(v-s)),w.f=w.g+w.h,w.parent=e,w.opened?r.updateItem(w):(r.push(w),w.opened=!0)}}},a.prototype._jump=function(e,t,n,r){var i=this.grid,s=e-n,o=t-r,u,a;if(!i.isWalkableAt(e,t))return null;if(i.getNodeAt(e,t)===this.endNode)return[e,t];if(s!==0&&o!==0){if(i.isWalkableAt(e-s,t+o)&&!i.isWalkableAt(e-s,t)||i.isWalkableAt(e+s,t-o)&&!i.isWalkableAt(e,t-o))return[e,t]}else if(s!==0){if(i.isWalkableAt(e+s,t+1)&&!i.isWalkableAt(e,t+1)||i.isWalkableAt(e+s,t-1)&&!i.isWalkableAt(e,t-1))return[e,t]}else if(i.isWalkableAt(e+1,t+o)&&!i.isWalkableAt(e+1,t)||i.isWalkableAt(e-1,t+o)&&!i.isWalkableAt(e-1,t))return[e,t];if(s!==0&&o!==0){u=this._jump(e+s,t,e,t),a=this._jump(e,t+o,e,t);if(u||a)return[e,t]}return i.isWalkableAt(e+s,t)||i.isWalkableAt(e,t+o)?this._jump(e+s,t+o,e,t):null},a.prototype._findNeighbors=function(e){var t=e.parent,n=e.x,r=e.y,i=this.grid,s,o,u,a,f,l,c=[],h,p,d,v;if(t)s=t.x,o=t.y,f=(n-s)/Math.max(Math.abs(n-s),1),l=(r-o)/Math.max(Math.abs(r-o),1),f!==0&&l!==0?(i.isWalkableAt(n,r+l)&&c.push([n,r+l]),i.isWalkableAt(n+f,r)&&c.push([n+f,r]),(i.isWalkableAt(n,r+l)||i.isWalkableAt(n+f,r))&&c.push([n+f,r+l]),!i.isWalkableAt(n-f,r)&&i.isWalkableAt(n,r+l)&&c.push([n-f,r+l]),!i.isWalkableAt(n,r-l)&&i.isWalkableAt(n+f,r)&&c.push([n+f,r-l])):f===0?i.isWalkableAt(n,r+l)&&(i.isWalkableAt(n,r+l)&&c.push([n,r+l]),i.isWalkableAt(n+1,r)||c.push([n+1,r+l]),i.isWalkableAt(n-1,r)||c.push([n-1,r+l])):i.isWalkableAt(n+f,r)&&(i.isWalkableAt(n+f,r)&&c.push([n+f,r]),i.isWalkableAt(n,r+1)||c.push([n+f,r+1]),i.isWalkableAt(n,r-1)||c.push([n+f,r-1]));else{h=i.getNeighbors(e,!0);for(d=0,v=h.length;d<v;++d)p=h[d],c.push([p.x,p.y])}return c},t.exports=a}),e.define(\\\"/PathFinding.js\\\",function(e,t,n,r,i){t.exports={Node:e(\\\"./core/Node\\\"),Grid:e(\\\"./core/Grid\\\"),Heap:e(\\\"./core/Heap\\\"),Util:e(\\\"./core/Util\\\"),Heuristic:e(\\\"./core/Heuristic\\\"),AStarFinder:e(\\\"./finders/AStarFinder\\\"),BestFirstFinder:e(\\\"./finders/BestFirstFinder\\\"),BreadthFirstFinder:e(\\\"./finders/BreadthFirstFinder\\\"),DijkstraFinder:e(\\\"./finders/DijkstraFinder\\\"),BiAStarFinder:e(\\\"./finders/BiAStarFinder\\\"),BiBestFirstFinder:e(\\\"./finders/BiBestFirstFinder\\\"),BiBreadthFirstFinder:e(\\\"./finders/BiBreadthFirstFinder\\\"),BiDijkstraFinder:e(\\\"./finders/BiDijkstraFinder\\\"),JumpPointFinder:e(\\\"./finders/JumpPointFinder\\\")}}),e(\\\"/PathFinding.js\\\"),e(\\\"/PathFinding\\\")}()\"","module.exports = \"\\r\\n\\r\\n// ┌────────────────────────────────────────────────────────────────────┐ \\\\\\\\// │ Raphaël 2.1.0 - JavaScript Vector Library                          │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\\\\\\r\\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\\\\\\r\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n// ┌──────────────────────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Eve 0.3.4 - JavaScript Events Library                                                │ \\\\\\\\\\r\\n// ├──────────────────────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://dmitry.baranovskiy.com/)          │ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license. │ \\\\\\\\\\r\\n// └──────────────────────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n// THIS FILES IS PATCHED BY FREEGROUP\\r\\n// you can't replace this file with a new version without migrate all changes\\r\\n// tagged with \\\"FREEGROUP\\\"\\r\\n//\\r\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n// you may not use this file except in compliance with the License.\\r\\n// You may obtain a copy of the License at\\r\\n//\\r\\n// http://www.apache.org/licenses/LICENSE-2.0\\r\\n//\\r\\n// Unless required by applicable law or agreed to in writing, software\\r\\n// distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n// See the License for the specific language governing permissions and\\r\\n// limitations under the License.\\r\\n// ┌────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\\\\\\r\\n// └────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n(function (glob, factory) {\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"eve\\\", function() {\\r\\n            return factory();\\r\\n        });\\r\\n    } else if (typeof exports === \\\"object\\\") {\\r\\n        module.exports = factory();\\r\\n    } else {\\r\\n        glob.eve = factory();\\r\\n    }\\r\\n}(this, function(){\\r\\n    var version = \\\"0.4.2\\\",\\r\\n        has = \\\"hasOwnProperty\\\",\\r\\n        separator = /[\\\\.\\\\/]/,\\r\\n        wildcard = \\\"*\\\",\\r\\n        fun = function () {},\\r\\n        numsort = function (a, b) {\\r\\n            return a - b;\\r\\n        },\\r\\n        current_event,\\r\\n        stop,\\r\\n        events = {n: {}},\\r\\n    /*\\\\\\r\\n     * eve\\r\\n     [ method ]\\r\\n\\r\\n     * Fires event with given `name`, given scope and other parameters.\\r\\n\\r\\n     > Arguments\\r\\n\\r\\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\\r\\n     - scope (object) context for the event handlers\\r\\n     - varargs (...) the rest of arguments will be sent to event handlers\\r\\n\\r\\n     = (object) array of returned values from the listeners\\r\\n     \\\\*/\\r\\n        eve = function (name, scope) {\\r\\n            name = String(name);\\r\\n            var e = events,\\r\\n                oldstop = stop,\\r\\n                args = Array.prototype.slice.call(arguments, 2),\\r\\n                listeners = eve.listeners(name),\\r\\n                z = 0,\\r\\n                f = false,\\r\\n                l,\\r\\n                indexed = [],\\r\\n                queue = {},\\r\\n                out = [],\\r\\n                ce = current_event,\\r\\n                errors = [];\\r\\n            current_event = name;\\r\\n            stop = 0;\\r\\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\\\"zIndex\\\" in listeners[i]) {\\r\\n                indexed.push(listeners[i].zIndex);\\r\\n                if (listeners[i].zIndex < 0) {\\r\\n                    queue[listeners[i].zIndex] = listeners[i];\\r\\n                }\\r\\n            }\\r\\n            indexed.sort(numsort);\\r\\n            while (indexed[z] < 0) {\\r\\n                l = queue[indexed[z++]];\\r\\n                out.push(l.apply(scope, args));\\r\\n                if (stop) {\\r\\n                    stop = oldstop;\\r\\n                    return out;\\r\\n                }\\r\\n            }\\r\\n            for (i = 0; i < ii; i++) {\\r\\n                l = listeners[i];\\r\\n                if (\\\"zIndex\\\" in l) {\\r\\n                    if (l.zIndex == indexed[z]) {\\r\\n                        out.push(l.apply(scope, args));\\r\\n                        if (stop) {\\r\\n                            break;\\r\\n                        }\\r\\n                        do {\\r\\n                            z++;\\r\\n                            l = queue[indexed[z]];\\r\\n                            l && out.push(l.apply(scope, args));\\r\\n                            if (stop) {\\r\\n                                break;\\r\\n                            }\\r\\n                        } while (l)\\r\\n                    } else {\\r\\n                        queue[l.zIndex] = l;\\r\\n                    }\\r\\n                } else {\\r\\n                    out.push(l.apply(scope, args));\\r\\n                    if (stop) {\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            stop = oldstop;\\r\\n            current_event = ce;\\r\\n            return out.length ? out : null;\\r\\n        };\\r\\n    // Undocumented. Debug only.\\r\\n    eve._events = events;\\r\\n    /*\\\\\\r\\n     * eve.listeners\\r\\n     [ method ]\\r\\n\\r\\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\\r\\n\\r\\n     > Arguments\\r\\n\\r\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\\r\\n\\r\\n     = (array) array of event handlers\\r\\n     \\\\*/\\r\\n    eve.listeners = function (name) {\\r\\n        var names = name.split(separator),\\r\\n            e = events,\\r\\n            item,\\r\\n            items,\\r\\n            k,\\r\\n            i,\\r\\n            ii,\\r\\n            j,\\r\\n            jj,\\r\\n            nes,\\r\\n            es = [e],\\r\\n            out = [];\\r\\n        for (i = 0, ii = names.length; i < ii; i++) {\\r\\n            nes = [];\\r\\n            for (j = 0, jj = es.length; j < jj; j++) {\\r\\n                e = es[j].n;\\r\\n                items = [e[names[i]], e[wildcard]];\\r\\n                k = 2;\\r\\n                while (k--) {\\r\\n                    item = items[k];\\r\\n                    if (item) {\\r\\n                        nes.push(item);\\r\\n                        out = out.concat(item.f || []);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            es = nes;\\r\\n        }\\r\\n        return out;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * eve.on\\r\\n     [ method ]\\r\\n     **\\r\\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\\r\\n     | eve.on(\\\"*.under.*\\\", f);\\r\\n     | eve(\\\"mouse.under.floor\\\"); // triggers f\\r\\n     * Use @eve to trigger the listener.\\r\\n     **\\r\\n     > Arguments\\r\\n     **\\r\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\r\\n     - f (function) event handler function\\r\\n     **\\r\\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\\r\\n     > Example:\\r\\n     | eve.on(\\\"mouse\\\", eatIt)(2);\\r\\n     | eve.on(\\\"mouse\\\", scream);\\r\\n     | eve.on(\\\"mouse\\\", catchIt)(1);\\r\\n     * This will ensure that `catchIt()` function will be called before `eatIt()`.\\r\\n     *\\r\\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\\r\\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\\r\\n     \\\\*/\\r\\n    eve.on = function (name, f) {\\r\\n        name = String(name);\\r\\n        if (typeof f != \\\"function\\\") {\\r\\n            return function () {};\\r\\n        }\\r\\n        var names = name.split(separator),\\r\\n            e = events;\\r\\n        for (var i = 0, ii = names.length; i < ii; i++) {\\r\\n            e = e.n;\\r\\n            e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\\r\\n        }\\r\\n        e.f = e.f || [];\\r\\n        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\\r\\n            return fun;\\r\\n        }\\r\\n        e.f.push(f);\\r\\n        return function (zIndex) {\\r\\n            if (+zIndex == +zIndex) {\\r\\n                f.zIndex = +zIndex;\\r\\n            }\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.f\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns function that will fire given event with optional arguments.\\r\\n     * Arguments that will be passed to the result function will be also\\r\\n     * concated to the list of final arguments.\\r\\n     | el.onclick = eve.f(\\\"click\\\", 1, 2);\\r\\n     | eve.on(\\\"click\\\", function (a, b, c) {\\r\\n     |     console.log(a, b, c); // 1, 2, [event object]\\r\\n     | });\\r\\n     > Arguments\\r\\n     - event (string) event name\\r\\n     - varargs (…) and any other arguments\\r\\n     = (function) possible event handler function\\r\\n     \\\\*/\\r\\n    eve.f = function (event) {\\r\\n        var attrs = [].slice.call(arguments, 1);\\r\\n        return function () {\\r\\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.stop\\r\\n     [ method ]\\r\\n     **\\r\\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\\r\\n     \\\\*/\\r\\n    eve.stop = function () {\\r\\n        stop = 1;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.nt\\r\\n     [ method ]\\r\\n     **\\r\\n     * Could be used inside event handler to figure out actual name of the event.\\r\\n     **\\r\\n     > Arguments\\r\\n     **\\r\\n     - subname (string) #optional subname of the event\\r\\n     **\\r\\n     = (string) name of the event, if `subname` is not specified\\r\\n     * or\\r\\n     = (boolean) `true`, if current event’s name contains `subname`\\r\\n     \\\\*/\\r\\n    eve.nt = function (subname) {\\r\\n        if (subname) {\\r\\n            return new RegExp(\\\"(?:\\\\\\\\.|\\\\\\\\/|^)\\\" + subname + \\\"(?:\\\\\\\\.|\\\\\\\\/|$)\\\").test(current_event);\\r\\n        }\\r\\n        return current_event;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.nts\\r\\n     [ method ]\\r\\n     **\\r\\n     * Could be used inside event handler to figure out actual name of the event.\\r\\n     **\\r\\n     **\\r\\n     = (array) names of the event\\r\\n     \\\\*/\\r\\n    eve.nts = function () {\\r\\n        return current_event.split(separator);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.off\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes given function from the list of event listeners assigned to given name.\\r\\n     * If no arguments specified all the events will be cleared.\\r\\n     **\\r\\n     > Arguments\\r\\n     **\\r\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\r\\n     - f (function) event handler function\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * eve.unbind\\r\\n     [ method ]\\r\\n     **\\r\\n     * See @eve.off\\r\\n     \\\\*/\\r\\n    eve.off = eve.unbind = function (name, f) {\\r\\n        if (!name) {\\r\\n            eve._events = events = {n: {}};\\r\\n            return;\\r\\n        }\\r\\n        var names = name.split(separator),\\r\\n            e,\\r\\n            key,\\r\\n            splice,\\r\\n            i, ii, j, jj,\\r\\n            cur = [events];\\r\\n        for (i = 0, ii = names.length; i < ii; i++) {\\r\\n            for (j = 0; j < cur.length; j += splice.length - 2) {\\r\\n                splice = [j, 1];\\r\\n                e = cur[j].n;\\r\\n                if (names[i] != wildcard) {\\r\\n                    if (e[names[i]]) {\\r\\n                        splice.push(e[names[i]]);\\r\\n                    }\\r\\n                } else {\\r\\n                    for (key in e) if (e[has](key)) {\\r\\n                        splice.push(e[key]);\\r\\n                    }\\r\\n                }\\r\\n                cur.splice.apply(cur, splice);\\r\\n            }\\r\\n        }\\r\\n        for (i = 0, ii = cur.length; i < ii; i++) {\\r\\n            e = cur[i];\\r\\n            while (e.n) {\\r\\n                if (f) {\\r\\n                    if (e.f) {\\r\\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\\r\\n                            e.f.splice(j, 1);\\r\\n                            break;\\r\\n                        }\\r\\n                        !e.f.length && delete e.f;\\r\\n                    }\\r\\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\r\\n                        var funcs = e.n[key].f;\\r\\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\\r\\n                            funcs.splice(j, 1);\\r\\n                            break;\\r\\n                        }\\r\\n                        !funcs.length && delete e.n[key].f;\\r\\n                    }\\r\\n                } else {\\r\\n                    delete e.f;\\r\\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\r\\n                        delete e.n[key].f;\\r\\n                    }\\r\\n                }\\r\\n                e = e.n;\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.once\\r\\n     [ method ]\\r\\n     **\\r\\n     * Binds given event handler with a given name to only run once then unbind itself.\\r\\n     | eve.once(\\\"login\\\", f);\\r\\n     | eve(\\\"login\\\"); // triggers f\\r\\n     | eve(\\\"login\\\"); // no listeners\\r\\n     * Use @eve to trigger the listener.\\r\\n     **\\r\\n     > Arguments\\r\\n     **\\r\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\r\\n     - f (function) event handler function\\r\\n     **\\r\\n     = (function) same return function as @eve.on\\r\\n     \\\\*/\\r\\n    eve.once = function (name, f) {\\r\\n        var f2 = function () {\\r\\n            eve.unbind(name, f2);\\r\\n            return f.apply(this, arguments);\\r\\n        };\\r\\n        return eve.on(name, f2);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * eve.version\\r\\n     [ property (string) ]\\r\\n     **\\r\\n     * Current version of the library.\\r\\n     \\\\*/\\r\\n    eve.version = version;\\r\\n    eve.toString = function () {\\r\\n        return \\\"You are running Eve \\\" + version;\\r\\n    };\\r\\n\\r\\n    return eve;\\r\\n}));\\r\\n\\r\\n// ┌────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Raphaël 2.1.4 - JavaScript Vector Library                      │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Core Module                                                        │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\\\\\\r\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n(function (glob, factory) {\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"raphael.core\\\", [\\\"eve\\\"], function(eve) {\\r\\n            return factory(eve);\\r\\n        });\\r\\n    } else if (typeof exports === \\\"object\\\") {\\r\\n        module.exports = factory(require(\\\"eve\\\"));\\r\\n    } else {\\r\\n        glob.Raphael = factory(glob.eve);\\r\\n    }\\r\\n}(this, function (eve) {\\r\\n    /*\\\\\\r\\n     * Raphael\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates a canvas object on which to draw.\\r\\n     * You must do this first, as all future calls to drawing methods\\r\\n     * from this instance will be bound to this canvas.\\r\\n     > Parameters\\r\\n     **\\r\\n     - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\\r\\n     - width (number)\\r\\n     - height (number)\\r\\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\r\\n     * or\\r\\n     - x (number)\\r\\n     - y (number)\\r\\n     - width (number)\\r\\n     - height (number)\\r\\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\r\\n     * or\\r\\n     - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\\r\\n     - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\r\\n     * or\\r\\n     - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\\r\\n     = (object) @Paper\\r\\n     > Usage\\r\\n     | // Each of the following examples create a canvas\\r\\n     | // that is 320px wide by 200px high.\\r\\n     | // Canvas is created at the viewport’s 10,50 coordinate.\\r\\n     | var paper = Raphael(10, 50, 320, 200);\\r\\n     | // Canvas is created at the top left corner of the #notepad element\\r\\n     | // (or its top right corner in dir=\\\"rtl\\\" elements)\\r\\n     | var paper = Raphael(document.getElementById(\\\"notepad\\\"), 320, 200);\\r\\n     | // Same as above\\r\\n     | var paper = Raphael(\\\"notepad\\\", 320, 200);\\r\\n     | // Image dump\\r\\n     | var set = Raphael([\\\"notepad\\\", 320, 200, {\\r\\n     |     type: \\\"rect\\\",\\r\\n     |     x: 10,\\r\\n     |     y: 10,\\r\\n     |     width: 25,\\r\\n     |     height: 25,\\r\\n     |     stroke: \\\"#f00\\\"\\r\\n     | }, {\\r\\n     |     type: \\\"text\\\",\\r\\n     |     x: 30,\\r\\n     |     y: 40,\\r\\n     |     text: \\\"Dump\\\"\\r\\n     | }]);\\r\\n     \\\\*/\\r\\n    function R(first) {\\r\\n        if (R.is(first, \\\"function\\\")) {\\r\\n            return loaded ? first() : eve.on(\\\"raphael.DOMload\\\", first);\\r\\n        } else if (R.is(first, array)) {\\r\\n            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\\r\\n        } else {\\r\\n            var args = Array.prototype.slice.call(arguments, 0);\\r\\n            if (R.is(args[args.length - 1], \\\"function\\\")) {\\r\\n                var f = args.pop();\\r\\n                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\\\"raphael.DOMload\\\", function () {\\r\\n                    f.call(R._engine.create[apply](R, args));\\r\\n                });\\r\\n            } else {\\r\\n                return R._engine.create[apply](R, arguments);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    R.version = \\\"2.1.4\\\";\\r\\n    R.eve = eve;\\r\\n    var loaded,\\r\\n        separator = /[, ]+/,\\r\\n        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\\r\\n        formatrg = /\\\\{(\\\\d+)\\\\}/g,\\r\\n        proto = \\\"prototype\\\",\\r\\n        has = \\\"hasOwnProperty\\\",\\r\\n        g = {\\r\\n            doc: document,\\r\\n            win: window\\r\\n        },\\r\\n        oldRaphael = {\\r\\n            was: Object.prototype[has].call(g.win, \\\"Raphael\\\"),\\r\\n            is: g.win.Raphael\\r\\n        },\\r\\n        Paper = function () {\\r\\n            /*\\\\\\r\\n             * Paper.ca\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Shortcut for @Paper.customAttributes\\r\\n             \\\\*/\\r\\n            /*\\\\\\r\\n             * Paper.customAttributes\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * If you have a set of attributes that you would like to represent\\r\\n             * as a function of some number you can do it easily with custom attributes:\\r\\n             > Usage\\r\\n             | paper.customAttributes.hue = function (num) {\\r\\n             |     num = num % 1;\\r\\n             |     return {fill: \\\"hsb(\\\" + num + \\\", 0.75, 1)\\\"};\\r\\n             | };\\r\\n             | // Custom attribute “hue” will change fill\\r\\n             | // to be given hue with fixed saturation and brightness.\\r\\n             | // Now you can use it like this:\\r\\n             | var c = paper.circle(10, 10, 10).attr({hue: .45});\\r\\n             | // or even like this:\\r\\n             | c.animate({hue: 1}, 1e3);\\r\\n             |\\r\\n             | // You could also create custom attribute\\r\\n             | // with multiple parameters:\\r\\n             | paper.customAttributes.hsb = function (h, s, b) {\\r\\n             |     return {fill: \\\"hsb(\\\" + [h, s, b].join(\\\",\\\") + \\\")\\\"};\\r\\n             | };\\r\\n             | c.attr({hsb: \\\"0.5 .8 1\\\"});\\r\\n             | c.animate({hsb: [1, 0, 0.5]}, 1e3);\\r\\n             \\\\*/\\r\\n            this.ca = this.customAttributes = {};\\r\\n        },\\r\\n        paperproto,\\r\\n        appendChild = \\\"appendChild\\\",\\r\\n        apply = \\\"apply\\\",\\r\\n        concat = \\\"concat\\\",\\r\\n        supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\\r\\n        E = \\\"\\\",\\r\\n        S = \\\" \\\",\\r\\n        Str = String,\\r\\n        split = \\\"split\\\",\\r\\n        events = \\\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\\\"[split](S),\\r\\n        touchMap = {\\r\\n            mousedown: \\\"touchstart\\\",\\r\\n            mousemove: \\\"touchmove\\\",\\r\\n            mouseup: \\\"touchend\\\"\\r\\n        },\\r\\n        lowerCase = Str.prototype.toLowerCase,\\r\\n        math = Math,\\r\\n        mmax = math.max,\\r\\n        mmin = math.min,\\r\\n        abs = math.abs,\\r\\n        pow = math.pow,\\r\\n        PI = math.PI,\\r\\n        nu = \\\"number\\\",\\r\\n        string = \\\"string\\\",\\r\\n        array = \\\"array\\\",\\r\\n        toString = \\\"toString\\\",\\r\\n        fillString = \\\"fill\\\",\\r\\n        objectToString = Object.prototype.toString,\\r\\n        paper = {},\\r\\n        push = \\\"push\\\",\\r\\n        ISURL = R._ISURL = /^url\\\\(['\\\"]?(.+?)['\\\"]?\\\\)$/i,\\r\\n        colourRegExp = /^\\\\s*((#[a-f\\\\d]{6})|(#[a-f\\\\d]{3})|rgba?\\\\(\\\\s*([\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+%?(?:\\\\s*,\\\\s*[\\\\d\\\\.]+%?)?)\\\\s*\\\\)|hsba?\\\\(\\\\s*([\\\\d\\\\.]+(?:deg|\\\\xb0|%)?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+(?:%?\\\\s*,\\\\s*[\\\\d\\\\.]+)?)%?\\\\s*\\\\)|hsla?\\\\(\\\\s*([\\\\d\\\\.]+(?:deg|\\\\xb0|%)?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+(?:%?\\\\s*,\\\\s*[\\\\d\\\\.]+)?)%?\\\\s*\\\\))\\\\s*$/i,\\r\\n        isnan = {\\\"NaN\\\": 1, \\\"Infinity\\\": 1, \\\"-Infinity\\\": 1},\\r\\n        bezierrg = /^(?:cubic-)?bezier\\\\(([^,]+),([^,]+),([^,]+),([^\\\\)]+)\\\\)/,\\r\\n        round = math.round,\\r\\n        setAttribute = \\\"setAttribute\\\",\\r\\n        toFloat = parseFloat,\\r\\n        toInt = parseInt,\\r\\n        upperCase = Str.prototype.toUpperCase,\\r\\n        availableAttrs = R._availableAttrs = {\\r\\n            \\\"arrow-end\\\": \\\"none\\\",\\r\\n            \\\"arrow-start\\\": \\\"none\\\",\\r\\n            blur: 0,\\r\\n            \\\"clip-rect\\\": \\\"0 0 1e9 1e9\\\",\\r\\n            cursor: \\\"default\\\",\\r\\n            cx: 0,\\r\\n            cy: 0,\\r\\n            fill: \\\"#fff\\\",\\r\\n            \\\"fill-opacity\\\": 1,\\r\\n            font: '10px \\\"Arial\\\"',\\r\\n            \\\"font-family\\\": '\\\"Arial\\\"',\\r\\n            \\\"font-size\\\": \\\"10\\\",\\r\\n            \\\"font-style\\\": \\\"normal\\\",\\r\\n            \\\"font-weight\\\": 400,\\r\\n            gradient: 0,\\r\\n            height: 0,\\r\\n            href: \\\"http://raphaeljs.com/\\\",\\r\\n            \\\"letter-spacing\\\": 0,\\r\\n            opacity: 1,\\r\\n            path: \\\"M0,0\\\",\\r\\n            r: 0,\\r\\n            rx: 0,\\r\\n            ry: 0,\\r\\n            src: \\\"\\\",\\r\\n            stroke: \\\"#000\\\",\\r\\n            \\\"stroke-dasharray\\\": \\\"\\\",\\r\\n            \\\"stroke-linecap\\\": \\\"butt\\\",\\r\\n            \\\"stroke-linejoin\\\": \\\"butt\\\",\\r\\n            \\\"stroke-miterlimit\\\": 0,\\r\\n            \\\"stroke-opacity\\\": 1,\\r\\n            \\\"stroke-width\\\": 1,\\r\\n            \\\"stroke-scale\\\": false, // FreeGroup: draw2d enhancement\\r\\n            target: \\\"_blank\\\",\\r\\n            \\\"text-anchor\\\": \\\"middle\\\",\\r\\n            title: \\\"Raphael\\\",\\r\\n            transform: \\\"\\\",\\r\\n            width: 0,\\r\\n            x: 0,\\r\\n            y: 0\\r\\n        },\\r\\n        availableAnimAttrs = R._availableAnimAttrs = {\\r\\n            blur: nu,\\r\\n            \\\"clip-rect\\\": \\\"csv\\\",\\r\\n            cx: nu,\\r\\n            cy: nu,\\r\\n            fill: \\\"colour\\\",\\r\\n            \\\"fill-opacity\\\": nu,\\r\\n            \\\"font-size\\\": nu,\\r\\n            height: nu,\\r\\n            opacity: nu,\\r\\n            path: \\\"path\\\",\\r\\n            r: nu,\\r\\n            rx: nu,\\r\\n            ry: nu,\\r\\n            stroke: \\\"colour\\\",\\r\\n            \\\"stroke-opacity\\\": nu,\\r\\n            \\\"stroke-width\\\": nu,\\r\\n            transform: \\\"transform\\\",\\r\\n            width: nu,\\r\\n            x: nu,\\r\\n            y: nu\\r\\n        },\\r\\n        whitespace = /[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]/g,\\r\\n        commaSpaces = /[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*/,\\r\\n        hsrg = {hs: 1, rg: 1},\\r\\n        p2s = /,?([achlmqrstvxz]),?/gi,\\r\\n        pathCommand = /([achlmrqstvz])[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*)+)/ig,\\r\\n        tCommand = /([rstm])[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*)+)/ig,\\r\\n        pathValues = /(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*/ig,\\r\\n        radial_gradient = R._radial_gradient = /^r(?:\\\\(([^,]+?)[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*([^\\\\)]+?)\\\\))?/,\\r\\n        eldata = {},\\r\\n        sortByKey = function (a, b) {\\r\\n            return a.key - b.key;\\r\\n        },\\r\\n        sortByNumber = function (a, b) {\\r\\n            return toFloat(a) - toFloat(b);\\r\\n        },\\r\\n        fun = function () {},\\r\\n        pipe = function (x) {\\r\\n            return x;\\r\\n        },\\r\\n        rectPath = R._rectPath = function (x, y, w, h, r) {\\r\\n            if (r) {\\r\\n                return [[\\\"M\\\", x + r, y], [\\\"l\\\", w - r * 2, 0], [\\\"a\\\", r, r, 0, 0, 1, r, r], [\\\"l\\\", 0, h - r * 2], [\\\"a\\\", r, r, 0, 0, 1, -r, r], [\\\"l\\\", r * 2 - w, 0], [\\\"a\\\", r, r, 0, 0, 1, -r, -r], [\\\"l\\\", 0, r * 2 - h], [\\\"a\\\", r, r, 0, 0, 1, r, -r], [\\\"z\\\"]];\\r\\n            }\\r\\n            return [[\\\"M\\\", x, y], [\\\"l\\\", w, 0], [\\\"l\\\", 0, h], [\\\"l\\\", -w, 0], [\\\"z\\\"]];\\r\\n        },\\r\\n        ellipsePath = function (x, y, rx, ry) {\\r\\n            if (ry == null) {\\r\\n                ry = rx;\\r\\n            }\\r\\n            return [[\\\"M\\\", x, y], [\\\"m\\\", 0, -ry], [\\\"a\\\", rx, ry, 0, 1, 1, 0, 2 * ry], [\\\"a\\\", rx, ry, 0, 1, 1, 0, -2 * ry], [\\\"z\\\"]];\\r\\n        },\\r\\n        getPath = R._getPath = {\\r\\n            path: function (el) {\\r\\n                return el.attr(\\\"path\\\");\\r\\n            },\\r\\n            circle: function (el) {\\r\\n                var a = el.attrs;\\r\\n                return ellipsePath(a.cx, a.cy, a.r);\\r\\n            },\\r\\n            ellipse: function (el) {\\r\\n                var a = el.attrs;\\r\\n                return ellipsePath(a.cx, a.cy, a.rx, a.ry);\\r\\n            },\\r\\n            rect: function (el) {\\r\\n                var a = el.attrs;\\r\\n                return rectPath(a.x, a.y, a.width, a.height, a.r);\\r\\n            },\\r\\n            image: function (el) {\\r\\n                var a = el.attrs;\\r\\n                return rectPath(a.x, a.y, a.width, a.height);\\r\\n            },\\r\\n            text: function (el) {\\r\\n                var bbox = el._getBBox();\\r\\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\\r\\n            },\\r\\n            set : function(el) {\\r\\n                var bbox = el._getBBox();\\r\\n                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\\r\\n            }\\r\\n        },\\r\\n    /*\\\\\\r\\n     * Raphael.mapPath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Transform the path string with given matrix.\\r\\n     > Parameters\\r\\n     - path (string) path string\\r\\n     - matrix (object) see @Matrix\\r\\n     = (string) transformed path string\\r\\n     \\\\*/\\r\\n        mapPath = R.mapPath = function (path, matrix) {\\r\\n            if (!matrix) {\\r\\n                return path;\\r\\n            }\\r\\n            var x, y, i, j, ii, jj, pathi;\\r\\n            path = path2curve(path);\\r\\n            for (i = 0, ii = path.length; i < ii; i++) {\\r\\n                pathi = path[i];\\r\\n                for (j = 1, jj = pathi.length; j < jj; j += 2) {\\r\\n                    x = matrix.x(pathi[j], pathi[j + 1]);\\r\\n                    y = matrix.y(pathi[j], pathi[j + 1]);\\r\\n                    pathi[j] = x;\\r\\n                    pathi[j + 1] = y;\\r\\n                }\\r\\n            }\\r\\n            return path;\\r\\n        };\\r\\n\\r\\n    R._g = g;\\r\\n    /*\\\\\\r\\n     * Raphael.type\\r\\n     [ property (string) ]\\r\\n     **\\r\\n     * Can be “SVG”, “VML” or empty, depending on browser support.\\r\\n     \\\\*/\\r\\n    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\\\"http://www.w3.org/TR/SVG11/feature#BasicStructure\\\", \\\"1.1\\\") ? \\\"SVG\\\" : \\\"VML\\\");\\r\\n    if (R.type == \\\"VML\\\") {\\r\\n        var d = g.doc.createElement(\\\"div\\\"),\\r\\n            b;\\r\\n        d.innerHTML = '<v:shape adj=\\\"1\\\"/>';\\r\\n        b = d.firstChild;\\r\\n        b.style.behavior = \\\"url(#default#VML)\\\";\\r\\n        if (!(b && typeof b.adj == \\\"object\\\")) {\\r\\n            return (R.type = E);\\r\\n        }\\r\\n        d = null;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Raphael.svg\\r\\n     [ property (boolean) ]\\r\\n     **\\r\\n     * `true` if browser supports SVG.\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Raphael.vml\\r\\n     [ property (boolean) ]\\r\\n     **\\r\\n     * `true` if browser supports VML.\\r\\n     \\\\*/\\r\\n    R.svg = !(R.vml = R.type == \\\"VML\\\");\\r\\n    R._Paper = Paper;\\r\\n    /*\\\\\\r\\n     * Raphael.fn\\r\\n     [ property (object) ]\\r\\n     **\\r\\n     * You can add your own method to the canvas. For example if you want to draw a pie chart,\\r\\n     * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\\r\\n     * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\\r\\n     * Raphaël instance is created, otherwise it will take no effect. Please note that the\\r\\n     * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\\r\\n     * ensure any namespacing ensures proper context.\\r\\n     > Usage\\r\\n     | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\\r\\n     |     return this.path( ... );\\r\\n     | };\\r\\n     | // or create namespace\\r\\n     | Raphael.fn.mystuff = {\\r\\n     |     arrow: function () {…},\\r\\n     |     star: function () {…},\\r\\n     |     // etc…\\r\\n     | };\\r\\n     | var paper = Raphael(10, 10, 630, 480);\\r\\n     | // then use it\\r\\n     | paper.arrow(10, 10, 30, 30, 5).attr({fill: \\\"#f00\\\"});\\r\\n     | paper.mystuff.arrow();\\r\\n     | paper.mystuff.star();\\r\\n     \\\\*/\\r\\n    R.fn = paperproto = Paper.prototype = R.prototype;\\r\\n    R._id = 0;\\r\\n    R._oid = 0;\\r\\n    /*\\\\\\r\\n     * Raphael.is\\r\\n     [ method ]\\r\\n     **\\r\\n     * Handful of replacements for `typeof` operator.\\r\\n     > Parameters\\r\\n     - o (…) any object or primitive\\r\\n     - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\\r\\n     = (boolean) is given value is of given type\\r\\n     \\\\*/\\r\\n    R.is = function (o, type) {\\r\\n        type = lowerCase.call(type);\\r\\n        if (type == \\\"finite\\\") {\\r\\n            return !isnan[has](+o);\\r\\n        }\\r\\n        if (type == \\\"array\\\") {\\r\\n            return o instanceof Array;\\r\\n        }\\r\\n        return  (type == \\\"null\\\" && o === null) ||\\r\\n            (type == typeof o && o !== null) ||\\r\\n            (type == \\\"object\\\" && o === Object(o)) ||\\r\\n            (type == \\\"array\\\" && Array.isArray && Array.isArray(o)) ||\\r\\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\\r\\n    };\\r\\n\\r\\n    function clone(obj) {\\r\\n        if (typeof obj == \\\"function\\\" || Object(obj) !== obj) {\\r\\n            return obj;\\r\\n        }\\r\\n        var res = new obj.constructor;\\r\\n        for (var key in obj) if (obj[has](key)) {\\r\\n            res[key] = clone(obj[key]);\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.angle\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns angle between two or three points\\r\\n     > Parameters\\r\\n     - x1 (number) x coord of first point\\r\\n     - y1 (number) y coord of first point\\r\\n     - x2 (number) x coord of second point\\r\\n     - y2 (number) y coord of second point\\r\\n     - x3 (number) #optional x coord of third point\\r\\n     - y3 (number) #optional y coord of third point\\r\\n     = (number) angle in degrees.\\r\\n     \\\\*/\\r\\n    R.angle = function (x1, y1, x2, y2, x3, y3) {\\r\\n        if (x3 == null) {\\r\\n            var x = x1 - x2,\\r\\n                y = y1 - y2;\\r\\n            if (!x && !y) {\\r\\n                return 0;\\r\\n            }\\r\\n            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\\r\\n        } else {\\r\\n            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.rad\\r\\n     [ method ]\\r\\n     **\\r\\n     * Transform angle to radians\\r\\n     > Parameters\\r\\n     - deg (number) angle in degrees\\r\\n     = (number) angle in radians.\\r\\n     \\\\*/\\r\\n    R.rad = function (deg) {\\r\\n        return deg % 360 * PI / 180;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.deg\\r\\n     [ method ]\\r\\n     **\\r\\n     * Transform angle to degrees\\r\\n     > Parameters\\r\\n     - rad (number) angle in radians\\r\\n     = (number) angle in degrees.\\r\\n     \\\\*/\\r\\n    R.deg = function (rad) {\\r\\n        return Math.round ((rad * 180 / PI% 360)* 1000) / 1000;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.snapTo\\r\\n     [ method ]\\r\\n     **\\r\\n     * Snaps given value to given grid.\\r\\n     > Parameters\\r\\n     - values (array|number) given array of values or step of the grid\\r\\n     - value (number) value to adjust\\r\\n     - tolerance (number) #optional tolerance for snapping. Default is `10`.\\r\\n     = (number) adjusted value.\\r\\n     \\\\*/\\r\\n    R.snapTo = function (values, value, tolerance) {\\r\\n        tolerance = R.is(tolerance, \\\"finite\\\") ? tolerance : 10;\\r\\n        if (R.is(values, array)) {\\r\\n            var i = values.length;\\r\\n            while (i--) if (abs(values[i] - value) <= tolerance) {\\r\\n                return values[i];\\r\\n            }\\r\\n        } else {\\r\\n            values = +values;\\r\\n            var rem = value % values;\\r\\n            if (rem < tolerance) {\\r\\n                return value - rem;\\r\\n            }\\r\\n            if (rem > values - tolerance) {\\r\\n                return value - rem + values;\\r\\n            }\\r\\n        }\\r\\n        return value;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.createUUID\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns RFC4122, version 4 ID\\r\\n     \\\\*/\\r\\n    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\\r\\n        return function () {\\r\\n            return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(uuidRegEx, uuidReplacer).toUpperCase();\\r\\n        };\\r\\n    })(/[xy]/g, function (c) {\\r\\n        var r = math.random() * 16 | 0,\\r\\n            v = c == \\\"x\\\" ? r : (r & 3 | 8);\\r\\n        return v.toString(16);\\r\\n    });\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.setWindow\\r\\n     [ method ]\\r\\n     **\\r\\n     * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\\r\\n     > Parameters\\r\\n     - newwin (window) new window object\\r\\n     \\\\*/\\r\\n    R.setWindow = function (newwin) {\\r\\n        eve(\\\"raphael.setWindow\\\", R, g.win, newwin);\\r\\n        g.win = newwin;\\r\\n        g.doc = g.win.document;\\r\\n        if (R._engine.initWin) {\\r\\n            R._engine.initWin(g.win);\\r\\n        }\\r\\n    };\\r\\n    var toHex = function (color) {\\r\\n            if (R.vml) {\\r\\n                // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\\r\\n                var trim = /^\\\\s+|\\\\s+$/g;\\r\\n                var bod;\\r\\n                try {\\r\\n                    var docum = new ActiveXObject(\\\"htmlfile\\\");\\r\\n                    docum.write(\\\"<body>\\\");\\r\\n                    docum.close();\\r\\n                    bod = docum.body;\\r\\n                } catch(e) {\\r\\n                    bod = createPopup().document.body;\\r\\n                }\\r\\n                var range = bod.createTextRange();\\r\\n                toHex = cacher(function (color) {\\r\\n                    try {\\r\\n                        bod.style.color = Str(color).replace(trim, E);\\r\\n                        var value = range.queryCommandValue(\\\"ForeColor\\\");\\r\\n                        value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\\r\\n                        return \\\"#\\\" + (\\\"000000\\\" + value.toString(16)).slice(-6);\\r\\n                    } catch(e) {\\r\\n                        return \\\"none\\\";\\r\\n                    }\\r\\n                });\\r\\n            } else {\\r\\n                var i = g.doc.createElement(\\\"i\\\");\\r\\n                i.title = \\\"Rapha\\\\xebl Colour Picker\\\";\\r\\n                i.style.display = \\\"none\\\";\\r\\n                g.doc.body.appendChild(i);\\r\\n                toHex = cacher(function (color) {\\r\\n                    i.style.color = color;\\r\\n                    return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\\\"color\\\");\\r\\n                });\\r\\n            }\\r\\n            return toHex(color);\\r\\n        },\\r\\n        hsbtoString = function () {\\r\\n            return \\\"hsb(\\\" + [this.h, this.s, this.b] + \\\")\\\";\\r\\n        },\\r\\n        hsltoString = function () {\\r\\n            return \\\"hsl(\\\" + [this.h, this.s, this.l] + \\\")\\\";\\r\\n        },\\r\\n        rgbtoString = function () {\\r\\n            return this.hex;\\r\\n        },\\r\\n        prepareRGB = function (r, g, b) {\\r\\n            if (g == null && R.is(r, \\\"object\\\") && \\\"r\\\" in r && \\\"g\\\" in r && \\\"b\\\" in r) {\\r\\n                b = r.b;\\r\\n                g = r.g;\\r\\n                r = r.r;\\r\\n            }\\r\\n            if (g == null && R.is(r, string)) {\\r\\n                var clr = R.getRGB(r);\\r\\n                r = clr.r;\\r\\n                g = clr.g;\\r\\n                b = clr.b;\\r\\n            }\\r\\n            if (r > 1 || g > 1 || b > 1) {\\r\\n                r /= 255;\\r\\n                g /= 255;\\r\\n                b /= 255;\\r\\n            }\\r\\n\\r\\n            return [r, g, b];\\r\\n        },\\r\\n        packageRGB = function (r, g, b, o) {\\r\\n            r *= 255;\\r\\n            g *= 255;\\r\\n            b *= 255;\\r\\n            var rgb = {\\r\\n                r: r,\\r\\n                g: g,\\r\\n                b: b,\\r\\n                hex: R.rgb(r, g, b),\\r\\n                toString: rgbtoString\\r\\n            };\\r\\n            R.is(o, \\\"finite\\\") && (rgb.opacity = o);\\r\\n            return rgb;\\r\\n        };\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.color\\r\\n     [ method ]\\r\\n     **\\r\\n     * Parses the color string and returns object with all values for the given color.\\r\\n     > Parameters\\r\\n     - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\\r\\n     = (object) Combined RGB & HSB object in format:\\r\\n     o {\\r\\n     o     r (number) red,\\r\\n     o     g (number) green,\\r\\n     o     b (number) blue,\\r\\n     o     hex (string) color in HTML/CSS format: #••••••,\\r\\n     o     error (boolean) `true` if string can’t be parsed,\\r\\n     o     h (number) hue,\\r\\n     o     s (number) saturation,\\r\\n     o     v (number) value (brightness),\\r\\n     o     l (number) lightness\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.color = function (clr) {\\r\\n        var rgb;\\r\\n        if (R.is(clr, \\\"object\\\") && \\\"h\\\" in clr && \\\"s\\\" in clr && \\\"b\\\" in clr) {\\r\\n            rgb = R.hsb2rgb(clr);\\r\\n            clr.r = rgb.r;\\r\\n            clr.g = rgb.g;\\r\\n            clr.b = rgb.b;\\r\\n            clr.hex = rgb.hex;\\r\\n        } else if (R.is(clr, \\\"object\\\") && \\\"h\\\" in clr && \\\"s\\\" in clr && \\\"l\\\" in clr) {\\r\\n            rgb = R.hsl2rgb(clr);\\r\\n            clr.r = rgb.r;\\r\\n            clr.g = rgb.g;\\r\\n            clr.b = rgb.b;\\r\\n            clr.hex = rgb.hex;\\r\\n        } else {\\r\\n            if (R.is(clr, \\\"string\\\")) {\\r\\n                clr = R.getRGB(clr);\\r\\n            }\\r\\n            if (R.is(clr, \\\"object\\\") && \\\"r\\\" in clr && \\\"g\\\" in clr && \\\"b\\\" in clr) {\\r\\n                rgb = R.rgb2hsl(clr);\\r\\n                clr.h = rgb.h;\\r\\n                clr.s = rgb.s;\\r\\n                clr.l = rgb.l;\\r\\n                rgb = R.rgb2hsb(clr);\\r\\n                clr.v = rgb.b;\\r\\n            } else {\\r\\n                clr = {hex: \\\"none\\\"};\\r\\n                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\\r\\n            }\\r\\n        }\\r\\n        clr.toString = rgbtoString;\\r\\n        return clr;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.hsb2rgb\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts HSB values to RGB object.\\r\\n     > Parameters\\r\\n     - h (number) hue\\r\\n     - s (number) saturation\\r\\n     - v (number) value or brightness\\r\\n     = (object) RGB object in format:\\r\\n     o {\\r\\n     o     r (number) red,\\r\\n     o     g (number) green,\\r\\n     o     b (number) blue,\\r\\n     o     hex (string) color in HTML/CSS format: #••••••\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.hsb2rgb = function (h, s, v, o) {\\r\\n        if (this.is(h, \\\"object\\\") && \\\"h\\\" in h && \\\"s\\\" in h && \\\"b\\\" in h) {\\r\\n            v = h.b;\\r\\n            s = h.s;\\r\\n            o = h.o;\\r\\n            h = h.h;\\r\\n        }\\r\\n        h *= 360;\\r\\n        var R, G, B, X, C;\\r\\n        h = (h % 360) / 60;\\r\\n        C = v * s;\\r\\n        X = C * (1 - abs(h % 2 - 1));\\r\\n        R = G = B = v - C;\\r\\n\\r\\n        h = ~~h;\\r\\n        R += [C, X, 0, 0, X, C][h];\\r\\n        G += [X, C, C, X, 0, 0][h];\\r\\n        B += [0, 0, X, C, C, X][h];\\r\\n        return packageRGB(R, G, B, o);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.hsl2rgb\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts HSL values to RGB object.\\r\\n     > Parameters\\r\\n     - h (number) hue\\r\\n     - s (number) saturation\\r\\n     - l (number) luminosity\\r\\n     = (object) RGB object in format:\\r\\n     o {\\r\\n     o     r (number) red,\\r\\n     o     g (number) green,\\r\\n     o     b (number) blue,\\r\\n     o     hex (string) color in HTML/CSS format: #••••••\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.hsl2rgb = function (h, s, l, o) {\\r\\n        if (this.is(h, \\\"object\\\") && \\\"h\\\" in h && \\\"s\\\" in h && \\\"l\\\" in h) {\\r\\n            l = h.l;\\r\\n            s = h.s;\\r\\n            h = h.h;\\r\\n        }\\r\\n        if (h > 1 || s > 1 || l > 1) {\\r\\n            h /= 360;\\r\\n            s /= 100;\\r\\n            l /= 100;\\r\\n        }\\r\\n        h *= 360;\\r\\n        var R, G, B, X, C;\\r\\n        h = (h % 360) / 60;\\r\\n        C = 2 * s * (l < .5 ? l : 1 - l);\\r\\n        X = C * (1 - abs(h % 2 - 1));\\r\\n        R = G = B = l - C / 2;\\r\\n\\r\\n        h = ~~h;\\r\\n        R += [C, X, 0, 0, X, C][h];\\r\\n        G += [X, C, C, X, 0, 0][h];\\r\\n        B += [0, 0, X, C, C, X][h];\\r\\n        return packageRGB(R, G, B, o);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.rgb2hsb\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts RGB values to HSB object.\\r\\n     > Parameters\\r\\n     - r (number) red\\r\\n     - g (number) green\\r\\n     - b (number) blue\\r\\n     = (object) HSB object in format:\\r\\n     o {\\r\\n     o     h (number) hue\\r\\n     o     s (number) saturation\\r\\n     o     b (number) brightness\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.rgb2hsb = function (r, g, b) {\\r\\n        b = prepareRGB(r, g, b);\\r\\n        r = b[0];\\r\\n        g = b[1];\\r\\n        b = b[2];\\r\\n\\r\\n        var H, S, V, C;\\r\\n        V = mmax(r, g, b);\\r\\n        C = V - mmin(r, g, b);\\r\\n        H = (C == 0 ? null :\\r\\n                V == r ? (g - b) / C :\\r\\n                    V == g ? (b - r) / C + 2 :\\r\\n                    (r - g) / C + 4\\r\\n        );\\r\\n        H = ((H + 360) % 6) * 60 / 360;\\r\\n        S = C == 0 ? 0 : C / V;\\r\\n        return {h: H, s: S, b: V, toString: hsbtoString};\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.rgb2hsl\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts RGB values to HSL object.\\r\\n     > Parameters\\r\\n     - r (number) red\\r\\n     - g (number) green\\r\\n     - b (number) blue\\r\\n     = (object) HSL object in format:\\r\\n     o {\\r\\n     o     h (number) hue\\r\\n     o     s (number) saturation\\r\\n     o     l (number) luminosity\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.rgb2hsl = function (r, g, b) {\\r\\n        b = prepareRGB(r, g, b);\\r\\n        r = b[0];\\r\\n        g = b[1];\\r\\n        b = b[2];\\r\\n\\r\\n        var H, S, L, M, m, C;\\r\\n        M = mmax(r, g, b);\\r\\n        m = mmin(r, g, b);\\r\\n        C = M - m;\\r\\n        H = (C == 0 ? null :\\r\\n            M == r ? (g - b) / C :\\r\\n                M == g ? (b - r) / C + 2 :\\r\\n                (r - g) / C + 4);\\r\\n        H = ((H + 360) % 6) * 60 / 360;\\r\\n        L = (M + m) / 2;\\r\\n        S = (C == 0 ? 0 :\\r\\n            L < .5 ? C / (2 * L) :\\r\\n            C / (2 - 2 * L));\\r\\n        return {h: H, s: S, l: L, toString: hsltoString};\\r\\n    };\\r\\n    R._path2string = function () {\\r\\n        return this.join(\\\",\\\").replace(p2s, \\\"$1\\\");\\r\\n    };\\r\\n    function repush(array, item) {\\r\\n        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\\r\\n            return array.push(array.splice(i, 1)[0]);\\r\\n        }\\r\\n    }\\r\\n    function cacher(f, scope, postprocessor) {\\r\\n        function newf() {\\r\\n            var arg = Array.prototype.slice.call(arguments, 0),\\r\\n                args = arg.join(\\\"\\\\u2400\\\"),\\r\\n                cache = newf.cache = newf.cache || {},\\r\\n                count = newf.count = newf.count || [];\\r\\n            if (cache[has](args)) {\\r\\n                repush(count, args);\\r\\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\\r\\n            }\\r\\n            count.length >= 1e3 && delete cache[count.shift()];\\r\\n            count.push(args);\\r\\n            cache[args] = f[apply](scope, arg);\\r\\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\\r\\n        }\\r\\n        return newf;\\r\\n    }\\r\\n\\r\\n    var preload = R._preload = function (src, f) {\\r\\n        var img = g.doc.createElement(\\\"img\\\");\\r\\n        img.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em\\\";\\r\\n        img.onload = function () {\\r\\n            f.call(this);\\r\\n            this.onload = null;\\r\\n            g.doc.body.removeChild(this);\\r\\n        };\\r\\n        img.onerror = function () {\\r\\n            g.doc.body.removeChild(this);\\r\\n        };\\r\\n        g.doc.body.appendChild(img);\\r\\n        img.src = src;\\r\\n    };\\r\\n\\r\\n    function clrToString() {\\r\\n        return this.hex;\\r\\n    }\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.getRGB\\r\\n     [ method ]\\r\\n     **\\r\\n     * Parses colour string as RGB object\\r\\n     > Parameters\\r\\n     - colour (string) colour string in one of formats:\\r\\n     # <ul>\\r\\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\\r\\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\\r\\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\\r\\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\\r\\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\\r\\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\\r\\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\\r\\n     #     <li>hsl(•••, •••, •••) — same as hsb</li>\\r\\n     #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\\r\\n     # </ul>\\r\\n     = (object) RGB object in format:\\r\\n     o {\\r\\n     o     r (number) red,\\r\\n     o     g (number) green,\\r\\n     o     b (number) blue\\r\\n     o     hex (string) color in HTML/CSS format: #••••••,\\r\\n     o     error (boolean) true if string can’t be parsed\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.getRGB = cacher(function (colour) {\\r\\n        if (!colour || !!((colour = Str(colour)).indexOf(\\\"-\\\") + 1)) {\\r\\n            return {r: -1, g: -1, b: -1, hex: \\\"none\\\", error: 1, toString: clrToString};\\r\\n        }\\r\\n        if (colour == \\\"none\\\") {\\r\\n            return {r: -1, g: -1, b: -1, hex: \\\"none\\\", toString: clrToString};\\r\\n        }\\r\\n        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \\\"#\\\") && (colour = toHex(colour));\\r\\n        var res,\\r\\n            red,\\r\\n            green,\\r\\n            blue,\\r\\n            opacity,\\r\\n            t,\\r\\n            values,\\r\\n            rgb = colour.match(colourRegExp);\\r\\n        if (rgb) {\\r\\n            if (rgb[2]) {\\r\\n                blue = toInt(rgb[2].substring(5), 16);\\r\\n                green = toInt(rgb[2].substring(3, 5), 16);\\r\\n                red = toInt(rgb[2].substring(1, 3), 16);\\r\\n            }\\r\\n            if (rgb[3]) {\\r\\n                blue = toInt((t = rgb[3].charAt(3)) + t, 16);\\r\\n                green = toInt((t = rgb[3].charAt(2)) + t, 16);\\r\\n                red = toInt((t = rgb[3].charAt(1)) + t, 16);\\r\\n            }\\r\\n            if (rgb[4]) {\\r\\n                values = rgb[4][split](commaSpaces);\\r\\n                red = toFloat(values[0]);\\r\\n                values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\r\\n                green = toFloat(values[1]);\\r\\n                values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\r\\n                blue = toFloat(values[2]);\\r\\n                values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\r\\n                rgb[1].toLowerCase().slice(0, 4) == \\\"rgba\\\" && (opacity = toFloat(values[3]));\\r\\n                values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\r\\n            }\\r\\n            if (rgb[5]) {\\r\\n                values = rgb[5][split](commaSpaces);\\r\\n                red = toFloat(values[0]);\\r\\n                values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\r\\n                green = toFloat(values[1]);\\r\\n                values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\r\\n                blue = toFloat(values[2]);\\r\\n                values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\r\\n                (values[0].slice(-3) == \\\"deg\\\" || values[0].slice(-1) == \\\"\\\\xb0\\\") && (red /= 360);\\r\\n                rgb[1].toLowerCase().slice(0, 4) == \\\"hsba\\\" && (opacity = toFloat(values[3]));\\r\\n                values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\r\\n                return R.hsb2rgb(red, green, blue, opacity);\\r\\n            }\\r\\n            if (rgb[6]) {\\r\\n                values = rgb[6][split](commaSpaces);\\r\\n                red = toFloat(values[0]);\\r\\n                values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\r\\n                green = toFloat(values[1]);\\r\\n                values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\r\\n                blue = toFloat(values[2]);\\r\\n                values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\r\\n                (values[0].slice(-3) == \\\"deg\\\" || values[0].slice(-1) == \\\"\\\\xb0\\\") && (red /= 360);\\r\\n                rgb[1].toLowerCase().slice(0, 4) == \\\"hsla\\\" && (opacity = toFloat(values[3]));\\r\\n                values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\r\\n                return R.hsl2rgb(red, green, blue, opacity);\\r\\n            }\\r\\n            rgb = {r: red, g: green, b: blue, toString: clrToString};\\r\\n            rgb.hex = \\\"#\\\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\\r\\n            R.is(opacity, \\\"finite\\\") && (rgb.opacity = opacity);\\r\\n            return rgb;\\r\\n        }\\r\\n        return {r: -1, g: -1, b: -1, hex: \\\"none\\\", error: 1, toString: clrToString};\\r\\n    }, R);\\r\\n    /*\\\\\\r\\n     * Raphael.hsb\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts HSB values to hex representation of the colour.\\r\\n     > Parameters\\r\\n     - h (number) hue\\r\\n     - s (number) saturation\\r\\n     - b (number) value or brightness\\r\\n     = (string) hex representation of the colour.\\r\\n     \\\\*/\\r\\n    R.hsb = cacher(function (h, s, b) {\\r\\n        return R.hsb2rgb(h, s, b).hex;\\r\\n    });\\r\\n    /*\\\\\\r\\n     * Raphael.hsl\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts HSL values to hex representation of the colour.\\r\\n     > Parameters\\r\\n     - h (number) hue\\r\\n     - s (number) saturation\\r\\n     - l (number) luminosity\\r\\n     = (string) hex representation of the colour.\\r\\n     \\\\*/\\r\\n    R.hsl = cacher(function (h, s, l) {\\r\\n        return R.hsl2rgb(h, s, l).hex;\\r\\n    });\\r\\n    /*\\\\\\r\\n     * Raphael.rgb\\r\\n     [ method ]\\r\\n     **\\r\\n     * Converts RGB values to hex representation of the colour.\\r\\n     > Parameters\\r\\n     - r (number) red\\r\\n     - g (number) green\\r\\n     - b (number) blue\\r\\n     = (string) hex representation of the colour.\\r\\n     \\\\*/\\r\\n    R.rgb = cacher(function (r, g, b) {\\r\\n        function round(x) { return (x + 0.5) | 0; }\\r\\n        return \\\"#\\\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\\r\\n    });\\r\\n    /*\\\\\\r\\n     * Raphael.getColor\\r\\n     [ method ]\\r\\n     **\\r\\n     * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\\r\\n     > Parameters\\r\\n     - value (number) #optional brightness, default is `0.75`\\r\\n     = (string) hex representation of the colour.\\r\\n     \\\\*/\\r\\n    R.getColor = function (value) {\\r\\n        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\\r\\n            rgb = this.hsb2rgb(start.h, start.s, start.b);\\r\\n        start.h += .075;\\r\\n        if (start.h > 1) {\\r\\n            start.h = 0;\\r\\n            start.s -= .2;\\r\\n            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\\r\\n        }\\r\\n        return rgb.hex;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.getColor.reset\\r\\n     [ method ]\\r\\n     **\\r\\n     * Resets spectrum position for @Raphael.getColor back to red.\\r\\n     \\\\*/\\r\\n    R.getColor.reset = function () {\\r\\n        delete this.start;\\r\\n    };\\r\\n\\r\\n    // http://schepers.cc/getting-to-the-point\\r\\n    function catmullRom2bezier(crp, z) {\\r\\n        var d = [];\\r\\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\\r\\n            var p = [\\r\\n                {x: +crp[i - 2], y: +crp[i - 1]},\\r\\n                {x: +crp[i],     y: +crp[i + 1]},\\r\\n                {x: +crp[i + 2], y: +crp[i + 3]},\\r\\n                {x: +crp[i + 4], y: +crp[i + 5]}\\r\\n            ];\\r\\n            if (z) {\\r\\n                if (!i) {\\r\\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\\r\\n                } else if (iLen - 4 == i) {\\r\\n                    p[3] = {x: +crp[0], y: +crp[1]};\\r\\n                } else if (iLen - 2 == i) {\\r\\n                    p[2] = {x: +crp[0], y: +crp[1]};\\r\\n                    p[3] = {x: +crp[2], y: +crp[3]};\\r\\n                }\\r\\n            } else {\\r\\n                if (iLen - 4 == i) {\\r\\n                    p[3] = p[2];\\r\\n                } else if (!i) {\\r\\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\\r\\n                }\\r\\n            }\\r\\n            d.push([\\\"C\\\",\\r\\n                (-p[0].x + 6 * p[1].x + p[2].x) / 6,\\r\\n                (-p[0].y + 6 * p[1].y + p[2].y) / 6,\\r\\n                (p[1].x + 6 * p[2].x - p[3].x) / 6,\\r\\n                (p[1].y + 6*p[2].y - p[3].y) / 6,\\r\\n                p[2].x,\\r\\n                p[2].y\\r\\n            ]);\\r\\n        }\\r\\n\\r\\n        return d;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Raphael.parsePathString\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Parses given path string into an array of arrays of path segments.\\r\\n     > Parameters\\r\\n     - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\\r\\n     = (array) array of segments.\\r\\n     \\\\*/\\r\\n    R.parsePathString = function (pathString) {\\r\\n        if (!pathString) {\\r\\n            return null;\\r\\n        }\\r\\n        var pth = paths(pathString);\\r\\n        if (pth.arr) {\\r\\n            return pathClone(pth.arr);\\r\\n        }\\r\\n\\r\\n        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\\r\\n            data = [];\\r\\n        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\\r\\n            data = pathClone(pathString);\\r\\n        }\\r\\n        if (!data.length) {\\r\\n            Str(pathString).replace(pathCommand, function (a, b, c) {\\r\\n                var params = [],\\r\\n                    name = b.toLowerCase();\\r\\n                c.replace(pathValues, function (a, b) {\\r\\n                    b && params.push(+b);\\r\\n                });\\r\\n                if (name == \\\"m\\\" && params.length > 2) {\\r\\n                    data.push([b][concat](params.splice(0, 2)));\\r\\n                    name = \\\"l\\\";\\r\\n                    b = b == \\\"m\\\" ? \\\"l\\\" : \\\"L\\\";\\r\\n                }\\r\\n                if (name == \\\"r\\\") {\\r\\n                    data.push([b][concat](params));\\r\\n                } else while (params.length >= paramCounts[name]) {\\r\\n                    data.push([b][concat](params.splice(0, paramCounts[name])));\\r\\n                    if (!paramCounts[name]) {\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            });\\r\\n        }\\r\\n        data.toString = R._path2string;\\r\\n        pth.arr = pathClone(data);\\r\\n        return data;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.parseTransformString\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Parses given path string into an array of transformations.\\r\\n     > Parameters\\r\\n     - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\\r\\n     = (array) array of transformations.\\r\\n     \\\\*/\\r\\n    R.parseTransformString = cacher(function (TString) {\\r\\n        if (!TString) {\\r\\n            return null;\\r\\n        }\\r\\n        var paramCounts = {r: 3, s: 4, t: 2, m: 6},\\r\\n            data = [];\\r\\n        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\\r\\n            data = pathClone(TString);\\r\\n        }\\r\\n        if (!data.length) {\\r\\n            Str(TString).replace(tCommand, function (a, b, c) {\\r\\n                var params = [],\\r\\n                    name = lowerCase.call(b);\\r\\n                c.replace(pathValues, function (a, b) {\\r\\n                    b && params.push(+b);\\r\\n                });\\r\\n                data.push([b][concat](params));\\r\\n            });\\r\\n        }\\r\\n        data.toString = R._path2string;\\r\\n        return data;\\r\\n    });\\r\\n    // PATHS\\r\\n    var paths = function (ps) {\\r\\n        var p = paths.ps = paths.ps || {};\\r\\n        if (p[ps]) {\\r\\n            p[ps].sleep = 100;\\r\\n        } else {\\r\\n            p[ps] = {\\r\\n                sleep: 100\\r\\n            };\\r\\n        }\\r\\n        setTimeout(function () {\\r\\n            for (var key in p) if (p[has](key) && key != ps) {\\r\\n                p[key].sleep--;\\r\\n                !p[key].sleep && delete p[key];\\r\\n            }\\r\\n        });\\r\\n        return p[ps];\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.findDotsAtSegment\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Find dot coordinates on the given cubic bezier curve at the given t.\\r\\n     > Parameters\\r\\n     - p1x (number) x of the first point of the curve\\r\\n     - p1y (number) y of the first point of the curve\\r\\n     - c1x (number) x of the first anchor of the curve\\r\\n     - c1y (number) y of the first anchor of the curve\\r\\n     - c2x (number) x of the second anchor of the curve\\r\\n     - c2y (number) y of the second anchor of the curve\\r\\n     - p2x (number) x of the second point of the curve\\r\\n     - p2y (number) y of the second point of the curve\\r\\n     - t (number) position on the curve (0..1)\\r\\n     = (object) point information in format:\\r\\n     o {\\r\\n     o     x: (number) x coordinate of the point\\r\\n     o     y: (number) y coordinate of the point\\r\\n     o     m: {\\r\\n     o         x: (number) x coordinate of the left anchor\\r\\n     o         y: (number) y coordinate of the left anchor\\r\\n     o     }\\r\\n     o     n: {\\r\\n     o         x: (number) x coordinate of the right anchor\\r\\n     o         y: (number) y coordinate of the right anchor\\r\\n     o     }\\r\\n     o     start: {\\r\\n     o         x: (number) x coordinate of the start of the curve\\r\\n     o         y: (number) y coordinate of the start of the curve\\r\\n     o     }\\r\\n     o     end: {\\r\\n     o         x: (number) x coordinate of the end of the curve\\r\\n     o         y: (number) y coordinate of the end of the curve\\r\\n     o     }\\r\\n     o     alpha: (number) angle of the curve derivative at the point\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\\r\\n        var t1 = 1 - t,\\r\\n            t13 = pow(t1, 3),\\r\\n            t12 = pow(t1, 2),\\r\\n            t2 = t * t,\\r\\n            t3 = t2 * t,\\r\\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\\r\\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\\r\\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\\r\\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\\r\\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\\r\\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\\r\\n            ax = t1 * p1x + t * c1x,\\r\\n            ay = t1 * p1y + t * c1y,\\r\\n            cx = t1 * c2x + t * p2x,\\r\\n            cy = t1 * c2y + t * p2y,\\r\\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\\r\\n        (mx > nx || my < ny) && (alpha += 180);\\r\\n        return {\\r\\n            x: x,\\r\\n            y: y,\\r\\n            m: {x: mx, y: my},\\r\\n            n: {x: nx, y: ny},\\r\\n            start: {x: ax, y: ay},\\r\\n            end: {x: cx, y: cy},\\r\\n            alpha: alpha\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.bezierBBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Return bounding box of a given cubic bezier curve\\r\\n     > Parameters\\r\\n     - p1x (number) x of the first point of the curve\\r\\n     - p1y (number) y of the first point of the curve\\r\\n     - c1x (number) x of the first anchor of the curve\\r\\n     - c1y (number) y of the first anchor of the curve\\r\\n     - c2x (number) x of the second anchor of the curve\\r\\n     - c2y (number) y of the second anchor of the curve\\r\\n     - p2x (number) x of the second point of the curve\\r\\n     - p2y (number) y of the second point of the curve\\r\\n     * or\\r\\n     - bez (array) array of six points for bezier curve\\r\\n     = (object) point information in format:\\r\\n     o {\\r\\n     o     min: {\\r\\n     o         x: (number) x coordinate of the left point\\r\\n     o         y: (number) y coordinate of the top point\\r\\n     o     }\\r\\n     o     max: {\\r\\n     o         x: (number) x coordinate of the right point\\r\\n     o         y: (number) y coordinate of the bottom point\\r\\n     o     }\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\\r\\n        if (!R.is(p1x, \\\"array\\\")) {\\r\\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\\r\\n        }\\r\\n        var bbox = curveDim.apply(null, p1x);\\r\\n        return {\\r\\n            x: bbox.min.x,\\r\\n            y: bbox.min.y,\\r\\n            x2: bbox.max.x,\\r\\n            y2: bbox.max.y,\\r\\n            width: bbox.max.x - bbox.min.x,\\r\\n            height: bbox.max.y - bbox.min.y\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.isPointInsideBBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns `true` if given point is inside bounding boxes.\\r\\n     > Parameters\\r\\n     - bbox (string) bounding box\\r\\n     - x (string) x coordinate of the point\\r\\n     - y (string) y coordinate of the point\\r\\n     = (boolean) `true` if point inside\\r\\n     \\\\*/\\r\\n    R.isPointInsideBBox = function (bbox, x, y) {\\r\\n        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.isBBoxIntersect\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns `true` if two bounding boxes intersect\\r\\n     > Parameters\\r\\n     - bbox1 (string) first bounding box\\r\\n     - bbox2 (string) second bounding box\\r\\n     = (boolean) `true` if they intersect\\r\\n     \\\\*/\\r\\n    R.isBBoxIntersect = function (bbox1, bbox2) {\\r\\n        var i = R.isPointInsideBBox;\\r\\n        return i(bbox2, bbox1.x, bbox1.y)\\r\\n            || i(bbox2, bbox1.x2, bbox1.y)\\r\\n            || i(bbox2, bbox1.x, bbox1.y2)\\r\\n            || i(bbox2, bbox1.x2, bbox1.y2)\\r\\n            || i(bbox1, bbox2.x, bbox2.y)\\r\\n            || i(bbox1, bbox2.x2, bbox2.y)\\r\\n            || i(bbox1, bbox2.x, bbox2.y2)\\r\\n            || i(bbox1, bbox2.x2, bbox2.y2)\\r\\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\\r\\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\\r\\n    };\\r\\n    function base3(t, p1, p2, p3, p4) {\\r\\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\\r\\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\\r\\n        return t * t2 - 3 * p1 + 3 * p2;\\r\\n    }\\r\\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\\r\\n        if (z == null) {\\r\\n            z = 1;\\r\\n        }\\r\\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\\r\\n        var z2 = z / 2,\\r\\n            n = 12,\\r\\n            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],\\r\\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\\r\\n            sum = 0;\\r\\n        for (var i = 0; i < n; i++) {\\r\\n            var ct = z2 * Tvalues[i] + z2,\\r\\n                xbase = base3(ct, x1, x2, x3, x4),\\r\\n                ybase = base3(ct, y1, y2, y3, y4),\\r\\n                comb = xbase * xbase + ybase * ybase;\\r\\n            sum += Cvalues[i] * math.sqrt(comb);\\r\\n        }\\r\\n        return z2 * sum;\\r\\n    }\\r\\n    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\\r\\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\\r\\n            return;\\r\\n        }\\r\\n        var t = 1,\\r\\n            step = t / 2,\\r\\n            t2 = t - step,\\r\\n            l,\\r\\n            e = .01;\\r\\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\\r\\n        while (abs(l - ll) > e) {\\r\\n            step /= 2;\\r\\n            t2 += (l < ll ? 1 : -1) * step;\\r\\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\\r\\n        }\\r\\n        return t2;\\r\\n    }\\r\\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\\r\\n        if (\\r\\n            mmax(x1, x2) < mmin(x3, x4) ||\\r\\n            mmin(x1, x2) > mmax(x3, x4) ||\\r\\n            mmax(y1, y2) < mmin(y3, y4) ||\\r\\n            mmin(y1, y2) > mmax(y3, y4)\\r\\n        ) {\\r\\n            return;\\r\\n        }\\r\\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\\r\\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\\r\\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\\r\\n\\r\\n        if (!denominator) {\\r\\n            return;\\r\\n        }\\r\\n        var px = nx / denominator,\\r\\n            py = ny / denominator,\\r\\n            px2 = +px.toFixed(2),\\r\\n            py2 = +py.toFixed(2);\\r\\n        if (\\r\\n            px2 < +mmin(x1, x2).toFixed(2) ||\\r\\n            px2 > +mmax(x1, x2).toFixed(2) ||\\r\\n            px2 < +mmin(x3, x4).toFixed(2) ||\\r\\n            px2 > +mmax(x3, x4).toFixed(2) ||\\r\\n            py2 < +mmin(y1, y2).toFixed(2) ||\\r\\n            py2 > +mmax(y1, y2).toFixed(2) ||\\r\\n            py2 < +mmin(y3, y4).toFixed(2) ||\\r\\n            py2 > +mmax(y3, y4).toFixed(2)\\r\\n        ) {\\r\\n            return;\\r\\n        }\\r\\n        return {x: px, y: py};\\r\\n    }\\r\\n    function inter(bez1, bez2) {\\r\\n        return interHelper(bez1, bez2);\\r\\n    }\\r\\n    function interCount(bez1, bez2) {\\r\\n        return interHelper(bez1, bez2, 1);\\r\\n    }\\r\\n    function interHelper(bez1, bez2, justCount) {\\r\\n        var bbox1 = R.bezierBBox(bez1),\\r\\n            bbox2 = R.bezierBBox(bez2);\\r\\n        if (!R.isBBoxIntersect(bbox1, bbox2)) {\\r\\n            return justCount ? 0 : [];\\r\\n        }\\r\\n        var l1 = bezlen.apply(0, bez1),\\r\\n            l2 = bezlen.apply(0, bez2),\\r\\n            n1 = mmax(~~(l1 / 5), 1),\\r\\n            n2 = mmax(~~(l2 / 5), 1),\\r\\n            dots1 = [],\\r\\n            dots2 = [],\\r\\n            xy = {},\\r\\n            res = justCount ? 0 : [];\\r\\n        for (var i = 0; i < n1 + 1; i++) {\\r\\n            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\\r\\n            dots1.push({x: p.x, y: p.y, t: i / n1});\\r\\n        }\\r\\n        for (i = 0; i < n2 + 1; i++) {\\r\\n            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\\r\\n            dots2.push({x: p.x, y: p.y, t: i / n2});\\r\\n        }\\r\\n        for (i = 0; i < n1; i++) {\\r\\n            for (var j = 0; j < n2; j++) {\\r\\n                var di = dots1[i],\\r\\n                    di1 = dots1[i + 1],\\r\\n                    dj = dots2[j],\\r\\n                    dj1 = dots2[j + 1],\\r\\n                    ci = abs(di1.x - di.x) < .001 ? \\\"y\\\" : \\\"x\\\",\\r\\n                    cj = abs(dj1.x - dj.x) < .001 ? \\\"y\\\" : \\\"x\\\",\\r\\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\\r\\n                if (is) {\\r\\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\\r\\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\\r\\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\\r\\n                    if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\\r\\n                        if (justCount) {\\r\\n                            res++;\\r\\n                        } else {\\r\\n                            res.push({\\r\\n                                x: is.x,\\r\\n                                y: is.y,\\r\\n                                t1: mmin(t1, 1),\\r\\n                                t2: mmin(t2, 1)\\r\\n                            });\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Raphael.pathIntersection\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Finds intersections of two paths\\r\\n     > Parameters\\r\\n     - path1 (string) path string\\r\\n     - path2 (string) path string\\r\\n     = (array) dots of intersection\\r\\n     o [\\r\\n     o     {\\r\\n     o         x: (number) x coordinate of the point\\r\\n     o         y: (number) y coordinate of the point\\r\\n     o         t1: (number) t value for segment of path1\\r\\n     o         t2: (number) t value for segment of path2\\r\\n     o         segment1: (number) order number for segment of path1\\r\\n     o         segment2: (number) order number for segment of path2\\r\\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\\r\\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\\r\\n     o     }\\r\\n     o ]\\r\\n     \\\\*/\\r\\n    R.pathIntersection = function (path1, path2) {\\r\\n        return interPathHelper(path1, path2);\\r\\n    };\\r\\n    R.pathIntersectionNumber = function (path1, path2) {\\r\\n        return interPathHelper(path1, path2, 1);\\r\\n    };\\r\\n    function interPathHelper(path1, path2, justCount) {\\r\\n        path1 = R._path2curve(path1);\\r\\n        path2 = R._path2curve(path2);\\r\\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\\r\\n            res = justCount ? 0 : [];\\r\\n        for (var i = 0, ii = path1.length; i < ii; i++) {\\r\\n            var pi = path1[i];\\r\\n            if (pi[0] == \\\"M\\\") {\\r\\n                x1 = x1m = pi[1];\\r\\n                y1 = y1m = pi[2];\\r\\n            } else {\\r\\n                if (pi[0] == \\\"C\\\") {\\r\\n                    bez1 = [x1, y1].concat(pi.slice(1));\\r\\n                    x1 = bez1[6];\\r\\n                    y1 = bez1[7];\\r\\n                } else {\\r\\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\\r\\n                    x1 = x1m;\\r\\n                    y1 = y1m;\\r\\n                }\\r\\n                for (var j = 0, jj = path2.length; j < jj; j++) {\\r\\n                    var pj = path2[j];\\r\\n                    if (pj[0] == \\\"M\\\") {\\r\\n                        x2 = x2m = pj[1];\\r\\n                        y2 = y2m = pj[2];\\r\\n                    } else {\\r\\n                        if (pj[0] == \\\"C\\\") {\\r\\n                            bez2 = [x2, y2].concat(pj.slice(1));\\r\\n                            x2 = bez2[6];\\r\\n                            y2 = bez2[7];\\r\\n                        } else {\\r\\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\\r\\n                            x2 = x2m;\\r\\n                            y2 = y2m;\\r\\n                        }\\r\\n                        var intr = interHelper(bez1, bez2, justCount);\\r\\n                        if (justCount) {\\r\\n                            res += intr;\\r\\n                        } else {\\r\\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\\r\\n                                intr[k].segment1 = i;\\r\\n                                intr[k].segment2 = j;\\r\\n                                intr[k].bez1 = bez1;\\r\\n                                intr[k].bez2 = bez2;\\r\\n                            }\\r\\n                            res = res.concat(intr);\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return res;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Raphael.isPointInsidePath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns `true` if given point is inside a given closed path.\\r\\n     > Parameters\\r\\n     - path (string) path string\\r\\n     - x (number) x of the point\\r\\n     - y (number) y of the point\\r\\n     = (boolean) true, if point is inside the path\\r\\n     \\\\*/\\r\\n    R.isPointInsidePath = function (path, x, y) {\\r\\n        var bbox = R.pathBBox(path);\\r\\n        return R.isPointInsideBBox(bbox, x, y) &&\\r\\n            interPathHelper(path, [[\\\"M\\\", x, y], [\\\"H\\\", bbox.x2 + 10]], 1) % 2 == 1;\\r\\n    };\\r\\n    R._removedFactory = function (methodname) {\\r\\n        return function () {\\r\\n            eve(\\\"raphael.log\\\", null, \\\"Rapha\\\\xebl: you are calling to method \\\\u201c\\\" + methodname + \\\"\\\\u201d of removed object\\\", methodname);\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.pathBBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Return bounding box of a given path\\r\\n     > Parameters\\r\\n     - path (string) path string\\r\\n     = (object) bounding box\\r\\n     o {\\r\\n     o     x: (number) x coordinate of the left top point of the box\\r\\n     o     y: (number) y coordinate of the left top point of the box\\r\\n     o     x2: (number) x coordinate of the right bottom point of the box\\r\\n     o     y2: (number) y coordinate of the right bottom point of the box\\r\\n     o     width: (number) width of the box\\r\\n     o     height: (number) height of the box\\r\\n     o     cx: (number) x coordinate of the center of the box\\r\\n     o     cy: (number) y coordinate of the center of the box\\r\\n     o }\\r\\n     \\\\*/\\r\\n    var pathDimensions = R.pathBBox = function (path) {\\r\\n            var pth = paths(path);\\r\\n            if (pth.bbox) {\\r\\n                var b= pth.bbox;\\r\\n                return {x: b.x, y: b.y, width: b.width, height: b.height, x2: b.x2, y2: b.y2} ; // FREEGROUP FIX!!!!!!\\r\\n                // raphael reuse the returned bbox. You must clone it here if the caller need the bbxo for\\r\\n                //further calculation\\r\\n            }\\r\\n            if (!path) {\\r\\n                return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\\r\\n            }\\r\\n            path = path2curve(path);\\r\\n            var x = 0,\\r\\n                y = 0,\\r\\n                X = [],\\r\\n                Y = [],\\r\\n                p;\\r\\n            for (var i = 0, ii = path.length; i < ii; i++) {\\r\\n                p = path[i];\\r\\n                if (p[0] == \\\"M\\\") {\\r\\n                    x = p[1];\\r\\n                    y = p[2];\\r\\n                    X.push(x);\\r\\n                    Y.push(y);\\r\\n                } else {\\r\\n                    var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\\r\\n                    X = X[concat](dim.min.x, dim.max.x);\\r\\n                    Y = Y[concat](dim.min.y, dim.max.y);\\r\\n                    x = p[5];\\r\\n                    y = p[6];\\r\\n                }\\r\\n            }\\r\\n            var xmin = mmin[apply](0, X),\\r\\n                ymin = mmin[apply](0, Y),\\r\\n                xmax = mmax[apply](0, X),\\r\\n                ymax = mmax[apply](0, Y),\\r\\n                width = xmax - xmin,\\r\\n                height = ymax - ymin,\\r\\n                bb = {\\r\\n                    x: xmin,\\r\\n                    y: ymin,\\r\\n                    x2: xmax,\\r\\n                    y2: ymax,\\r\\n                    width: width,\\r\\n                    height: height,\\r\\n                    cx: xmin + width / 2,\\r\\n                    cy: ymin + height / 2\\r\\n                };\\r\\n            pth.bbox = clone(bb);\\r\\n            return bb;\\r\\n        },\\r\\n        pathClone = function (pathArray) {\\r\\n            var res = clone(pathArray);\\r\\n            res.toString = R._path2string;\\r\\n            return res;\\r\\n        },\\r\\n        pathToRelative = R._pathToRelative = function (pathArray) {\\r\\n            var pth = paths(pathArray);\\r\\n            if (pth.rel) {\\r\\n                return pathClone(pth.rel);\\r\\n            }\\r\\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\\r\\n                pathArray = R.parsePathString(pathArray);\\r\\n            }\\r\\n            var res = [],\\r\\n                x = 0,\\r\\n                y = 0,\\r\\n                mx = 0,\\r\\n                my = 0,\\r\\n                start = 0;\\r\\n            if (pathArray[0][0] == \\\"M\\\") {\\r\\n                x = pathArray[0][1];\\r\\n                y = pathArray[0][2];\\r\\n                mx = x;\\r\\n                my = y;\\r\\n                start++;\\r\\n                res.push([\\\"M\\\", x, y]);\\r\\n            }\\r\\n            for (var i = start, ii = pathArray.length; i < ii; i++) {\\r\\n                var r = res[i] = [],\\r\\n                    pa = pathArray[i];\\r\\n                if (pa[0] != lowerCase.call(pa[0])) {\\r\\n                    r[0] = lowerCase.call(pa[0]);\\r\\n                    switch (r[0]) {\\r\\n                        case \\\"a\\\":\\r\\n                            r[1] = pa[1];\\r\\n                            r[2] = pa[2];\\r\\n                            r[3] = pa[3];\\r\\n                            r[4] = pa[4];\\r\\n                            r[5] = pa[5];\\r\\n                            r[6] = +(pa[6] - x).toFixed(3);\\r\\n                            r[7] = +(pa[7] - y).toFixed(3);\\r\\n                            break;\\r\\n                        case \\\"v\\\":\\r\\n                            r[1] = +(pa[1] - y).toFixed(3);\\r\\n                            break;\\r\\n                        case \\\"m\\\":\\r\\n                            mx = pa[1];\\r\\n                            my = pa[2];\\r\\n                        default:\\r\\n                            for (var j = 1, jj = pa.length; j < jj; j++) {\\r\\n                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\\r\\n                            }\\r\\n                    }\\r\\n                } else {\\r\\n                    r = res[i] = [];\\r\\n                    if (pa[0] == \\\"m\\\") {\\r\\n                        mx = pa[1] + x;\\r\\n                        my = pa[2] + y;\\r\\n                    }\\r\\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\\r\\n                        res[i][k] = pa[k];\\r\\n                    }\\r\\n                }\\r\\n                var len = res[i].length;\\r\\n                switch (res[i][0]) {\\r\\n                    case \\\"z\\\":\\r\\n                        x = mx;\\r\\n                        y = my;\\r\\n                        break;\\r\\n                    case \\\"h\\\":\\r\\n                        x += +res[i][len - 1];\\r\\n                        break;\\r\\n                    case \\\"v\\\":\\r\\n                        y += +res[i][len - 1];\\r\\n                        break;\\r\\n                    default:\\r\\n                        x += +res[i][len - 2];\\r\\n                        y += +res[i][len - 1];\\r\\n                }\\r\\n            }\\r\\n            res.toString = R._path2string;\\r\\n            pth.rel = pathClone(res);\\r\\n            return res;\\r\\n        },\\r\\n        pathToAbsolute = R._pathToAbsolute = function (pathArray) {\\r\\n            var pth = paths(pathArray);\\r\\n            if (pth.abs) {\\r\\n                return pathClone(pth.abs);\\r\\n            }\\r\\n            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\\r\\n                pathArray = R.parsePathString(pathArray);\\r\\n            }\\r\\n            if (!pathArray || !pathArray.length) {\\r\\n                return [[\\\"M\\\", 0, 0]];\\r\\n            }\\r\\n            var res = [],\\r\\n                x = 0,\\r\\n                y = 0,\\r\\n                mx = 0,\\r\\n                my = 0,\\r\\n                start = 0;\\r\\n            if (pathArray[0][0] == \\\"M\\\") {\\r\\n                x = +pathArray[0][1];\\r\\n                y = +pathArray[0][2];\\r\\n                mx = x;\\r\\n                my = y;\\r\\n                start++;\\r\\n                res[0] = [\\\"M\\\", x, y];\\r\\n            }\\r\\n            var crz = pathArray.length == 3 && pathArray[0][0] == \\\"M\\\" && pathArray[1][0].toUpperCase() == \\\"R\\\" && pathArray[2][0].toUpperCase() == \\\"Z\\\";\\r\\n            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\\r\\n                res.push(r = []);\\r\\n                pa = pathArray[i];\\r\\n                if (pa[0] != upperCase.call(pa[0])) {\\r\\n                    r[0] = upperCase.call(pa[0]);\\r\\n                    switch (r[0]) {\\r\\n                        case \\\"A\\\":\\r\\n                            r[1] = pa[1];\\r\\n                            r[2] = pa[2];\\r\\n                            r[3] = pa[3];\\r\\n                            r[4] = pa[4];\\r\\n                            r[5] = pa[5];\\r\\n                            r[6] = +(pa[6] + x);\\r\\n                            r[7] = +(pa[7] + y);\\r\\n                            break;\\r\\n                        case \\\"V\\\":\\r\\n                            r[1] = +pa[1] + y;\\r\\n                            break;\\r\\n                        case \\\"H\\\":\\r\\n                            r[1] = +pa[1] + x;\\r\\n                            break;\\r\\n                        case \\\"R\\\":\\r\\n                            var dots = [x, y][concat](pa.slice(1));\\r\\n                            for (var j = 2, jj = dots.length; j < jj; j++) {\\r\\n                                dots[j] = +dots[j] + x;\\r\\n                                dots[++j] = +dots[j] + y;\\r\\n                            }\\r\\n                            res.pop();\\r\\n                            res = res[concat](catmullRom2bezier(dots, crz));\\r\\n                            break;\\r\\n                        case \\\"M\\\":\\r\\n                            mx = +pa[1] + x;\\r\\n                            my = +pa[2] + y;\\r\\n                        default:\\r\\n                            for (j = 1, jj = pa.length; j < jj; j++) {\\r\\n                                r[j] = +pa[j] + ((j % 2) ? x : y);\\r\\n                            }\\r\\n                    }\\r\\n                } else if (pa[0] == \\\"R\\\") {\\r\\n                    dots = [x, y][concat](pa.slice(1));\\r\\n                    res.pop();\\r\\n                    res = res[concat](catmullRom2bezier(dots, crz));\\r\\n                    r = [\\\"R\\\"][concat](pa.slice(-2));\\r\\n                } else {\\r\\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\\r\\n                        r[k] = pa[k];\\r\\n                    }\\r\\n                }\\r\\n                switch (r[0]) {\\r\\n                    case \\\"Z\\\":\\r\\n                        x = mx;\\r\\n                        y = my;\\r\\n                        break;\\r\\n                    case \\\"H\\\":\\r\\n                        x = r[1];\\r\\n                        break;\\r\\n                    case \\\"V\\\":\\r\\n                        y = r[1];\\r\\n                        break;\\r\\n                    case \\\"M\\\":\\r\\n                        mx = r[r.length - 2];\\r\\n                        my = r[r.length - 1];\\r\\n                    default:\\r\\n                        x = r[r.length - 2];\\r\\n                        y = r[r.length - 1];\\r\\n                }\\r\\n            }\\r\\n            res.toString = R._path2string;\\r\\n            pth.abs = pathClone(res);\\r\\n            return res;\\r\\n        },\\r\\n        l2c = function (x1, y1, x2, y2) {\\r\\n            return [x1, y1, x2, y2, x2, y2];\\r\\n        },\\r\\n        q2c = function (x1, y1, ax, ay, x2, y2) {\\r\\n            var _13 = 1 / 3,\\r\\n                _23 = 2 / 3;\\r\\n            return [\\r\\n                _13 * x1 + _23 * ax,\\r\\n                _13 * y1 + _23 * ay,\\r\\n                _13 * x2 + _23 * ax,\\r\\n                _13 * y2 + _23 * ay,\\r\\n                x2,\\r\\n                y2\\r\\n            ];\\r\\n        },\\r\\n        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\\r\\n            // for more information of where this math came from visit:\\r\\n            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\\r\\n            var _120 = PI * 120 / 180,\\r\\n                rad = PI / 180 * (+angle || 0),\\r\\n                res = [],\\r\\n                xy,\\r\\n                rotate = cacher(function (x, y, rad) {\\r\\n                    var X = x * math.cos(rad) - y * math.sin(rad),\\r\\n                        Y = x * math.sin(rad) + y * math.cos(rad);\\r\\n                    return {x: X, y: Y};\\r\\n                });\\r\\n            if (!recursive) {\\r\\n                xy = rotate(x1, y1, -rad);\\r\\n                x1 = xy.x;\\r\\n                y1 = xy.y;\\r\\n                xy = rotate(x2, y2, -rad);\\r\\n                x2 = xy.x;\\r\\n                y2 = xy.y;\\r\\n                var cos = math.cos(PI / 180 * angle),\\r\\n                    sin = math.sin(PI / 180 * angle),\\r\\n                    x = (x1 - x2) / 2,\\r\\n                    y = (y1 - y2) / 2;\\r\\n                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\\r\\n                if (h > 1) {\\r\\n                    h = math.sqrt(h);\\r\\n                    rx = h * rx;\\r\\n                    ry = h * ry;\\r\\n                }\\r\\n                var rx2 = rx * rx,\\r\\n                    ry2 = ry * ry,\\r\\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) *\\r\\n                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\\r\\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\\r\\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\\r\\n                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\\r\\n                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));\\r\\n\\r\\n                f1 = x1 < cx ? PI - f1 : f1;\\r\\n                f2 = x2 < cx ? PI - f2 : f2;\\r\\n                f1 < 0 && (f1 = PI * 2 + f1);\\r\\n                f2 < 0 && (f2 = PI * 2 + f2);\\r\\n                if (sweep_flag && f1 > f2) {\\r\\n                    f1 = f1 - PI * 2;\\r\\n                }\\r\\n                if (!sweep_flag && f2 > f1) {\\r\\n                    f2 = f2 - PI * 2;\\r\\n                }\\r\\n            } else {\\r\\n                f1 = recursive[0];\\r\\n                f2 = recursive[1];\\r\\n                cx = recursive[2];\\r\\n                cy = recursive[3];\\r\\n            }\\r\\n            var df = f2 - f1;\\r\\n            if (abs(df) > _120) {\\r\\n                var f2old = f2,\\r\\n                    x2old = x2,\\r\\n                    y2old = y2;\\r\\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\\r\\n                x2 = cx + rx * math.cos(f2);\\r\\n                y2 = cy + ry * math.sin(f2);\\r\\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\\r\\n            }\\r\\n            df = f2 - f1;\\r\\n            var c1 = math.cos(f1),\\r\\n                s1 = math.sin(f1),\\r\\n                c2 = math.cos(f2),\\r\\n                s2 = math.sin(f2),\\r\\n                t = math.tan(df / 4),\\r\\n                hx = 4 / 3 * rx * t,\\r\\n                hy = 4 / 3 * ry * t,\\r\\n                m1 = [x1, y1],\\r\\n                m2 = [x1 + hx * s1, y1 - hy * c1],\\r\\n                m3 = [x2 + hx * s2, y2 - hy * c2],\\r\\n                m4 = [x2, y2];\\r\\n            m2[0] = 2 * m1[0] - m2[0];\\r\\n            m2[1] = 2 * m1[1] - m2[1];\\r\\n            if (recursive) {\\r\\n                return [m2, m3, m4][concat](res);\\r\\n            } else {\\r\\n                res = [m2, m3, m4][concat](res).join()[split](\\\",\\\");\\r\\n                var newres = [];\\r\\n                for (var i = 0, ii = res.length; i < ii; i++) {\\r\\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\\r\\n                }\\r\\n                return newres;\\r\\n            }\\r\\n        },\\r\\n        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\\r\\n            var t1 = 1 - t;\\r\\n            return {\\r\\n                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\\r\\n                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\\r\\n            };\\r\\n        },\\r\\n        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\\r\\n            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\\r\\n                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\\r\\n                c = p1x - c1x,\\r\\n                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\\r\\n                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\\r\\n                y = [p1y, p2y],\\r\\n                x = [p1x, p2x],\\r\\n                dot;\\r\\n            abs(t1) > \\\"1e12\\\" && (t1 = .5);\\r\\n            abs(t2) > \\\"1e12\\\" && (t2 = .5);\\r\\n            if (t1 > 0 && t1 < 1) {\\r\\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\\r\\n                x.push(dot.x);\\r\\n                y.push(dot.y);\\r\\n            }\\r\\n            if (t2 > 0 && t2 < 1) {\\r\\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\\r\\n                x.push(dot.x);\\r\\n                y.push(dot.y);\\r\\n            }\\r\\n            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\\r\\n            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\\r\\n            c = p1y - c1y;\\r\\n            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\\r\\n            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\\r\\n            abs(t1) > \\\"1e12\\\" && (t1 = .5);\\r\\n            abs(t2) > \\\"1e12\\\" && (t2 = .5);\\r\\n            if (t1 > 0 && t1 < 1) {\\r\\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\\r\\n                x.push(dot.x);\\r\\n                y.push(dot.y);\\r\\n            }\\r\\n            if (t2 > 0 && t2 < 1) {\\r\\n                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\\r\\n                x.push(dot.x);\\r\\n                y.push(dot.y);\\r\\n            }\\r\\n            return {\\r\\n                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\\r\\n                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\\r\\n            };\\r\\n        }),\\r\\n        path2curve = R._path2curve = cacher(function (path, path2) {\\r\\n            var pth = !path2 && paths(path);\\r\\n            if (!path2 && pth.curve) {\\r\\n                return pathClone(pth.curve);\\r\\n            }\\r\\n            var p = pathToAbsolute(path),\\r\\n                p2 = path2 && pathToAbsolute(path2),\\r\\n                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\\r\\n                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\\r\\n                processPath = function (path, d, pcom) {\\r\\n                    var nx, ny, tq = {T:1, Q:1};\\r\\n                    if (!path) {\\r\\n                        return [\\\"C\\\", d.x, d.y, d.x, d.y, d.x, d.y];\\r\\n                    }\\r\\n                    !(path[0] in tq) && (d.qx = d.qy = null);\\r\\n                    switch (path[0]) {\\r\\n                        case \\\"M\\\":\\r\\n                            d.X = path[1];\\r\\n                            d.Y = path[2];\\r\\n                            break;\\r\\n                        case \\\"A\\\":\\r\\n                            path = [\\\"C\\\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\\r\\n                            break;\\r\\n                        case \\\"S\\\":\\r\\n                            if (pcom == \\\"C\\\" || pcom == \\\"S\\\") { // In \\\"S\\\" case we have to take into account, if the previous command is C/S.\\r\\n                                nx = d.x * 2 - d.bx;          // And reflect the previous\\r\\n                                ny = d.y * 2 - d.by;          // command's control point relative to the current point.\\r\\n                            }\\r\\n                            else {                            // or some else or nothing\\r\\n                                nx = d.x;\\r\\n                                ny = d.y;\\r\\n                            }\\r\\n                            path = [\\\"C\\\", nx, ny][concat](path.slice(1));\\r\\n                            break;\\r\\n                        case \\\"T\\\":\\r\\n                            if (pcom == \\\"Q\\\" || pcom == \\\"T\\\") { // In \\\"T\\\" case we have to take into account, if the previous command is Q/T.\\r\\n                                d.qx = d.x * 2 - d.qx;        // And make a reflection similar\\r\\n                                d.qy = d.y * 2 - d.qy;        // to case \\\"S\\\".\\r\\n                            }\\r\\n                            else {                            // or something else or nothing\\r\\n                                d.qx = d.x;\\r\\n                                d.qy = d.y;\\r\\n                            }\\r\\n                            path = [\\\"C\\\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\\r\\n                            break;\\r\\n                        case \\\"Q\\\":\\r\\n                            d.qx = path[1];\\r\\n                            d.qy = path[2];\\r\\n                            path = [\\\"C\\\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\\r\\n                            break;\\r\\n                        case \\\"L\\\":\\r\\n                            path = [\\\"C\\\"][concat](l2c(d.x, d.y, path[1], path[2]));\\r\\n                            break;\\r\\n                        case \\\"H\\\":\\r\\n                            path = [\\\"C\\\"][concat](l2c(d.x, d.y, path[1], d.y));\\r\\n                            break;\\r\\n                        case \\\"V\\\":\\r\\n                            path = [\\\"C\\\"][concat](l2c(d.x, d.y, d.x, path[1]));\\r\\n                            break;\\r\\n                        case \\\"Z\\\":\\r\\n                            path = [\\\"C\\\"][concat](l2c(d.x, d.y, d.X, d.Y));\\r\\n                            break;\\r\\n                    }\\r\\n                    return path;\\r\\n                },\\r\\n                fixArc = function (pp, i) {\\r\\n                    if (pp[i].length > 7) {\\r\\n                        pp[i].shift();\\r\\n                        var pi = pp[i];\\r\\n                        while (pi.length) {\\r\\n                            pcoms1[i]=\\\"A\\\"; // if created multiple C:s, their original seg is saved\\r\\n                            p2 && (pcoms2[i]=\\\"A\\\"); // the same as above\\r\\n                            pp.splice(i++, 0, [\\\"C\\\"][concat](pi.splice(0, 6)));\\r\\n                        }\\r\\n                        pp.splice(i, 1);\\r\\n                        ii = mmax(p.length, p2 && p2.length || 0);\\r\\n                    }\\r\\n                },\\r\\n                fixM = function (path1, path2, a1, a2, i) {\\r\\n                    if (path1 && path2 && path1[i][0] == \\\"M\\\" && path2[i][0] != \\\"M\\\") {\\r\\n                        path2.splice(i, 0, [\\\"M\\\", a2.x, a2.y]);\\r\\n                        a1.bx = 0;\\r\\n                        a1.by = 0;\\r\\n                        a1.x = path1[i][1];\\r\\n                        a1.y = path1[i][2];\\r\\n                        ii = mmax(p.length, p2 && p2.length || 0);\\r\\n                    }\\r\\n                },\\r\\n                pcoms1 = [], // path commands of original path p\\r\\n                pcoms2 = [], // path commands of original path p2\\r\\n                pfirst = \\\"\\\", // temporary holder for original path command\\r\\n                pcom = \\\"\\\"; // holder for previous path command of original path\\r\\n            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\\r\\n                p[i] && (pfirst = p[i][0]); // save current path command\\r\\n\\r\\n                if (pfirst != \\\"C\\\") // C is not saved yet, because it may be result of conversion\\r\\n                {\\r\\n                    pcoms1[i] = pfirst; // Save current path command\\r\\n                    i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\\r\\n                }\\r\\n                p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\\r\\n\\r\\n                if (pcoms1[i] != \\\"A\\\" && pfirst == \\\"C\\\") pcoms1[i] = \\\"C\\\"; // A is the only command\\r\\n                // which may produce multiple C:s\\r\\n                // so we have to make sure that C is also C in original path\\r\\n\\r\\n                fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\\r\\n\\r\\n                if (p2) { // the same procedures is done to p2\\r\\n                    p2[i] && (pfirst = p2[i][0]);\\r\\n                    if (pfirst != \\\"C\\\")\\r\\n                    {\\r\\n                        pcoms2[i] = pfirst;\\r\\n                        i && (pcom = pcoms2[i-1]);\\r\\n                    }\\r\\n                    p2[i] = processPath(p2[i], attrs2, pcom);\\r\\n\\r\\n                    if (pcoms2[i]!=\\\"A\\\" && pfirst==\\\"C\\\") pcoms2[i]=\\\"C\\\";\\r\\n\\r\\n                    fixArc(p2, i);\\r\\n                }\\r\\n                fixM(p, p2, attrs, attrs2, i);\\r\\n                fixM(p2, p, attrs2, attrs, i);\\r\\n                var seg = p[i],\\r\\n                    seg2 = p2 && p2[i],\\r\\n                    seglen = seg.length,\\r\\n                    seg2len = p2 && seg2.length;\\r\\n                attrs.x = seg[seglen - 2];\\r\\n                attrs.y = seg[seglen - 1];\\r\\n                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\\r\\n                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\\r\\n                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\\r\\n                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\\r\\n                attrs2.x = p2 && seg2[seg2len - 2];\\r\\n                attrs2.y = p2 && seg2[seg2len - 1];\\r\\n            }\\r\\n            if (!p2) {\\r\\n                pth.curve = pathClone(p);\\r\\n            }\\r\\n            return p2 ? [p, p2] : p;\\r\\n        }, null, pathClone),\\r\\n        parseDots = R._parseDots = cacher(function (gradient) {\\r\\n            var dots = [];\\r\\n            for (var i = 0, ii = gradient.length; i < ii; i++) {\\r\\n                var dot = {},\\r\\n                    par = gradient[i].match(/^([^:]*):?([\\\\d\\\\.]*)/);\\r\\n                dot.color = R.getRGB(par[1]);\\r\\n                if (dot.color.error) {\\r\\n                    return null;\\r\\n                }\\r\\n                dot.opacity = dot.color.opacity;\\r\\n                dot.color = dot.color.hex;\\r\\n                par[2] && (dot.offset = par[2] + \\\"%\\\");\\r\\n                dots.push(dot);\\r\\n            }\\r\\n            for (i = 1, ii = dots.length - 1; i < ii; i++) {\\r\\n                if (!dots[i].offset) {\\r\\n                    var start = toFloat(dots[i - 1].offset || 0),\\r\\n                        end = 0;\\r\\n                    for (var j = i + 1; j < ii; j++) {\\r\\n                        if (dots[j].offset) {\\r\\n                            end = dots[j].offset;\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                    if (!end) {\\r\\n                        end = 100;\\r\\n                        j = ii;\\r\\n                    }\\r\\n                    end = toFloat(end);\\r\\n                    var d = (end - start) / (j - i + 1);\\r\\n                    for (; i < j; i++) {\\r\\n                        start += d;\\r\\n                        dots[i].offset = start + \\\"%\\\";\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            return dots;\\r\\n        }),\\r\\n        tear = R._tear = function (el, paper) {\\r\\n            el == paper.top && (paper.top = el.prev);\\r\\n            el == paper.bottom && (paper.bottom = el.next);\\r\\n            el.next && (el.next.prev = el.prev);\\r\\n            el.prev && (el.prev.next = el.next);\\r\\n        },\\r\\n        tofront = R._tofront = function (el, paper) {\\r\\n            if (paper.top === el) {\\r\\n                return;\\r\\n            }\\r\\n            tear(el, paper);\\r\\n            el.next = null;\\r\\n            el.prev = paper.top;\\r\\n            paper.top.next = el;\\r\\n            paper.top = el;\\r\\n        },\\r\\n        toback = R._toback = function (el, paper) {\\r\\n            if (paper.bottom === el) {\\r\\n                return;\\r\\n            }\\r\\n            tear(el, paper);\\r\\n            el.next = paper.bottom;\\r\\n            el.prev = null;\\r\\n            paper.bottom.prev = el;\\r\\n            paper.bottom = el;\\r\\n        },\\r\\n        insertafter = R._insertafter = function (el, el2, paper) {\\r\\n            tear(el, paper);\\r\\n            el2 == paper.top && (paper.top = el);\\r\\n            el2.next && (el2.next.prev = el);\\r\\n            el.next = el2.next;\\r\\n            el.prev = el2;\\r\\n            el2.next = el;\\r\\n        },\\r\\n        insertbefore = R._insertbefore = function (el, el2, paper) {\\r\\n            tear(el, paper);\\r\\n            el2 == paper.bottom && (paper.bottom = el);\\r\\n            el2.prev && (el2.prev.next = el);\\r\\n            el.prev = el2.prev;\\r\\n            el2.prev = el;\\r\\n            el.next = el2;\\r\\n        },\\r\\n    /*\\\\\\r\\n     * Raphael.toMatrix\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns matrix of transformations applied to a given path\\r\\n     > Parameters\\r\\n     - path (string) path string\\r\\n     - transform (string|array) transformation string\\r\\n     = (object) @Matrix\\r\\n     \\\\*/\\r\\n        toMatrix = R.toMatrix = function (path, transform) {\\r\\n            var bb = pathDimensions(path),\\r\\n                el = {\\r\\n                    _: {\\r\\n                        transform: E\\r\\n                    },\\r\\n                    getBBox: function () {\\r\\n                        return bb;\\r\\n                    }\\r\\n                };\\r\\n            extractTransform(el, transform);\\r\\n            return el.matrix;\\r\\n        },\\r\\n    /*\\\\\\r\\n     * Raphael.transformPath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns path transformed by a given transformation\\r\\n     > Parameters\\r\\n     - path (string) path string\\r\\n     - transform (string|array) transformation string\\r\\n     = (string) path\\r\\n     \\\\*/\\r\\n        transformPath = R.transformPath = function (path, transform) {\\r\\n            return mapPath(path, toMatrix(path, transform));\\r\\n        },\\r\\n        extractTransform = R._extractTransform = function (el, tstr) {\\r\\n            if (tstr == null) {\\r\\n                return el._.transform;\\r\\n            }\\r\\n            tstr = Str(tstr).replace(/\\\\.{3}|\\\\u2026/g, el._.transform || E);\\r\\n            var tdata = R.parseTransformString(tstr),\\r\\n                deg = 0,\\r\\n                dx = 0,\\r\\n                dy = 0,\\r\\n                sx = 1,\\r\\n                sy = 1,\\r\\n                _ = el._,\\r\\n                m = new Matrix;\\r\\n            _.transform = tdata || [];\\r\\n            if (tdata) {\\r\\n                for (var i = 0, ii = tdata.length; i < ii; i++) {\\r\\n                    var t = tdata[i],\\r\\n                        tlen = t.length,\\r\\n                        command = Str(t[0]).toLowerCase(),\\r\\n                        absolute = t[0] != command,\\r\\n                        inver = absolute ? m.invert() : 0,\\r\\n                        x1,\\r\\n                        y1,\\r\\n                        x2,\\r\\n                        y2,\\r\\n                        bb;\\r\\n                    if (command == \\\"t\\\" && tlen == 3) {\\r\\n                        if (absolute) {\\r\\n                            x1 = inver.x(0, 0);\\r\\n                            y1 = inver.y(0, 0);\\r\\n                            x2 = inver.x(t[1], t[2]);\\r\\n                            y2 = inver.y(t[1], t[2]);\\r\\n                            m.translate(x2 - x1, y2 - y1);\\r\\n                        } else {\\r\\n                            m.translate(t[1], t[2]);\\r\\n                        }\\r\\n                    } else if (command == \\\"r\\\") {\\r\\n                        if (tlen == 2) {\\r\\n                            bb = bb || el.getBBox(1);\\r\\n                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\\r\\n                            deg += t[1];\\r\\n                        } else if (tlen == 4) {\\r\\n                            if (absolute) {\\r\\n                                x2 = inver.x(t[2], t[3]);\\r\\n                                y2 = inver.y(t[2], t[3]);\\r\\n                                m.rotate(t[1], x2, y2);\\r\\n                            } else {\\r\\n                                m.rotate(t[1], t[2], t[3]);\\r\\n                            }\\r\\n                            deg += t[1];\\r\\n                        }\\r\\n                    } else if (command == \\\"s\\\") {\\r\\n                        if (tlen == 2 || tlen == 3) {\\r\\n                            bb = bb || el.getBBox(1);\\r\\n                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\\r\\n                            sx *= t[1];\\r\\n                            sy *= t[tlen - 1];\\r\\n                        } else if (tlen == 5) {\\r\\n                            if (absolute) {\\r\\n                                x2 = inver.x(t[3], t[4]);\\r\\n                                y2 = inver.y(t[3], t[4]);\\r\\n                                m.scale(t[1], t[2], x2, y2);\\r\\n                            } else {\\r\\n                                m.scale(t[1], t[2], t[3], t[4]);\\r\\n                            }\\r\\n                            sx *= t[1];\\r\\n                            sy *= t[2];\\r\\n                        }\\r\\n                    } else if (command == \\\"m\\\" && tlen == 7) {\\r\\n                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\\r\\n                    }\\r\\n                    _.dirtyT = 1;\\r\\n                    el.matrix = m;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            /*\\\\\\r\\n             * Element.matrix\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Keeps @Matrix object, which represents element transformation\\r\\n             \\\\*/\\r\\n            el.matrix = m;\\r\\n\\r\\n            _.sx = sx;\\r\\n            _.sy = sy;\\r\\n            _.deg = deg;\\r\\n            _.dx = dx = m.e;\\r\\n            _.dy = dy = m.f;\\r\\n\\r\\n            if (sx == 1 && sy == 1 && !deg && _.bbox) {\\r\\n                _.bbox.x += +dx;\\r\\n                _.bbox.y += +dy;\\r\\n            } else {\\r\\n                _.dirtyT = 1;\\r\\n            }\\r\\n        },\\r\\n        getEmpty = function (item) {\\r\\n            var l = item[0];\\r\\n            switch (l.toLowerCase()) {\\r\\n                case \\\"t\\\": return [l, 0, 0];\\r\\n                case \\\"m\\\": return [l, 1, 0, 0, 1, 0, 0];\\r\\n                case \\\"r\\\": if (item.length == 4) {\\r\\n                    return [l, 0, item[2], item[3]];\\r\\n                } else {\\r\\n                    return [l, 0];\\r\\n                }\\r\\n                case \\\"s\\\": if (item.length == 5) {\\r\\n                    return [l, 1, 1, item[3], item[4]];\\r\\n                } else if (item.length == 3) {\\r\\n                    return [l, 1, 1];\\r\\n                } else {\\r\\n                    return [l, 1];\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        equaliseTransform = R._equaliseTransform = function (t1, t2) {\\r\\n            t2 = Str(t2).replace(/\\\\.{3}|\\\\u2026/g, t1);\\r\\n            t1 = R.parseTransformString(t1) || [];\\r\\n            t2 = R.parseTransformString(t2) || [];\\r\\n            var maxlength = mmax(t1.length, t2.length),\\r\\n                from = [],\\r\\n                to = [],\\r\\n                i = 0, j, jj,\\r\\n                tt1, tt2;\\r\\n            for (; i < maxlength; i++) {\\r\\n                tt1 = t1[i] || getEmpty(t2[i]);\\r\\n                tt2 = t2[i] || getEmpty(tt1);\\r\\n                if ((tt1[0] != tt2[0]) ||\\r\\n                    (tt1[0].toLowerCase() == \\\"r\\\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\\r\\n                    (tt1[0].toLowerCase() == \\\"s\\\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\\r\\n                ) {\\r\\n                    return;\\r\\n                }\\r\\n                from[i] = [];\\r\\n                to[i] = [];\\r\\n                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\\r\\n                    j in tt1 && (from[i][j] = tt1[j]);\\r\\n                    j in tt2 && (to[i][j] = tt2[j]);\\r\\n                }\\r\\n            }\\r\\n            return {\\r\\n                from: from,\\r\\n                to: to\\r\\n            };\\r\\n        };\\r\\n    R._getContainer = function (x, y, w, h) {\\r\\n        var container;\\r\\n        container = h == null && !R.is(x, \\\"object\\\") ? g.doc.getElementById(x) : x;\\r\\n        if (container == null) {\\r\\n            return;\\r\\n        }\\r\\n        if (container.tagName) {\\r\\n            if (y == null) {\\r\\n                return {\\r\\n                    container: container,\\r\\n                    width: container.style.pixelWidth || container.offsetWidth,\\r\\n                    height: container.style.pixelHeight || container.offsetHeight\\r\\n                };\\r\\n            } else {\\r\\n                return {\\r\\n                    container: container,\\r\\n                    width: y,\\r\\n                    height: w\\r\\n                };\\r\\n            }\\r\\n        }\\r\\n        return {\\r\\n            container: 1,\\r\\n            x: x,\\r\\n            y: y,\\r\\n            width: w,\\r\\n            height: h\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.pathToRelative\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Converts path to relative form\\r\\n     > Parameters\\r\\n     - pathString (string|array) path string or array of segments\\r\\n     = (array) array of segments.\\r\\n     \\\\*/\\r\\n    R.pathToRelative = pathToRelative;\\r\\n    R._engine = {};\\r\\n    /*\\\\\\r\\n     * Raphael.path2curve\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Converts path to a new path where all segments are cubic bezier curves.\\r\\n     > Parameters\\r\\n     - pathString (string|array) path string or array of segments\\r\\n     = (array) array of segments.\\r\\n     \\\\*/\\r\\n    R.path2curve = path2curve;\\r\\n    /*\\\\\\r\\n     * Raphael.matrix\\r\\n     [ method ]\\r\\n     **\\r\\n     * Utility method\\r\\n     **\\r\\n     * Returns matrix based on given parameters.\\r\\n     > Parameters\\r\\n     - a (number)\\r\\n     - b (number)\\r\\n     - c (number)\\r\\n     - d (number)\\r\\n     - e (number)\\r\\n     - f (number)\\r\\n     = (object) @Matrix\\r\\n     \\\\*/\\r\\n    R.matrix = function (a, b, c, d, e, f) {\\r\\n        return new Matrix(a, b, c, d, e, f);\\r\\n    };\\r\\n    function Matrix(a, b, c, d, e, f) {\\r\\n        if (a != null) {\\r\\n            this.a = +a;\\r\\n            this.b = +b;\\r\\n            this.c = +c;\\r\\n            this.d = +d;\\r\\n            this.e = +e;\\r\\n            this.f = +f;\\r\\n        } else {\\r\\n            this.a = 1;\\r\\n            this.b = 0;\\r\\n            this.c = 0;\\r\\n            this.d = 1;\\r\\n            this.e = 0;\\r\\n            this.f = 0;\\r\\n        }\\r\\n    }\\r\\n    (function (matrixproto) {\\r\\n        /*\\\\\\r\\n         * Matrix.add\\r\\n         [ method ]\\r\\n         **\\r\\n         * Adds given matrix to existing one.\\r\\n         > Parameters\\r\\n         - a (number)\\r\\n         - b (number)\\r\\n         - c (number)\\r\\n         - d (number)\\r\\n         - e (number)\\r\\n         - f (number)\\r\\n         or\\r\\n         - matrix (object) @Matrix\\r\\n         \\\\*/\\r\\n        matrixproto.add = function (a, b, c, d, e, f) {\\r\\n            var out = [[], [], []],\\r\\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\\r\\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\\r\\n                x, y, z, res;\\r\\n\\r\\n            if (a && a instanceof Matrix) {\\r\\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\\r\\n            }\\r\\n\\r\\n            for (x = 0; x < 3; x++) {\\r\\n                for (y = 0; y < 3; y++) {\\r\\n                    res = 0;\\r\\n                    for (z = 0; z < 3; z++) {\\r\\n                        res += m[x][z] * matrix[z][y];\\r\\n                    }\\r\\n                    out[x][y] = res;\\r\\n                }\\r\\n            }\\r\\n            this.a = out[0][0];\\r\\n            this.b = out[1][0];\\r\\n            this.c = out[0][1];\\r\\n            this.d = out[1][1];\\r\\n            this.e = out[0][2];\\r\\n            this.f = out[1][2];\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.invert\\r\\n         [ method ]\\r\\n         **\\r\\n         * Returns inverted version of the matrix\\r\\n         = (object) @Matrix\\r\\n         \\\\*/\\r\\n        matrixproto.invert = function () {\\r\\n            var me = this,\\r\\n                x = me.a * me.d - me.b * me.c;\\r\\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.clone\\r\\n         [ method ]\\r\\n         **\\r\\n         * Returns copy of the matrix\\r\\n         = (object) @Matrix\\r\\n         \\\\*/\\r\\n        matrixproto.clone = function () {\\r\\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.translate\\r\\n         [ method ]\\r\\n         **\\r\\n         * Translate the matrix\\r\\n         > Parameters\\r\\n         - x (number)\\r\\n         - y (number)\\r\\n         \\\\*/\\r\\n        matrixproto.translate = function (x, y) {\\r\\n            this.add(1, 0, 0, 1, x, y);\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.scale\\r\\n         [ method ]\\r\\n         **\\r\\n         * Scales the matrix\\r\\n         > Parameters\\r\\n         - x (number)\\r\\n         - y (number) #optional\\r\\n         - cx (number) #optional\\r\\n         - cy (number) #optional\\r\\n         \\\\*/\\r\\n        matrixproto.scale = function (x, y, cx, cy) {\\r\\n            y == null && (y = x);\\r\\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\\r\\n            this.add(x, 0, 0, y, 0, 0);\\r\\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.rotate\\r\\n         [ method ]\\r\\n         **\\r\\n         * Rotates the matrix\\r\\n         > Parameters\\r\\n         - a (number)\\r\\n         - x (number)\\r\\n         - y (number)\\r\\n         \\\\*/\\r\\n        matrixproto.rotate = function (a, x, y) {\\r\\n            a = R.rad(a);\\r\\n            x = x || 0;\\r\\n            y = y || 0;\\r\\n            var cos = +math.cos(a).toFixed(9),\\r\\n                sin = +math.sin(a).toFixed(9);\\r\\n            this.add(cos, sin, -sin, cos, x, y);\\r\\n            this.add(1, 0, 0, 1, -x, -y);\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.x\\r\\n         [ method ]\\r\\n         **\\r\\n         * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\\r\\n         > Parameters\\r\\n         - x (number)\\r\\n         - y (number)\\r\\n         = (number) x\\r\\n         \\\\*/\\r\\n        matrixproto.x = function (x, y) {\\r\\n            return x * this.a + y * this.c + this.e;\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.y\\r\\n         [ method ]\\r\\n         **\\r\\n         * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\\r\\n         > Parameters\\r\\n         - x (number)\\r\\n         - y (number)\\r\\n         = (number) y\\r\\n         \\\\*/\\r\\n        matrixproto.y = function (x, y) {\\r\\n            return x * this.b + y * this.d + this.f;\\r\\n        };\\r\\n        matrixproto.get = function (i) {\\r\\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\\r\\n        };\\r\\n        matrixproto.toString = function () {\\r\\n            return R.svg ?\\r\\n            \\\"matrix(\\\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \\\")\\\" :\\r\\n                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\\r\\n        };\\r\\n        matrixproto.toFilter = function () {\\r\\n            return \\\"progid:DXImageTransform.Microsoft.Matrix(M11=\\\" + this.get(0) +\\r\\n                \\\", M12=\\\" + this.get(2) + \\\", M21=\\\" + this.get(1) + \\\", M22=\\\" + this.get(3) +\\r\\n                \\\", Dx=\\\" + this.get(4) + \\\", Dy=\\\" + this.get(5) + \\\", sizingmethod='auto expand')\\\";\\r\\n        };\\r\\n        matrixproto.offset = function () {\\r\\n            return [this.e.toFixed(4), this.f.toFixed(4)];\\r\\n        };\\r\\n        function norm(a) {\\r\\n            return a[0] * a[0] + a[1] * a[1];\\r\\n        }\\r\\n        function normalize(a) {\\r\\n            var mag = math.sqrt(norm(a));\\r\\n            a[0] && (a[0] /= mag);\\r\\n            a[1] && (a[1] /= mag);\\r\\n        }\\r\\n        /*\\\\\\r\\n         * Matrix.split\\r\\n         [ method ]\\r\\n         **\\r\\n         * Splits matrix into primitive transformations\\r\\n         = (object) in format:\\r\\n         o dx (number) translation by x\\r\\n         o dy (number) translation by y\\r\\n         o scalex (number) scale by x\\r\\n         o scaley (number) scale by y\\r\\n         o shear (number) shear\\r\\n         o rotate (number) rotation in deg\\r\\n         o isSimple (boolean) could it be represented via simple transformations\\r\\n         \\\\*/\\r\\n        matrixproto.split = function () {\\r\\n            var out = {};\\r\\n            // translation\\r\\n            out.dx = this.e;\\r\\n            out.dy = this.f;\\r\\n\\r\\n            // scale and shear\\r\\n            var row = [[this.a, this.c], [this.b, this.d]];\\r\\n            out.scalex = math.sqrt(norm(row[0]));\\r\\n            normalize(row[0]);\\r\\n\\r\\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\\r\\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\\r\\n\\r\\n            out.scaley = math.sqrt(norm(row[1]));\\r\\n            normalize(row[1]);\\r\\n            out.shear /= out.scaley;\\r\\n\\r\\n            // rotation\\r\\n            var sin = -row[0][1],\\r\\n                cos = row[1][1];\\r\\n            if (cos < 0) {\\r\\n                out.rotate = R.deg(math.acos(cos));\\r\\n                if (sin < 0) {\\r\\n                    out.rotate = 360 - out.rotate;\\r\\n                }\\r\\n            } else {\\r\\n                out.rotate = R.deg(math.asin(sin));\\r\\n            }\\r\\n\\r\\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\\r\\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\\r\\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\\r\\n            return out;\\r\\n        };\\r\\n        /*\\\\\\r\\n         * Matrix.toTransformString\\r\\n         [ method ]\\r\\n         **\\r\\n         * Return transform string that represents given matrix\\r\\n         = (string) transform string\\r\\n         \\\\*/\\r\\n        matrixproto.toTransformString = function (shorter) {\\r\\n            var s = shorter || this[split]();\\r\\n            if (s.isSimple) {\\r\\n                s.scalex = +s.scalex.toFixed(4);\\r\\n                s.scaley = +s.scaley.toFixed(4);\\r\\n                s.rotate = +s.rotate.toFixed(4);\\r\\n                return  (s.dx || s.dy ? \\\"t\\\" + [s.dx, s.dy] : E) +\\r\\n                    (s.scalex != 1 || s.scaley != 1 ? \\\"s\\\" + [s.scalex, s.scaley, 0, 0] : E) +\\r\\n                    (s.rotate ? \\\"r\\\" + [s.rotate, 0, 0] : E);\\r\\n            } else {\\r\\n                return \\\"m\\\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\\r\\n            }\\r\\n        };\\r\\n    })(Matrix.prototype);\\r\\n\\r\\n    var preventDefault = function () {\\r\\n            this.returnValue = false;\\r\\n        },\\r\\n        preventTouch = function () {\\r\\n            return this.originalEvent.preventDefault();\\r\\n        },\\r\\n        stopPropagation = function () {\\r\\n            this.cancelBubble = true;\\r\\n        },\\r\\n        stopTouch = function () {\\r\\n            return this.originalEvent.stopPropagation();\\r\\n        },\\r\\n        getEventPosition = function (e) {\\r\\n            var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\r\\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\\r\\n\\r\\n            return {\\r\\n                x: e.clientX + scrollX,\\r\\n                y: e.clientY + scrollY\\r\\n            };\\r\\n        },\\r\\n        addEvent = (function () {\\r\\n            if (g.doc.addEventListener) {\\r\\n                return function (obj, type, fn, element) {\\r\\n                    var f = function (e) {\\r\\n                        var pos = getEventPosition(e);\\r\\n                        return fn.call(element, e, pos.x, pos.y);\\r\\n                    };\\r\\n                    obj.addEventListener(type, f, false);\\r\\n\\r\\n                    if (supportsTouch && touchMap[type]) {\\r\\n                        var _f = function (e) {\\r\\n                            var pos = getEventPosition(e),\\r\\n                                olde = e;\\r\\n\\r\\n                            for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\\r\\n                                if (e.targetTouches[i].target == obj) {\\r\\n                                    e = e.targetTouches[i];\\r\\n                                    e.originalEvent = olde;\\r\\n                                    e.preventDefault = preventTouch;\\r\\n                                    e.stopPropagation = stopTouch;\\r\\n                                    break;\\r\\n                                }\\r\\n                            }\\r\\n\\r\\n                            return fn.call(element, e, pos.x, pos.y);\\r\\n                        };\\r\\n                        obj.addEventListener(touchMap[type], _f, false);\\r\\n                    }\\r\\n\\r\\n                    return function () {\\r\\n                        obj.removeEventListener(type, f, false);\\r\\n\\r\\n                        if (supportsTouch && touchMap[type])\\r\\n                            obj.removeEventListener(touchMap[type], _f, false);\\r\\n\\r\\n                        return true;\\r\\n                    };\\r\\n                };\\r\\n            } else if (g.doc.attachEvent) {\\r\\n                return function (obj, type, fn, element) {\\r\\n                    var f = function (e) {\\r\\n                        e = e || g.win.event;\\r\\n                        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\r\\n                            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\\r\\n                            x = e.clientX + scrollX,\\r\\n                            y = e.clientY + scrollY;\\r\\n                        e.preventDefault = e.preventDefault || preventDefault;\\r\\n                        e.stopPropagation = e.stopPropagation || stopPropagation;\\r\\n                        return fn.call(element, e, x, y);\\r\\n                    };\\r\\n                    obj.attachEvent(\\\"on\\\" + type, f);\\r\\n                    var detacher = function () {\\r\\n                        obj.detachEvent(\\\"on\\\" + type, f);\\r\\n                        return true;\\r\\n                    };\\r\\n                    return detacher;\\r\\n                };\\r\\n            }\\r\\n        })(),\\r\\n        drag = [],\\r\\n        dragMove = function (e) {\\r\\n            var x = e.clientX,\\r\\n                y = e.clientY,\\r\\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\r\\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\\r\\n                dragi,\\r\\n                j = drag.length;\\r\\n            while (j--) {\\r\\n                dragi = drag[j];\\r\\n                if (supportsTouch && e.touches) {\\r\\n                    var i = e.touches.length,\\r\\n                        touch;\\r\\n                    while (i--) {\\r\\n                        touch = e.touches[i];\\r\\n                        if (touch.identifier == dragi.el._drag.id) {\\r\\n                            x = touch.clientX;\\r\\n                            y = touch.clientY;\\r\\n                            (e.originalEvent ? e.originalEvent : e).preventDefault();\\r\\n                            break;\\r\\n                        }\\r\\n                    }\\r\\n                } else {\\r\\n                    e.preventDefault();\\r\\n                }\\r\\n                var node = dragi.el.node,\\r\\n                    o,\\r\\n                    next = node.nextSibling,\\r\\n                    parent = node.parentNode,\\r\\n                    display = node.style.display;\\r\\n                g.win.opera && parent.removeChild(node);\\r\\n                node.style.display = \\\"none\\\";\\r\\n                o = dragi.el.paper.getElementByPoint(x, y);\\r\\n                node.style.display = display;\\r\\n                g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\\r\\n                o && eve(\\\"raphael.drag.over.\\\" + dragi.el.id, dragi.el, o);\\r\\n                x += scrollX;\\r\\n                y += scrollY;\\r\\n                eve(\\\"raphael.drag.move.\\\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\\r\\n            }\\r\\n        },\\r\\n        dragUp = function (e) {\\r\\n            R.unmousemove(dragMove).unmouseup(dragUp);\\r\\n            var i = drag.length,\\r\\n                dragi;\\r\\n            while (i--) {\\r\\n                dragi = drag[i];\\r\\n                dragi.el._drag = {};\\r\\n                eve(\\\"raphael.drag.end.\\\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\\r\\n            }\\r\\n            drag = [];\\r\\n        },\\r\\n    /*\\\\\\r\\n     * Raphael.el\\r\\n     [ property (object) ]\\r\\n     **\\r\\n     * You can add your own method to elements. This is usefull when you want to hack default functionality or\\r\\n     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\\r\\n     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\\r\\n     > Usage\\r\\n     | Raphael.el.red = function () {\\r\\n     |     this.attr({fill: \\\"#f00\\\"});\\r\\n     | };\\r\\n     | // then use it\\r\\n     | paper.circle(100, 100, 20).red();\\r\\n     \\\\*/\\r\\n        elproto = R.el = {};\\r\\n    /*\\\\\\r\\n     * Element.click\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for click for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unclick\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for click for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.dblclick\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for double click for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.undblclick\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for double click for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.mousedown\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for mousedown for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unmousedown\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for mousedown for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.mousemove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for mousemove for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unmousemove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for mousemove for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.mouseout\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for mouseout for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unmouseout\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for mouseout for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.mouseover\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for mouseover for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unmouseover\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for mouseover for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.mouseup\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for mouseup for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.unmouseup\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for mouseup for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.touchstart\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for touchstart for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.untouchstart\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for touchstart for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.touchmove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for touchmove for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.untouchmove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for touchmove for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.touchend\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for touchend for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.untouchend\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for touchend for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.touchcancel\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handler for touchcancel for the element.\\r\\n     > Parameters\\r\\n     - handler (function) handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Element.untouchcancel\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handler for touchcancel for the element.\\r\\n     > Parameters\\r\\n     - handler (function) #optional handler for the event\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    for (var i = events.length; i--;) {\\r\\n        (function (eventName) {\\r\\n            R[eventName] = elproto[eventName] = function (fn, scope) {\\r\\n                if (R.is(fn, \\\"function\\\")) {\\r\\n                    this.events = this.events || [];\\r\\n                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});\\r\\n                }\\r\\n                return this;\\r\\n            };\\r\\n            R[\\\"un\\\" + eventName] = elproto[\\\"un\\\" + eventName] = function (fn) {\\r\\n                var events = this.events || [],\\r\\n                    l = events.length;\\r\\n                while (l--){\\r\\n                    if (events[l].name == eventName && (R.is(fn, \\\"undefined\\\") || events[l].f == fn)) {\\r\\n                        events[l].unbind();\\r\\n                        events.splice(l, 1);\\r\\n                        !events.length && delete this.events;\\r\\n                    }\\r\\n                }\\r\\n                return this;\\r\\n            };\\r\\n        })(events[i]);\\r\\n    }\\r\\n\\r\\n    /*\\\\\\r\\n     * Element.data\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds or retrieves given value asociated with given key.\\r\\n     **\\r\\n     * See also @Element.removeData\\r\\n     > Parameters\\r\\n     - key (string) key to store data\\r\\n     - value (any) #optional value to store\\r\\n     = (object) @Element\\r\\n     * or, if value is not specified:\\r\\n     = (any) value\\r\\n     * or, if key and value are not specified:\\r\\n     = (object) Key/value pairs for all the data associated with the element.\\r\\n     > Usage\\r\\n     | for (var i = 0, i < 5, i++) {\\r\\n     |     paper.circle(10 + 15 * i, 10, 10)\\r\\n     |          .attr({fill: \\\"#000\\\"})\\r\\n     |          .data(\\\"i\\\", i)\\r\\n     |          .click(function () {\\r\\n     |             alert(this.data(\\\"i\\\"));\\r\\n     |          });\\r\\n     | }\\r\\n     \\\\*/\\r\\n    elproto.data = function (key, value) {\\r\\n        var data = eldata[this.id] = eldata[this.id] || {};\\r\\n        if (arguments.length == 0) {\\r\\n            return data;\\r\\n        }\\r\\n        if (arguments.length == 1) {\\r\\n            if (R.is(key, \\\"object\\\")) {\\r\\n                for (var i in key) if (key[has](i)) {\\r\\n                    this.data(i, key[i]);\\r\\n                }\\r\\n                return this;\\r\\n            }\\r\\n            eve(\\\"raphael.data.get.\\\" + this.id, this, data[key], key);\\r\\n            return data[key];\\r\\n        }\\r\\n        data[key] = value;\\r\\n        eve(\\\"raphael.data.set.\\\" + this.id, this, value, key);\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.removeData\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes value associated with an element by given key.\\r\\n     * If key is not provided, removes all the data of the element.\\r\\n     > Parameters\\r\\n     - key (string) #optional key\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.removeData = function (key) {\\r\\n        if (key == null) {\\r\\n            eldata[this.id] = {};\\r\\n        } else {\\r\\n            eldata[this.id] && delete eldata[this.id][key];\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getData\\r\\n     [ method ]\\r\\n     **\\r\\n     * Retrieves the element data\\r\\n     = (object) data\\r\\n     \\\\*/\\r\\n    elproto.getData = function () {\\r\\n        return clone(eldata[this.id] || {});\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.hover\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handlers for hover for the element.\\r\\n     > Parameters\\r\\n     - f_in (function) handler for hover in\\r\\n     - f_out (function) handler for hover out\\r\\n     - icontext (object) #optional context for hover in handler\\r\\n     - ocontext (object) #optional context for hover out handler\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\\r\\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.unhover\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes event handlers for hover for the element.\\r\\n     > Parameters\\r\\n     - f_in (function) handler for hover in\\r\\n     - f_out (function) handler for hover out\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.unhover = function (f_in, f_out) {\\r\\n        return this.unmouseover(f_in).unmouseout(f_out);\\r\\n    };\\r\\n    var draggable = [];\\r\\n    /*\\\\\\r\\n     * Element.drag\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds event handlers for drag of the element.\\r\\n     > Parameters\\r\\n     - onmove (function) handler for moving\\r\\n     - onstart (function) handler for drag start\\r\\n     - onend (function) handler for drag end\\r\\n     - mcontext (object) #optional context for moving handler\\r\\n     - scontext (object) #optional context for drag start handler\\r\\n     - econtext (object) #optional context for drag end handler\\r\\n     * Additionaly following `drag` events will be triggered: `drag.start.<id>` on start,\\r\\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\\r\\n     * `drag.over.<id>` will be fired as well.\\r\\n     *\\r\\n     * Start event and start handler will be called in specified context or in context of the element with following parameters:\\r\\n     o x (number) x position of the mouse\\r\\n     o y (number) y position of the mouse\\r\\n     o event (object) DOM event object\\r\\n     * Move event and move handler will be called in specified context or in context of the element with following parameters:\\r\\n     o dx (number) shift by x from the start point\\r\\n     o dy (number) shift by y from the start point\\r\\n     o x (number) x position of the mouse\\r\\n     o y (number) y position of the mouse\\r\\n     o event (object) DOM event object\\r\\n     * End event and end handler will be called in specified context or in context of the element with following parameters:\\r\\n     o event (object) DOM event object\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\\r\\n        function start(e) {\\r\\n            (e.originalEvent || e).preventDefault();\\r\\n            var x = e.clientX,\\r\\n                y = e.clientY,\\r\\n                scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\r\\n                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\\r\\n            this._drag.id = e.identifier;\\r\\n            if (supportsTouch && e.touches) {\\r\\n                var i = e.touches.length, touch;\\r\\n                while (i--) {\\r\\n                    touch = e.touches[i];\\r\\n                    this._drag.id = touch.identifier;\\r\\n                    if (touch.identifier == this._drag.id) {\\r\\n                        x = touch.clientX;\\r\\n                        y = touch.clientY;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            this._drag.x = x + scrollX;\\r\\n            this._drag.y = y + scrollY;\\r\\n            !drag.length && R.mousemove(dragMove).mouseup(dragUp);\\r\\n            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\\r\\n            onstart && eve.on(\\\"raphael.drag.start.\\\" + this.id, onstart);\\r\\n            onmove && eve.on(\\\"raphael.drag.move.\\\" + this.id, onmove);\\r\\n            onend && eve.on(\\\"raphael.drag.end.\\\" + this.id, onend);\\r\\n            eve(\\\"raphael.drag.start.\\\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\\r\\n        }\\r\\n        this._drag = {};\\r\\n        draggable.push({el: this, start: start});\\r\\n        this.mousedown(start);\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.onDragOver\\r\\n     [ method ]\\r\\n     **\\r\\n     * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\\r\\n     > Parameters\\r\\n     - f (function) handler for event, first argument would be the element you are dragging over\\r\\n     \\\\*/\\r\\n    elproto.onDragOver = function (f) {\\r\\n        f ? eve.on(\\\"raphael.drag.over.\\\" + this.id, f) : eve.unbind(\\\"raphael.drag.over.\\\" + this.id);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.undrag\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes all drag event handlers from given element.\\r\\n     \\\\*/\\r\\n    elproto.undrag = function () {\\r\\n        var i = draggable.length;\\r\\n        while (i--) if (draggable[i].el == this) {\\r\\n            this.unmousedown(draggable[i].start);\\r\\n            draggable.splice(i, 1);\\r\\n            eve.unbind(\\\"raphael.drag.*.\\\" + this.id);\\r\\n        }\\r\\n        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\\r\\n        drag = [];\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.circle\\r\\n     [ method ]\\r\\n     **\\r\\n     * Draws a circle.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the centre\\r\\n     - y (number) y coordinate of the centre\\r\\n     - r (number) radius\\r\\n     = (object) Raphaël element object with type “circle”\\r\\n     **\\r\\n     > Usage\\r\\n     | var c = paper.circle(50, 50, 40);\\r\\n     \\\\*/\\r\\n    paperproto.circle = function (x, y, r) {\\r\\n        var out = R._engine.circle(this, x || 0, y || 0, r || 0);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.rect\\r\\n     [ method ]\\r\\n     *\\r\\n     * Draws a rectangle.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the top left corner\\r\\n     - y (number) y coordinate of the top left corner\\r\\n     - width (number) width\\r\\n     - height (number) height\\r\\n     - r (number) #optional radius for rounded corners, default is 0\\r\\n     = (object) Raphaël element object with type “rect”\\r\\n     **\\r\\n     > Usage\\r\\n     | // regular rectangle\\r\\n     | var c = paper.rect(10, 10, 50, 50);\\r\\n     | // rectangle with rounded corners\\r\\n     | var c = paper.rect(40, 40, 50, 50, 10);\\r\\n     \\\\*/\\r\\n    paperproto.rect = function (x, y, w, h, r) {\\r\\n        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.ellipse\\r\\n     [ method ]\\r\\n     **\\r\\n     * Draws an ellipse.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the centre\\r\\n     - y (number) y coordinate of the centre\\r\\n     - rx (number) horizontal radius\\r\\n     - ry (number) vertical radius\\r\\n     = (object) Raphaël element object with type “ellipse”\\r\\n     **\\r\\n     > Usage\\r\\n     | var c = paper.ellipse(50, 50, 40, 20);\\r\\n     \\\\*/\\r\\n    paperproto.ellipse = function (x, y, rx, ry) {\\r\\n        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.path\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates a path element by given path data string.\\r\\n     > Parameters\\r\\n     - pathString (string) #optional path string in SVG format.\\r\\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\\r\\n     | \\\"M10,20L30,40\\\"\\r\\n     * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\\r\\n     *\\r\\n     # <p>Here is short list of commands available, for more details see <a href=\\\"http://www.w3.org/TR/SVG/paths.html#PathData\\\" title=\\\"Details of a path's data attribute's format are described in the SVG specification.\\\">SVG path string format</a>.</p>\\r\\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\\r\\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\\r\\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\\r\\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\\r\\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\\r\\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\\r\\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\\r\\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\\r\\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\\r\\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\\r\\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\\r\\n     # <tr><td>R</td><td><a href=\\\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\\\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\\r\\n     * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\\r\\n     * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\\r\\n     > Usage\\r\\n     | var c = paper.path(\\\"M10 10L90 90\\\");\\r\\n     | // draw a diagonal line:\\r\\n     | // move to 10,10, line to 90,90\\r\\n     * For example of path strings, check out these icons: http://raphaeljs.com/icons/\\r\\n     \\\\*/\\r\\n    paperproto.path = function (pathString) {\\r\\n        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\\r\\n        var out = R._engine.path(R.format[apply](R, arguments), this);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.image\\r\\n     [ method ]\\r\\n     **\\r\\n     * Embeds an image into the surface.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - src (string) URI of the source image\\r\\n     - x (number) x coordinate position\\r\\n     - y (number) y coordinate position\\r\\n     - width (number) width of the image\\r\\n     - height (number) height of the image\\r\\n     = (object) Raphaël element object with type “image”\\r\\n     **\\r\\n     > Usage\\r\\n     | var c = paper.image(\\\"apple.png\\\", 10, 10, 80, 80);\\r\\n     \\\\*/\\r\\n    paperproto.image = function (src, x, y, w, h) {\\r\\n        var out = R._engine.image(this, src || \\\"about:blank\\\", x || 0, y || 0, w || 0, h || 0);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.text\\r\\n     [ method ]\\r\\n     **\\r\\n     * Draws a text string. If you need line breaks, put “\\\\n” in the string.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate position\\r\\n     - y (number) y coordinate position\\r\\n     - text (string) The text string to draw\\r\\n     = (object) Raphaël element object with type “text”\\r\\n     **\\r\\n     > Usage\\r\\n     | var t = paper.text(50, 50, \\\"Raphaël\\\\nkicks\\\\nbutt!\\\");\\r\\n     \\\\*/\\r\\n    paperproto.text = function (x, y, text, href) {\\r\\n        var out = R._engine.text(this, x || 0, y || 0, Str(text), href);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.set\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates array-like object to keep and operate several elements at once.\\r\\n     * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\\r\\n     * Sets act as pseudo elements — all methods available to an element can be used on a set.\\r\\n     = (object) array-like object that represents set of elements\\r\\n     **\\r\\n     > Usage\\r\\n     | var st = paper.set();\\r\\n     | st.push(\\r\\n     |     paper.circle(10, 10, 5),\\r\\n     |     paper.circle(30, 10, 5)\\r\\n     | );\\r\\n     | st.attr({fill: \\\"red\\\"}); // changes the fill of both circles\\r\\n     \\\\*/\\r\\n    paperproto.set = function (itemsArray) {\\r\\n        !R.is(itemsArray, \\\"array\\\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\\r\\n        var out = new Set(itemsArray);\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        out[\\\"paper\\\"] = this;\\r\\n        out[\\\"type\\\"] = \\\"set\\\";\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.setStart\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates @Paper.set. All elements that will be created after calling this method and before calling\\r\\n     * @Paper.setFinish will be added to the set.\\r\\n     **\\r\\n     > Usage\\r\\n     | paper.setStart();\\r\\n     | paper.circle(10, 10, 5),\\r\\n     | paper.circle(30, 10, 5)\\r\\n     | var st = paper.setFinish();\\r\\n     | st.attr({fill: \\\"red\\\"}); // changes the fill of both circles\\r\\n     \\\\*/\\r\\n    paperproto.setStart = function (set) {\\r\\n        this.__set__ = set || this.set();\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.setFinish\\r\\n     [ method ]\\r\\n     **\\r\\n     * See @Paper.setStart. This method finishes catching and returns resulting set.\\r\\n     **\\r\\n     = (object) set\\r\\n     \\\\*/\\r\\n    paperproto.setFinish = function (set) {\\r\\n        var out = this.__set__;\\r\\n        delete this.__set__;\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.getSize\\r\\n     [ method ]\\r\\n     **\\r\\n     * Obtains current paper actual size.\\r\\n     **\\r\\n     = (object)\\r\\n     \\\\*/\\r\\n    paperproto.getSize = function () {\\r\\n        var container = this.canvas.parentNode;\\r\\n        return {\\r\\n            width: container.offsetWidth,\\r\\n            height: container.offsetHeight\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.setSize\\r\\n     [ method ]\\r\\n     **\\r\\n     * If you need to change dimensions of the canvas call this method\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - width (number) new width of the canvas\\r\\n     - height (number) new height of the canvas\\r\\n     \\\\*/\\r\\n    paperproto.setSize = function (width, height) {\\r\\n        return R._engine.setSize.call(this, width, height);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.setViewBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\\r\\n     * specifying new boundaries.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) new x position, default is `0`\\r\\n     - y (number) new y position, default is `0`\\r\\n     - w (number) new width of the canvas\\r\\n     - h (number) new height of the canvas\\r\\n     - fit (boolean) `true` if you want graphics to fit into new boundary box\\r\\n     \\\\*/\\r\\n    paperproto.setViewBox = function (x, y, w, h, fit) {\\r\\n        return R._engine.setViewBox.call(this, x, y, w, h, fit);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.top\\r\\n     [ property ]\\r\\n     **\\r\\n     * Points to the topmost element on the paper\\r\\n     \\\\*/\\r\\n    /*\\\\\\r\\n     * Paper.bottom\\r\\n     [ property ]\\r\\n     **\\r\\n     * Points to the bottom element on the paper\\r\\n     \\\\*/\\r\\n    paperproto.top = paperproto.bottom = null;\\r\\n    /*\\\\\\r\\n     * Paper.raphael\\r\\n     [ property ]\\r\\n     **\\r\\n     * Points to the @Raphael object/function\\r\\n     \\\\*/\\r\\n    paperproto.raphael = R;\\r\\n    var getOffset = function (elem) {\\r\\n        var box = elem.getBoundingClientRect(),\\r\\n            doc = elem.ownerDocument,\\r\\n            body = doc.body,\\r\\n            docElem = doc.documentElement,\\r\\n            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\\r\\n            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\\r\\n            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\\r\\n        return {\\r\\n            y: top,\\r\\n            x: left\\r\\n        };\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.getElementByPoint\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns you topmost element under given point.\\r\\n     **\\r\\n     = (object) Raphaël element object\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate from the top left corner of the window\\r\\n     - y (number) y coordinate from the top left corner of the window\\r\\n     > Usage\\r\\n     | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \\\"#f00\\\"});\\r\\n     \\\\*/\\r\\n    paperproto.getElementByPoint = function (x, y) {\\r\\n        var paper = this,\\r\\n            svg = paper.canvas,\\r\\n            target = g.doc.elementFromPoint(x, y);\\r\\n        if (g.win.opera && target.tagName == \\\"svg\\\") {\\r\\n            var so = getOffset(svg),\\r\\n                sr = svg.createSVGRect();\\r\\n            sr.x = x - so.x;\\r\\n            sr.y = y - so.y;\\r\\n            sr.width = sr.height = 1;\\r\\n            var hits = svg.getIntersectionList(sr, null);\\r\\n            if (hits.length) {\\r\\n                target = hits[hits.length - 1];\\r\\n            }\\r\\n        }\\r\\n        if (!target) {\\r\\n            return null;\\r\\n        }\\r\\n        while (target.parentNode && target != svg.parentNode && !target.raphael) {\\r\\n            target = target.parentNode;\\r\\n        }\\r\\n        target == paper.canvas.parentNode && (target = svg);\\r\\n        target = target && target.raphael ? paper.getById(target.raphaelid) : null;\\r\\n        return target;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Paper.getElementsByBBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns set of elements that have an intersecting bounding box\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - bbox (object) bbox to check with\\r\\n     = (object) @Set\\r\\n     \\\\*/\\r\\n    paperproto.getElementsByBBox = function (bbox) {\\r\\n        var set = this.set();\\r\\n        this.forEach(function (el) {\\r\\n            if (R.isBBoxIntersect(el.getBBox(), bbox)) {\\r\\n                set.push(el);\\r\\n            }\\r\\n        });\\r\\n        return set;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Paper.getById\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns you element by its internal ID.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - id (number) id\\r\\n     = (object) Raphaël element object\\r\\n     \\\\*/\\r\\n    paperproto.getById = function (id) {\\r\\n        var bot = this.bottom;\\r\\n        while (bot) {\\r\\n            if (bot.id == id) {\\r\\n                return bot;\\r\\n            }\\r\\n            bot = bot.next;\\r\\n        }\\r\\n        return null;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.forEach\\r\\n     [ method ]\\r\\n     **\\r\\n     * Executes given function for each element on the paper\\r\\n     *\\r\\n     * If callback function returns `false` it will stop loop running.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - callback (function) function to run\\r\\n     - thisArg (object) context object for the callback\\r\\n     = (object) Paper object\\r\\n     > Usage\\r\\n     | paper.forEach(function (el) {\\r\\n     |     el.attr({ stroke: \\\"blue\\\" });\\r\\n     | });\\r\\n     \\\\*/\\r\\n    paperproto.forEach = function (callback, thisArg) {\\r\\n        var bot = this.bottom;\\r\\n        while (bot) {\\r\\n            if (callback.call(thisArg, bot) === false) {\\r\\n                return this;\\r\\n            }\\r\\n            bot = bot.next;\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.getElementsByPoint\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns set of elements that have common point inside\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the point\\r\\n     - y (number) y coordinate of the point\\r\\n     = (object) @Set\\r\\n     \\\\*/\\r\\n    paperproto.getElementsByPoint = function (x, y) {\\r\\n        var set = this.set();\\r\\n        this.forEach(function (el) {\\r\\n            if (el.isPointInside(x, y)) {\\r\\n                set.push(el);\\r\\n            }\\r\\n        });\\r\\n        return set;\\r\\n    };\\r\\n    function x_y() {\\r\\n        return this.x + S + this.y;\\r\\n    }\\r\\n    function x_y_w_h() {\\r\\n        return this.x + S + this.y + S + this.width + \\\" \\\\xd7 \\\" + this.height;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Element.isPointInside\\r\\n     [ method ]\\r\\n     **\\r\\n     * Determine if given point is inside this element’s shape\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the point\\r\\n     - y (number) y coordinate of the point\\r\\n     = (boolean) `true` if point inside the shape\\r\\n     \\\\*/\\r\\n    elproto.isPointInside = function (x, y) {\\r\\n        var rp = this.realPath = getPath[this.type](this);\\r\\n        if (this.attr('transform') && this.attr('transform').length) {\\r\\n            rp = R.transformPath(rp, this.attr('transform'));\\r\\n        }\\r\\n        return R.isPointInsidePath(rp, x, y);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getBBox\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return bounding box for a given element\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\\r\\n     = (object) Bounding box object:\\r\\n     o {\\r\\n     o     x: (number) top left corner x\\r\\n     o     y: (number) top left corner y\\r\\n     o     x2: (number) bottom right corner x\\r\\n     o     y2: (number) bottom right corner y\\r\\n     o     width: (number) width\\r\\n     o     height: (number) height\\r\\n     o }\\r\\n     \\\\*/\\r\\n    elproto.getBBox = function (isWithoutTransform) {\\r\\n        if (this.removed) {\\r\\n            return {};\\r\\n        }\\r\\n        var _ = this._;\\r\\n        if (isWithoutTransform) {\\r\\n            if (_.dirty || !_.bboxwt) {\\r\\n                this.realPath = getPath[this.type](this);\\r\\n                _.bboxwt = pathDimensions(this.realPath);\\r\\n                _.bboxwt.toString = x_y_w_h;\\r\\n                _.dirty = 0;\\r\\n            }\\r\\n            return _.bboxwt;\\r\\n        }\\r\\n        if (_.dirty || _.dirtyT || !_.bbox) {\\r\\n            if (_.dirty || !this.realPath) {\\r\\n                _.bboxwt = 0;\\r\\n                this.realPath = getPath[this.type](this);\\r\\n            }\\r\\n            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\\r\\n            _.bbox.toString = x_y_w_h;\\r\\n            _.dirty = _.dirtyT = 0;\\r\\n        }\\r\\n        return _.bbox;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.clone\\r\\n     [ method ]\\r\\n     **\\r\\n     = (object) clone of a given element\\r\\n     **\\r\\n     \\\\*/\\r\\n    elproto.clone = function () {\\r\\n        if (this.removed) {\\r\\n            return null;\\r\\n        }\\r\\n        var out = this.paper[this.type]().attr(this.attr());\\r\\n        this.__set__ && this.__set__.push(out);\\r\\n        return out;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.glow\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return set of elements that create glow-like effect around given element. See @Paper.set.\\r\\n     *\\r\\n     * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - glow (object) #optional parameters object with all properties optional:\\r\\n     o {\\r\\n     o     width (number) size of the glow, default is `10`\\r\\n     o     fill (boolean) will it be filled, default is `false`\\r\\n     o     opacity (number) opacity, default is `0.5`\\r\\n     o     offsetx (number) horizontal offset, default is `0`\\r\\n     o     offsety (number) vertical offset, default is `0`\\r\\n     o     color (string) glow colour, default is `black`\\r\\n     o }\\r\\n     = (object) @Paper.set of elements that represents glow\\r\\n     \\\\*/\\r\\n    elproto.glow = function (glow) {\\r\\n        if (this.type == \\\"text\\\") {\\r\\n            return null;\\r\\n        }\\r\\n        glow = glow || {};\\r\\n        var s = {\\r\\n                width: (glow.width || 10) + (+this.attr(\\\"stroke-width\\\") || 1),\\r\\n                fill: glow.fill || false,\\r\\n                opacity: glow.opacity == null ? .5 : glow.opacity,\\r\\n                offsetx: glow.offsetx || 0,\\r\\n                offsety: glow.offsety || 0,\\r\\n                color: glow.color || \\\"#000\\\"\\r\\n            },\\r\\n            c = s.width / 2,\\r\\n            r = this.paper,\\r\\n            out = r.set(),\\r\\n            path = this.realPath || getPath[this.type](this);\\r\\n        path = this.matrix ? mapPath(path, this.matrix) : path;\\r\\n        for (var i = 1; i < c + 1; i++) {\\r\\n            out.push(r.path(path).attr({\\r\\n                stroke: s.color,\\r\\n                fill: s.fill ? s.color : \\\"none\\\",\\r\\n                \\\"stroke-linejoin\\\": \\\"round\\\",\\r\\n                \\\"stroke-linecap\\\": \\\"round\\\",\\r\\n                \\\"stroke-width\\\": +(s.width / c * i).toFixed(3),\\r\\n                opacity: +(s.opacity / c).toFixed(3)\\r\\n            }));\\r\\n        }\\r\\n        return out.insertBefore(this).translate(s.offsetx, s.offsety);\\r\\n    };\\r\\n    var curveslengths = {},\\r\\n        getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\\r\\n            if (length == null) {\\r\\n                return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\\r\\n            } else {\\r\\n                return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\\r\\n            }\\r\\n        },\\r\\n        getLengthFactory = function (istotal, subpath) {\\r\\n            return function (path, length, onlystart) {\\r\\n                path = path2curve(path);\\r\\n                var x, y, p, l, sp = \\\"\\\", subpaths = {}, point,\\r\\n                    len = 0;\\r\\n                for (var i = 0, ii = path.length; i < ii; i++) {\\r\\n                    p = path[i];\\r\\n                    if (p[0] == \\\"M\\\") {\\r\\n                        x = +p[1];\\r\\n                        y = +p[2];\\r\\n                    } else {\\r\\n                        l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\\r\\n                        if (len + l > length) {\\r\\n                            if (subpath && !subpaths.start) {\\r\\n                                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\\r\\n                                sp += [\\\"C\\\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\\r\\n                                if (onlystart) {return sp;}\\r\\n                                subpaths.start = sp;\\r\\n                                sp = [\\\"M\\\" + point.x, point.y + \\\"C\\\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\\r\\n                                len += l;\\r\\n                                x = +p[5];\\r\\n                                y = +p[6];\\r\\n                                continue;\\r\\n                            }\\r\\n                            if (!istotal && !subpath) {\\r\\n                                point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\\r\\n                                return {x: point.x, y: point.y, alpha: point.alpha};\\r\\n                            }\\r\\n                        }\\r\\n                        len += l;\\r\\n                        x = +p[5];\\r\\n                        y = +p[6];\\r\\n                    }\\r\\n                    sp += p.shift() + p;\\r\\n                }\\r\\n                subpaths.end = sp;\\r\\n                point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\\r\\n                point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\\r\\n                return point;\\r\\n            };\\r\\n        };\\r\\n    var getTotalLength = getLengthFactory(1),\\r\\n        getPointAtLength = getLengthFactory(),\\r\\n        getSubpathsAtLength = getLengthFactory(0, 1);\\r\\n    /*\\\\\\r\\n     * Raphael.getTotalLength\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns length of the given path in pixels.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - path (string) SVG path string.\\r\\n     **\\r\\n     = (number) length.\\r\\n     \\\\*/\\r\\n    R.getTotalLength = getTotalLength;\\r\\n    /*\\\\\\r\\n     * Raphael.getPointAtLength\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return coordinates of the point located at the given length on the given path.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - path (string) SVG path string\\r\\n     - length (number)\\r\\n     **\\r\\n     = (object) representation of the point:\\r\\n     o {\\r\\n     o     x: (number) x coordinate\\r\\n     o     y: (number) y coordinate\\r\\n     o     alpha: (number) angle of derivative\\r\\n     o }\\r\\n     \\\\*/\\r\\n    R.getPointAtLength = getPointAtLength;\\r\\n    /*\\\\\\r\\n     * Raphael.getSubpath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return subpath of a given path from given length to given length.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - path (string) SVG path string\\r\\n     - from (number) position of the start of the segment\\r\\n     - to (number) position of the end of the segment\\r\\n     **\\r\\n     = (string) pathstring for the segment\\r\\n     \\\\*/\\r\\n    R.getSubpath = function (path, from, to) {\\r\\n        if (this.getTotalLength(path) - to < 1e-6) {\\r\\n            return getSubpathsAtLength(path, from).end;\\r\\n        }\\r\\n        var a = getSubpathsAtLength(path, to, 1);\\r\\n        return from ? getSubpathsAtLength(a, from).end : a;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getTotalLength\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns length of the path in pixels. Only works for element of “path” type.\\r\\n     = (number) length.\\r\\n     \\\\*/\\r\\n    elproto.getTotalLength = function () {\\r\\n        var path = this.getPath();\\r\\n        if (!path) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (this.node.getTotalLength) {\\r\\n            return this.node.getTotalLength();\\r\\n        }\\r\\n\\r\\n        return getTotalLength(path);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getPointAtLength\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - length (number)\\r\\n     **\\r\\n     = (object) representation of the point:\\r\\n     o {\\r\\n     o     x: (number) x coordinate\\r\\n     o     y: (number) y coordinate\\r\\n     o     alpha: (number) angle of derivative\\r\\n     o }\\r\\n     \\\\*/\\r\\n    elproto.getPointAtLength = function (length) {\\r\\n        var path = this.getPath();\\r\\n        if (!path) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return getPointAtLength(path, length);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getPath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\\r\\n     = (object) path\\r\\n     **\\r\\n     \\\\*/\\r\\n    elproto.getPath = function () {\\r\\n        var path,\\r\\n            getPath = R._getPath[this.type];\\r\\n\\r\\n        if (this.type == \\\"text\\\" || this.type == \\\"set\\\") {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        if (getPath) {\\r\\n            path = getPath(this);\\r\\n        }\\r\\n\\r\\n        return path;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.getSubpath\\r\\n     [ method ]\\r\\n     **\\r\\n     * Return subpath of a given element from given length to given length. Only works for element of “path” type.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - from (number) position of the start of the segment\\r\\n     - to (number) position of the end of the segment\\r\\n     **\\r\\n     = (string) pathstring for the segment\\r\\n     \\\\*/\\r\\n    elproto.getSubpath = function (from, to) {\\r\\n        var path = this.getPath();\\r\\n        if (!path) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        return R.getSubpath(path, from, to);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.easing_formulas\\r\\n     [ property ]\\r\\n     **\\r\\n     * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\\r\\n     # <ul>\\r\\n     #     <li>“linear”</li>\\r\\n     #     <li>“&lt;” or “easeIn” or “ease-in”</li>\\r\\n     #     <li>“>” or “easeOut” or “ease-out”</li>\\r\\n     #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\\r\\n     #     <li>“backIn” or “back-in”</li>\\r\\n     #     <li>“backOut” or “back-out”</li>\\r\\n     #     <li>“elastic”</li>\\r\\n     #     <li>“bounce”</li>\\r\\n     # </ul>\\r\\n     # <p>See also <a href=\\\"http://raphaeljs.com/easing.html\\\">Easing demo</a>.</p>\\r\\n     \\\\*/\\r\\n    var ef = R.easing_formulas = {\\r\\n        linear: function (n) {\\r\\n            return n;\\r\\n        },\\r\\n        \\\"<\\\": function (n) {\\r\\n            return pow(n, 1.7);\\r\\n        },\\r\\n        \\\">\\\": function (n) {\\r\\n            return pow(n, .48);\\r\\n        },\\r\\n        \\\"<>\\\": function (n) {\\r\\n            var q = .48 - n / 1.04,\\r\\n                Q = math.sqrt(.1734 + q * q),\\r\\n                x = Q - q,\\r\\n                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\\r\\n                y = -Q - q,\\r\\n                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\\r\\n                t = X + Y + .5;\\r\\n            return (1 - t) * 3 * t * t + t * t * t;\\r\\n        },\\r\\n        backIn: function (n) {\\r\\n            var s = 1.70158;\\r\\n            return n * n * ((s + 1) * n - s);\\r\\n        },\\r\\n        backOut: function (n) {\\r\\n            n = n - 1;\\r\\n            var s = 1.70158;\\r\\n            return n * n * ((s + 1) * n + s) + 1;\\r\\n        },\\r\\n        elastic: function (n) {\\r\\n            if (n == !!n) {\\r\\n                return n;\\r\\n            }\\r\\n            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\\r\\n        },\\r\\n        bounce: function (n) {\\r\\n            var s = 7.5625,\\r\\n                p = 2.75,\\r\\n                l;\\r\\n            if (n < (1 / p)) {\\r\\n                l = s * n * n;\\r\\n            } else {\\r\\n                if (n < (2 / p)) {\\r\\n                    n -= (1.5 / p);\\r\\n                    l = s * n * n + .75;\\r\\n                } else {\\r\\n                    if (n < (2.5 / p)) {\\r\\n                        n -= (2.25 / p);\\r\\n                        l = s * n * n + .9375;\\r\\n                    } else {\\r\\n                        n -= (2.625 / p);\\r\\n                        l = s * n * n + .984375;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            return l;\\r\\n        }\\r\\n    };\\r\\n    ef.easeIn = ef[\\\"ease-in\\\"] = ef[\\\"<\\\"];\\r\\n    ef.easeOut = ef[\\\"ease-out\\\"] = ef[\\\">\\\"];\\r\\n    ef.easeInOut = ef[\\\"ease-in-out\\\"] = ef[\\\"<>\\\"];\\r\\n    ef[\\\"back-in\\\"] = ef.backIn;\\r\\n    ef[\\\"back-out\\\"] = ef.backOut;\\r\\n\\r\\n    var animationElements = [],\\r\\n        requestAnimFrame = window.requestAnimationFrame       ||\\r\\n            window.webkitRequestAnimationFrame ||\\r\\n            window.mozRequestAnimationFrame    ||\\r\\n            window.oRequestAnimationFrame      ||\\r\\n            window.msRequestAnimationFrame     ||\\r\\n            function (callback) {\\r\\n                setTimeout(callback, 16);\\r\\n            },\\r\\n        animation = function () {\\r\\n            var Now = +new Date,\\r\\n                l = 0;\\r\\n            for (; l < animationElements.length; l++) {\\r\\n                var e = animationElements[l];\\r\\n                if (e.el.removed || e.paused) {\\r\\n                    continue;\\r\\n                }\\r\\n                var time = Now - e.start,\\r\\n                    ms = e.ms,\\r\\n                    easing = e.easing,\\r\\n                    from = e.from,\\r\\n                    diff = e.diff,\\r\\n                    to = e.to,\\r\\n                    t = e.t,\\r\\n                    that = e.el,\\r\\n                    set = {},\\r\\n                    now,\\r\\n                    init = {},\\r\\n                    key;\\r\\n                if (e.initstatus) {\\r\\n                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\\r\\n                    e.status = e.initstatus;\\r\\n                    delete e.initstatus;\\r\\n                    e.stop && animationElements.splice(l--, 1);\\r\\n                } else {\\r\\n                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\\r\\n                }\\r\\n                if (time < 0) {\\r\\n                    continue;\\r\\n                }\\r\\n                if (time < ms) {\\r\\n                    var pos = easing(time / ms);\\r\\n                    for (var attr in from) if (from[has](attr)) {\\r\\n                        switch (availableAnimAttrs[attr]) {\\r\\n                            case nu:\\r\\n                                now = +from[attr] + pos * ms * diff[attr];\\r\\n                                break;\\r\\n                            case \\\"colour\\\":\\r\\n                                now = \\\"rgb(\\\" + [\\r\\n                                        upto255(round(from[attr].r + pos * ms * diff[attr].r)),\\r\\n                                        upto255(round(from[attr].g + pos * ms * diff[attr].g)),\\r\\n                                        upto255(round(from[attr].b + pos * ms * diff[attr].b))\\r\\n                                    ].join(\\\",\\\") + \\\")\\\";\\r\\n                                break;\\r\\n                            case \\\"path\\\":\\r\\n                                now = [];\\r\\n                                for (var i = 0, ii = from[attr].length; i < ii; i++) {\\r\\n                                    now[i] = [from[attr][i][0]];\\r\\n                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\\r\\n                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\\r\\n                                    }\\r\\n                                    now[i] = now[i].join(S);\\r\\n                                }\\r\\n                                now = now.join(S);\\r\\n                                break;\\r\\n                            case \\\"transform\\\":\\r\\n                                if (diff[attr].real) {\\r\\n                                    now = [];\\r\\n                                    for (i = 0, ii = from[attr].length; i < ii; i++) {\\r\\n                                        now[i] = [from[attr][i][0]];\\r\\n                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {\\r\\n                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\\r\\n                                        }\\r\\n                                    }\\r\\n                                } else {\\r\\n                                    var get = function (i) {\\r\\n                                        return +from[attr][i] + pos * ms * diff[attr][i];\\r\\n                                    };\\r\\n                                    // now = [[\\\"r\\\", get(2), 0, 0], [\\\"t\\\", get(3), get(4)], [\\\"s\\\", get(0), get(1), 0, 0]];\\r\\n                                    now = [[\\\"m\\\", get(0), get(1), get(2), get(3), get(4), get(5)]];\\r\\n                                }\\r\\n                                break;\\r\\n                            case \\\"csv\\\":\\r\\n                                if (attr == \\\"clip-rect\\\") {\\r\\n                                    now = [];\\r\\n                                    i = 4;\\r\\n                                    while (i--) {\\r\\n                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];\\r\\n                                    }\\r\\n                                }\\r\\n                                break;\\r\\n                            default:\\r\\n                                var from2 = [][concat](from[attr]);\\r\\n                                now = [];\\r\\n                                i = that.paper.customAttributes[attr].length;\\r\\n                                while (i--) {\\r\\n                                    now[i] = +from2[i] + pos * ms * diff[attr][i];\\r\\n                                }\\r\\n                                break;\\r\\n                        }\\r\\n                        set[attr] = now;\\r\\n                    }\\r\\n                    that.attr(set);\\r\\n                    (function (id, that, anim) {\\r\\n                        setTimeout(function () {\\r\\n                            eve(\\\"raphael.anim.frame.\\\" + id, that, anim);\\r\\n                        });\\r\\n                    })(that.id, that, e.anim);\\r\\n                } else {\\r\\n                    (function(f, el, a) {\\r\\n                        setTimeout(function() {\\r\\n                            eve(\\\"raphael.anim.frame.\\\" + el.id, el, a);\\r\\n                            eve(\\\"raphael.anim.finish.\\\" + el.id, el, a);\\r\\n                            R.is(f, \\\"function\\\") && f.call(el);\\r\\n                        });\\r\\n                    })(e.callback, that, e.anim);\\r\\n                    that.attr(to);\\r\\n                    animationElements.splice(l--, 1);\\r\\n                    if (e.repeat > 1 && !e.next) {\\r\\n                        for (key in to) if (to[has](key)) {\\r\\n                            init[key] = e.totalOrigin[key];\\r\\n                        }\\r\\n                        e.el.attr(init);\\r\\n                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\\r\\n                    }\\r\\n                    if (e.next && !e.stop) {\\r\\n                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            animationElements.length && requestAnimFrame(animation);\\r\\n        },\\r\\n        upto255 = function (color) {\\r\\n            return color > 255 ? 255 : color < 0 ? 0 : color;\\r\\n        };\\r\\n    /*\\\\\\r\\n     * Element.animateWith\\r\\n     [ method ]\\r\\n     **\\r\\n     * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - el (object) element to sync with\\r\\n     - anim (object) animation to sync with\\r\\n     - params (object) #optional final attributes for the element, see also @Element.attr\\r\\n     - ms (number) #optional number of milliseconds for animation to run\\r\\n     - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\r\\n     - callback (function) #optional callback function. Will be called at the end of animation.\\r\\n     * or\\r\\n     - element (object) element to sync with\\r\\n     - anim (object) animation to sync with\\r\\n     - animation (object) #optional animation object, see @Raphael.animation\\r\\n     **\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    elproto.animateWith = function (el, anim, params, ms, easing, callback) {\\r\\n        var element = this;\\r\\n        if (element.removed) {\\r\\n            callback && callback.call(element);\\r\\n            return element;\\r\\n        }\\r\\n        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\\r\\n            x, y;\\r\\n        runAnimation(a, element, a.percents[0], null, element.attr());\\r\\n        for (var i = 0, ii = animationElements.length; i < ii; i++) {\\r\\n            if (animationElements[i].anim == anim && animationElements[i].el == el) {\\r\\n                animationElements[ii - 1].start = animationElements[i].start;\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        return element;\\r\\n        //\\r\\n        //\\r\\n        // var a = params ? R.animation(params, ms, easing, callback) : anim,\\r\\n        //     status = element.status(anim);\\r\\n        // return this.animate(a).status(a, status * anim.ms / a.ms);\\r\\n    };\\r\\n    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\\r\\n        var cx = 3 * p1x,\\r\\n            bx = 3 * (p2x - p1x) - cx,\\r\\n            ax = 1 - cx - bx,\\r\\n            cy = 3 * p1y,\\r\\n            by = 3 * (p2y - p1y) - cy,\\r\\n            ay = 1 - cy - by;\\r\\n        function sampleCurveX(t) {\\r\\n            return ((ax * t + bx) * t + cx) * t;\\r\\n        }\\r\\n        function solve(x, epsilon) {\\r\\n            var t = solveCurveX(x, epsilon);\\r\\n            return ((ay * t + by) * t + cy) * t;\\r\\n        }\\r\\n        function solveCurveX(x, epsilon) {\\r\\n            var t0, t1, t2, x2, d2, i;\\r\\n            for(t2 = x, i = 0; i < 8; i++) {\\r\\n                x2 = sampleCurveX(t2) - x;\\r\\n                if (abs(x2) < epsilon) {\\r\\n                    return t2;\\r\\n                }\\r\\n                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\\r\\n                if (abs(d2) < 1e-6) {\\r\\n                    break;\\r\\n                }\\r\\n                t2 = t2 - x2 / d2;\\r\\n            }\\r\\n            t0 = 0;\\r\\n            t1 = 1;\\r\\n            t2 = x;\\r\\n            if (t2 < t0) {\\r\\n                return t0;\\r\\n            }\\r\\n            if (t2 > t1) {\\r\\n                return t1;\\r\\n            }\\r\\n            while (t0 < t1) {\\r\\n                x2 = sampleCurveX(t2);\\r\\n                if (abs(x2 - x) < epsilon) {\\r\\n                    return t2;\\r\\n                }\\r\\n                if (x > x2) {\\r\\n                    t0 = t2;\\r\\n                } else {\\r\\n                    t1 = t2;\\r\\n                }\\r\\n                t2 = (t1 - t0) / 2 + t0;\\r\\n            }\\r\\n            return t2;\\r\\n        }\\r\\n        return solve(t, 1 / (200 * duration));\\r\\n    }\\r\\n    elproto.onAnimation = function (f) {\\r\\n        f ? eve.on(\\\"raphael.anim.frame.\\\" + this.id, f) : eve.unbind(\\\"raphael.anim.frame.\\\" + this.id);\\r\\n        return this;\\r\\n    };\\r\\n    function Animation(anim, ms) {\\r\\n        var percents = [],\\r\\n            newAnim = {};\\r\\n        this.ms = ms;\\r\\n        this.times = 1;\\r\\n        if (anim) {\\r\\n            for (var attr in anim) if (anim[has](attr)) {\\r\\n                newAnim[toFloat(attr)] = anim[attr];\\r\\n                percents.push(toFloat(attr));\\r\\n            }\\r\\n            percents.sort(sortByNumber);\\r\\n        }\\r\\n        this.anim = newAnim;\\r\\n        this.top = percents[percents.length - 1];\\r\\n        this.percents = percents;\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Animation.delay\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates a copy of existing animation object with given delay.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - delay (number) number of ms to pass between animation start and actual animation\\r\\n     **\\r\\n     = (object) new altered Animation object\\r\\n     | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\\r\\n     | circle1.animate(anim); // run the given animation immediately\\r\\n     | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\\r\\n     \\\\*/\\r\\n    Animation.prototype.delay = function (delay) {\\r\\n        var a = new Animation(this.anim, this.ms);\\r\\n        a.times = this.times;\\r\\n        a.del = +delay || 0;\\r\\n        return a;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Animation.repeat\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates a copy of existing animation object with given repetition.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\\r\\n     **\\r\\n     = (object) new altered Animation object\\r\\n     \\\\*/\\r\\n    Animation.prototype.repeat = function (times) {\\r\\n        var a = new Animation(this.anim, this.ms);\\r\\n        a.del = this.del;\\r\\n        a.times = math.floor(mmax(times, 0)) || 1;\\r\\n        return a;\\r\\n    };\\r\\n    function runAnimation(anim, element, percent, status, totalOrigin, times) {\\r\\n        percent = toFloat(percent);\\r\\n        var params,\\r\\n            isInAnim,\\r\\n            isInAnimSet,\\r\\n            percents = [],\\r\\n            next,\\r\\n            prev,\\r\\n            timestamp,\\r\\n            ms = anim.ms,\\r\\n            from = {},\\r\\n            to = {},\\r\\n            diff = {};\\r\\n        if (status) {\\r\\n            for (i = 0, ii = animationElements.length; i < ii; i++) {\\r\\n                var e = animationElements[i];\\r\\n                if (e.el.id == element.id && e.anim == anim) {\\r\\n                    if (e.percent != percent) {\\r\\n                        animationElements.splice(i, 1);\\r\\n                        isInAnimSet = 1;\\r\\n                    } else {\\r\\n                        isInAnim = e;\\r\\n                    }\\r\\n                    element.attr(e.totalOrigin);\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        } else {\\r\\n            status = +to; // NaN\\r\\n        }\\r\\n        for (var i = 0, ii = anim.percents.length; i < ii; i++) {\\r\\n            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\\r\\n                percent = anim.percents[i];\\r\\n                prev = anim.percents[i - 1] || 0;\\r\\n                ms = ms / anim.top * (percent - prev);\\r\\n                next = anim.percents[i + 1];\\r\\n                params = anim.anim[percent];\\r\\n                break;\\r\\n            } else if (status) {\\r\\n                element.attr(anim.anim[anim.percents[i]]);\\r\\n            }\\r\\n        }\\r\\n        if (!params) {\\r\\n            return;\\r\\n        }\\r\\n        if (!isInAnim) {\\r\\n            for (var attr in params) if (params[has](attr)) {\\r\\n                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\\r\\n                    from[attr] = element.attr(attr);\\r\\n                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);\\r\\n                    to[attr] = params[attr];\\r\\n                    switch (availableAnimAttrs[attr]) {\\r\\n                        case nu:\\r\\n                            diff[attr] = (to[attr] - from[attr]) / ms;\\r\\n                            break;\\r\\n                        case \\\"colour\\\":\\r\\n                            from[attr] = R.getRGB(from[attr]);\\r\\n                            var toColour = R.getRGB(to[attr]);\\r\\n                            diff[attr] = {\\r\\n                                r: (toColour.r - from[attr].r) / ms,\\r\\n                                g: (toColour.g - from[attr].g) / ms,\\r\\n                                b: (toColour.b - from[attr].b) / ms\\r\\n                            };\\r\\n                            break;\\r\\n                        case \\\"path\\\":\\r\\n                            var pathes = path2curve(from[attr], to[attr]),\\r\\n                                toPath = pathes[1];\\r\\n                            from[attr] = pathes[0];\\r\\n                            diff[attr] = [];\\r\\n                            for (i = 0, ii = from[attr].length; i < ii; i++) {\\r\\n                                diff[attr][i] = [0];\\r\\n                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\\r\\n                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\\r\\n                                }\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"transform\\\":\\r\\n                            var _ = element._,\\r\\n                                eq = equaliseTransform(_[attr], to[attr]);\\r\\n                            if (eq) {\\r\\n                                from[attr] = eq.from;\\r\\n                                to[attr] = eq.to;\\r\\n                                diff[attr] = [];\\r\\n                                diff[attr].real = true;\\r\\n                                for (i = 0, ii = from[attr].length; i < ii; i++) {\\r\\n                                    diff[attr][i] = [from[attr][i][0]];\\r\\n                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\\r\\n                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\\r\\n                                    }\\r\\n                                }\\r\\n                            } else {\\r\\n                                var m = (element.matrix || new Matrix),\\r\\n                                    to2 = {\\r\\n                                        _: {transform: _.transform},\\r\\n                                        getBBox: function () {\\r\\n                                            return element.getBBox(1);\\r\\n                                        }\\r\\n                                    };\\r\\n                                from[attr] = [\\r\\n                                    m.a,\\r\\n                                    m.b,\\r\\n                                    m.c,\\r\\n                                    m.d,\\r\\n                                    m.e,\\r\\n                                    m.f\\r\\n                                ];\\r\\n                                extractTransform(to2, to[attr]);\\r\\n                                to[attr] = to2._.transform;\\r\\n                                diff[attr] = [\\r\\n                                    (to2.matrix.a - m.a) / ms,\\r\\n                                    (to2.matrix.b - m.b) / ms,\\r\\n                                    (to2.matrix.c - m.c) / ms,\\r\\n                                    (to2.matrix.d - m.d) / ms,\\r\\n                                    (to2.matrix.e - m.e) / ms,\\r\\n                                    (to2.matrix.f - m.f) / ms\\r\\n                                ];\\r\\n                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\\r\\n                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\\r\\n                                // extractTransform(to2, to[attr]);\\r\\n                                // diff[attr] = [\\r\\n                                //     (to2._.sx - _.sx) / ms,\\r\\n                                //     (to2._.sy - _.sy) / ms,\\r\\n                                //     (to2._.deg - _.deg) / ms,\\r\\n                                //     (to2._.dx - _.dx) / ms,\\r\\n                                //     (to2._.dy - _.dy) / ms\\r\\n                                // ];\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"csv\\\":\\r\\n                            var values = Str(params[attr])[split](separator),\\r\\n                                from2 = Str(from[attr])[split](separator);\\r\\n                            if (attr == \\\"clip-rect\\\") {\\r\\n                                from[attr] = from2;\\r\\n                                diff[attr] = [];\\r\\n                                i = from2.length;\\r\\n                                while (i--) {\\r\\n                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;\\r\\n                                }\\r\\n                            }\\r\\n                            to[attr] = values;\\r\\n                            break;\\r\\n                        default:\\r\\n                            values = [][concat](params[attr]);\\r\\n                            from2 = [][concat](from[attr]);\\r\\n                            diff[attr] = [];\\r\\n                            i = element.paper.customAttributes[attr].length;\\r\\n                            while (i--) {\\r\\n                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\\r\\n                            }\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            var easing = params.easing,\\r\\n                easyeasy = R.easing_formulas[easing];\\r\\n            if (!easyeasy) {\\r\\n                easyeasy = Str(easing).match(bezierrg);\\r\\n                if (easyeasy && easyeasy.length == 5) {\\r\\n                    var curve = easyeasy;\\r\\n                    easyeasy = function (t) {\\r\\n                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\\r\\n                    };\\r\\n                } else {\\r\\n                    easyeasy = pipe;\\r\\n                }\\r\\n            }\\r\\n            timestamp = params.start || anim.start || +new Date;\\r\\n            e = {\\r\\n                anim: anim,\\r\\n                percent: percent,\\r\\n                timestamp: timestamp,\\r\\n                start: timestamp + (anim.del || 0),\\r\\n                status: 0,\\r\\n                initstatus: status || 0,\\r\\n                stop: false,\\r\\n                ms: ms,\\r\\n                easing: easyeasy,\\r\\n                from: from,\\r\\n                diff: diff,\\r\\n                to: to,\\r\\n                el: element,\\r\\n                callback: params.callback,\\r\\n                prev: prev,\\r\\n                next: next,\\r\\n                repeat: times || anim.times,\\r\\n                origin: element.attr(),\\r\\n                totalOrigin: totalOrigin\\r\\n            };\\r\\n            animationElements.push(e);\\r\\n            if (status && !isInAnim && !isInAnimSet) {\\r\\n                e.stop = true;\\r\\n                e.start = new Date - ms * status;\\r\\n                if (animationElements.length == 1) {\\r\\n                    return animation();\\r\\n                }\\r\\n            }\\r\\n            if (isInAnimSet) {\\r\\n                e.start = new Date - e.ms * status;\\r\\n            }\\r\\n            animationElements.length == 1 && requestAnimFrame(animation);\\r\\n        } else {\\r\\n            isInAnim.initstatus = status;\\r\\n            isInAnim.start = new Date - isInAnim.ms * status;\\r\\n        }\\r\\n        eve(\\\"raphael.anim.start.\\\" + element.id, element, anim);\\r\\n    }\\r\\n    /*\\\\\\r\\n     * Raphael.animation\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\\r\\n     * See also @Animation.delay and @Animation.repeat methods.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - params (object) final attributes for the element, see also @Element.attr\\r\\n     - ms (number) number of milliseconds for animation to run\\r\\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\r\\n     - callback (function) #optional callback function. Will be called at the end of animation.\\r\\n     **\\r\\n     = (object) @Animation\\r\\n     \\\\*/\\r\\n    R.animation = function (params, ms, easing, callback) {\\r\\n        if (params instanceof Animation) {\\r\\n            return params;\\r\\n        }\\r\\n        if (R.is(easing, \\\"function\\\") || !easing) {\\r\\n            callback = callback || easing || null;\\r\\n            easing = null;\\r\\n        }\\r\\n        params = Object(params);\\r\\n        ms = +ms || 0;\\r\\n        var p = {},\\r\\n            json,\\r\\n            attr;\\r\\n        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \\\"%\\\" != attr) {\\r\\n            json = true;\\r\\n            p[attr] = params[attr];\\r\\n        }\\r\\n        if (!json) {\\r\\n            // if percent-like syntax is used and end-of-all animation callback used\\r\\n            if(callback){\\r\\n                // find the last one\\r\\n                var lastKey = 0;\\r\\n                for(var i in params){\\r\\n                    var percent = toInt(i);\\r\\n                    if(params[has](i) && percent > lastKey){\\r\\n                        lastKey = percent;\\r\\n                    }\\r\\n                }\\r\\n                lastKey += '%';\\r\\n                // if already defined callback in the last keyframe, skip\\r\\n                !params[lastKey].callback && (params[lastKey].callback = callback);\\r\\n            }\\r\\n            return new Animation(params, ms);\\r\\n        } else {\\r\\n            easing && (p.easing = easing);\\r\\n            callback && (p.callback = callback);\\r\\n            return new Animation({100: p}, ms);\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.animate\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates and starts animation for given element.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - params (object) final attributes for the element, see also @Element.attr\\r\\n     - ms (number) number of milliseconds for animation to run\\r\\n     - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\r\\n     - callback (function) #optional callback function. Will be called at the end of animation.\\r\\n     * or\\r\\n     - animation (object) animation object, see @Raphael.animation\\r\\n     **\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    elproto.animate = function (params, ms, easing, callback) {\\r\\n        var element = this;\\r\\n        if (element.removed) {\\r\\n            callback && callback.call(element);\\r\\n            return element;\\r\\n        }\\r\\n        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\\r\\n        runAnimation(anim, element, anim.percents[0], null, element.attr());\\r\\n        return element;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.setTime\\r\\n     [ method ]\\r\\n     **\\r\\n     * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - anim (object) animation object\\r\\n     - value (number) number of milliseconds from the beginning of the animation\\r\\n     **\\r\\n     = (object) original element if `value` is specified\\r\\n     * Note, that during animation following events are triggered:\\r\\n     *\\r\\n     * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\\r\\n     \\\\*/\\r\\n    elproto.setTime = function (anim, value) {\\r\\n        if (anim && value != null) {\\r\\n            this.status(anim, mmin(value, anim.ms) / anim.ms);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.status\\r\\n     [ method ]\\r\\n     **\\r\\n     * Gets or sets the status of animation of the element.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - anim (object) #optional animation object\\r\\n     - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\\r\\n     **\\r\\n     = (number) status\\r\\n     * or\\r\\n     = (array) status if `anim` is not specified. Array of objects in format:\\r\\n     o {\\r\\n     o     anim: (object) animation object\\r\\n     o     status: (number) status\\r\\n     o }\\r\\n     * or\\r\\n     = (object) original element if `value` is specified\\r\\n     \\\\*/\\r\\n    elproto.status = function (anim, value) {\\r\\n        var out = [],\\r\\n            i = 0,\\r\\n            len,\\r\\n            e;\\r\\n        if (value != null) {\\r\\n            runAnimation(anim, this, -1, mmin(value, 1));\\r\\n            return this;\\r\\n        } else {\\r\\n            len = animationElements.length;\\r\\n            for (; i < len; i++) {\\r\\n                e = animationElements[i];\\r\\n                if (e.el.id == this.id && (!anim || e.anim == anim)) {\\r\\n                    if (anim) {\\r\\n                        return e.status;\\r\\n                    }\\r\\n                    out.push({\\r\\n                        anim: e.anim,\\r\\n                        status: e.status\\r\\n                    });\\r\\n                }\\r\\n            }\\r\\n            if (anim) {\\r\\n                return 0;\\r\\n            }\\r\\n            return out;\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.pause\\r\\n     [ method ]\\r\\n     **\\r\\n     * Stops animation of the element with ability to resume it later on.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - anim (object) #optional animation object\\r\\n     **\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    elproto.pause = function (anim) {\\r\\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\r\\n            if (eve(\\\"raphael.anim.pause.\\\" + this.id, this, animationElements[i].anim) !== false) {\\r\\n                animationElements[i].paused = true;\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.resume\\r\\n     [ method ]\\r\\n     **\\r\\n     * Resumes animation if it was paused with @Element.pause method.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - anim (object) #optional animation object\\r\\n     **\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    elproto.resume = function (anim) {\\r\\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\r\\n            var e = animationElements[i];\\r\\n            if (eve(\\\"raphael.anim.resume.\\\" + this.id, this, e.anim) !== false) {\\r\\n                delete e.paused;\\r\\n                this.status(e.anim, e.status);\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.stop\\r\\n     [ method ]\\r\\n     **\\r\\n     * Stops animation of the element.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - anim (object) #optional animation object\\r\\n     **\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    elproto.stop = function (anim) {\\r\\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\r\\n            if (eve(\\\"raphael.anim.stop.\\\" + this.id, this, animationElements[i].anim) !== false) {\\r\\n                animationElements.splice(i--, 1);\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    function stopAnimation(paper) {\\r\\n        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\\r\\n            animationElements.splice(i--, 1);\\r\\n        }\\r\\n    }\\r\\n    eve.on(\\\"raphael.remove\\\", stopAnimation);\\r\\n    eve.on(\\\"raphael.clear\\\", stopAnimation);\\r\\n    elproto.toString = function () {\\r\\n        return \\\"Rapha\\\\xebl\\\\u2019s object\\\";\\r\\n    };\\r\\n\\r\\n    // Set\\r\\n    var Set = function (items) {\\r\\n            this.items = [];\\r\\n            this.length = 0;\\r\\n            this.type = \\\"set\\\";\\r\\n            if (items) {\\r\\n                for (var i = 0, ii = items.length; i < ii; i++) {\\r\\n                    if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\\r\\n                        this[this.items.length] = this.items[this.items.length] = items[i];\\r\\n                        this.length++;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        setproto = Set.prototype;\\r\\n    /*\\\\\\r\\n     * Set.push\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds each argument to the current set.\\r\\n     = (object) original element\\r\\n     \\\\*/\\r\\n    setproto.push = function () {\\r\\n        var item,\\r\\n            len;\\r\\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\\r\\n            item = arguments[i];\\r\\n            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\\r\\n                len = this.items.length;\\r\\n                this[len] = this.items[len] = item;\\r\\n                this.length++;\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Set.pop\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes last element and returns it.\\r\\n     = (object) element\\r\\n     \\\\*/\\r\\n    setproto.pop = function () {\\r\\n        this.length && delete this[this.length--];\\r\\n        return this.items.pop();\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Set.forEach\\r\\n     [ method ]\\r\\n     **\\r\\n     * Executes given function for each element in the set.\\r\\n     *\\r\\n     * If function returns `false` it will stop loop running.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - callback (function) function to run\\r\\n     - thisArg (object) context object for the callback\\r\\n     = (object) Set object\\r\\n     \\\\*/\\r\\n    setproto.forEach = function (callback, thisArg) {\\r\\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\\r\\n            if (callback.call(thisArg, this.items[i], i) === false) {\\r\\n                return this;\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    for (var method in elproto) if (elproto[has](method)) {\\r\\n        setproto[method] = (function (methodname) {\\r\\n            return function () {\\r\\n                var arg = arguments;\\r\\n                return this.forEach(function (el) {\\r\\n                    el[methodname][apply](el, arg);\\r\\n                });\\r\\n            };\\r\\n        })(method);\\r\\n    }\\r\\n    setproto.attr = function (name, value) {\\r\\n        if (name && R.is(name, array) && R.is(name[0], \\\"object\\\")) {\\r\\n            for (var j = 0, jj = name.length; j < jj; j++) {\\r\\n                this.items[j].attr(name[j]);\\r\\n            }\\r\\n        } else {\\r\\n            for (var i = 0, ii = this.items.length; i < ii; i++) {\\r\\n                this.items[i].attr(name, value);\\r\\n            }\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Set.clear\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes all elements from the set\\r\\n     \\\\*/\\r\\n    setproto.clear = function () {\\r\\n        while (this.length) {\\r\\n            this.pop();\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Set.splice\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes given element from the set\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - index (number) position of the deletion\\r\\n     - count (number) number of element to remove\\r\\n     - insertion… (object) #optional elements to insert\\r\\n     = (object) set elements that were deleted\\r\\n     \\\\*/\\r\\n    setproto.splice = function (index, count, insertion) {\\r\\n        index = index < 0 ? mmax(this.length + index, 0) : index;\\r\\n        count = mmax(0, mmin(this.length - index, count));\\r\\n        var tail = [],\\r\\n            todel = [],\\r\\n            args = [],\\r\\n            i;\\r\\n        for (i = 2; i < arguments.length; i++) {\\r\\n            args.push(arguments[i]);\\r\\n        }\\r\\n        for (i = 0; i < count; i++) {\\r\\n            todel.push(this[index + i]);\\r\\n        }\\r\\n        for (; i < this.length - index; i++) {\\r\\n            tail.push(this[index + i]);\\r\\n        }\\r\\n        var arglen = args.length;\\r\\n        for (i = 0; i < arglen + tail.length; i++) {\\r\\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\\r\\n        }\\r\\n        i = this.items.length = this.length -= count - arglen;\\r\\n        while (this[i]) {\\r\\n            delete this[i++];\\r\\n        }\\r\\n        return new Set(todel);\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Set.exclude\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes given element from the set\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - element (object) element to remove\\r\\n     = (boolean) `true` if object was found & removed from the set\\r\\n     \\\\*/\\r\\n    setproto.exclude = function (el) {\\r\\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\\r\\n            this.splice(i, 1);\\r\\n            return true;\\r\\n        }\\r\\n    };\\r\\n    setproto.animate = function (params, ms, easing, callback) {\\r\\n        (R.is(easing, \\\"function\\\") || !easing) && (callback = easing || null);\\r\\n        var len = this.items.length,\\r\\n            i = len,\\r\\n            item,\\r\\n            set = this,\\r\\n            collector;\\r\\n        if (!len) {\\r\\n            return this;\\r\\n        }\\r\\n        callback && (collector = function () {\\r\\n            !--len && callback.call(set);\\r\\n        });\\r\\n        easing = R.is(easing, string) ? easing : collector;\\r\\n        var anim = R.animation(params, ms, easing, collector);\\r\\n        item = this.items[--i].animate(anim);\\r\\n        while (i--) {\\r\\n            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\\r\\n            (this.items[i] && !this.items[i].removed) || len--;\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    setproto.insertAfter = function (el) {\\r\\n        var i = this.items.length;\\r\\n        while (i--) {\\r\\n            this.items[i].insertAfter(el);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n\\r\\n    // FREEGROUP Fix: RaphaelJS changes the order of the elements of the 'set' by calling the toBack method.\\r\\n    //                \\\"toBack\\\" must be called reverse to care about the rendering order. In this case we override\\r\\n    //                the buggy default implementation here.\\r\\n    //\\r\\n    setproto.toBack = function () {\\r\\n        var i = this.items.length;\\r\\n        while (i--) {\\r\\n            this.items[i].toBack();\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n\\r\\n    // FREEGROUP Fix: Unfortunately raphael didn'T expose the \\\"set.prototype\\\". In this case\\r\\n    //                I must add all extension to the raphael implementation itself.\\r\\n    //                Provide support method for easy check if the elements are visible.\\r\\n    setproto.isVisible = function () {\\r\\n        var i = this.items.length;\\r\\n        var visible = false;\\r\\n        while (i--) {\\r\\n            visible = visible ||this.items[i].isVisible();\\r\\n        }\\r\\n        return visible;\\r\\n    };\\r\\n\\r\\n\\r\\n    // FREEGROUP FIX: Adding \\\"isWithoutTransform\\\" to the function and redirect them to the elements\\r\\n    setproto.getBBox = function (isWithoutTransform) {\\r\\n        var x = [],\\r\\n            y = [],\\r\\n            x2 = [],\\r\\n            y2 = [];\\r\\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\\r\\n            var box = this.items[i].getBBox(isWithoutTransform);\\r\\n            x.push(box.x);\\r\\n            y.push(box.y);\\r\\n            x2.push(box.x + box.width);\\r\\n            y2.push(box.y + box.height);\\r\\n        }\\r\\n        x = mmin[apply](0, x);\\r\\n        y = mmin[apply](0, y);\\r\\n        x2 = mmax[apply](0, x2);\\r\\n        y2 = mmax[apply](0, y2);\\r\\n        return {\\r\\n            x: x,\\r\\n            y: y,\\r\\n            x2: x2,\\r\\n            y2: y2,\\r\\n            width: x2 - x,\\r\\n            height: y2 - y\\r\\n        };\\r\\n    };\\r\\n    setproto.clone = function (s) {\\r\\n        s = this.paper.set();\\r\\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\\r\\n            s.push(this.items[i].clone());\\r\\n        }\\r\\n        return s;\\r\\n    };\\r\\n    setproto.toString = function () {\\r\\n        return \\\"Rapha\\\\xebl\\\\u2018s set\\\";\\r\\n    };\\r\\n\\r\\n    setproto.glow = function(glowConfig) {\\r\\n        var ret = this.paper.set();\\r\\n        this.forEach(function(shape, index){\\r\\n            var g = shape.glow(glowConfig);\\r\\n            if(g != null){\\r\\n                g.forEach(function(shape2, index2){\\r\\n                    ret.push(shape2);\\r\\n                });\\r\\n            }\\r\\n        });\\r\\n        return ret;\\r\\n    };\\r\\n\\r\\n\\r\\n    /*\\\\\\r\\n     * Set.isPointInside\\r\\n     [ method ]\\r\\n     **\\r\\n     * Determine if given point is inside this set’s elements\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x coordinate of the point\\r\\n     - y (number) y coordinate of the point\\r\\n     = (boolean) `true` if point is inside any of the set's elements\\r\\n     \\\\*/\\r\\n    setproto.isPointInside = function (x, y) {\\r\\n        var isPointInside = false;\\r\\n        this.forEach(function (el) {\\r\\n            if (el.isPointInside(x, y)) {\\r\\n                isPointInside = true;\\r\\n                return false; // stop loop\\r\\n            }\\r\\n        });\\r\\n        return isPointInside;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.registerFont\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\\r\\n     * Returns original parameter, so it could be used with chaining.\\r\\n     # <a href=\\\"http://wiki.github.com/sorccu/cufon/about\\\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - font (object) the font to register\\r\\n     = (object) the font you passed in\\r\\n     > Usage\\r\\n     | Cufon.registerFont(Raphael.registerFont({…}));\\r\\n     \\\\*/\\r\\n    R.registerFont = function (font) {\\r\\n        if (!font.face) {\\r\\n            return font;\\r\\n        }\\r\\n        this.fonts = this.fonts || {};\\r\\n        var fontcopy = {\\r\\n                w: font.w,\\r\\n                face: {},\\r\\n                glyphs: {}\\r\\n            },\\r\\n            family = font.face[\\\"font-family\\\"];\\r\\n        for (var prop in font.face) if (font.face[has](prop)) {\\r\\n            fontcopy.face[prop] = font.face[prop];\\r\\n        }\\r\\n        if (this.fonts[family]) {\\r\\n            this.fonts[family].push(fontcopy);\\r\\n        } else {\\r\\n            this.fonts[family] = [fontcopy];\\r\\n        }\\r\\n        if (!font.svg) {\\r\\n            fontcopy.face[\\\"units-per-em\\\"] = toInt(font.face[\\\"units-per-em\\\"], 10);\\r\\n            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\\r\\n                var path = font.glyphs[glyph];\\r\\n                fontcopy.glyphs[glyph] = {\\r\\n                    w: path.w,\\r\\n                    k: {},\\r\\n                    d: path.d && \\\"M\\\" + path.d.replace(/[mlcxtrv]/g, function (command) {\\r\\n                        return {l: \\\"L\\\", c: \\\"C\\\", x: \\\"z\\\", t: \\\"m\\\", r: \\\"l\\\", v: \\\"c\\\"}[command] || \\\"M\\\";\\r\\n                    }) + \\\"z\\\"\\r\\n                };\\r\\n                if (path.k) {\\r\\n                    for (var k in path.k) if (path[has](k)) {\\r\\n                        fontcopy.glyphs[glyph].k[k] = path.k[k];\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return font;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.getFont\\r\\n     [ method ]\\r\\n     **\\r\\n     * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - family (string) font family name or any word from it\\r\\n     - weight (string) #optional font weight\\r\\n     - style (string) #optional font style\\r\\n     - stretch (string) #optional font stretch\\r\\n     = (object) the font object\\r\\n     > Usage\\r\\n     | paper.print(100, 100, \\\"Test string\\\", paper.getFont(\\\"Times\\\", 800), 30);\\r\\n     \\\\*/\\r\\n    paperproto.getFont = function (family, weight, style, stretch) {\\r\\n        stretch = stretch || \\\"normal\\\";\\r\\n        style = style || \\\"normal\\\";\\r\\n        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\\r\\n        if (!R.fonts) {\\r\\n            return;\\r\\n        }\\r\\n        var font = R.fonts[family];\\r\\n        if (!font) {\\r\\n            var name = new RegExp(\\\"(^|\\\\\\\\s)\\\" + family.replace(/[^\\\\w\\\\d\\\\s+!~.:_-]/g, E) + \\\"(\\\\\\\\s|$)\\\", \\\"i\\\");\\r\\n            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\\r\\n                if (name.test(fontName)) {\\r\\n                    font = R.fonts[fontName];\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        var thefont;\\r\\n        if (font) {\\r\\n            for (var i = 0, ii = font.length; i < ii; i++) {\\r\\n                thefont = font[i];\\r\\n                if (thefont.face[\\\"font-weight\\\"] == weight && (thefont.face[\\\"font-style\\\"] == style || !thefont.face[\\\"font-style\\\"]) && thefont.face[\\\"font-stretch\\\"] == stretch) {\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return thefont;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.print\\r\\n     [ method ]\\r\\n     **\\r\\n     * Creates path that represent given text written using given font at given position with given size.\\r\\n     * Result of the method is path element that contains whole text as a separate path.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - x (number) x position of the text\\r\\n     - y (number) y position of the text\\r\\n     - string (string) text to print\\r\\n     - font (object) font object, see @Paper.getFont\\r\\n     - size (number) #optional size of the font, default is `16`\\r\\n     - origin (string) #optional could be `\\\"baseline\\\"` or `\\\"middle\\\"`, default is `\\\"middle\\\"`\\r\\n     - letter_spacing (number) #optional number in range `-1..1`, default is `0`\\r\\n     - line_spacing (number) #optional number in range `1..3`, default is `1`\\r\\n     = (object) resulting path element, which consist of all letters\\r\\n     > Usage\\r\\n     | var txt = r.print(10, 50, \\\"print\\\", r.getFont(\\\"Museo\\\"), 30).attr({fill: \\\"#fff\\\"});\\r\\n     \\\\*/\\r\\n    paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\\r\\n        origin = origin || \\\"middle\\\"; // baseline|middle\\r\\n        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\\r\\n        line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\\r\\n        var letters = Str(string)[split](E),\\r\\n            shift = 0,\\r\\n            notfirst = 0,\\r\\n            path = E,\\r\\n            scale;\\r\\n        R.is(font, \\\"string\\\") && (font = this.getFont(font));\\r\\n        if (font) {\\r\\n            scale = (size || 16) / font.face[\\\"units-per-em\\\"];\\r\\n            var bb = font.face.bbox[split](separator),\\r\\n                top = +bb[0],\\r\\n                lineHeight = bb[3] - bb[1],\\r\\n                shifty = 0,\\r\\n                height = +bb[1] + (origin == \\\"baseline\\\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\\r\\n            for (var i = 0, ii = letters.length; i < ii; i++) {\\r\\n                if (letters[i] == \\\"\\\\n\\\") {\\r\\n                    shift = 0;\\r\\n                    curr = 0;\\r\\n                    notfirst = 0;\\r\\n                    shifty += lineHeight * line_spacing;\\r\\n                } else {\\r\\n                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},\\r\\n                        curr = font.glyphs[letters[i]];\\r\\n                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\\r\\n                    notfirst = 1;\\r\\n                }\\r\\n                if (curr && curr.d) {\\r\\n                    path += R.transformPath(curr.d, [\\\"t\\\", shift * scale, shifty * scale, \\\"s\\\", scale, scale, top, height, \\\"t\\\", (x - top) / scale, (y - height) / scale]);\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n        return this.path(path).attr({\\r\\n            fill: \\\"#000\\\",\\r\\n            stroke: \\\"none\\\"\\r\\n        });\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Paper.add\\r\\n     [ method ]\\r\\n     **\\r\\n     * Imports elements in JSON array in format `{type: type, <attributes>}`\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - json (array)\\r\\n     = (object) resulting set of imported elements\\r\\n     > Usage\\r\\n     | paper.add([\\r\\n     |     {\\r\\n     |         type: \\\"circle\\\",\\r\\n     |         cx: 10,\\r\\n     |         cy: 10,\\r\\n     |         r: 5\\r\\n     |     },\\r\\n     |     {\\r\\n     |         type: \\\"rect\\\",\\r\\n     |         x: 10,\\r\\n     |         y: 10,\\r\\n     |         width: 10,\\r\\n     |         height: 10,\\r\\n     |         fill: \\\"#fc0\\\"\\r\\n     |     }\\r\\n     | ]);\\r\\n     \\\\*/\\r\\n    paperproto.add = function (json) {\\r\\n        if (R.is(json, \\\"array\\\")) {\\r\\n            var res = this.set(),\\r\\n                i = 0,\\r\\n                ii = json.length,\\r\\n                j;\\r\\n            for (; i < ii; i++) {\\r\\n                j = json[i] || {};\\r\\n                elements[has](j.type) && res.push(this[j.type]().attr(j));\\r\\n            }\\r\\n        }\\r\\n        return res;\\r\\n    };\\r\\n\\r\\n    /*\\\\\\r\\n     * Raphael.format\\r\\n     [ method ]\\r\\n     **\\r\\n     * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - token (string) string to format\\r\\n     - … (string) rest of arguments will be treated as parameters for replacement\\r\\n     = (string) formated string\\r\\n     > Usage\\r\\n     | var x = 10,\\r\\n     |     y = 20,\\r\\n     |     width = 40,\\r\\n     |     height = 50;\\r\\n     | // this will draw a rectangular shape equivalent to \\\"M10,20h40v50h-40z\\\"\\r\\n     | paper.path(Raphael.format(\\\"M{0},{1}h{2}v{3}h{4}z\\\", x, y, width, height, -width));\\r\\n     \\\\*/\\r\\n    R.format = function (token, params) {\\r\\n        var args = R.is(params, array) ? [0][concat](params) : arguments;\\r\\n        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\\r\\n            return args[++i] == null ? E : args[i];\\r\\n        }));\\r\\n        return token || E;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.fullfill\\r\\n     [ method ]\\r\\n     **\\r\\n     * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\\r\\n     **\\r\\n     > Parameters\\r\\n     **\\r\\n     - token (string) string to format\\r\\n     - json (object) object which properties will be used as a replacement\\r\\n     = (string) formated string\\r\\n     > Usage\\r\\n     | // this will draw a rectangular shape equivalent to \\\"M10,20h40v50h-40z\\\"\\r\\n     | paper.path(Raphael.fullfill(\\\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\\\", {\\r\\n     |     x: 10,\\r\\n     |     y: 20,\\r\\n     |     dim: {\\r\\n     |         width: 40,\\r\\n     |         height: 50,\\r\\n     |         \\\"negative width\\\": -40\\r\\n     |     }\\r\\n     | }));\\r\\n     \\\\*/\\r\\n    R.fullfill = (function () {\\r\\n        var tokenRegex = /\\\\{([^\\\\}]+)\\\\}/g,\\r\\n            objNotationRegex = /(?:(?:^|\\\\.)(.+?)(?=\\\\[|\\\\.|$|\\\\()|\\\\[('|\\\")(.+?)\\\\2\\\\])(\\\\(\\\\))?/g, // matches .xxxxx or [\\\"xxxxx\\\"] to run over object properties\\r\\n            replacer = function (all, key, obj) {\\r\\n                var res = obj;\\r\\n                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\\r\\n                    name = name || quotedName;\\r\\n                    if (res) {\\r\\n                        if (name in res) {\\r\\n                            res = res[name];\\r\\n                        }\\r\\n                        typeof res == \\\"function\\\" && isFunc && (res = res());\\r\\n                    }\\r\\n                });\\r\\n                res = (res == null || res == obj ? all : res) + \\\"\\\";\\r\\n                return res;\\r\\n            };\\r\\n        return function (str, obj) {\\r\\n            return String(str).replace(tokenRegex, function (all, key) {\\r\\n                return replacer(all, key, obj);\\r\\n            });\\r\\n        };\\r\\n    })();\\r\\n    /*\\\\\\r\\n     * Raphael.ninja\\r\\n     [ method ]\\r\\n     **\\r\\n     * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\\r\\n     * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\\r\\n     **\\r\\n     = (object) Raphael object\\r\\n     > Usage\\r\\n     | (function (local_raphael) {\\r\\n     |     var paper = local_raphael(10, 10, 320, 200);\\r\\n     |     …\\r\\n     | })(Raphael.ninja());\\r\\n     \\\\*/\\r\\n    R.ninja = function () {\\r\\n        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;\\r\\n        return R;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Raphael.st\\r\\n     [ property (object) ]\\r\\n     **\\r\\n     * You can add your own method to elements and sets. It is wise to add a set method for each element method\\r\\n     * you added, so you will be able to call the same method on sets too.\\r\\n     **\\r\\n     * See also @Raphael.el.\\r\\n     > Usage\\r\\n     | Raphael.el.red = function () {\\r\\n     |     this.attr({fill: \\\"#f00\\\"});\\r\\n     | };\\r\\n     | Raphael.st.red = function () {\\r\\n     |     this.forEach(function (el) {\\r\\n     |         el.red();\\r\\n     |     });\\r\\n     | };\\r\\n     | // then use it\\r\\n     | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\\r\\n     \\\\*/\\r\\n    R.st = setproto;\\r\\n\\r\\n    eve.on(\\\"raphael.DOMload\\\", function () {\\r\\n        loaded = true;\\r\\n    });\\r\\n\\r\\n    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\\r\\n    (function (doc, loaded, f) {\\r\\n        if (doc.readyState == null && doc.addEventListener){\\r\\n            doc.addEventListener(loaded, f = function () {\\r\\n                doc.removeEventListener(loaded, f, false);\\r\\n                doc.readyState = \\\"complete\\\";\\r\\n            }, false);\\r\\n            doc.readyState = \\\"loading\\\";\\r\\n        }\\r\\n        function isLoaded() {\\r\\n            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\\\"raphael.DOMload\\\");\\r\\n        }\\r\\n        isLoaded();\\r\\n    })(document, \\\"DOMContentLoaded\\\");\\r\\n\\r\\n    return R;\\r\\n}));\\r\\n\\r\\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Raphaël 2.1.4 - JavaScript Vector Library                       │ \\\\\\\\\\r\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ SVG Module                                                          │ \\\\\\\\\\r\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\\\\\\r\\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\\\\\\r\\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n(function (glob, factory) {\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"raphael.svg\\\", [\\\"raphael.core\\\"], function(raphael) {\\r\\n            return factory(raphael);\\r\\n        });\\r\\n    } else if (typeof exports === \\\"object\\\") {\\r\\n        factory(require(\\\"./raphael.core\\\"));\\r\\n    } else {\\r\\n        factory(glob.Raphael);\\r\\n    }\\r\\n}(this, function(R) {\\r\\n    if (R && !R.svg) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    var has = \\\"hasOwnProperty\\\",\\r\\n        Str = String,\\r\\n        toFloat = parseFloat,\\r\\n        toInt = parseInt,\\r\\n        math = Math,\\r\\n        mmax = math.max,\\r\\n        abs = math.abs,\\r\\n        pow = math.pow,\\r\\n        separator = /[, ]+/,\\r\\n        eve = R.eve,\\r\\n        E = \\\"\\\",\\r\\n        S = \\\" \\\";\\r\\n    var xlink = \\\"http://www.w3.org/1999/xlink\\\",\\r\\n        markers = {\\r\\n            block: \\\"M5,0 0,2.5 5,5z\\\",\\r\\n            classic: \\\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\\\",\\r\\n            diamond: \\\"M2.5,0 5,2.5 2.5,5 0,2.5z\\\",\\r\\n            open: \\\"M6,1 1,3.5 6,6\\\",\\r\\n            oval: \\\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\\\"\\r\\n        },\\r\\n        markerCounter = {};\\r\\n    R.toString = function () {\\r\\n        return  \\\"Your browser supports SVG.\\\\nYou are running Rapha\\\\xebl \\\" + this.version;\\r\\n    };\\r\\n    var $ = function (el, attr) {\\r\\n            if (attr) {\\r\\n                if (typeof el == \\\"string\\\") {\\r\\n                    el = $(el);\\r\\n                }\\r\\n                for (var key in attr) if (attr[has](key)) {\\r\\n                    if (key.substring(0, 6) == \\\"xlink:\\\") {\\r\\n                        el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\\r\\n                    } else {\\r\\n                      try {\\r\\n                        el.setAttribute(key, Str(attr[key]));\\r\\n                      }\\r\\n                      catch(e){\\r\\n                        debugger\\r\\n                      }\\r\\n                    }\\r\\n                }\\r\\n            } else {\\r\\n                el = R._g.doc.createElementNS(\\\"http://www.w3.org/2000/svg\\\", el);\\r\\n                el.style && (el.style.webkitTapHighlightColor = \\\"rgba(0,0,0,0)\\\");\\r\\n            }\\r\\n            return el;\\r\\n        },\\r\\n        addGradientFill = function (element, gradient) {\\r\\n            // even called if we reset the fill of an shape.\\r\\n            if (gradient === null)\\r\\n                return\\r\\n\\r\\n            var type = \\\"linear\\\",\\r\\n                id = gradient.replace(/[\\\\(\\\\)\\\\s,\\\\xb0#]/g, \\\"_\\\"),\\r\\n                fx = .5, fy = .5,\\r\\n                o = element.node,\\r\\n                SVG = element.paper,\\r\\n                s = o.style,\\r\\n                el = R._g.doc.getElementById(id);\\r\\n            if (!el) {\\r\\n                gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\\r\\n                    type = \\\"radial\\\";\\r\\n                    if (_fx && _fy) {\\r\\n                        fx = toFloat(_fx);\\r\\n                        fy = toFloat(_fy);\\r\\n                        var dir = ((fy > .5) * 2 - 1);\\r\\n                        pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\\r\\n                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\\r\\n                        fy != .5 &&\\r\\n                        (fy = fy.toFixed(5) - 1e-5 * dir);\\r\\n                    }\\r\\n                    return E;\\r\\n                });\\r\\n                gradient = gradient.split(/\\\\s*\\\\-\\\\s*/);\\r\\n                if (type == \\\"linear\\\") {\\r\\n                    var angle = gradient.shift();\\r\\n                    angle = -toFloat(angle);\\r\\n                    if (isNaN(angle)) {\\r\\n                        return null;\\r\\n                    }\\r\\n                    var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\\r\\n                        max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\\r\\n                    vector[2] *= max;\\r\\n                    vector[3] *= max;\\r\\n                    if (vector[2] < 0) {\\r\\n                        vector[0] = -vector[2];\\r\\n                        vector[2] = 0;\\r\\n                    }\\r\\n                    if (vector[3] < 0) {\\r\\n                        vector[1] = -vector[3];\\r\\n                        vector[3] = 0;\\r\\n                    }\\r\\n                }\\r\\n                var dots = R._parseDots(gradient);\\r\\n                if (!dots) {\\r\\n                    return null;\\r\\n                }\\r\\n                id = id.replace(/[\\\\(\\\\)\\\\s,\\\\xb0#]/g, \\\"_\\\");\\r\\n\\r\\n                if (element.gradient && id != element.gradient.id) {\\r\\n                    SVG.defs.removeChild(element.gradient);\\r\\n                    delete element.gradient;\\r\\n                }\\r\\n\\r\\n                if (!element.gradient) {\\r\\n                    el = $(type + \\\"Gradient\\\", {id: id});\\r\\n                    element.gradient = el;\\r\\n                    $(el, type == \\\"radial\\\" ? {\\r\\n                        fx: fx,\\r\\n                        fy: fy\\r\\n                    } : {\\r\\n                        x1: vector[0],\\r\\n                        y1: vector[1],\\r\\n                        x2: vector[2],\\r\\n                        y2: vector[3],\\r\\n                        gradientTransform: element.matrix.invert()\\r\\n                    });\\r\\n                    SVG.defs.appendChild(el);\\r\\n                    for (var i = 0, ii = dots.length; i < ii; i++) {\\r\\n                        el.appendChild($(\\\"stop\\\", {\\r\\n                            offset: dots[i].offset ? dots[i].offset : i ? \\\"100%\\\" : \\\"0%\\\",\\r\\n                            \\\"stop-color\\\": dots[i].color || \\\"#fff\\\",\\r\\n                            \\\"stop-opacity\\\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\\r\\n                        }));\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n            /* FREEGROUP: don't push URL parameter into the drawing. This will break Apps with \\\"?\\\" in the URL\\r\\n             * see: https://github.com/DmitryBaranovskiy/raphael/issues/693\\r\\n             **/\\r\\n            var url =\\\"\\\";//document.location.protocol + \\\"//\\\" + document.location.host  + document.location.pathname;\\r\\n            $(o, {\\r\\n                fill: \\\"url('\\\" + url + \\\"#\\\" + id + \\\"')\\\",\\r\\n                opacity: 1,\\r\\n                \\\"fill-opacity\\\": 1\\r\\n            });\\r\\n\\r\\n            s.fill = E;\\r\\n            s.opacity = 1;\\r\\n            s.fillOpacity = 1;\\r\\n            return 1;\\r\\n        },\\r\\n        updatePosition = function (o) {\\r\\n            var bbox = o.getBBox(1);\\r\\n            $(o.pattern, {patternTransform: o.matrix.invert() + \\\" translate(\\\" + bbox.x + \\\",\\\" + bbox.y + \\\")\\\"});\\r\\n        },\\r\\n        addArrow = function (o, value, isEnd) {\\r\\n            if (o.type == \\\"path\\\") {\\r\\n                var values = Str(value).toLowerCase().split(\\\"-\\\"),\\r\\n                    p = o.paper,\\r\\n                    se = isEnd ? \\\"end\\\" : \\\"start\\\",\\r\\n                    node = o.node,\\r\\n                    attrs = o.attrs,\\r\\n                    stroke = attrs[\\\"stroke-width\\\"],\\r\\n                    i = values.length,\\r\\n                    type = \\\"classic\\\",\\r\\n                    from,\\r\\n                    to,\\r\\n                    dx,\\r\\n                    refX,\\r\\n                    attr,\\r\\n                    w = 3,\\r\\n                    h = 3,\\r\\n                    t = 5;\\r\\n                while (i--) {\\r\\n                    switch (values[i]) {\\r\\n                        case \\\"block\\\":\\r\\n                        case \\\"classic\\\":\\r\\n                        case \\\"oval\\\":\\r\\n                        case \\\"diamond\\\":\\r\\n                        case \\\"open\\\":\\r\\n                        case \\\"none\\\":\\r\\n                            type = values[i];\\r\\n                            break;\\r\\n                        case \\\"wide\\\": h = 5; break;\\r\\n                        case \\\"narrow\\\": h = 2; break;\\r\\n                        case \\\"long\\\": w = 5; break;\\r\\n                        case \\\"short\\\": w = 2; break;\\r\\n                    }\\r\\n                }\\r\\n                if (type == \\\"open\\\") {\\r\\n                    w += 2;\\r\\n                    h += 2;\\r\\n                    t += 2;\\r\\n                    dx = 1;\\r\\n                    refX = isEnd ? 4 : 1;\\r\\n                    attr = {\\r\\n                        fill: \\\"none\\\",\\r\\n                        stroke: attrs.stroke\\r\\n                    };\\r\\n                } else {\\r\\n                    refX = dx = w / 2;\\r\\n                    attr = {\\r\\n                        fill: attrs.stroke,\\r\\n                        stroke: \\\"none\\\"\\r\\n                    };\\r\\n                }\\r\\n                if (o._.arrows) {\\r\\n                    if (isEnd) {\\r\\n                        o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\\r\\n                        o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\\r\\n                    } else {\\r\\n                        o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\\r\\n                        o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\\r\\n                    }\\r\\n                } else {\\r\\n                    o._.arrows = {};\\r\\n                }\\r\\n                if (type != \\\"none\\\") {\\r\\n                    var pathId = \\\"raphael-marker-\\\" + type,\\r\\n                        markerId = \\\"raphael-marker-\\\" + se + type + w + h + \\\"-obj\\\" + o.id;\\r\\n                    if (!R._g.doc.getElementById(pathId)) {\\r\\n                        p.defs.appendChild($($(\\\"path\\\"), {\\r\\n                            \\\"stroke-linecap\\\": \\\"round\\\",\\r\\n                            d: markers[type],\\r\\n                            id: pathId\\r\\n                        }));\\r\\n                        markerCounter[pathId] = 1;\\r\\n                    } else {\\r\\n                        markerCounter[pathId]++;\\r\\n                    }\\r\\n                    var marker = R._g.doc.getElementById(markerId),\\r\\n                        use;\\r\\n                    if (!marker) {\\r\\n                        marker = $($(\\\"marker\\\"), {\\r\\n                            id: markerId,\\r\\n                            markerHeight: h,\\r\\n                            markerWidth: w,\\r\\n                            orient: \\\"auto\\\",\\r\\n                            refX: refX,\\r\\n                            refY: h / 2\\r\\n                        });\\r\\n                        use = $($(\\\"use\\\"), {\\r\\n                            \\\"xlink:href\\\": \\\"#\\\" + pathId,\\r\\n                            transform: (isEnd ? \\\"rotate(180 \\\" + w / 2 + \\\" \\\" + h / 2 + \\\") \\\" : E) + \\\"scale(\\\" + w / t + \\\",\\\" + h / t + \\\")\\\",\\r\\n                            \\\"stroke-width\\\": (1 / ((w / t + h / t) / 2)).toFixed(4)\\r\\n                        });\\r\\n                        marker.appendChild(use);\\r\\n                        p.defs.appendChild(marker);\\r\\n                        markerCounter[markerId] = 1;\\r\\n                    } else {\\r\\n                        markerCounter[markerId]++;\\r\\n                        use = marker.getElementsByTagName(\\\"use\\\")[0];\\r\\n                    }\\r\\n                    $(use, attr);\\r\\n                    var delta = dx * (type != \\\"diamond\\\" && type != \\\"oval\\\");\\r\\n                    if (isEnd) {\\r\\n                        from = o._.arrows.startdx * stroke || 0;\\r\\n                        to = R.getTotalLength(attrs.path) - delta * stroke;\\r\\n                    } else {\\r\\n                        from = delta * stroke;\\r\\n                        to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\\r\\n                    }\\r\\n                    attr = {};\\r\\n                    attr[\\\"marker-\\\" + se] = \\\"url(#\\\" + markerId + \\\")\\\";\\r\\n                    if (to || from) {\\r\\n                        attr.d = R.getSubpath(attrs.path, from, to);\\r\\n                    }\\r\\n                    $(node, attr);\\r\\n                    o._.arrows[se + \\\"Path\\\"] = pathId;\\r\\n                    o._.arrows[se + \\\"Marker\\\"] = markerId;\\r\\n                    o._.arrows[se + \\\"dx\\\"] = delta;\\r\\n                    o._.arrows[se + \\\"Type\\\"] = type;\\r\\n                    o._.arrows[se + \\\"String\\\"] = value;\\r\\n                } else {\\r\\n                    if (isEnd) {\\r\\n                        from = o._.arrows.startdx * stroke || 0;\\r\\n                        to = R.getTotalLength(attrs.path) - from;\\r\\n                    } else {\\r\\n                        from = 0;\\r\\n                        to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\\r\\n                    }\\r\\n                    o._.arrows[se + \\\"Path\\\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\\r\\n                    delete o._.arrows[se + \\\"Path\\\"];\\r\\n                    delete o._.arrows[se + \\\"Marker\\\"];\\r\\n                    delete o._.arrows[se + \\\"dx\\\"];\\r\\n                    delete o._.arrows[se + \\\"Type\\\"];\\r\\n                    delete o._.arrows[se + \\\"String\\\"];\\r\\n                }\\r\\n                for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\\r\\n                    var item = R._g.doc.getElementById(attr);\\r\\n                    item && item.parentNode.removeChild(item);\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        dasharray = {\\r\\n            \\\"-\\\": [3, 1],\\r\\n            \\\".\\\": [1, 1],\\r\\n            \\\"-.\\\": [3, 1, 1, 1],\\r\\n            \\\"-..\\\": [3, 1, 1, 1, 1, 1],\\r\\n            \\\". \\\": [1, 3],\\r\\n            \\\"- \\\": [4, 3],\\r\\n            \\\"--\\\": [8, 3],\\r\\n            \\\"- .\\\": [4, 3, 1, 3],\\r\\n            \\\"--.\\\": [8, 3, 1, 3],\\r\\n            \\\"--..\\\": [8, 3, 1, 3, 1, 3]\\r\\n        },\\r\\n        addDashes = function (o, value, params) {\\r\\n            value = dasharray[Str(value).toLowerCase()];\\r\\n            if (value) {\\r\\n                var width = o.attrs[\\\"stroke-width\\\"] || \\\"1\\\",\\r\\n                    butt = {round: width, square: width, butt: 0}[o.attrs[\\\"stroke-linecap\\\"] || params[\\\"stroke-linecap\\\"]] || 0,\\r\\n                    dashes = [],\\r\\n                    i = value.length;\\r\\n                while (i--) {\\r\\n                    dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\\r\\n                }\\r\\n                $(o.node, {\\\"stroke-dasharray\\\": dashes.join(\\\",\\\")});\\r\\n            }\\r\\n            else {\\r\\n                $(o.node, {\\\"stroke-dasharray\\\": \\\"none\\\"});\\r\\n            }\\r\\n        },\\r\\n        setFillAndStroke = function (o, params) {\\r\\n            var node = o.node,\\r\\n                attrs = o.attrs,\\r\\n                vis = node.style.visibility;\\r\\n            node.style.visibility = \\\"hidden\\\";\\r\\n            for (var att in params) {\\r\\n                if (params[has](att)) {\\r\\n                    if (!R._availableAttrs[has](att)) {\\r\\n                        continue;\\r\\n                    }\\r\\n                    var value = params[att];\\r\\n                    attrs[att] = value;\\r\\n                    switch (att) {\\r\\n                        case \\\"blur\\\":\\r\\n                            o.blur(value);\\r\\n                            break;\\r\\n                        case \\\"title\\\":\\r\\n                            var title = node.getElementsByTagName(\\\"title\\\");\\r\\n\\r\\n                            // Use the existing <title>.\\r\\n                            if (title.length && (title = title[0])) {\\r\\n                                title.firstChild.nodeValue = value;\\r\\n                            } else {\\r\\n                                title = $(\\\"title\\\");\\r\\n                                var val = R._g.doc.createTextNode(value);\\r\\n                                title.appendChild(val);\\r\\n                                node.appendChild(title);\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"href\\\":\\r\\n                        case \\\"target\\\":\\r\\n                            var pn = node.parentNode;\\r\\n                            if (pn.tagName.toLowerCase() != \\\"a\\\") {\\r\\n                                var hl = $(\\\"a\\\");\\r\\n                                pn.insertBefore(hl, node);\\r\\n                                hl.appendChild(node);\\r\\n                                pn = hl;\\r\\n                            }\\r\\n                            if (att == \\\"target\\\") {\\r\\n                                pn.setAttributeNS(xlink, \\\"show\\\", value == \\\"blank\\\" ? \\\"new\\\" : value);\\r\\n                            } else {\\r\\n                                pn.setAttributeNS(xlink, att, value);\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"cursor\\\":\\r\\n                            node.style.cursor = value;\\r\\n                            break;\\r\\n                        case \\\"transform\\\":\\r\\n                            o.transform(value);\\r\\n                            break;\\r\\n                        case \\\"arrow-start\\\":\\r\\n                            addArrow(o, value);\\r\\n                            break;\\r\\n                        case \\\"arrow-end\\\":\\r\\n                            addArrow(o, value, 1);\\r\\n                            break;\\r\\n                        case \\\"clip-rect\\\":\\r\\n                            var rect = Str(value).split(separator);\\r\\n                            if (rect.length == 4) {\\r\\n                                o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\\r\\n                                var el = $(\\\"clipPath\\\"),\\r\\n                                    rc = $(\\\"rect\\\");\\r\\n                                el.id = R.createUUID();\\r\\n                                $(rc, {\\r\\n                                    x: rect[0],\\r\\n                                    y: rect[1],\\r\\n                                    width: rect[2],\\r\\n                                    height: rect[3]\\r\\n                                });\\r\\n                                el.appendChild(rc);\\r\\n                                o.paper.defs.appendChild(el);\\r\\n                                $(node, {\\\"clip-path\\\": \\\"url(#\\\" + el.id + \\\")\\\"});\\r\\n                                o.clip = rc;\\r\\n                            }\\r\\n                            if (!value) {\\r\\n                                var path = node.getAttribute(\\\"clip-path\\\");\\r\\n                                if (path) {\\r\\n                                    var clip = R._g.doc.getElementById(path.replace(/(^url\\\\(#|\\\\)$)/g, E));\\r\\n                                    clip && clip.parentNode.removeChild(clip);\\r\\n                                    $(node, {\\\"clip-path\\\": E});\\r\\n                                    delete o.clip;\\r\\n                                }\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"path\\\":\\r\\n                            if (o.type == \\\"path\\\") {\\r\\n                                $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \\\"M0,0\\\"});\\r\\n                                o._.dirty = 1;\\r\\n                                if (o._.arrows) {\\r\\n                                    \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\r\\n                                    \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\r\\n                                }\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"width\\\":\\r\\n                            node.setAttribute(att, value);\\r\\n                            o._.dirty = 1;\\r\\n                            if (attrs.fx) {\\r\\n                                att = \\\"x\\\";\\r\\n                                value = attrs.x;\\r\\n                            } else {\\r\\n                                break;\\r\\n                            }\\r\\n                        case \\\"x\\\":\\r\\n                            if (attrs.fx) {\\r\\n                                value = -attrs.x - (attrs.width || 0);\\r\\n                            }\\r\\n                        case \\\"rx\\\":\\r\\n                            if (att == \\\"rx\\\" && o.type == \\\"rect\\\") {\\r\\n                                break;\\r\\n                            }\\r\\n                        case \\\"cx\\\":\\r\\n                            node.setAttribute(att, value);\\r\\n                            o.pattern && updatePosition(o);\\r\\n                            o._.dirty = 1;\\r\\n                            break;\\r\\n                        case \\\"height\\\":\\r\\n                            node.setAttribute(att, value);\\r\\n                            o._.dirty = 1;\\r\\n                            if (attrs.fy) {\\r\\n                                att = \\\"y\\\";\\r\\n                                value = attrs.y;\\r\\n                            } else {\\r\\n                                break;\\r\\n                            }\\r\\n                        case \\\"y\\\":\\r\\n                            if (attrs.fy) {\\r\\n                                value = -attrs.y - (attrs.height || 0);\\r\\n                            }\\r\\n                        case \\\"ry\\\":\\r\\n                            if (att == \\\"ry\\\" && o.type == \\\"rect\\\") {\\r\\n                                break;\\r\\n                            }\\r\\n                        case \\\"cy\\\":\\r\\n                            node.setAttribute(att, value);\\r\\n                            o.pattern && updatePosition(o);\\r\\n                            o._.dirty = 1;\\r\\n                            break;\\r\\n                        case \\\"r\\\":\\r\\n                            if (o.type == \\\"rect\\\") {\\r\\n                                $(node, {rx: value, ry: value});\\r\\n                            } else {\\r\\n                                node.setAttribute(att, value);\\r\\n                            }\\r\\n                            o._.dirty = 1;\\r\\n                            break;\\r\\n                        case \\\"src\\\":\\r\\n                            if (o.type == \\\"image\\\") {\\r\\n                                node.setAttributeNS(xlink, \\\"href\\\", value);\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"stroke-width\\\":\\r\\n                            /* FREEGROUP fix\\r\\n                             * draw2d version 3.0.3\\r\\n                             *\\r\\n                             * don't scale the line width if the user resize an shape/element.\\r\\n                             * Obscure stroke-width in case of \\\"Draw2D touch\\\" usage\\r\\n                             */\\r\\n                            if(!attrs[\\\"stroke-scale\\\"]){\\r\\n                                if (o._.sx != 1 || o._.sy != 1) {\\r\\n                                    value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\\r\\n                                }\\r\\n                                if (o.paper._vbSize) {\\r\\n                                //    value *= o.paper._vbSize;\\r\\n                                }\\r\\n                            }\\r\\n\\r\\n\\r\\n                            node.setAttribute(att, value);\\r\\n                            if (attrs[\\\"stroke-dasharray\\\"]) {\\r\\n                                addDashes(o, attrs[\\\"stroke-dasharray\\\"], params);\\r\\n                            }\\r\\n                            if (o._.arrows) {\\r\\n                                \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\r\\n                                \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"stroke-dasharray\\\":\\r\\n                            addDashes(o, value, params);\\r\\n                            break;\\r\\n                        case \\\"fill\\\":\\r\\n                            var isURL = Str(value).match(R._ISURL);\\r\\n                            if (isURL) {\\r\\n                                el = $(\\\"pattern\\\");\\r\\n                                var ig = $(\\\"image\\\");\\r\\n                                el.id = R.createUUID();\\r\\n                                $(el, {x: 0, y: 0, patternUnits: \\\"userSpaceOnUse\\\", height: 1, width: 1});\\r\\n                                $(ig, {x: 0, y: 0, \\\"xlink:href\\\": isURL[1]});\\r\\n                                el.appendChild(ig);\\r\\n\\r\\n                                (function (el) {\\r\\n                                    R._preload(isURL[1], function () {\\r\\n                                        var w = this.offsetWidth,\\r\\n                                            h = this.offsetHeight;\\r\\n                                        $(el, {width: w, height: h});\\r\\n                                        $(ig, {width: w, height: h});\\r\\n                                    });\\r\\n                                })(el);\\r\\n                                o.paper.defs.appendChild(el);\\r\\n                                $(node, {fill: \\\"url(#\\\" + el.id + \\\")\\\"});\\r\\n                                o.pattern = el;\\r\\n                                o.pattern && updatePosition(o);\\r\\n                                break;\\r\\n                            }\\r\\n                            var clr = R.getRGB(value);\\r\\n                            if (!clr.error) {\\r\\n                                delete params.gradient;\\r\\n                                delete attrs.gradient;\\r\\n                                !R.is(attrs.opacity, \\\"undefined\\\") &&\\r\\n                                R.is(params.opacity, \\\"undefined\\\") &&\\r\\n                                $(node, {opacity: attrs.opacity});\\r\\n                                !R.is(attrs[\\\"fill-opacity\\\"], \\\"undefined\\\") &&\\r\\n                                R.is(params[\\\"fill-opacity\\\"], \\\"undefined\\\") &&\\r\\n                                $(node, {\\\"fill-opacity\\\": attrs[\\\"fill-opacity\\\"]});\\r\\n                            } else if ((o.type == \\\"circle\\\" || o.type == \\\"ellipse\\\" || Str(value).charAt() != \\\"r\\\") && addGradientFill(o, value)) {\\r\\n                                if (\\\"opacity\\\" in attrs || \\\"fill-opacity\\\" in attrs) {\\r\\n                                    var gradient = R._g.doc.getElementById(node.getAttribute(\\\"fill\\\").replace(/^url\\\\(#|\\\\)$/g, E));\\r\\n                                    if (gradient) {\\r\\n                                        var stops = gradient.getElementsByTagName(\\\"stop\\\");\\r\\n                                        $(stops[stops.length - 1], {\\\"stop-opacity\\\": (\\\"opacity\\\" in attrs ? attrs.opacity : 1) * (\\\"fill-opacity\\\" in attrs ? attrs[\\\"fill-opacity\\\"] : 1)});\\r\\n                                    }\\r\\n                                }\\r\\n                                attrs.gradient = value;\\r\\n                                attrs.fill = \\\"none\\\";\\r\\n                                break;\\r\\n                            }\\r\\n                            clr[has](\\\"opacity\\\") && $(node, {\\\"fill-opacity\\\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\\r\\n                        case \\\"stroke\\\":\\r\\n                            clr = R.getRGB(value);\\r\\n                            node.setAttribute(att, clr.hex);\\r\\n                            att == \\\"stroke\\\" && clr[has](\\\"opacity\\\") && $(node, {\\\"stroke-opacity\\\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\\r\\n                            if (att == \\\"stroke\\\" && o._.arrows) {\\r\\n                                \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\r\\n                                \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\r\\n                            }\\r\\n                            break;\\r\\n                        case \\\"gradient\\\":\\r\\n                            (o.type == \\\"circle\\\" || o.type == \\\"ellipse\\\" || Str(value).charAt() != \\\"r\\\") && addGradientFill(o, value);\\r\\n                            break;\\r\\n                        case \\\"opacity\\\":\\r\\n                            if (attrs.gradient && !attrs[has](\\\"stroke-opacity\\\")) {\\r\\n                                $(node, {\\\"stroke-opacity\\\": value > 1 ? value / 100 : value});\\r\\n                            }\\r\\n                        // fall\\r\\n                        case \\\"fill-opacity\\\":\\r\\n\\r\\n                            if (attrs.gradient) {\\r\\n                                gradient = R._g.doc.getElementById(node.getAttribute(\\\"fill\\\").replace(/^url\\\\(#|\\\\)$/g, E));\\r\\n                                if (gradient) {\\r\\n                                    stops = gradient.getElementsByTagName(\\\"stop\\\");\\r\\n                                    // FREEGROUP FIX\\r\\n                                    for (gri = 0, grii = stops.length; gri < grii; gri++) {\\r\\n                                        $(stops[gri], {\\\"stop-opacity\\\": value});\\r\\n                                    }\\r\\n                                    // END FIX\\r\\n                                }\\r\\n                                break;\\r\\n                            }\\r\\n                        default:\\r\\n                            att == \\\"font-size\\\" && (value = toInt(value, 10) + \\\"px\\\");\\r\\n                            var cssrule = att.replace(/(\\\\-.)/g, function (w) {\\r\\n                                return w.substring(1).toUpperCase();\\r\\n                            });\\r\\n                            node.style[cssrule] = value;\\r\\n                            o._.dirty = 1;\\r\\n                            node.setAttribute(att, value);\\r\\n                            break;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n\\r\\n            tuneText(o, params);\\r\\n            node.style.visibility = vis;\\r\\n        },\\r\\n        leading = 1.2,\\r\\n        tuneText = function (el, params) {\\r\\n            if (el.type != \\\"text\\\" || !(params[has](\\\"text\\\") || params[has](\\\"font\\\") || params[has](\\\"font-size\\\") || params[has](\\\"x\\\") || params[has](\\\"y\\\"))) {\\r\\n                return;\\r\\n            }\\r\\n            var a = el.attrs,\\r\\n                node = el.node,\\r\\n                fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\\\"font-size\\\"), 10) : 10;\\r\\n\\r\\n            if (params[has](\\\"text\\\")) {\\r\\n                a.text = params.text;\\r\\n                while (node.firstChild) {\\r\\n                    node.removeChild(node.firstChild);\\r\\n                }\\r\\n                var texts = Str(params.text).split(\\\"\\\\n\\\"),\\r\\n                    tspans = [],\\r\\n                    tspan;\\r\\n                for (var i = 0, ii = texts.length; i < ii; i++) {\\r\\n                    tspan = $(\\\"tspan\\\");\\r\\n                    i && $(tspan, {dy: fontSize * leading, x: a.x});\\r\\n                    tspan.appendChild(R._g.doc.createTextNode(texts[i]));\\r\\n                    node.appendChild(tspan);\\r\\n                    tspans[i] = tspan;\\r\\n                }\\r\\n            } else {\\r\\n                tspans = node.getElementsByTagName(\\\"tspan\\\");\\r\\n                for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\\r\\n                    $(tspans[i], {dy: fontSize * leading, x: a.x});\\r\\n                } else {\\r\\n                    $(tspans[0], {dy: 0});\\r\\n                }\\r\\n            }\\r\\n            $(node, {x: a.x, y: a.y});\\r\\n            el._.dirty = 1;\\r\\n            var bb = el._getBBox(),\\r\\n                dif = a.y - (bb.y + bb.height / 2);\\r\\n            dif && R.is(dif, \\\"finite\\\") && $(tspans[0], {dy: dif});\\r\\n        },\\r\\n        getRealNode = function (node) {\\r\\n            if (node.parentNode && node.parentNode.tagName.toLowerCase() === \\\"a\\\") {\\r\\n                return node.parentNode;\\r\\n            } else {\\r\\n                return node;\\r\\n            }\\r\\n        },\\r\\n        Element = function (node, svg) {\\r\\n            var X = 0,\\r\\n                Y = 0;\\r\\n            /*\\\\\\r\\n             * Element.node\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\\r\\n             **\\r\\n             * Note: Don’t mess with it.\\r\\n             > Usage\\r\\n             | // draw a circle at coordinate 10,10 with radius of 10\\r\\n             | var c = paper.circle(10, 10, 10);\\r\\n             | c.node.onclick = function () {\\r\\n             |     c.attr(\\\"fill\\\", \\\"red\\\");\\r\\n             | };\\r\\n             \\\\*/\\r\\n            this[0] = this.node = node;\\r\\n            /*\\\\\\r\\n             * Element.raphael\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Internal reference to @Raphael object. In case it is not available.\\r\\n             > Usage\\r\\n             | Raphael.el.red = function () {\\r\\n             |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\\\"fill\\\"));\\r\\n             |     hsb.h = 1;\\r\\n             |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\\r\\n             | }\\r\\n             \\\\*/\\r\\n            node.raphael = true;\\r\\n            /*\\\\\\r\\n             * Element.id\\r\\n             [ property (number) ]\\r\\n             **\\r\\n             * Unique id of the element. Especially useful when you want to listen to events of the element,\\r\\n             * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\\r\\n             \\\\*/\\r\\n            this.id = R._oid++;\\r\\n            node.raphaelid = this.id;\\r\\n            this.matrix = R.matrix();\\r\\n            this.realPath = null;\\r\\n            /*\\\\\\r\\n             * Element.paper\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\\r\\n             > Usage\\r\\n             | Raphael.el.cross = function () {\\r\\n             |     this.attr({fill: \\\"red\\\"});\\r\\n             |     this.paper.path(\\\"M10,10L50,50M50,10L10,50\\\")\\r\\n             |         .attr({stroke: \\\"red\\\"});\\r\\n             | }\\r\\n             \\\\*/\\r\\n            this.paper = svg;\\r\\n            this.attrs = this.attrs || {};\\r\\n            this._ = {\\r\\n                transform: [],\\r\\n                sx: 1,\\r\\n                sy: 1,\\r\\n                deg: 0,\\r\\n                dx: 0,\\r\\n                dy: 0,\\r\\n                dirty: 1\\r\\n            };\\r\\n            !svg.bottom && (svg.bottom = this);\\r\\n            /*\\\\\\r\\n             * Element.prev\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Reference to the previous element in the hierarchy.\\r\\n             \\\\*/\\r\\n            this.prev = svg.top;\\r\\n            svg.top && (svg.top.next = this);\\r\\n            svg.top = this;\\r\\n            /*\\\\\\r\\n             * Element.next\\r\\n             [ property (object) ]\\r\\n             **\\r\\n             * Reference to the next element in the hierarchy.\\r\\n             \\\\*/\\r\\n            this.next = null;\\r\\n        },\\r\\n        elproto = R.el;\\r\\n\\r\\n    Element.prototype = elproto;\\r\\n    elproto.constructor = Element;\\r\\n\\r\\n    R._engine.path = function (pathString, SVG) {\\r\\n        var el = $(\\\"path\\\");\\r\\n        SVG.canvas && SVG.canvas.appendChild(el);\\r\\n        var p = new Element(el, SVG);\\r\\n        p.type = \\\"path\\\";\\r\\n        setFillAndStroke(p, {\\r\\n            fill: \\\"none\\\",\\r\\n            stroke: \\\"#000\\\",\\r\\n            path: pathString\\r\\n        });\\r\\n        return p;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.rotate\\r\\n     [ method ]\\r\\n     **\\r\\n     * Deprecated! Use @Element.transform instead.\\r\\n     * Adds rotation by given angle around given point to the list of\\r\\n     * transformations of the element.\\r\\n     > Parameters\\r\\n     - deg (number) angle in degrees\\r\\n     - cx (number) #optional x coordinate of the centre of rotation\\r\\n     - cy (number) #optional y coordinate of the centre of rotation\\r\\n     * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.rotate = function (deg, cx, cy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        deg = Str(deg).split(separator);\\r\\n        if (deg.length - 1) {\\r\\n            cx = toFloat(deg[1]);\\r\\n            cy = toFloat(deg[2]);\\r\\n        }\\r\\n        deg = toFloat(deg[0]);\\r\\n        (cy == null) && (cx = cy);\\r\\n        if (cx == null || cy == null) {\\r\\n            var bbox = this.getBBox(1);\\r\\n            cx = bbox.x + bbox.width / 2;\\r\\n            cy = bbox.y + bbox.height / 2;\\r\\n        }\\r\\n        this.transform(this._.transform.concat([[\\\"r\\\", deg, cx, cy]]));\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.scale\\r\\n     [ method ]\\r\\n     **\\r\\n     * Deprecated! Use @Element.transform instead.\\r\\n     * Adds scale by given amount relative to given point to the list of\\r\\n     * transformations of the element.\\r\\n     > Parameters\\r\\n     - sx (number) horisontal scale amount\\r\\n     - sy (number) vertical scale amount\\r\\n     - cx (number) #optional x coordinate of the centre of scale\\r\\n     - cy (number) #optional y coordinate of the centre of scale\\r\\n     * If cx & cy aren’t specified centre of the shape is used instead.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.scale = function (sx, sy, cx, cy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        sx = Str(sx).split(separator);\\r\\n        if (sx.length - 1) {\\r\\n            sy = toFloat(sx[1]);\\r\\n            cx = toFloat(sx[2]);\\r\\n            cy = toFloat(sx[3]);\\r\\n        }\\r\\n        sx = toFloat(sx[0]);\\r\\n        (sy == null) && (sy = sx);\\r\\n        (cy == null) && (cx = cy);\\r\\n        if (cx == null || cy == null) {\\r\\n            var bbox = this.getBBox(1);\\r\\n        }\\r\\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\\r\\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\\r\\n        this.transform(this._.transform.concat([[\\\"s\\\", sx, sy, cx, cy]]));\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.translate\\r\\n     [ method ]\\r\\n     **\\r\\n     * Deprecated! Use @Element.transform instead.\\r\\n     * Adds translation by given amount to the list of transformations of the element.\\r\\n     > Parameters\\r\\n     - dx (number) horisontal shift\\r\\n     - dy (number) vertical shift\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.translate = function (dx, dy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        dx = Str(dx).split(separator);\\r\\n        if (dx.length - 1) {\\r\\n            dy = toFloat(dx[1]);\\r\\n        }\\r\\n        dx = toFloat(dx[0]) || 0;\\r\\n        dy = +dy || 0;\\r\\n        this.transform(this._.transform.concat([[\\\"t\\\", dx, dy]]));\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.transform\\r\\n     [ method ]\\r\\n     **\\r\\n     * Adds transformation to the element which is separate to other attributes,\\r\\n     * i.e. translation doesn’t change `x` or `y` of the rectange. The format\\r\\n     * of transformation string is similar to the path string syntax:\\r\\n     | \\\"t100,100r30,100,100s2,2,100,100r45s1.5\\\"\\r\\n     * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\\r\\n     * scale and `m` is for matrix.\\r\\n     *\\r\\n     * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\\r\\n     *\\r\\n     * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\\r\\n     * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\\r\\n     * coordinates as optional parameters, the default is the centre point of the element.\\r\\n     * Matrix accepts six parameters.\\r\\n     > Usage\\r\\n     | var el = paper.rect(10, 20, 300, 200);\\r\\n     | // translate 100, 100, rotate 45°, translate -100, 0\\r\\n     | el.transform(\\\"t100,100r45t-100,0\\\");\\r\\n     | // if you want you can append or prepend transformations\\r\\n     | el.transform(\\\"...t50,50\\\");\\r\\n     | el.transform(\\\"s2...\\\");\\r\\n     | // or even wrap\\r\\n     | el.transform(\\\"t50,50...t-50-50\\\");\\r\\n     | // to reset transformation call method with empty string\\r\\n     | el.transform(\\\"\\\");\\r\\n     | // to get current value call it without parameters\\r\\n     | console.log(el.transform());\\r\\n     > Parameters\\r\\n     - tstr (string) #optional transformation string\\r\\n     * If tstr isn’t specified\\r\\n     = (string) current transformation string\\r\\n     * else\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.transform = function (tstr) {\\r\\n        var _ = this._;\\r\\n        if (tstr == null) {\\r\\n            return _.transform;\\r\\n        }\\r\\n        R._extractTransform(this, tstr);\\r\\n\\r\\n        this.clip && $(this.clip, {transform: this.matrix.invert()});\\r\\n        this.pattern && updatePosition(this);\\r\\n        this.node && $(this.node, {transform: this.matrix});\\r\\n\\r\\n        if (_.sx != 1 || _.sy != 1) {\\r\\n            var sw = this.attrs[has](\\\"stroke-width\\\") ? this.attrs[\\\"stroke-width\\\"] : 1;\\r\\n            this.attr({\\\"stroke-width\\\": sw});\\r\\n        }\\r\\n\\r\\n        //Reduce transform string\\r\\n        _.transform = this.matrix.toTransformString();\\r\\n\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.hide\\r\\n     [ method ]\\r\\n     **\\r\\n     * Makes element invisible. See @Element.show.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.hide = function () {\\r\\n        if(!this.removed) this.node.style.display = \\\"none\\\";\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.show\\r\\n     [ method ]\\r\\n     **\\r\\n     * Makes element visible. See @Element.hide.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.show = function () {\\r\\n        if(!this.removed) this.node.style.display = \\\"\\\";\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.remove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes element from the paper.\\r\\n     \\\\*/\\r\\n    elproto.remove = function () {\\r\\n        var node = getRealNode(this.node);\\r\\n        if (this.removed || !node.parentNode) {\\r\\n            return;\\r\\n        }\\r\\n        var paper = this.paper;\\r\\n        paper.__set__ && paper.__set__.exclude(this);\\r\\n        eve.unbind(\\\"raphael.*.*.\\\" + this.id);\\r\\n        if (this.gradient) {\\r\\n            paper.defs.removeChild(this.gradient);\\r\\n        }\\r\\n        R._tear(this, paper);\\r\\n\\r\\n        node.parentNode.removeChild(node);\\r\\n\\r\\n        // Remove custom data for element\\r\\n        this.removeData();\\r\\n\\r\\n        for (var i in this) {\\r\\n            this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\r\\n        }\\r\\n        this.removed = true;\\r\\n    };\\r\\n    elproto._getBBox = function () {\\r\\n        if (this.node.style.display == \\\"none\\\") {\\r\\n            this.show();\\r\\n            var hide = true;\\r\\n        }\\r\\n        var canvasHidden = false,\\r\\n            containerStyle;\\r\\n        if (this.paper.canvas.parentElement) {\\r\\n            containerStyle = this.paper.canvas.parentElement.style;\\r\\n        } //IE10+ can't find parentElement\\r\\n        else if (this.paper.canvas.parentNode) {\\r\\n            containerStyle = this.paper.canvas.parentNode.style;\\r\\n        }\\r\\n\\r\\n        if(containerStyle && containerStyle.display == \\\"none\\\") {\\r\\n            canvasHidden = true;\\r\\n            containerStyle.display = \\\"\\\";\\r\\n        }\\r\\n        var bbox = {};\\r\\n        try {\\r\\n            bbox = this.node.getBBox();\\r\\n        } catch(e) {\\r\\n            // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\\r\\n            bbox = {\\r\\n                x: this.node.clientLeft,\\r\\n                y: this.node.clientTop,\\r\\n                width: this.node.clientWidth,\\r\\n                height: this.node.clientHeight\\r\\n            }\\r\\n        } finally {\\r\\n            bbox = bbox || {};\\r\\n            if(canvasHidden){\\r\\n                containerStyle.display = \\\"none\\\";\\r\\n            }\\r\\n        }\\r\\n        hide && this.hide();\\r\\n        return bbox;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.attr\\r\\n     [ method ]\\r\\n     **\\r\\n     * Sets the attributes of the element.\\r\\n     > Parameters\\r\\n     - attrName (string) attribute’s name\\r\\n     - value (string) value\\r\\n     * or\\r\\n     - params (object) object of name/value pairs\\r\\n     * or\\r\\n     - attrName (string) attribute’s name\\r\\n     * or\\r\\n     - attrNames (array) in this case method returns array of current values for given attribute names\\r\\n     = (object) @Element if attrsName & value or params are passed in.\\r\\n     = (...) value of the attribute if only attrsName is passed in.\\r\\n     = (array) array of values of the attribute if attrsNames is passed in.\\r\\n     = (object) object of attributes if nothing is passed in.\\r\\n     > Possible parameters\\r\\n     # <p>Please refer to the <a href=\\\"http://www.w3.org/TR/SVG/\\\" title=\\\"The W3C Recommendation for the SVG language describes these properties in detail.\\\">SVG specification</a> for an explanation of these parameters.</p>\\r\\n     o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\\r\\n     o clip-rect (string) comma or space separated values: x, y, width and height\\r\\n     o cursor (string) CSS type of the cursor\\r\\n     o cx (number) the x-axis coordinate of the center of the circle, or ellipse\\r\\n     o cy (number) the y-axis coordinate of the center of the circle, or ellipse\\r\\n     o fill (string) colour, gradient or image\\r\\n     o fill-opacity (number)\\r\\n     o font (string)\\r\\n     o font-family (string)\\r\\n     o font-size (number) font size in pixels\\r\\n     o font-weight (string)\\r\\n     o height (number)\\r\\n     o href (string) URL, if specified element behaves as hyperlink\\r\\n     o opacity (number)\\r\\n     o path (string) SVG path string format\\r\\n     o r (number) radius of the circle, ellipse or rounded corner on the rect\\r\\n     o rx (number) horisontal radius of the ellipse\\r\\n     o ry (number) vertical radius of the ellipse\\r\\n     o src (string) image URL, only works for @Element.image element\\r\\n     o stroke (string) stroke colour\\r\\n     o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\\r\\n     o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\\r\\n     o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\\r\\n     o stroke-miterlimit (number)\\r\\n     o stroke-opacity (number)\\r\\n     o stroke-width (number) stroke width in pixels, default is '1'\\r\\n     o target (string) used with href\\r\\n     o text (string) contents of the text element. Use `\\\\n` for multiline text\\r\\n     o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\\r\\n     o title (string) will create tooltip with a given text\\r\\n     o transform (string) see @Element.transform\\r\\n     o width (number)\\r\\n     o x (number)\\r\\n     o y (number)\\r\\n     > Gradients\\r\\n     * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\\r\\n     * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\\r\\n     *\\r\\n     * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\\r\\n     * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\\r\\n     * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\\r\\n     > Path String\\r\\n     # <p>Please refer to <a href=\\\"http://www.w3.org/TR/SVG/paths.html#PathData\\\" title=\\\"Details of a path’s data attribute’s format are described in the SVG specification.\\\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\\r\\n     > Colour Parsing\\r\\n     # <ul>\\r\\n     #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\\r\\n     #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\\r\\n     #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\\r\\n     #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\\r\\n     #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\\r\\n     #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\\r\\n     #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\\r\\n     #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\\r\\n     #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\\r\\n     #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\\r\\n     #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\\\"http://en.wikipedia.org/wiki/HSL_and_HSV\\\" title=\\\"HSL and HSV - Wikipedia, the free encyclopedia\\\">Wikipedia page</a></li>\\r\\n     #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\\r\\n     #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\\r\\n     #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\\r\\n     # </ul>\\r\\n     \\\\*/\\r\\n    elproto.attr = function (name, value) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (name == null) {\\r\\n            var res = {};\\r\\n            for (var a in this.attrs) if (this.attrs[has](a)) {\\r\\n                res[a] = this.attrs[a];\\r\\n            }\\r\\n            res.gradient && res.fill == \\\"none\\\" && (res.fill = res.gradient) && delete res.gradient;\\r\\n            res.transform = this._.transform;\\r\\n            return res;\\r\\n        }\\r\\n        if (value == null && R.is(name, \\\"string\\\")) {\\r\\n            if (name == \\\"fill\\\" && this.attrs.fill == \\\"none\\\" && this.attrs.gradient) {\\r\\n                return this.attrs.gradient;\\r\\n            }\\r\\n            if (name == \\\"transform\\\") {\\r\\n                return this._.transform;\\r\\n            }\\r\\n            var names = name.split(separator),\\r\\n                out = {};\\r\\n            for (var i = 0, ii = names.length; i < ii; i++) {\\r\\n                name = names[i];\\r\\n                if (name in this.attrs) {\\r\\n                    out[name] = this.attrs[name];\\r\\n                } else if (R.is(this.paper.customAttributes[name], \\\"function\\\")) {\\r\\n                    out[name] = this.paper.customAttributes[name].def;\\r\\n                } else {\\r\\n                    out[name] = R._availableAttrs[name];\\r\\n                }\\r\\n            }\\r\\n            return ii - 1 ? out : out[names[0]];\\r\\n        }\\r\\n        if (value == null && R.is(name, \\\"array\\\")) {\\r\\n            out = {};\\r\\n            for (i = 0, ii = name.length; i < ii; i++) {\\r\\n                out[name[i]] = this.attr(name[i]);\\r\\n            }\\r\\n            return out;\\r\\n        }\\r\\n        if (value != null) {\\r\\n            var params = {};\\r\\n            params[name] = value;\\r\\n        } else if (name != null && R.is(name, \\\"object\\\")) {\\r\\n            params = name;\\r\\n        }\\r\\n        for (var key in params) {\\r\\n            eve(\\\"raphael.attr.\\\" + key + \\\".\\\" + this.id, this, params[key]);\\r\\n        }\\r\\n        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \\\"function\\\")) {\\r\\n            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\\r\\n            this.attrs[key] = params[key];\\r\\n            for (var subkey in par) if (par[has](subkey)) {\\r\\n                params[subkey] = par[subkey];\\r\\n            }\\r\\n        }\\r\\n        setFillAndStroke(this, params);\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.toFront\\r\\n     [ method ]\\r\\n     **\\r\\n     * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.toFront = function () {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        var node = getRealNode(this.node);\\r\\n        node.parentNode.appendChild(node);\\r\\n        var svg = this.paper;\\r\\n        svg.top != this && R._tofront(this, svg);\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.toBack\\r\\n     [ method ]\\r\\n     **\\r\\n     * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.toBack = function () {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        var node = getRealNode(this.node);\\r\\n        var parentNode = node.parentNode;\\r\\n        parentNode.insertBefore(node, parentNode.firstChild);\\r\\n        R._toback(this, this.paper);\\r\\n        var svg = this.paper;\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.insertAfter\\r\\n     [ method ]\\r\\n     **\\r\\n     * Inserts current object after the given one.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.insertAfter = function (element) {\\r\\n        if (this.removed || !element) {\\r\\n            return this;\\r\\n        }\\r\\n\\r\\n        var node = getRealNode(this.node);\\r\\n        var afterNode = getRealNode(element.node || element[element.length - 1].node);\\r\\n        if (afterNode.nextSibling) {\\r\\n            afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\\r\\n        } else {\\r\\n            afterNode.parentNode.appendChild(node);\\r\\n        }\\r\\n        R._insertafter(this, element, this.paper);\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Element.insertBefore\\r\\n     [ method ]\\r\\n     **\\r\\n     * Inserts current object before the given one.\\r\\n     = (object) @Element\\r\\n     \\\\*/\\r\\n    elproto.insertBefore = function (element) {\\r\\n        if (this.removed || !element) {\\r\\n            return this;\\r\\n        }\\r\\n\\r\\n        var node = getRealNode(this.node);\\r\\n        var beforeNode = getRealNode(element.node || element[0].node);\\r\\n        beforeNode.parentNode.insertBefore(node, beforeNode);\\r\\n        R._insertbefore(this, element, this.paper);\\r\\n        return this;\\r\\n    };\\r\\n    elproto.blur = function (size) {\\r\\n        // Experimental. No Safari support. Use it on your own risk.\\r\\n        var t = this;\\r\\n        if (+size !== 0) {\\r\\n            var fltr = $(\\\"filter\\\"),\\r\\n                blur = $(\\\"feGaussianBlur\\\");\\r\\n            t.attrs.blur = size;\\r\\n            fltr.id = R.createUUID();\\r\\n            $(blur, {stdDeviation: +size || 1.5});\\r\\n            fltr.appendChild(blur);\\r\\n            t.paper.defs.appendChild(fltr);\\r\\n            t._blur = fltr;\\r\\n            $(t.node, {filter: \\\"url(#\\\" + fltr.id + \\\")\\\"});\\r\\n        } else {\\r\\n            if (t._blur) {\\r\\n                t._blur.parentNode.removeChild(t._blur);\\r\\n                delete t._blur;\\r\\n                delete t.attrs.blur;\\r\\n            }\\r\\n            t.node.removeAttribute(\\\"filter\\\");\\r\\n        }\\r\\n        return t;\\r\\n    };\\r\\n    R._engine.circle = function (svg, x, y, r) {\\r\\n        var el = $(\\\"circle\\\");\\r\\n        svg.canvas && svg.canvas.appendChild(el);\\r\\n        var res = new Element(el, svg);\\r\\n        res.attrs = {cx: x, cy: y, r: r, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\r\\n        res.type = \\\"circle\\\";\\r\\n        $(el, res.attrs);\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.rect = function (svg, x, y, w, h, r) {\\r\\n        var el = $(\\\"rect\\\");\\r\\n        svg.canvas && svg.canvas.appendChild(el);\\r\\n        var res = new Element(el, svg);\\r\\n        res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\r\\n        res.type = \\\"rect\\\";\\r\\n        $(el, res.attrs);\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.ellipse = function (svg, x, y, rx, ry) {\\r\\n        var el = $(\\\"ellipse\\\");\\r\\n        svg.canvas && svg.canvas.appendChild(el);\\r\\n        var res = new Element(el, svg);\\r\\n        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\r\\n        res.type = \\\"ellipse\\\";\\r\\n        $(el, res.attrs);\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.image = function (svg, src, x, y, w, h) {\\r\\n        var el = $(\\\"image\\\");\\r\\n        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \\\"none\\\"});\\r\\n        el.setAttributeNS(xlink, \\\"href\\\", src);\\r\\n        svg.canvas && svg.canvas.appendChild(el);\\r\\n        var res = new Element(el, svg);\\r\\n        res.attrs = {x: x, y: y, width: w, height: h, src: src};\\r\\n        res.type = \\\"image\\\";\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.text = function (svg, x, y, text, href) {\\r\\n        var el = $(\\\"text\\\");\\r\\n        svg.canvas && svg.canvas.appendChild(el);\\r\\n        var res = new Element(el, svg);\\r\\n        res.attrs = {\\r\\n            x: x,\\r\\n            y: y,\\r\\n            \\\"text-anchor\\\": \\\"middle\\\",\\r\\n            text: text,\\r\\n            \\\"font-family\\\": R._availableAttrs[\\\"font-family\\\"],\\r\\n            \\\"font-size\\\": R._availableAttrs[\\\"font-size\\\"],\\r\\n            stroke: \\\"none\\\",\\r\\n            fill: \\\"#000\\\",\\r\\n            ...(href ? { href } : null),\\r\\n        };\\r\\n        res.type = \\\"text\\\";\\r\\n        setFillAndStroke(res, res.attrs);\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.setSize = function (width, height) {\\r\\n        this.width = width || this.width;\\r\\n        this.height = height || this.height;\\r\\n        this.canvas.setAttribute(\\\"width\\\", this.width);\\r\\n        this.canvas.setAttribute(\\\"height\\\", this.height);\\r\\n        if (this._viewBox) {\\r\\n            this.setViewBox.apply(this, this._viewBox);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    R._engine.create = function () {\\r\\n        var con = R._getContainer.apply(0, arguments),\\r\\n            container = con && con.container,\\r\\n            x = con.x,\\r\\n            y = con.y,\\r\\n            width = con.width,\\r\\n            height = con.height;\\r\\n        if (!container) {\\r\\n            throw new Error(\\\"SVG container not found.\\\");\\r\\n        }\\r\\n        var cnvs = $(\\\"svg\\\"),\\r\\n            css = \\\"overflow:hidden;\\\",\\r\\n            isFloating;\\r\\n        x = x || 0;\\r\\n        y = y || 0;\\r\\n        width = width || 512;\\r\\n        height = height || 342;\\r\\n        $(cnvs, {\\r\\n            height: height,\\r\\n            version: 1.1,\\r\\n            width: width,\\r\\n            xmlns: \\\"http://www.w3.org/2000/svg\\\",\\r\\n            \\\"xmlns:xlink\\\": \\\"http://www.w3.org/1999/xlink\\\"\\r\\n        });\\r\\n        if (container == 1) {\\r\\n            cnvs.style.cssText = css + \\\"position:absolute;left:\\\" + x + \\\"px;top:\\\" + y + \\\"px\\\";\\r\\n            R._g.doc.body.appendChild(cnvs);\\r\\n            isFloating = 1;\\r\\n        } else {\\r\\n            cnvs.style.cssText = css + \\\"position:relative\\\";\\r\\n            if (container.firstChild) {\\r\\n                container.insertBefore(cnvs, container.firstChild);\\r\\n            } else {\\r\\n                container.appendChild(cnvs);\\r\\n            }\\r\\n        }\\r\\n        container = new R._Paper;\\r\\n        container.width = width;\\r\\n        container.height = height;\\r\\n        container.canvas = cnvs;\\r\\n        container.clear();\\r\\n        container._left = container._top = 0;\\r\\n        isFloating && (container.renderfix = function () {});\\r\\n        container.renderfix();\\r\\n        return container;\\r\\n    };\\r\\n    R._engine.setViewBox = function (x, y, w, h, fit) {\\r\\n        eve(\\\"raphael.setViewBox\\\", this, this._viewBox, [x, y, w, h, fit]);\\r\\n        var paperSize = this.getSize(),\\r\\n            size = mmax(w / paperSize.width, h / paperSize.height),\\r\\n            top = this.top,\\r\\n            aspectRatio = fit ? \\\"xMidYMid meet\\\" : \\\"xMinYMin\\\",\\r\\n            vb,\\r\\n            sw;\\r\\n        if (x == null) {\\r\\n            if (this._vbSize) {\\r\\n                size = 1;\\r\\n            }\\r\\n            delete this._vbSize;\\r\\n            vb = \\\"0 0 \\\" + this.width + S + this.height;\\r\\n        } else {\\r\\n            this._vbSize = size;\\r\\n            vb = x + S + y + S + w + S + h;\\r\\n        }\\r\\n        $(this.canvas, {\\r\\n            viewBox: vb,\\r\\n            preserveAspectRatio: aspectRatio\\r\\n        });\\r\\n        while (size && top) {\\r\\n            sw = \\\"stroke-width\\\" in top.attrs ? top.attrs[\\\"stroke-width\\\"] : 1;\\r\\n            top.attr({\\\"stroke-width\\\": sw});\\r\\n            top._.dirty = 1;\\r\\n            top._.dirtyT = 1;\\r\\n            top = top.prev;\\r\\n        }\\r\\n        this._viewBox = [x, y, w, h, !!fit];\\r\\n        return this;\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.renderfix\\r\\n     [ method ]\\r\\n     **\\r\\n     * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependant\\r\\n     * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\\r\\n     * This method fixes the issue.\\r\\n     **\\r\\n     Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\\r\\n     \\\\*/\\r\\n    R.prototype.renderfix = function () {\\r\\n        var cnvs = this.canvas,\\r\\n            s = cnvs.style,\\r\\n            pos;\\r\\n        try {\\r\\n            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\\r\\n        } catch (e) {\\r\\n            pos = cnvs.createSVGMatrix();\\r\\n        }\\r\\n        var left = -pos.e % 1,\\r\\n            top = -pos.f % 1;\\r\\n        if (left || top) {\\r\\n            if (left) {\\r\\n                this._left = (this._left + left) % 1;\\r\\n                s.left = this._left + \\\"px\\\";\\r\\n            }\\r\\n            if (top) {\\r\\n                this._top = (this._top + top) % 1;\\r\\n                s.top = this._top + \\\"px\\\";\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.clear\\r\\n     [ method ]\\r\\n     **\\r\\n     * Clears the paper, i.e. removes all the elements.\\r\\n     \\\\*/\\r\\n    R.prototype.clear = function () {\\r\\n        R.eve(\\\"raphael.clear\\\", this);\\r\\n        var c = this.canvas;\\r\\n        while (c.firstChild) {\\r\\n            c.removeChild(c.firstChild);\\r\\n        }\\r\\n        this.bottom = this.top = null;\\r\\n        (this.desc = $(\\\"desc\\\")).appendChild(R._g.doc.createTextNode(\\\"Created with Rapha\\\\xebl \\\" + R.version));\\r\\n        c.appendChild(this.desc);\\r\\n        c.appendChild(this.defs = $(\\\"defs\\\"));\\r\\n    };\\r\\n    /*\\\\\\r\\n     * Paper.remove\\r\\n     [ method ]\\r\\n     **\\r\\n     * Removes the paper from the DOM.\\r\\n     \\\\*/\\r\\n    R.prototype.remove = function () {\\r\\n        eve(\\\"raphael.remove\\\", this);\\r\\n        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\\r\\n        for (var i in this) {\\r\\n            this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\r\\n        }\\r\\n    };\\r\\n    var setproto = R.st;\\r\\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\\r\\n        setproto[method] = (function (methodname) {\\r\\n            return function () {\\r\\n                var arg = arguments;\\r\\n                return this.forEach(function (el) {\\r\\n                    el[methodname].apply(el, arg);\\r\\n                });\\r\\n            };\\r\\n        })(method);\\r\\n    }\\r\\n}));\\r\\n\\r\\n// ┌─────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Raphaël 2.1.4 - JavaScript Vector Library                       │ \\\\\\\\\\r\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ VML Module                                                          │ \\\\\\\\\\r\\n// ├─────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\\\\\\\\\r\\n// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\\\\\\\\\r\\n// └─────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n(function (glob, factory) {\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"raphael.vml\\\", [\\\"raphael.core\\\"], function(raphael) {\\r\\n            return factory(raphael);\\r\\n        });\\r\\n    } else if (typeof exports === \\\"object\\\") {\\r\\n        factory(require(\\\"./raphael.core\\\"));\\r\\n    } else {\\r\\n        factory(glob.Raphael);\\r\\n    }\\r\\n}(this, function(R) {\\r\\n    if (R && !R.vml) {\\r\\n        return;\\r\\n    }\\r\\n\\r\\n    var has = \\\"hasOwnProperty\\\",\\r\\n        Str = String,\\r\\n        toFloat = parseFloat,\\r\\n        math = Math,\\r\\n        round = math.round,\\r\\n        mmax = math.max,\\r\\n        mmin = math.min,\\r\\n        abs = math.abs,\\r\\n        fillString = \\\"fill\\\",\\r\\n        separator = /[, ]+/,\\r\\n        eve = R.eve,\\r\\n        ms = \\\" progid:DXImageTransform.Microsoft\\\",\\r\\n        S = \\\" \\\",\\r\\n        E = \\\"\\\",\\r\\n        map = {M: \\\"m\\\", L: \\\"l\\\", C: \\\"c\\\", Z: \\\"x\\\", m: \\\"t\\\", l: \\\"r\\\", c: \\\"v\\\", z: \\\"x\\\"},\\r\\n        bites = /([clmz]),?([^clmz]*)/gi,\\r\\n        blurregexp = / progid:\\\\S+Blur\\\\([^\\\\)]+\\\\)/g,\\r\\n        val = /-?[^,\\\\s-]+/g,\\r\\n        cssDot = \\\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\\\",\\r\\n        zoom = 21600,\\r\\n        pathTypes = {path: 1, rect: 1, image: 1},\\r\\n        ovalTypes = {circle: 1, ellipse: 1},\\r\\n        path2vml = function (path) {\\r\\n            var total =  /[ahqstv]/ig,\\r\\n                command = R._pathToAbsolute;\\r\\n            Str(path).match(total) && (command = R._path2curve);\\r\\n            total = /[clmz]/g;\\r\\n            if (command == R._pathToAbsolute && !Str(path).match(total)) {\\r\\n                var res = Str(path).replace(bites, function (all, command, args) {\\r\\n                    var vals = [],\\r\\n                        isMove = command.toLowerCase() == \\\"m\\\",\\r\\n                        res = map[command];\\r\\n                    args.replace(val, function (value) {\\r\\n                        if (isMove && vals.length == 2) {\\r\\n                            res += vals + map[command == \\\"m\\\" ? \\\"l\\\" : \\\"L\\\"];\\r\\n                            vals = [];\\r\\n                        }\\r\\n                        vals.push(round(value * zoom));\\r\\n                    });\\r\\n                    return res + vals;\\r\\n                });\\r\\n                return res;\\r\\n            }\\r\\n            var pa = command(path), p, r;\\r\\n            res = [];\\r\\n            for (var i = 0, ii = pa.length; i < ii; i++) {\\r\\n                p = pa[i];\\r\\n                r = pa[i][0].toLowerCase();\\r\\n                r == \\\"z\\\" && (r = \\\"x\\\");\\r\\n                for (var j = 1, jj = p.length; j < jj; j++) {\\r\\n                    r += round(p[j] * zoom) + (j != jj - 1 ? \\\",\\\" : E);\\r\\n                }\\r\\n                res.push(r);\\r\\n            }\\r\\n            return res.join(S);\\r\\n        },\\r\\n        compensation = function (deg, dx, dy) {\\r\\n            var m = R.matrix();\\r\\n            m.rotate(-deg, .5, .5);\\r\\n            return {\\r\\n                dx: m.x(dx, dy),\\r\\n                dy: m.y(dx, dy)\\r\\n            };\\r\\n        },\\r\\n        setCoords = function (p, sx, sy, dx, dy, deg) {\\r\\n            var _ = p._,\\r\\n                m = p.matrix,\\r\\n                fillpos = _.fillpos,\\r\\n                o = p.node,\\r\\n                s = o.style,\\r\\n                y = 1,\\r\\n                flip = \\\"\\\",\\r\\n                dxdy,\\r\\n                kx = zoom / sx,\\r\\n                ky = zoom / sy;\\r\\n            s.visibility = \\\"hidden\\\";\\r\\n            if (!sx || !sy) {\\r\\n                return;\\r\\n            }\\r\\n            o.coordsize = abs(kx) + S + abs(ky);\\r\\n            s.rotation = deg * (sx * sy < 0 ? -1 : 1);\\r\\n            if (deg) {\\r\\n                var c = compensation(deg, dx, dy);\\r\\n                dx = c.dx;\\r\\n                dy = c.dy;\\r\\n            }\\r\\n            sx < 0 && (flip += \\\"x\\\");\\r\\n            sy < 0 && (flip += \\\" y\\\") && (y = -1);\\r\\n            s.flip = flip;\\r\\n            o.coordorigin = (dx * -kx) + S + (dy * -ky);\\r\\n            if (fillpos || _.fillsize) {\\r\\n                var fill = o.getElementsByTagName(fillString);\\r\\n                fill = fill && fill[0];\\r\\n                o.removeChild(fill);\\r\\n                if (fillpos) {\\r\\n                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\\r\\n                    fill.position = c.dx * y + S + c.dy * y;\\r\\n                }\\r\\n                if (_.fillsize) {\\r\\n                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\\r\\n                }\\r\\n                o.appendChild(fill);\\r\\n            }\\r\\n            s.visibility = \\\"visible\\\";\\r\\n        };\\r\\n    R.toString = function () {\\r\\n        return  \\\"Your browser doesn\\\\u2019t support SVG. Falling down to VML.\\\\nYou are running Rapha\\\\xebl \\\" + this.version;\\r\\n    };\\r\\n    var addArrow = function (o, value, isEnd) {\\r\\n            var values = Str(value).toLowerCase().split(\\\"-\\\"),\\r\\n                se = isEnd ? \\\"end\\\" : \\\"start\\\",\\r\\n                i = values.length,\\r\\n                type = \\\"classic\\\",\\r\\n                w = \\\"medium\\\",\\r\\n                h = \\\"medium\\\";\\r\\n            while (i--) {\\r\\n                switch (values[i]) {\\r\\n                    case \\\"block\\\":\\r\\n                    case \\\"classic\\\":\\r\\n                    case \\\"oval\\\":\\r\\n                    case \\\"diamond\\\":\\r\\n                    case \\\"open\\\":\\r\\n                    case \\\"none\\\":\\r\\n                        type = values[i];\\r\\n                        break;\\r\\n                    case \\\"wide\\\":\\r\\n                    case \\\"narrow\\\": h = values[i]; break;\\r\\n                    case \\\"long\\\":\\r\\n                    case \\\"short\\\": w = values[i]; break;\\r\\n                }\\r\\n            }\\r\\n            var stroke = o.node.getElementsByTagName(\\\"stroke\\\")[0];\\r\\n            stroke[se + \\\"arrow\\\"] = type;\\r\\n            stroke[se + \\\"arrowlength\\\"] = w;\\r\\n            stroke[se + \\\"arrowwidth\\\"] = h;\\r\\n        },\\r\\n        setFillAndStroke = function (o, params) {\\r\\n            // o.paper.canvas.style.display = \\\"none\\\";\\r\\n            o.attrs = o.attrs || {};\\r\\n            var node = o.node,\\r\\n                a = o.attrs,\\r\\n                s = node.style,\\r\\n                xy,\\r\\n                newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\\r\\n                isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\\r\\n                res = o;\\r\\n\\r\\n\\r\\n            for (var par in params) if (params[has](par)) {\\r\\n                a[par] = params[par];\\r\\n            }\\r\\n            if (newpath) {\\r\\n                a.path = R._getPath[o.type](o);\\r\\n                o._.dirty = 1;\\r\\n            }\\r\\n            params.href && (node.href = params.href);\\r\\n            params.title && (node.title = params.title);\\r\\n            params.target && (node.target = params.target);\\r\\n            params.cursor && (s.cursor = params.cursor);\\r\\n            \\\"blur\\\" in params && o.blur(params.blur);\\r\\n            if (params.path && o.type == \\\"path\\\" || newpath) {\\r\\n                node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\\\"r\\\") ? R._pathToAbsolute(a.path) : a.path);\\r\\n                o._.dirty = 1;\\r\\n                if (o.type == \\\"image\\\") {\\r\\n                    o._.fillpos = [a.x, a.y];\\r\\n                    o._.fillsize = [a.width, a.height];\\r\\n                    setCoords(o, 1, 1, 0, 0, 0);\\r\\n                }\\r\\n            }\\r\\n            \\\"transform\\\" in params && o.transform(params.transform);\\r\\n            if (isOval) {\\r\\n                var cx = +a.cx,\\r\\n                    cy = +a.cy,\\r\\n                    rx = +a.rx || +a.r || 0,\\r\\n                    ry = +a.ry || +a.r || 0;\\r\\n                node.path = R.format(\\\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\\\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\\r\\n                o._.dirty = 1;\\r\\n            }\\r\\n            if (\\\"clip-rect\\\" in params) {\\r\\n                var rect = Str(params[\\\"clip-rect\\\"]).split(separator);\\r\\n                if (rect.length == 4) {\\r\\n                    rect[2] = +rect[2] + (+rect[0]);\\r\\n                    rect[3] = +rect[3] + (+rect[1]);\\r\\n                    var div = node.clipRect || R._g.doc.createElement(\\\"div\\\"),\\r\\n                        dstyle = div.style;\\r\\n                    dstyle.clip = R.format(\\\"rect({1}px {2}px {3}px {0}px)\\\", rect);\\r\\n                    if (!node.clipRect) {\\r\\n                        dstyle.position = \\\"absolute\\\";\\r\\n                        dstyle.top = 0;\\r\\n                        dstyle.left = 0;\\r\\n                        dstyle.width = o.paper.width + \\\"px\\\";\\r\\n                        dstyle.height = o.paper.height + \\\"px\\\";\\r\\n                        node.parentNode.insertBefore(div, node);\\r\\n                        div.appendChild(node);\\r\\n                        node.clipRect = div;\\r\\n                    }\\r\\n                }\\r\\n                if (!params[\\\"clip-rect\\\"]) {\\r\\n                    node.clipRect && (node.clipRect.style.clip = \\\"auto\\\");\\r\\n                }\\r\\n            }\\r\\n            if (o.textpath) {\\r\\n                var textpathStyle = o.textpath.style;\\r\\n                params.font && (textpathStyle.font = params.font);\\r\\n                params[\\\"font-family\\\"] && (textpathStyle.fontFamily = '\\\"' + params[\\\"font-family\\\"].split(\\\",\\\")[0].replace(/^['\\\"]+|['\\\"]+$/g, E) + '\\\"');\\r\\n                params[\\\"font-size\\\"] && (textpathStyle.fontSize = params[\\\"font-size\\\"]);\\r\\n                params[\\\"font-weight\\\"] && (textpathStyle.fontWeight = params[\\\"font-weight\\\"]);\\r\\n                params[\\\"font-style\\\"] && (textpathStyle.fontStyle = params[\\\"font-style\\\"]);\\r\\n            }\\r\\n            if (\\\"arrow-start\\\" in params) {\\r\\n                addArrow(res, params[\\\"arrow-start\\\"]);\\r\\n            }\\r\\n            if (\\\"arrow-end\\\" in params) {\\r\\n                addArrow(res, params[\\\"arrow-end\\\"], 1);\\r\\n            }\\r\\n            if (params.opacity != null ||\\r\\n                params[\\\"stroke-width\\\"] != null ||\\r\\n                params.fill != null ||\\r\\n                params.src != null ||\\r\\n                params.stroke != null ||\\r\\n                params[\\\"stroke-width\\\"] != null ||\\r\\n                params[\\\"stroke-opacity\\\"] != null ||\\r\\n                params[\\\"fill-opacity\\\"] != null ||\\r\\n                params[\\\"stroke-dasharray\\\"] != null ||\\r\\n                params[\\\"stroke-miterlimit\\\"] != null ||\\r\\n                params[\\\"stroke-linejoin\\\"] != null ||\\r\\n                params[\\\"stroke-linecap\\\"] != null) {\\r\\n                var fill = node.getElementsByTagName(fillString),\\r\\n                    newfill = false;\\r\\n                fill = fill && fill[0];\\r\\n                !fill && (newfill = fill = createNode(fillString));\\r\\n                if (o.type == \\\"image\\\" && params.src) {\\r\\n                    fill.src = params.src;\\r\\n                }\\r\\n                params.fill && (fill.on = true);\\r\\n                if (fill.on == null || params.fill == \\\"none\\\" || params.fill === null) {\\r\\n                    fill.on = false;\\r\\n                }\\r\\n                if (fill.on && params.fill) {\\r\\n                    var isURL = Str(params.fill).match(R._ISURL);\\r\\n                    if (isURL) {\\r\\n                        fill.parentNode == node && node.removeChild(fill);\\r\\n                        fill.rotate = true;\\r\\n                        fill.src = isURL[1];\\r\\n                        fill.type = \\\"tile\\\";\\r\\n                        var bbox = o.getBBox(1);\\r\\n                        fill.position = bbox.x + S + bbox.y;\\r\\n                        o._.fillpos = [bbox.x, bbox.y];\\r\\n\\r\\n                        R._preload(isURL[1], function () {\\r\\n                            o._.fillsize = [this.offsetWidth, this.offsetHeight];\\r\\n                        });\\r\\n                    } else {\\r\\n                        fill.color = R.getRGB(params.fill).hex;\\r\\n                        fill.src = E;\\r\\n                        fill.type = \\\"solid\\\";\\r\\n                        if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != \\\"r\\\") && addGradientFill(res, params.fill, fill)) {\\r\\n                            a.fill = \\\"none\\\";\\r\\n                            a.gradient = params.fill;\\r\\n                            fill.rotate = false;\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n                if (\\\"fill-opacity\\\" in params || \\\"opacity\\\" in params) {\\r\\n                    var opacity = ((+a[\\\"fill-opacity\\\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\\r\\n                    opacity = mmin(mmax(opacity, 0), 1);\\r\\n                    fill.opacity = opacity;\\r\\n                    if (fill.src) {\\r\\n                        fill.color = \\\"none\\\";\\r\\n                    }\\r\\n                }\\r\\n                node.appendChild(fill);\\r\\n                var stroke = (node.getElementsByTagName(\\\"stroke\\\") && node.getElementsByTagName(\\\"stroke\\\")[0]),\\r\\n                    newstroke = false;\\r\\n                !stroke && (newstroke = stroke = createNode(\\\"stroke\\\"));\\r\\n                if ((params.stroke && params.stroke != \\\"none\\\") ||\\r\\n                    params[\\\"stroke-width\\\"] ||\\r\\n                    params[\\\"stroke-opacity\\\"] != null ||\\r\\n                    params[\\\"stroke-dasharray\\\"] ||\\r\\n                    params[\\\"stroke-miterlimit\\\"] ||\\r\\n                    params[\\\"stroke-linejoin\\\"] ||\\r\\n                    params[\\\"stroke-linecap\\\"]) {\\r\\n                    stroke.on = true;\\r\\n                }\\r\\n                (params.stroke == \\\"none\\\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\\\"stroke-width\\\"] == 0) && (stroke.on = false);\\r\\n                var strokeColor = R.getRGB(params.stroke);\\r\\n                stroke.on && params.stroke && (stroke.color = strokeColor.hex);\\r\\n                opacity = ((+a[\\\"stroke-opacity\\\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\\r\\n                var width = (toFloat(params[\\\"stroke-width\\\"]) || 1) * .75;\\r\\n                opacity = mmin(mmax(opacity, 0), 1);\\r\\n                params[\\\"stroke-width\\\"] == null && (width = a[\\\"stroke-width\\\"]);\\r\\n                params[\\\"stroke-width\\\"] && (stroke.weight = width);\\r\\n                width && width < 1 && (opacity *= width) && (stroke.weight = 1);\\r\\n                stroke.opacity = opacity;\\r\\n\\r\\n                params[\\\"stroke-linejoin\\\"] && (stroke.joinstyle = params[\\\"stroke-linejoin\\\"] || \\\"miter\\\");\\r\\n                stroke.miterlimit = params[\\\"stroke-miterlimit\\\"] || 8;\\r\\n                params[\\\"stroke-linecap\\\"] && (stroke.endcap = params[\\\"stroke-linecap\\\"] == \\\"butt\\\" ? \\\"flat\\\" : params[\\\"stroke-linecap\\\"] == \\\"square\\\" ? \\\"square\\\" : \\\"round\\\");\\r\\n                if (\\\"stroke-dasharray\\\" in params) {\\r\\n                    var dasharray = {\\r\\n                        \\\"-\\\": \\\"shortdash\\\",\\r\\n                        \\\".\\\": \\\"shortdot\\\",\\r\\n                        \\\"-.\\\": \\\"shortdashdot\\\",\\r\\n                        \\\"-..\\\": \\\"shortdashdotdot\\\",\\r\\n                        \\\". \\\": \\\"dot\\\",\\r\\n                        \\\"- \\\": \\\"dash\\\",\\r\\n                        \\\"--\\\": \\\"longdash\\\",\\r\\n                        \\\"- .\\\": \\\"dashdot\\\",\\r\\n                        \\\"--.\\\": \\\"longdashdot\\\",\\r\\n                        \\\"--..\\\": \\\"longdashdotdot\\\"\\r\\n                    };\\r\\n                    stroke.dashstyle = dasharray[has](params[\\\"stroke-dasharray\\\"]) ? dasharray[params[\\\"stroke-dasharray\\\"]] : E;\\r\\n                }\\r\\n                newstroke && node.appendChild(stroke);\\r\\n            }\\r\\n            if (res.type == \\\"text\\\") {\\r\\n                res.paper.canvas.style.display = E;\\r\\n                var span = res.paper.span,\\r\\n                    m = 100,\\r\\n                    fontSize = a.font && a.font.match(/\\\\d+(?:\\\\.\\\\d*)?(?=px)/);\\r\\n                s = span.style;\\r\\n                a.font && (s.font = a.font);\\r\\n                a[\\\"font-family\\\"] && (s.fontFamily = a[\\\"font-family\\\"]);\\r\\n                a[\\\"font-weight\\\"] && (s.fontWeight = a[\\\"font-weight\\\"]);\\r\\n                a[\\\"font-style\\\"] && (s.fontStyle = a[\\\"font-style\\\"]);\\r\\n                fontSize = toFloat(a[\\\"font-size\\\"] || fontSize && fontSize[0]) || 10;\\r\\n                s.fontSize = fontSize * m + \\\"px\\\";\\r\\n                res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \\\"&#60;\\\").replace(/&/g, \\\"&#38;\\\").replace(/\\\\n/g, \\\"<br>\\\"));\\r\\n                var brect = span.getBoundingClientRect();\\r\\n                res.W = a.w = (brect.right - brect.left) / m;\\r\\n                res.H = a.h = (brect.bottom - brect.top) / m;\\r\\n                // res.paper.canvas.style.display = \\\"none\\\";\\r\\n                res.X = a.x;\\r\\n                res.Y = a.y + res.H / 2;\\r\\n\\r\\n                (\\\"x\\\" in params || \\\"y\\\" in params) && (res.path.v = R.format(\\\"m{0},{1}l{2},{1}\\\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\\r\\n                var dirtyattrs = [\\\"x\\\", \\\"y\\\", \\\"text\\\", \\\"font\\\", \\\"font-family\\\", \\\"font-weight\\\", \\\"font-style\\\", \\\"font-size\\\"];\\r\\n                for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\\r\\n                    res._.dirty = 1;\\r\\n                    break;\\r\\n                }\\r\\n\\r\\n                // text-anchor emulation\\r\\n                switch (a[\\\"text-anchor\\\"]) {\\r\\n                    case \\\"start\\\":\\r\\n                        res.textpath.style[\\\"v-text-align\\\"] = \\\"left\\\";\\r\\n                        res.bbx = res.W / 2;\\r\\n                        break;\\r\\n                    case \\\"end\\\":\\r\\n                        res.textpath.style[\\\"v-text-align\\\"] = \\\"right\\\";\\r\\n                        res.bbx = -res.W / 2;\\r\\n                        break;\\r\\n                    default:\\r\\n                        res.textpath.style[\\\"v-text-align\\\"] = \\\"center\\\";\\r\\n                        res.bbx = 0;\\r\\n                        break;\\r\\n                }\\r\\n                res.textpath.style[\\\"v-text-kern\\\"] = true;\\r\\n            }\\r\\n            // res.paper.canvas.style.display = E;\\r\\n        },\\r\\n        addGradientFill = function (o, gradient, fill) {\\r\\n            o.attrs = o.attrs || {};\\r\\n            var attrs = o.attrs,\\r\\n                pow = Math.pow,\\r\\n                opacity,\\r\\n                oindex,\\r\\n                type = \\\"linear\\\",\\r\\n                fxfy = \\\".5 .5\\\";\\r\\n            o.attrs.gradient = gradient;\\r\\n            gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\\r\\n                type = \\\"radial\\\";\\r\\n                if (fx && fy) {\\r\\n                    fx = toFloat(fx);\\r\\n                    fy = toFloat(fy);\\r\\n                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\\r\\n                    fxfy = fx + S + fy;\\r\\n                }\\r\\n                return E;\\r\\n            });\\r\\n            gradient = gradient.split(/\\\\s*\\\\-\\\\s*/);\\r\\n            if (type == \\\"linear\\\") {\\r\\n                var angle = gradient.shift();\\r\\n                angle = -toFloat(angle);\\r\\n                if (isNaN(angle)) {\\r\\n                    return null;\\r\\n                }\\r\\n            }\\r\\n            var dots = R._parseDots(gradient);\\r\\n            if (!dots) {\\r\\n                return null;\\r\\n            }\\r\\n            o = o.shape || o.node;\\r\\n            if (dots.length) {\\r\\n                o.removeChild(fill);\\r\\n                fill.on = true;\\r\\n                fill.method = \\\"none\\\";\\r\\n                fill.color = dots[0].color;\\r\\n                fill.color2 = dots[dots.length - 1].color;\\r\\n                var clrs = [];\\r\\n                for (var i = 0, ii = dots.length; i < ii; i++) {\\r\\n                    dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\\r\\n                }\\r\\n                fill.colors = clrs.length ? clrs.join() : \\\"0% \\\" + fill.color;\\r\\n                if (type == \\\"radial\\\") {\\r\\n                    fill.type = \\\"gradientTitle\\\";\\r\\n                    fill.focus = \\\"100%\\\";\\r\\n                    fill.focussize = \\\"0 0\\\";\\r\\n                    fill.focusposition = fxfy;\\r\\n                    fill.angle = 0;\\r\\n                } else {\\r\\n                    // fill.rotate= true;\\r\\n                    fill.type = \\\"gradient\\\";\\r\\n                    fill.angle = (270 - angle) % 360;\\r\\n                }\\r\\n                o.appendChild(fill);\\r\\n            }\\r\\n            return 1;\\r\\n        },\\r\\n        Element = function (node, vml) {\\r\\n            this[0] = this.node = node;\\r\\n            node.raphael = true;\\r\\n            this.id = R._oid++;\\r\\n            node.raphaelid = this.id;\\r\\n            this.X = 0;\\r\\n            this.Y = 0;\\r\\n            this.attrs = {};\\r\\n            this.paper = vml;\\r\\n            this.matrix = R.matrix();\\r\\n            this._ = {\\r\\n                transform: [],\\r\\n                sx: 1,\\r\\n                sy: 1,\\r\\n                dx: 0,\\r\\n                dy: 0,\\r\\n                deg: 0,\\r\\n                dirty: 1,\\r\\n                dirtyT: 1\\r\\n            };\\r\\n            !vml.bottom && (vml.bottom = this);\\r\\n            this.prev = vml.top;\\r\\n            vml.top && (vml.top.next = this);\\r\\n            vml.top = this;\\r\\n            this.next = null;\\r\\n        };\\r\\n    var elproto = R.el;\\r\\n\\r\\n    Element.prototype = elproto;\\r\\n    elproto.constructor = Element;\\r\\n    elproto.transform = function (tstr) {\\r\\n        if (tstr == null) {\\r\\n            return this._.transform;\\r\\n        }\\r\\n        var vbs = this.paper._viewBoxShift,\\r\\n            vbt = vbs ? \\\"s\\\" + [vbs.scale, vbs.scale] + \\\"-1-1t\\\" + [vbs.dx, vbs.dy] : E,\\r\\n            oldt;\\r\\n        if (vbs) {\\r\\n            oldt = tstr = Str(tstr).replace(/\\\\.{3}|\\\\u2026/g, this._.transform || E);\\r\\n        }\\r\\n        R._extractTransform(this, vbt + tstr);\\r\\n        var matrix = this.matrix.clone(),\\r\\n            skew = this.skew,\\r\\n            o = this.node,\\r\\n            split,\\r\\n            isGrad = ~Str(this.attrs.fill).indexOf(\\\"-\\\"),\\r\\n            isPatt = !Str(this.attrs.fill).indexOf(\\\"url(\\\");\\r\\n        matrix.translate(1, 1);\\r\\n        if (isPatt || isGrad || this.type == \\\"image\\\") {\\r\\n            skew.matrix = \\\"1 0 0 1\\\";\\r\\n            skew.offset = \\\"0 0\\\";\\r\\n            split = matrix.split();\\r\\n            if ((isGrad && split.noRotation) || !split.isSimple) {\\r\\n                o.style.filter = matrix.toFilter();\\r\\n                var bb = this.getBBox(),\\r\\n                    bbt = this.getBBox(1),\\r\\n                    dx = bb.x - bbt.x,\\r\\n                    dy = bb.y - bbt.y;\\r\\n                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\\r\\n                setCoords(this, 1, 1, dx, dy, 0);\\r\\n            } else {\\r\\n                o.style.filter = E;\\r\\n                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\\r\\n            }\\r\\n        } else {\\r\\n            o.style.filter = E;\\r\\n            skew.matrix = Str(matrix);\\r\\n            skew.offset = matrix.offset();\\r\\n        }\\r\\n        if (oldt !== null) { // empty string value is true as well\\r\\n            this._.transform = oldt;\\r\\n            R._extractTransform(this, oldt);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    elproto.rotate = function (deg, cx, cy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (deg == null) {\\r\\n            return;\\r\\n        }\\r\\n        deg = Str(deg).split(separator);\\r\\n        if (deg.length - 1) {\\r\\n            cx = toFloat(deg[1]);\\r\\n            cy = toFloat(deg[2]);\\r\\n        }\\r\\n        deg = toFloat(deg[0]);\\r\\n        (cy == null) && (cx = cy);\\r\\n        if (cx == null || cy == null) {\\r\\n            var bbox = this.getBBox(1);\\r\\n            cx = bbox.x + bbox.width / 2;\\r\\n            cy = bbox.y + bbox.height / 2;\\r\\n        }\\r\\n        this._.dirtyT = 1;\\r\\n        this.transform(this._.transform.concat([[\\\"r\\\", deg, cx, cy]]));\\r\\n        return this;\\r\\n    };\\r\\n    elproto.translate = function (dx, dy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        dx = Str(dx).split(separator);\\r\\n        if (dx.length - 1) {\\r\\n            dy = toFloat(dx[1]);\\r\\n        }\\r\\n        dx = toFloat(dx[0]) || 0;\\r\\n        dy = +dy || 0;\\r\\n        if (this._.bbox) {\\r\\n            this._.bbox.x += dx;\\r\\n            this._.bbox.y += dy;\\r\\n        }\\r\\n        this.transform(this._.transform.concat([[\\\"t\\\", dx, dy]]));\\r\\n        return this;\\r\\n    };\\r\\n    elproto.scale = function (sx, sy, cx, cy) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        sx = Str(sx).split(separator);\\r\\n        if (sx.length - 1) {\\r\\n            sy = toFloat(sx[1]);\\r\\n            cx = toFloat(sx[2]);\\r\\n            cy = toFloat(sx[3]);\\r\\n            isNaN(cx) && (cx = null);\\r\\n            isNaN(cy) && (cy = null);\\r\\n        }\\r\\n        sx = toFloat(sx[0]);\\r\\n        (sy == null) && (sy = sx);\\r\\n        (cy == null) && (cx = cy);\\r\\n        if (cx == null || cy == null) {\\r\\n            var bbox = this.getBBox(1);\\r\\n        }\\r\\n        cx = cx == null ? bbox.x + bbox.width / 2 : cx;\\r\\n        cy = cy == null ? bbox.y + bbox.height / 2 : cy;\\r\\n\\r\\n        this.transform(this._.transform.concat([[\\\"s\\\", sx, sy, cx, cy]]));\\r\\n        this._.dirtyT = 1;\\r\\n        return this;\\r\\n    };\\r\\n    elproto.hide = function () {\\r\\n        !this.removed && (this.node.style.display = \\\"none\\\");\\r\\n        return this;\\r\\n    };\\r\\n    elproto.show = function () {\\r\\n        !this.removed && (this.node.style.display = E);\\r\\n        return this;\\r\\n    };\\r\\n    // Needed to fix the vml setViewBox issues\\r\\n    elproto.auxGetBBox = R.el.getBBox;\\r\\n    elproto.getBBox = function(){\\r\\n        var b = this.auxGetBBox();\\r\\n        if (this.paper && this.paper._viewBoxShift)\\r\\n        {\\r\\n            var c = {};\\r\\n            var z = 1/this.paper._viewBoxShift.scale;\\r\\n            c.x = b.x - this.paper._viewBoxShift.dx;\\r\\n            c.x *= z;\\r\\n            c.y = b.y - this.paper._viewBoxShift.dy;\\r\\n            c.y *= z;\\r\\n            c.width  = b.width  * z;\\r\\n            c.height = b.height * z;\\r\\n            c.x2 = c.x + c.width;\\r\\n            c.y2 = c.y + c.height;\\r\\n            return c;\\r\\n        }\\r\\n        return b;\\r\\n    };\\r\\n    elproto._getBBox = function () {\\r\\n        if (this.removed) {\\r\\n            return {};\\r\\n        }\\r\\n        return {\\r\\n            x: this.X + (this.bbx || 0) - this.W / 2,\\r\\n            y: this.Y - this.H,\\r\\n            width: this.W,\\r\\n            height: this.H\\r\\n        };\\r\\n    };\\r\\n    elproto.remove = function () {\\r\\n        if (this.removed || !this.node.parentNode) {\\r\\n            return;\\r\\n        }\\r\\n        this.paper.__set__ && this.paper.__set__.exclude(this);\\r\\n        R.eve.unbind(\\\"raphael.*.*.\\\" + this.id);\\r\\n        R._tear(this, this.paper);\\r\\n        this.node.parentNode.removeChild(this.node);\\r\\n        this.shape && this.shape.parentNode.removeChild(this.shape);\\r\\n        for (var i in this) {\\r\\n            this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\r\\n        }\\r\\n        this.removed = true;\\r\\n    };\\r\\n    elproto.attr = function (name, value) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (name == null) {\\r\\n            var res = {};\\r\\n            for (var a in this.attrs) if (this.attrs[has](a)) {\\r\\n                res[a] = this.attrs[a];\\r\\n            }\\r\\n            res.gradient && res.fill == \\\"none\\\" && (res.fill = res.gradient) && delete res.gradient;\\r\\n            res.transform = this._.transform;\\r\\n            return res;\\r\\n        }\\r\\n        if (value == null && R.is(name, \\\"string\\\")) {\\r\\n            if (name == fillString && this.attrs.fill == \\\"none\\\" && this.attrs.gradient) {\\r\\n                return this.attrs.gradient;\\r\\n            }\\r\\n            var names = name.split(separator),\\r\\n                out = {};\\r\\n            for (var i = 0, ii = names.length; i < ii; i++) {\\r\\n                name = names[i];\\r\\n                if (name in this.attrs) {\\r\\n                    out[name] = this.attrs[name];\\r\\n                } else if (R.is(this.paper.customAttributes[name], \\\"function\\\")) {\\r\\n                    out[name] = this.paper.customAttributes[name].def;\\r\\n                } else {\\r\\n                    out[name] = R._availableAttrs[name];\\r\\n                }\\r\\n            }\\r\\n            return ii - 1 ? out : out[names[0]];\\r\\n        }\\r\\n        if (this.attrs && value == null && R.is(name, \\\"array\\\")) {\\r\\n            out = {};\\r\\n            for (i = 0, ii = name.length; i < ii; i++) {\\r\\n                out[name[i]] = this.attr(name[i]);\\r\\n            }\\r\\n            return out;\\r\\n        }\\r\\n        var params;\\r\\n        if (value != null) {\\r\\n            params = {};\\r\\n            params[name] = value;\\r\\n        }\\r\\n        value == null && R.is(name, \\\"object\\\") && (params = name);\\r\\n        for (var key in params) {\\r\\n            eve(\\\"raphael.attr.\\\" + key + \\\".\\\" + this.id, this, params[key]);\\r\\n        }\\r\\n        if (params) {\\r\\n            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \\\"function\\\")) {\\r\\n                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\\r\\n                this.attrs[key] = params[key];\\r\\n                for (var subkey in par) if (par[has](subkey)) {\\r\\n                    params[subkey] = par[subkey];\\r\\n                }\\r\\n            }\\r\\n            // this.paper.canvas.style.display = \\\"none\\\";\\r\\n            if (params.text && this.type == \\\"text\\\") {\\r\\n                this.textpath.string = params.text;\\r\\n            }\\r\\n            setFillAndStroke(this, params);\\r\\n            // this.paper.canvas.style.display = E;\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    elproto.toFront = function () {\\r\\n        !this.removed && this.node.parentNode.appendChild(this.node);\\r\\n        this.paper && this.paper.top != this && R._tofront(this, this.paper);\\r\\n        return this;\\r\\n    };\\r\\n    elproto.toBack = function () {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (this.node.parentNode.firstChild != this.node) {\\r\\n            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\\r\\n            R._toback(this, this.paper);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    elproto.insertAfter = function (element) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (element.constructor == R.st.constructor) {\\r\\n            element = element[element.length - 1];\\r\\n        }\\r\\n        if (element.node.nextSibling) {\\r\\n            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\\r\\n        } else {\\r\\n            element.node.parentNode.appendChild(this.node);\\r\\n        }\\r\\n        R._insertafter(this, element, this.paper);\\r\\n        return this;\\r\\n    };\\r\\n    elproto.insertBefore = function (element) {\\r\\n        if (this.removed) {\\r\\n            return this;\\r\\n        }\\r\\n        if (element.constructor == R.st.constructor) {\\r\\n            element = element[0];\\r\\n        }\\r\\n        element.node.parentNode.insertBefore(this.node, element.node);\\r\\n        R._insertbefore(this, element, this.paper);\\r\\n        return this;\\r\\n    };\\r\\n    elproto.blur = function (size) {\\r\\n        var s = this.node.runtimeStyle,\\r\\n            f = s.filter;\\r\\n        f = f.replace(blurregexp, E);\\r\\n        if (+size !== 0) {\\r\\n            this.attrs.blur = size;\\r\\n            s.filter = f + S + ms + \\\".Blur(pixelradius=\\\" + (+size || 1.5) + \\\")\\\";\\r\\n            s.margin = R.format(\\\"-{0}px 0 0 -{0}px\\\", round(+size || 1.5));\\r\\n        } else {\\r\\n            s.filter = f;\\r\\n            s.margin = 0;\\r\\n            delete this.attrs.blur;\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n\\r\\n    R._engine.path = function (pathString, vml) {\\r\\n        var el = createNode(\\\"shape\\\");\\r\\n        el.style.cssText = cssDot;\\r\\n        el.coordsize = zoom + S + zoom;\\r\\n        el.coordorigin = vml.coordorigin;\\r\\n        var p = new Element(el, vml),\\r\\n            attr = {fill: \\\"none\\\", stroke: \\\"#000\\\"};\\r\\n        pathString && (attr.path = pathString);\\r\\n        p.type = \\\"path\\\";\\r\\n        p.path = [];\\r\\n        p.Path = E;\\r\\n        setFillAndStroke(p, attr);\\r\\n        vml.canvas.appendChild(el);\\r\\n        var skew = createNode(\\\"skew\\\");\\r\\n        skew.on = true;\\r\\n        el.appendChild(skew);\\r\\n        p.skew = skew;\\r\\n        p.transform(E);\\r\\n        return p;\\r\\n    };\\r\\n    R._engine.rect = function (vml, x, y, w, h, r) {\\r\\n        var path = R._rectPath(x, y, w, h, r),\\r\\n            res = vml.path(path),\\r\\n            a = res.attrs;\\r\\n        res.X = a.x = x;\\r\\n        res.Y = a.y = y;\\r\\n        res.W = a.width = w;\\r\\n        res.H = a.height = h;\\r\\n        a.r = r;\\r\\n        a.path = path;\\r\\n        res.type = \\\"rect\\\";\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.ellipse = function (vml, x, y, rx, ry) {\\r\\n        var res = vml.path(),\\r\\n            a = res.attrs;\\r\\n        res.X = x - rx;\\r\\n        res.Y = y - ry;\\r\\n        res.W = rx * 2;\\r\\n        res.H = ry * 2;\\r\\n        res.type = \\\"ellipse\\\";\\r\\n        setFillAndStroke(res, {\\r\\n            cx: x,\\r\\n            cy: y,\\r\\n            rx: rx,\\r\\n            ry: ry\\r\\n        });\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.circle = function (vml, x, y, r) {\\r\\n        var res = vml.path(),\\r\\n            a = res.attrs;\\r\\n        res.X = x - r;\\r\\n        res.Y = y - r;\\r\\n        res.W = res.H = r * 2;\\r\\n        res.type = \\\"circle\\\";\\r\\n        setFillAndStroke(res, {\\r\\n            cx: x,\\r\\n            cy: y,\\r\\n            r: r\\r\\n        });\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.image = function (vml, src, x, y, w, h) {\\r\\n        var path = R._rectPath(x, y, w, h),\\r\\n            res = vml.path(path).attr({stroke: \\\"none\\\"}),\\r\\n            a = res.attrs,\\r\\n            node = res.node,\\r\\n            fill = node.getElementsByTagName(fillString)[0];\\r\\n        a.src = src;\\r\\n        res.X = a.x = x;\\r\\n        res.Y = a.y = y;\\r\\n        res.W = a.width = w;\\r\\n        res.H = a.height = h;\\r\\n        a.path = path;\\r\\n        res.type = \\\"image\\\";\\r\\n        fill.parentNode == node && node.removeChild(fill);\\r\\n        fill.rotate = true;\\r\\n        fill.src = src;\\r\\n        fill.type = \\\"tile\\\";\\r\\n        res._.fillpos = [x, y];\\r\\n        res._.fillsize = [w, h];\\r\\n        node.appendChild(fill);\\r\\n        setCoords(res, 1, 1, 0, 0, 0);\\r\\n        return res;\\r\\n    };\\r\\n    R._engine.text = function (vml, x, y, text) {\\r\\n        var el = createNode(\\\"shape\\\"),\\r\\n            path = createNode(\\\"path\\\"),\\r\\n            o = createNode(\\\"textpath\\\");\\r\\n        x = x || 0;\\r\\n        y = y || 0;\\r\\n        text = text || \\\"\\\";\\r\\n        path.v = R.format(\\\"m{0},{1}l{2},{1}\\\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\\r\\n        path.textpathok = true;\\r\\n        o.string = Str(text);\\r\\n        o.on = true;\\r\\n        el.style.cssText = cssDot;\\r\\n        el.coordsize = zoom + S + zoom;\\r\\n        el.coordorigin = \\\"0 0\\\";\\r\\n        var p = new Element(el, vml),\\r\\n            attr = {\\r\\n                fill: \\\"#000\\\",\\r\\n                stroke: \\\"none\\\",\\r\\n                font: R._availableAttrs.font,\\r\\n                text: text\\r\\n            };\\r\\n        p.shape = el;\\r\\n        p.path = path;\\r\\n        p.textpath = o;\\r\\n        p.type = \\\"text\\\";\\r\\n        p.attrs.text = Str(text);\\r\\n        p.attrs.x = x;\\r\\n        p.attrs.y = y;\\r\\n        p.attrs.w = 1;\\r\\n        p.attrs.h = 1;\\r\\n        setFillAndStroke(p, attr);\\r\\n        el.appendChild(o);\\r\\n        el.appendChild(path);\\r\\n        vml.canvas.appendChild(el);\\r\\n        var skew = createNode(\\\"skew\\\");\\r\\n        skew.on = true;\\r\\n        el.appendChild(skew);\\r\\n        p.skew = skew;\\r\\n        p.transform(E);\\r\\n        return p;\\r\\n    };\\r\\n    R._engine.setSize = function (width, height) {\\r\\n        var cs = this.canvas.style;\\r\\n        this.width = width;\\r\\n        this.height = height;\\r\\n        width == +width && (width += \\\"px\\\");\\r\\n        height == +height && (height += \\\"px\\\");\\r\\n        cs.width = width;\\r\\n        cs.height = height;\\r\\n        cs.clip = \\\"rect(0 \\\" + width + \\\" \\\" + height + \\\" 0)\\\";\\r\\n        if (this._viewBox) {\\r\\n            R._engine.setViewBox.apply(this, this._viewBox);\\r\\n        }\\r\\n        return this;\\r\\n    };\\r\\n    R._engine.setViewBox = function (x, y, w, h, fit) {\\r\\n        R.eve(\\\"raphael.setViewBox\\\", this, this._viewBox, [x, y, w, h, fit]);\\r\\n        var paperSize = this.getSize(),\\r\\n            width = paperSize.width,\\r\\n            height = paperSize.height,\\r\\n            H, W;\\r\\n        if (fit) {\\r\\n            H = height / h;\\r\\n            W = width / w;\\r\\n            if (w * H < width) {\\r\\n                x -= (width - w * H) / 2 / H;\\r\\n            }\\r\\n            if (h * W < height) {\\r\\n                y -= (height - h * W) / 2 / W;\\r\\n            }\\r\\n        }\\r\\n        this._viewBox = [x, y, w, h, !!fit];\\r\\n        this._viewBoxShift = {\\r\\n            dx: -x,\\r\\n            dy: -y,\\r\\n            scale: paperSize\\r\\n        };\\r\\n        this.forEach(function (el) {\\r\\n            el.transform(\\\"...\\\");\\r\\n        });\\r\\n        return this;\\r\\n    };\\r\\n    var createNode;\\r\\n    R._engine.initWin = function (win) {\\r\\n        var doc = win.document;\\r\\n        if (doc.styleSheets.length < 31) {\\r\\n            doc.createStyleSheet().addRule(\\\".rvml\\\", \\\"behavior:url(#default#VML)\\\");\\r\\n        } else {\\r\\n            // no more room, add to the existing one\\r\\n            // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\\r\\n            doc.styleSheets[0].addRule(\\\".rvml\\\", \\\"behavior:url(#default#VML)\\\");\\r\\n        }\\r\\n        try {\\r\\n            !doc.namespaces.rvml && doc.namespaces.add(\\\"rvml\\\", \\\"urn:schemas-microsoft-com:vml\\\");\\r\\n            createNode = function (tagName) {\\r\\n                return doc.createElement('<rvml:' + tagName + ' class=\\\"rvml\\\">');\\r\\n            };\\r\\n        } catch (e) {\\r\\n            createNode = function (tagName) {\\r\\n                return doc.createElement('<' + tagName + ' xmlns=\\\"urn:schemas-microsoft.com:vml\\\" class=\\\"rvml\\\">');\\r\\n            };\\r\\n        }\\r\\n    };\\r\\n    R._engine.initWin(R._g.win);\\r\\n    R._engine.create = function () {\\r\\n        var con = R._getContainer.apply(0, arguments),\\r\\n            container = con.container,\\r\\n            height = con.height,\\r\\n            s,\\r\\n            width = con.width,\\r\\n            x = con.x,\\r\\n            y = con.y;\\r\\n        if (!container) {\\r\\n            throw new Error(\\\"VML container not found.\\\");\\r\\n        }\\r\\n        var res = new R._Paper,\\r\\n            c = res.canvas = R._g.doc.createElement(\\\"div\\\"),\\r\\n            cs = c.style;\\r\\n        x = x || 0;\\r\\n        y = y || 0;\\r\\n        width = width || 512;\\r\\n        height = height || 342;\\r\\n        res.width = width;\\r\\n        res.height = height;\\r\\n        width == +width && (width += \\\"px\\\");\\r\\n        height == +height && (height += \\\"px\\\");\\r\\n        res.coordsize = zoom * 1e3 + S + zoom * 1e3;\\r\\n        res.coordorigin = \\\"0 0\\\";\\r\\n        res.span = R._g.doc.createElement(\\\"span\\\");\\r\\n        res.span.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\\\";\\r\\n        c.appendChild(res.span);\\r\\n        cs.cssText = R.format(\\\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\\\", width, height);\\r\\n        if (container == 1) {\\r\\n            R._g.doc.body.appendChild(c);\\r\\n            cs.left = x + \\\"px\\\";\\r\\n            cs.top = y + \\\"px\\\";\\r\\n            cs.position = \\\"absolute\\\";\\r\\n        } else {\\r\\n            if (container.firstChild) {\\r\\n                container.insertBefore(c, container.firstChild);\\r\\n            } else {\\r\\n                container.appendChild(c);\\r\\n            }\\r\\n        }\\r\\n        res.renderfix = function () {};\\r\\n        return res;\\r\\n    };\\r\\n    R.prototype.clear = function () {\\r\\n        R.eve(\\\"raphael.clear\\\", this);\\r\\n        this.canvas.innerHTML = E;\\r\\n        this.span = R._g.doc.createElement(\\\"span\\\");\\r\\n        this.span.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\\\";\\r\\n        this.canvas.appendChild(this.span);\\r\\n        this.bottom = this.top = null;\\r\\n    };\\r\\n    R.prototype.remove = function () {\\r\\n        R.eve(\\\"raphael.remove\\\", this);\\r\\n        this.canvas.parentNode.removeChild(this.canvas);\\r\\n        for (var i in this) {\\r\\n            this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\r\\n        }\\r\\n        return true;\\r\\n    };\\r\\n\\r\\n    var setproto = R.st;\\r\\n    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\\r\\n        setproto[method] = (function (methodname) {\\r\\n            return function () {\\r\\n                var arg = arguments;\\r\\n                return this.forEach(function (el) {\\r\\n                    el[methodname].apply(el, arg);\\r\\n                });\\r\\n            };\\r\\n        })(method);\\r\\n    }\\r\\n}));\\r\\n\\r\\n// ┌────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\r\\n// │ Raphaël @VERSION - JavaScript Vector Library                       │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\\\\\\\\\r\\n// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\\\\\\\\\r\\n// ├────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\r\\n// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\\\\\\\\\r\\n// └────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\r\\n\\r\\n(function (glob, factory) {\\r\\n    if (typeof define === \\\"function\\\" && define.amd) {\\r\\n        define(\\\"raphael\\\", [\\\"raphael.core\\\", \\\"raphael.svg\\\", \\\"raphael.vml\\\"], function(Raphael) {\\r\\n            return (glob.Raphael = factory(Raphael));\\r\\n        });\\r\\n    } else if (typeof exports === \\\"object\\\") {\\r\\n        var raphael = require(\\\"raphael.core\\\");\\r\\n\\r\\n        require(\\\"raphael.svg\\\");\\r\\n        require(\\\"raphael.vml\\\");\\r\\n\\r\\n        module.exports = factory(raphael);\\r\\n    } else {\\r\\n        glob.Raphael = factory(glob.Raphael);\\r\\n    }\\r\\n}(this, function (Raphael) {\\r\\n    return Raphael.ninja();\\r\\n}));\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/**\\r\\n * FRaphael\\r\\n * \\tAn extension for Raphael.js to make it easier to work with Filter Effects\\r\\n *\\r\\n * Copyright © 2013 Chris Scott <chris.scott@factmint.com>\\r\\n * Delivered with and licensed under the MIT licence\\r\\n *\\r\\n */\\r\\n\\r\\n// Create the global FRaphael object\\r\\n(function(scope) {\\r\\n    var\\tversion = \\\"0.0.1\\\",\\r\\n        license = \\\"MIT\\\";\\r\\n\\r\\n    var\\tns = \\\"http://www.w3.org/2000/svg\\\",\\r\\n        idCounter = 0;\\r\\n\\r\\n    var FR = {\\r\\n        // Object prototype for a filter\\r\\n        Filter: function(id) {\\r\\n            if (id == undefined) {\\r\\n                id = \\\"filter-\\\" + idCounter++;\\r\\n                while(FR.filters[id] != undefined) {\\r\\n                    id = \\\"filter-\\\" + idCounter++;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            if (FR.filters[id] != undefined) {\\r\\n                throw \\\"A filter with id \\\" + id + \\\" already exists\\\";\\r\\n            }\\r\\n\\r\\n            this.element = document.createElementNS(ns, \\\"filter\\\");\\r\\n            this.element.setAttribute(\\\"id\\\", id);\\r\\n            this.element.setAttribute(\\\"x\\\", \\\"-25%\\\");\\r\\n            this.element.setAttribute(\\\"y\\\", \\\"-25%\\\");\\r\\n            this.element.setAttribute(\\\"width\\\", \\\"150%\\\");\\r\\n            this.element.setAttribute(\\\"height\\\", \\\"150%\\\");\\r\\n\\r\\n            this.lastFEResult = null;\\r\\n\\r\\n            FR.filters[id] = this;\\r\\n            this.id = id;\\r\\n        },\\r\\n\\r\\n        // Object prototype for an effect\\r\\n        FilterEffect: function(type, attributes) {\\r\\n            this.element = document.createElementNS(ns, type);\\r\\n            for (var key in attributes) {\\r\\n                this.element.setAttribute(key, attributes[key]);\\r\\n            }\\r\\n        },\\r\\n\\r\\n        // Return the filter applied to an element or a new filter if none are currently applied\\r\\n        getFilter: function(element) {\\r\\n            var filterId = element.data(\\\"filterId\\\");\\r\\n            var filter = null;\\r\\n\\r\\n            if (filterId == undefined) {\\r\\n                filterId = \\\"element-filter-\\\" + element.id;\\r\\n                filter = element.paper.createFilter(filterId);\\r\\n                element.filter(filterId);\\r\\n            } else {\\r\\n                filter = FR.filters[filterId];\\r\\n            }\\r\\n\\r\\n            return filter;\\r\\n        },\\r\\n\\r\\n        // maintain a list of filters by id\\r\\n        filters: {}\\r\\n    };\\r\\n\\r\\n    FR.Filter.prototype = {\\r\\n        addEffect: function(type, attributes, children) {\\r\\n            var effect = new FR.FilterEffect(type, attributes);\\r\\n\\r\\n            if (children) {\\r\\n                if (children instanceof Array) {\\r\\n                    for (var x in children) {\\r\\n                        if (!children.hasOwnProperty(x)) continue;\\r\\n\\r\\n                        effect.element.appendChild(children[x].element);\\r\\n                    }\\r\\n                } else {\\r\\n                    effect.element.appendChild(children.element);\\r\\n                }\\r\\n            }\\r\\n\\r\\n            this.element.appendChild(effect.element);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        chainEffect: function(type, attributes, children) {\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            var inId;\\r\\n            var outId;\\r\\n            if (attributes.in == undefined) {\\r\\n                inId = this.getLastResult();\\r\\n            } else {\\r\\n                inId = attributes.in;\\r\\n            }\\r\\n            if (attributes.result == undefined) {\\r\\n                outId = idCounter++;\\r\\n            } else {\\r\\n                outId = attributes.result;\\r\\n            }\\r\\n\\r\\n            this.lastFEResult = outId;\\r\\n\\r\\n            attributes.in = inId;\\r\\n            attributes.result = outId;\\r\\n\\r\\n            this.addEffect(type, attributes, children);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        getLastResult: function() {\\r\\n            return (this.lastFEResult == undefined) ? \\\"SourceGraphic\\\" : this.lastFEResult;\\r\\n        },\\r\\n\\r\\n        merge: function(in1, in2, attributes) {\\r\\n            var mergeNode1 = new FR.FilterEffect(\\\"feMergeNode\\\", {\\r\\n                in: in1\\r\\n            });\\r\\n            var mergeNode2 = new FR.FilterEffect(\\\"feMergeNode\\\", {\\r\\n                in: in2\\r\\n            });\\r\\n\\r\\n            this.chainEffect(\\\"feMerge\\\", attributes, [mergeNode1, mergeNode2]);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        compose: function(in1, in2, operator, attributes) {\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            if (operator == undefined) {\\r\\n                operator = \\\"over\\\";\\r\\n            }\\r\\n\\r\\n            attributes.in = in1;\\r\\n            attributes.in2 = in2;\\r\\n            attributes.operator = operator;\\r\\n\\r\\n            this.chainEffect(\\\"feComposite\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        arithmeticCompose: function(in1, in2, k1, k2, k3, k4) {\\r\\n            if (k1 == undefined) {\\r\\n                k1 = 0;\\r\\n            }\\r\\n            if (k2 == undefined) {\\r\\n                k2 = 0;\\r\\n            }\\r\\n            if (k3 == undefined) {\\r\\n                k3 = 0;\\r\\n            }\\r\\n            if (k4 == undefined) {\\r\\n                k4 = 0;\\r\\n            }\\r\\n\\r\\n            this.compose(in1, in2, \\\"arithmetic\\\", {\\r\\n                k1: k1,\\r\\n                k2: k2,\\r\\n                k3: k3,\\r\\n                k4: k4\\r\\n            });\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addBlur: function(stdDeviation, attributes) {\\r\\n            if (!stdDeviation) {\\r\\n                throw \\\"Standard deviation is required to perform a blur filter\\\";\\r\\n            }\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n            attributes.stdDeviation = stdDeviation;\\r\\n\\r\\n            this.chainEffect(\\\"feGaussianBlur\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addOffset: function(dx, dy, attributes) {\\r\\n            if (dx == undefined | dy == undefined) {\\r\\n                throw \\\"dx and dy values are required to perform an offset FE\\\";\\r\\n            }\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n            attributes.dx = dx;\\r\\n            attributes.dy = dy;\\r\\n\\r\\n            this.chainEffect(\\\"feOffset\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addLighting: function(x, y, z, color, type, attributes) {\\r\\n            if (x == undefined | y == undefined | z == undefined) {\\r\\n                throw \\\"Three co-ordinates are required to create a light source\\\";\\r\\n            }\\r\\n\\r\\n            var previousResult = this.getLastResult();\\r\\n\\r\\n            var id = idCounter++;\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            attributes.result = id;\\r\\n            if (color != undefined) {\\r\\n                attributes[\\\"lighting-color\\\"] = color;\\r\\n            }\\r\\n\\r\\n            if (type == undefined || type == \\\"diffuse\\\") {\\r\\n                type = \\\"feDiffuseLighting\\\";\\r\\n            } else if (type == \\\"specular\\\") {\\r\\n                type = \\\"feSpecularLighting\\\";\\r\\n            }\\r\\n\\r\\n            var lightSource = new FR.FilterEffect(\\\"fePointLight\\\", {\\r\\n                x: x,\\r\\n                y: y,\\r\\n                z: z\\r\\n            });\\r\\n\\r\\n            this.chainEffect(type, attributes, lightSource).arithmeticCompose(previousResult, id, 3, 0.2, 0, 0);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addShiftToColor: function(color, moveBy, attributes) {\\r\\n            if (color == undefined) {\\r\\n                throw \\\"A colour string is a required argument to create a colorMatrix\\\";\\r\\n            }\\r\\n            if (moveBy == undefined) {\\r\\n                moveBy = 0.5;\\r\\n            }\\r\\n\\r\\n            var remainingColor = 1 - moveBy, x = remainingColor;\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            var colorObject = Raphael.color(color);\\r\\n            var\\tr = colorObject.r * moveBy / 255,\\r\\n                g = colorObject.g * moveBy / 255,\\r\\n                b = colorObject.b * moveBy / 255;\\r\\n\\r\\n            /**\\r\\n             * r'\\tx 0 0 0 r\\t\\tr\\r\\n             * g'\\t0 x 0 0 g\\t\\tg\\r\\n             * b' =\\t0 0 x 0 b\\t.\\tb\\r\\n             * a'\\t0 0 0 1 0\\t\\to\\r\\n             * 1\\t\\t\\t\\t\\t1\\r\\n             */\\r\\n            attributes.values = x + \\\" 0 0 0 \\\" + r + \\\" 0 \\\" + x + \\\" 0 0 \\\" + g + \\\" 0 0 \\\" + x + \\\" 0 \\\" + b + \\\" 0 0 0 1 0 \\\";\\r\\n\\r\\n            this.chainEffect(\\\"feColorMatrix\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addRecolor: function(color, opacity, attributes) {\\r\\n            if (color == undefined) {\\r\\n                throw \\\"A colour string is a required argument to create a colorMatrix\\\";\\r\\n            }\\r\\n            if (opacity == undefined) {\\r\\n                opacity = 1;\\r\\n            }\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            var colorObject = Raphael.color(color);\\r\\n            var\\tr = colorObject.r / 255,\\r\\n                g = colorObject.g / 255,\\r\\n                b = colorObject.b / 255;\\r\\n\\r\\n            /**\\r\\n             * r'\\t0 0 0 0 r\\t\\tr\\r\\n             * g'\\t0 0 0 0 g\\t\\tg\\r\\n             * b' =\\t0 0 0 0 b\\t.\\tb\\r\\n             * a'\\t0 0 0 a 0\\t\\ta\\r\\n             * 1\\t\\t\\t\\t\\t1\\r\\n             */\\r\\n            attributes.values = \\\"0 0 0 0 \\\" + r + \\\" 0 0 0 0 \\\" + g + \\\" 0 0 0 0 \\\" + b + \\\" 0 0 0 \\\" + opacity + \\\" 0 \\\";\\r\\n\\r\\n            this.chainEffect(\\\"feColorMatrix\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addDesaturate: function(saturation, attributes) {\\r\\n            if (saturation == undefined) {\\r\\n                saturnation = 0;\\r\\n            }\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            attributes.values = saturation;\\r\\n            attributes.type = \\\"saturate\\\";\\r\\n\\r\\n            this.chainEffect(\\\"feColorMatrix\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        addConvolveMatrix: function(matrix, attributes) {\\r\\n            if (matrix == undefined) {\\r\\n                throw \\\"A matrix (usually 9 numbers) must be provided to apply a convolve matrix transform\\\";\\r\\n            }\\r\\n\\r\\n            if (attributes == undefined) {\\r\\n                attributes = {};\\r\\n            }\\r\\n\\r\\n            attributes.kernelMatrix = matrix;\\r\\n\\r\\n            this.chainEffect(\\\"feConvolveMatrix\\\", attributes);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        createShadow: function(dx, dy, blur, opacity, color) {\\r\\n            if (dx == undefined) {\\r\\n                throw \\\"dx is required for the shadow effect\\\";\\r\\n            }\\r\\n            if (dy == undefined) {\\r\\n                throw \\\"dy is required for the shadow effect\\\";\\r\\n            }\\r\\n            if (blur == undefined) {\\r\\n                throw \\\"blur (stdDeviation) is required for the shadow effect\\\";\\r\\n            }\\r\\n\\r\\n            if (opacity == undefined) {\\r\\n                opacity = 0.6;\\r\\n            }\\r\\n\\r\\n            var previousResult = this.getLastResult();\\r\\n\\r\\n            if (color == undefined) {\\r\\n                color = \\\"#000000\\\";\\r\\n            }\\r\\n\\r\\n            this.addOffset(dx, dy, {\\r\\n                in: \\\"SourceAlpha\\\"\\r\\n            });\\r\\n\\r\\n            this.addRecolor(color, opacity);\\r\\n\\r\\n            this.addBlur(blur);\\r\\n\\r\\n            this.merge(this.getLastResult(), previousResult);\\r\\n\\r\\n            return this;\\r\\n        },\\r\\n\\r\\n        createEmboss: function(height, x, y, z) {\\r\\n            if (height == undefined) {\\r\\n                height = 2;\\r\\n            }\\r\\n            if (x == undefined) {\\r\\n                x = -1000;\\r\\n            }\\r\\n            if (y == undefined) {\\r\\n                y = -5000;\\r\\n            }\\r\\n            if (z == undefined) {\\r\\n                z = 300;\\r\\n            }\\r\\n\\r\\n            // Create the highlight\\r\\n\\r\\n            this.addOffset(height * x / (x + y), height * y / (x + y), {\\r\\n                in: \\\"SourceAlpha\\\"\\r\\n            });\\r\\n\\r\\n            this.addBlur(height * 0.5);\\r\\n\\r\\n            var whiteLightSource = new FR.FilterEffect(\\\"fePointLight\\\", {\\r\\n                x: x,\\r\\n                y: y,\\r\\n                z: z\\r\\n            });\\r\\n\\r\\n            this.chainEffect(\\\"feSpecularLighting\\\", {\\r\\n                surfaceScale: height,\\r\\n                specularConstant: 0.8,\\r\\n                specularExponent: 15\\r\\n            }, whiteLightSource);\\r\\n\\r\\n            this.compose(this.getLastResult(), \\\"SourceAlpha\\\", \\\"in\\\");\\r\\n            var whiteLight = this.getLastResult();\\r\\n\\r\\n            // Create the lowlight\\r\\n\\r\\n            this.addOffset(height * -1 * x / (x + y), height * -1 * y / (x + y), {\\r\\n                in: \\\"SourceAlpha\\\"\\r\\n            });\\r\\n\\r\\n            this.addBlur(height * 0.5);\\r\\n\\r\\n            var darkLightSource = new FR.FilterEffect(\\\"fePointLight\\\", {\\r\\n                x: -1 * x,\\r\\n                y: -1 * y,\\r\\n                z:      z\\r\\n            });\\r\\n\\r\\n            this.chainEffect(\\\"feSpecularLighting\\\", {\\r\\n                surfaceScale: height,\\r\\n                specularConstant: 1.8,\\r\\n                specularExponent: 6\\r\\n            }, darkLightSource);\\r\\n\\r\\n            this.compose(this.getLastResult(), \\\"SourceAlpha\\\", \\\"in\\\");\\r\\n            this.chainEffect(\\\"feColorMatrix\\\", {\\r\\n                values: \\\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\\\"\\r\\n            });\\r\\n            var darkLight = this.getLastResult();\\r\\n\\r\\n            this.arithmeticCompose(whiteLight, darkLight, 0, 0.8, 0.5, 0);\\r\\n\\r\\n            this.merge(\\\"SourceGraphic\\\", this.getLastResult());\\r\\n\\r\\n            return this;\\r\\n        }\\r\\n    };\\r\\n\\r\\n    scope.FRaphael = FR;\\r\\n})(this);\\r\\n\\r\\n/**\\r\\n * add a filter to the paper by id\\r\\n */\\r\\nRaphael.fn.createFilter = function(id) {\\r\\n    var paper = this;\\r\\n    var filter = new FRaphael.Filter(id);\\r\\n    paper.defs.appendChild(filter.element);\\r\\n\\r\\n    return filter;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Apply a filter to an element by id\\r\\n */\\r\\nRaphael.el.filter = function(filter) {\\r\\n    var id = (filter instanceof FRaphael.Filter) ? filter.id : filter;\\r\\n\\r\\n    this.node.setAttribute(\\\"filter\\\", \\\"url(#\\\" + id + \\\")\\\");\\r\\n    this.data(\\\"filterId\\\", id);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Get the current filter for an element or a new one if not\\r\\n */\\r\\nRaphael.el.getFilter = function() {\\r\\n    return FRaphael.getFilter(this);\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for applying blur\\r\\n */\\r\\nRaphael.el.blur = function(stdDeviation) {\\r\\n    if (stdDeviation == undefined) {\\r\\n        stdDeviation = 3;\\r\\n    }\\r\\n\\r\\n    this.getFilter().addBlur(stdDeviation);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for applying a drop shadow\\r\\n */\\r\\nRaphael.el.shadow = function(dx, dy, blur, opacity, color) {\\r\\n    if (dx == undefined) {\\r\\n        dx = 3;\\r\\n    }\\r\\n    if (dy == undefined) {\\r\\n        dy = 3;\\r\\n    }\\r\\n    if (blur == undefined) {\\r\\n        blur = 3;\\r\\n    }\\r\\n\\r\\n    this.getFilter().createShadow(dx, dy, blur, opacity, color);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for applying lighting\\r\\n */\\r\\nRaphael.el.light = function(x, y, z, color, type) {\\r\\n    if (x == undefined) {\\r\\n        x = this.paper.width;\\r\\n    }\\r\\n    if (y == undefined) {\\r\\n        y = 0;\\r\\n    }\\r\\n    if (z == undefined) {\\r\\n        z = 20;\\r\\n    }\\r\\n\\r\\n    this.getFilter().addLighting(x, y, z, color, type);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for applying a colour shift\\r\\n */\\r\\nRaphael.el.colorShift = function(color, shift) {\\r\\n    if (color == undefined) {\\r\\n        color = \\\"black\\\";\\r\\n    }\\r\\n    if (shift == undefined) {\\r\\n        shift = 0.5;\\r\\n    }\\r\\n\\r\\n    this.getFilter().addShiftToColor(color, shift);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for embossing\\r\\n */\\r\\nRaphael.el.emboss = function(height) {\\r\\n    this.getFilter().createEmboss(height);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for desaturating\\r\\n */\\r\\nRaphael.el.desaturate = function(saturation) {\\r\\n    this.getFilter().addDesaturate(saturation);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A shorthand method for complete desaturation\\r\\n */\\r\\nRaphael.el.greyScale = function() {\\r\\n    this.getFilter().addDesaturate(0);\\r\\n\\r\\n    return this;\\r\\n};\\r\\n\"","/*\n\tBased on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>\n\thttp://www.phpied.com/rgb-color-parser-in-javascript/\n*/\n\nmodule.exports = function(color_string) {\n    this.ok = false;\n    this.alpha = 1.0;\n\n    // strip any leading #\n    if (color_string.charAt(0) == '#') { // remove # if any\n        color_string = color_string.substr(1,6);\n    }\n\n    color_string = color_string.replace(/ /g,'');\n    color_string = color_string.toLowerCase();\n\n    // before getting into regexps, try simple matches\n    // and overwrite the input\n    var simple_colors = {\n        aliceblue: 'f0f8ff',\n        antiquewhite: 'faebd7',\n        aqua: '00ffff',\n        aquamarine: '7fffd4',\n        azure: 'f0ffff',\n        beige: 'f5f5dc',\n        bisque: 'ffe4c4',\n        black: '000000',\n        blanchedalmond: 'ffebcd',\n        blue: '0000ff',\n        blueviolet: '8a2be2',\n        brown: 'a52a2a',\n        burlywood: 'deb887',\n        cadetblue: '5f9ea0',\n        chartreuse: '7fff00',\n        chocolate: 'd2691e',\n        coral: 'ff7f50',\n        cornflowerblue: '6495ed',\n        cornsilk: 'fff8dc',\n        crimson: 'dc143c',\n        cyan: '00ffff',\n        darkblue: '00008b',\n        darkcyan: '008b8b',\n        darkgoldenrod: 'b8860b',\n        darkgray: 'a9a9a9',\n        darkgreen: '006400',\n        darkkhaki: 'bdb76b',\n        darkmagenta: '8b008b',\n        darkolivegreen: '556b2f',\n        darkorange: 'ff8c00',\n        darkorchid: '9932cc',\n        darkred: '8b0000',\n        darksalmon: 'e9967a',\n        darkseagreen: '8fbc8f',\n        darkslateblue: '483d8b',\n        darkslategray: '2f4f4f',\n        darkturquoise: '00ced1',\n        darkviolet: '9400d3',\n        deeppink: 'ff1493',\n        deepskyblue: '00bfff',\n        dimgray: '696969',\n        dodgerblue: '1e90ff',\n        feldspar: 'd19275',\n        firebrick: 'b22222',\n        floralwhite: 'fffaf0',\n        forestgreen: '228b22',\n        fuchsia: 'ff00ff',\n        gainsboro: 'dcdcdc',\n        ghostwhite: 'f8f8ff',\n        gold: 'ffd700',\n        goldenrod: 'daa520',\n        gray: '808080',\n        green: '008000',\n        greenyellow: 'adff2f',\n        honeydew: 'f0fff0',\n        hotpink: 'ff69b4',\n        indianred : 'cd5c5c',\n        indigo : '4b0082',\n        ivory: 'fffff0',\n        khaki: 'f0e68c',\n        lavender: 'e6e6fa',\n        lavenderblush: 'fff0f5',\n        lawngreen: '7cfc00',\n        lemonchiffon: 'fffacd',\n        lightblue: 'add8e6',\n        lightcoral: 'f08080',\n        lightcyan: 'e0ffff',\n        lightgoldenrodyellow: 'fafad2',\n        lightgrey: 'd3d3d3',\n        lightgreen: '90ee90',\n        lightpink: 'ffb6c1',\n        lightsalmon: 'ffa07a',\n        lightseagreen: '20b2aa',\n        lightskyblue: '87cefa',\n        lightslateblue: '8470ff',\n        lightslategray: '778899',\n        lightsteelblue: 'b0c4de',\n        lightyellow: 'ffffe0',\n        lime: '00ff00',\n        limegreen: '32cd32',\n        linen: 'faf0e6',\n        magenta: 'ff00ff',\n        maroon: '800000',\n        mediumaquamarine: '66cdaa',\n        mediumblue: '0000cd',\n        mediumorchid: 'ba55d3',\n        mediumpurple: '9370d8',\n        mediumseagreen: '3cb371',\n        mediumslateblue: '7b68ee',\n        mediumspringgreen: '00fa9a',\n        mediumturquoise: '48d1cc',\n        mediumvioletred: 'c71585',\n        midnightblue: '191970',\n        mintcream: 'f5fffa',\n        mistyrose: 'ffe4e1',\n        moccasin: 'ffe4b5',\n        navajowhite: 'ffdead',\n        navy: '000080',\n        oldlace: 'fdf5e6',\n        olive: '808000',\n        olivedrab: '6b8e23',\n        orange: 'ffa500',\n        orangered: 'ff4500',\n        orchid: 'da70d6',\n        palegoldenrod: 'eee8aa',\n        palegreen: '98fb98',\n        paleturquoise: 'afeeee',\n        palevioletred: 'd87093',\n        papayawhip: 'ffefd5',\n        peachpuff: 'ffdab9',\n        peru: 'cd853f',\n        pink: 'ffc0cb',\n        plum: 'dda0dd',\n        powderblue: 'b0e0e6',\n        purple: '800080',\n        rebeccapurple: '663399',\n        red: 'ff0000',\n        rosybrown: 'bc8f8f',\n        royalblue: '4169e1',\n        saddlebrown: '8b4513',\n        salmon: 'fa8072',\n        sandybrown: 'f4a460',\n        seagreen: '2e8b57',\n        seashell: 'fff5ee',\n        sienna: 'a0522d',\n        silver: 'c0c0c0',\n        skyblue: '87ceeb',\n        slateblue: '6a5acd',\n        slategray: '708090',\n        snow: 'fffafa',\n        springgreen: '00ff7f',\n        steelblue: '4682b4',\n        tan: 'd2b48c',\n        teal: '008080',\n        thistle: 'd8bfd8',\n        tomato: 'ff6347',\n        turquoise: '40e0d0',\n        violet: 'ee82ee',\n        violetred: 'd02090',\n        wheat: 'f5deb3',\n        white: 'ffffff',\n        whitesmoke: 'f5f5f5',\n        yellow: 'ffff00',\n        yellowgreen: '9acd32'\n    };\n    color_string = simple_colors[color_string] || color_string;\n    // emd of simple type-in colors\n\n    // array of color definition objects\n    var color_defs = [\n        {\n            re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*((?:\\d?\\.)?\\d)\\)$/,\n            example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3]),\n                    parseFloat(bits[4])\n                ];\n            }\n        },\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1]),\n                    parseInt(bits[2]),\n                    parseInt(bits[3])\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n            example: ['#00ff00', '336699'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1], 16),\n                    parseInt(bits[2], 16),\n                    parseInt(bits[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n            example: ['#fb0', 'f0f'],\n            process: function (bits){\n                return [\n                    parseInt(bits[1] + bits[1], 16),\n                    parseInt(bits[2] + bits[2], 16),\n                    parseInt(bits[3] + bits[3], 16)\n                ];\n            }\n        }\n    ];\n\n    // search through the definitions to find a match\n    for (var i = 0; i < color_defs.length; i++) {\n        var re = color_defs[i].re;\n        var processor = color_defs[i].process;\n        var bits = re.exec(color_string);\n        if (bits) {\n            var channels = processor(bits);\n            this.r = channels[0];\n            this.g = channels[1];\n            this.b = channels[2];\n            if (channels.length > 3) {\n                this.alpha = channels[3];\n            }\n            this.ok = true;\n        }\n\n    }\n\n    // validate/cleanup values\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n    this.alpha = (this.alpha < 0) ? 0 : ((this.alpha > 1.0 || isNaN(this.alpha)) ? 1.0 : this.alpha);\n\n    // some getters\n    this.toRGB = function () {\n        return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';\n    }\n    this.toRGBA = function () {\n        return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';\n    }\n    this.toHex = function () {\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n        if (r.length == 1) r = '0' + r;\n        if (g.length == 1) g = '0' + g;\n        if (b.length == 1) b = '0' + b;\n        return '#' + r + g + b;\n    }\n\n    // help\n    this.getHelpXML = function () {\n\n        var examples = new Array();\n        // add regexps\n        for (var i = 0; i < color_defs.length; i++) {\n            var example = color_defs[i].example;\n            for (var j = 0; j < example.length; j++) {\n                examples[examples.length] = example[j];\n            }\n        }\n        // add type-in colors\n        for (var sc in simple_colors) {\n            examples[examples.length] = sc;\n        }\n\n        var xml = document.createElement('ul');\n        xml.setAttribute('id', 'rgbcolor-examples');\n        for (var i = 0; i < examples.length; i++) {\n            try {\n                var list_item = document.createElement('li');\n                var list_color = new RGBColor(examples[i]);\n                var example_div = document.createElement('div');\n                example_div.style.cssText =\n                        'margin: 3px; '\n                        + 'border: 1px solid black; '\n                        + 'background:' + list_color.toHex() + '; '\n                        + 'color:' + list_color.toHex()\n                ;\n                example_div.appendChild(document.createTextNode('test'));\n                var list_item_value = document.createTextNode(\n                    ' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex()\n                );\n                list_item.appendChild(example_div);\n                list_item.appendChild(list_item_value);\n                xml.appendChild(list_item);\n\n            } catch(e){}\n        }\n        return xml;\n\n    }\n\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","/*! For license information please see shifty.js.LICENSE.txt */\n!function(t,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(\"shifty\",[],n):\"object\"==typeof exports?exports.shifty=n():t.shifty=n()}(self,(function(){return function(){\"use strict\";var t={720:function(t,n,e){e.r(n),e.d(n,{Scene:function(){return sn},Tweenable:function(){return kt},interpolate:function(){return nn},processTweens:function(){return dt},setBezierFunction:function(){return $},shouldScheduleUpdate:function(){return bt},tween:function(){return Pt},unsetBezierFunction:function(){return L}});var r={};e.r(r),e.d(r,{bounce:function(){return D},bouncePast:function(){return q},easeFrom:function(){return B},easeFromTo:function(){return Q},easeInBack:function(){return A},easeInCirc:function(){return j},easeInCubic:function(){return c},easeInExpo:function(){return w},easeInOutBack:function(){return T},easeInOutCirc:function(){return P},easeInOutCubic:function(){return l},easeInOutExpo:function(){return S},easeInOutQuad:function(){return s},easeInOutQuart:function(){return v},easeInOutQuint:function(){return d},easeInOutSine:function(){return b},easeInQuad:function(){return u},easeInQuart:function(){return h},easeInQuint:function(){return y},easeInSine:function(){return m},easeOutBack:function(){return E},easeOutBounce:function(){return M},easeOutCirc:function(){return k},easeOutCubic:function(){return f},easeOutExpo:function(){return O},easeOutQuad:function(){return a},easeOutQuart:function(){return p},easeOutQuint:function(){return _},easeOutSine:function(){return g},easeTo:function(){return N},elastic:function(){return I},linear:function(){return o},swingFrom:function(){return x},swingFromTo:function(){return F},swingTo:function(){return C}});var i={};e.r(i),e.d(i,{afterTween:function(){return Jt},beforeTween:function(){return Ht},doesApply:function(){return Wt},tweenCreated:function(){return Gt}});var o=function(t){return t},u=function(t){return Math.pow(t,2)},a=function(t){return-(Math.pow(t-1,2)-1)},s=function(t){return(t/=.5)<1?.5*Math.pow(t,2):-.5*((t-=2)*t-2)},c=function(t){return Math.pow(t,3)},f=function(t){return Math.pow(t-1,3)+1},l=function(t){return(t/=.5)<1?.5*Math.pow(t,3):.5*(Math.pow(t-2,3)+2)},h=function(t){return Math.pow(t,4)},p=function(t){return-(Math.pow(t-1,4)-1)},v=function(t){return(t/=.5)<1?.5*Math.pow(t,4):-.5*((t-=2)*Math.pow(t,3)-2)},y=function(t){return Math.pow(t,5)},_=function(t){return Math.pow(t-1,5)+1},d=function(t){return(t/=.5)<1?.5*Math.pow(t,5):.5*(Math.pow(t-2,5)+2)},m=function(t){return 1-Math.cos(t*(Math.PI/2))},g=function(t){return Math.sin(t*(Math.PI/2))},b=function(t){return-.5*(Math.cos(Math.PI*t)-1)},w=function(t){return 0===t?0:Math.pow(2,10*(t-1))},O=function(t){return 1===t?1:1-Math.pow(2,-10*t)},S=function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},j=function(t){return-(Math.sqrt(1-t*t)-1)},k=function(t){return Math.sqrt(1-Math.pow(t-1,2))},P=function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},M=function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},A=function(t){var n=1.70158;return t*t*((n+1)*t-n)},E=function(t){var n=1.70158;return(t-=1)*t*((n+1)*t+n)+1},T=function(t){var n=1.70158;return(t/=.5)<1?t*t*((1+(n*=1.525))*t-n)*.5:.5*((t-=2)*t*((1+(n*=1.525))*t+n)+2)},I=function(t){return-1*Math.pow(4,-8*t)*Math.sin((6*t-1)*(2*Math.PI)/2)+1},F=function(t){var n=1.70158;return(t/=.5)<1?t*t*((1+(n*=1.525))*t-n)*.5:.5*((t-=2)*t*((1+(n*=1.525))*t+n)+2)},x=function(t){var n=1.70158;return t*t*((n+1)*t-n)},C=function(t){var n=1.70158;return(t-=1)*t*((n+1)*t+n)+1},D=function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},q=function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?2-(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?2-(7.5625*(t-=2.25/2.75)*t+.9375):2-(7.5625*(t-=2.625/2.75)*t+.984375)},Q=function(t){return(t/=.5)<1?.5*Math.pow(t,4):-.5*((t-=2)*Math.pow(t,3)-2)},B=function(t){return Math.pow(t,4)},N=function(t){return Math.pow(t,.25)};function R(t,n,e,r,i,o){var u,a,s,c=0,f=0,l=0,h=function(t){return((c*t+f)*t+l)*t},p=function(t){return(3*c*t+2*f)*t+l},v=function(t){return t>=0?t:0-t};return c=1-(l=3*n)-(f=3*(r-n)-l),u=1-(s=3*e)-(a=3*(i-e)-s),function(t){return((u*t+a)*t+s)*t}(function(t,n){var e,r,i,o,u,a;for(i=t,a=0;a<8;a++){if(o=h(i)-t,v(o)<n)return i;if(u=p(i),v(u)<1e-6)break;i-=o/u}if((i=t)<(e=0))return e;if(i>(r=1))return r;for(;e<r;){if(o=h(i),v(o-t)<n)return i;t>o?e=i:r=i,i=.5*(r-e)+e}return i}(t,function(t){return 1/(200*t)}(o)))}var z,U=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.25,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.25,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.75,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.75;return function(i){return R(i,t,n,e,r,1)}},$=function(t,n,e,r,i){var o=U(n,e,r,i);return o.displayName=t,o.x1=n,o.y1=e,o.x2=r,o.y2=i,kt.formulas[t]=o},L=function(t){return delete kt.formulas[t]};function V(t,n){if(!(t instanceof n))throw new TypeError(\"Cannot call a class as a function\")}function W(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function G(t){return(G=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function H(t){return function(t){if(Array.isArray(t))return J(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(t){if(\"string\"==typeof t)return J(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===e&&t.constructor&&(e=t.constructor.name),\"Map\"===e||\"Set\"===e?Array.from(t):\"Arguments\"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?J(t,n):void 0}}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function J(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}function K(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function X(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?K(Object(e),!0).forEach((function(n){Y(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):K(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function Y(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var Z,tt,nt,et=\"linear\",rt=\"undefined\"!=typeof window?window:e.g,it=\"afterTween\",ot=\"afterTweenEnd\",ut=\"beforeTween\",at=\"tweenCreated\",st=\"function\",ct=\"string\",ft=rt.requestAnimationFrame||rt.webkitRequestAnimationFrame||rt.oRequestAnimationFrame||rt.msRequestAnimationFrame||rt.mozCancelRequestAnimationFrame&&rt.mozRequestAnimationFrame||setTimeout,lt=function(){},ht=null,pt=null,vt=X({},r),yt=function(t,n,e,r,i,o,u){var a,s,c,f=t<o?0:(t-o)/i,l=!1;for(var h in u&&u.call&&(l=!0,a=u(f)),n)l||(a=((s=u[h]).call?s:vt[s])(f)),c=e[h],n[h]=c+(r[h]-c)*a;return n},_t=function(t,n){var e=t._timestamp,r=t._currentState,i=t._delay;if(!(n<e+i)){var o=t._duration,u=t._targetState,a=e+i+o,s=n>a?a:n;t._hasEnded=s>=a;var c=o-(a-s),f=t._filters.length>0;if(t._hasEnded)return t._render(u,t._data,c),t.stop(!0);f&&t._applyFilter(ut),s<e+i?e=o=s=1:e+=i,yt(s,r,t._originalState,u,o,e,t._easing),f&&t._applyFilter(it),t._render(r,t._data,c)}},dt=function(){for(var t,n=kt.now(),e=ht;e;)t=e._next,_t(e,n),e=t},mt=Date.now||function(){return+new Date},gt=!1,bt=function(t){t&&gt||(gt=t,t&&wt())},wt=function t(){Z=mt(),gt&&ft.call(rt,t,16.666666666666668),dt()},Ot=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:et,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(Array.isArray(n)){var r=U.apply(void 0,H(n));return r}var i=G(n);if(vt[n])return vt[n];if(i===ct||i===st)for(var o in t)e[o]=n;else for(var u in t)e[u]=n[u]||et;return e},St=function(t){t===ht?(ht=t._next)?ht._previous=null:pt=null:t===pt?(pt=t._previous)?pt._next=null:ht=null:(tt=t._previous,nt=t._next,tt._next=nt,nt._previous=tt),t._previous=t._next=null},jt=\"function\"==typeof Promise?Promise:null;z=Symbol.toStringTag;var kt=function(){function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;V(this,t),Y(this,z,\"Promise\"),this._config={},this._data={},this._delay=0,this._filters=[],this._next=null,this._previous=null,this._timestamp=null,this._hasEnded=!1,this._resolve=null,this._reject=null,this._currentState=n||{},this._originalState={},this._targetState={},this._start=lt,this._render=lt,this._promiseCtor=jt,e&&this.setConfig(e)}var n,e;return n=t,(e=[{key:\"_applyFilter\",value:function(t){for(var n=this._filters.length;n>0;n--){var e=this._filters[n-n][t];e&&e(this)}}},{key:\"tween\",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return this._isPlaying&&this.stop(),!n&&this._config||this.setConfig(n),this._pausedAtTime=null,this._timestamp=t.now(),this._start(this.get(),this._data),this._delay&&this._render(this._currentState,this._data,0),this._resume(this._timestamp)}},{key:\"setConfig\",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=this._config;for(var r in n)e[r]=n[r];var i=e.promise,o=void 0===i?this._promiseCtor:i,u=e.start,a=void 0===u?lt:u,s=e.finish,c=e.render,f=void 0===c?this._config.step||lt:c,l=e.step,h=void 0===l?lt:l;this._data=e.data||e.attachment||this._data,this._isPlaying=!1,this._pausedAtTime=null,this._scheduleId=null,this._delay=n.delay||0,this._start=a,this._render=f||h,this._duration=e.duration||500,this._promiseCtor=o,s&&(this._resolve=s);var p=n.from,v=n.to,y=void 0===v?{}:v,_=this._currentState,d=this._originalState,m=this._targetState;for(var g in p)_[g]=p[g];var b=!1;for(var w in _){var O=_[w];b||G(O)!==ct||(b=!0),d[w]=O,m[w]=y.hasOwnProperty(w)?y[w]:O}if(this._easing=Ot(this._currentState,e.easing,this._easing),this._filters.length=0,b){for(var S in t.filters)t.filters[S].doesApply(this)&&this._filters.push(t.filters[S]);this._applyFilter(at)}return this}},{key:\"then\",value:function(t,n){var e=this;return this._promise=new this._promiseCtor((function(t,n){e._resolve=t,e._reject=n})),this._promise.then(t,n)}},{key:\"catch\",value:function(t){return this.then().catch(t)}},{key:\"finally\",value:function(t){return this.then().finally(t)}},{key:\"get\",value:function(){return X({},this._currentState)}},{key:\"set\",value:function(t){this._currentState=t}},{key:\"pause\",value:function(){if(this._isPlaying)return this._pausedAtTime=t.now(),this._isPlaying=!1,St(this),this}},{key:\"resume\",value:function(){return this._resume()}},{key:\"_resume\",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.now();return null===this._timestamp?this.tween():this._isPlaying?this._promise:(this._pausedAtTime&&(this._timestamp+=n-this._pausedAtTime,this._pausedAtTime=null),this._isPlaying=!0,null===ht?(ht=this,pt=this):(this._previous=pt,pt._next=this,pt=this),this)}},{key:\"seek\",value:function(n){n=Math.max(n,0);var e=t.now();return this._timestamp+n===0||(this._timestamp=e-n,_t(this,e)),this}},{key:\"stop\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isPlaying)return this;this._isPlaying=!1,St(this);var n=this._filters.length>0;return t&&(n&&this._applyFilter(ut),yt(1,this._currentState,this._originalState,this._targetState,1,0,this._easing),n&&(this._applyFilter(it),this._applyFilter(ot))),this._resolve&&this._resolve({data:this._data,state:this._currentState,tweenable:this}),this._resolve=null,this._reject=null,this}},{key:\"cancel\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=this._currentState,e=this._data,r=this._isPlaying;return r?(this._reject&&this._reject({data:e,state:n,tweenable:this}),this._resolve=null,this._reject=null,this.stop(t)):this}},{key:\"isPlaying\",value:function(){return this._isPlaying}},{key:\"hasEnded\",value:function(){return this._hasEnded}},{key:\"setScheduleFunction\",value:function(n){t.setScheduleFunction(n)}},{key:\"data\",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return t&&(this._data=X({},t)),this._data}},{key:\"dispose\",value:function(){for(var t in this)delete this[t]}}])&&W(n.prototype,e),t}();function Pt(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=new kt;return n.tween(t),n.tweenable=n,n}Y(kt,\"now\",(function(){return Z})),Y(kt,\"setScheduleFunction\",(function(t){return ft=t})),Y(kt,\"filters\",{}),Y(kt,\"formulas\",vt),bt(!0);var Mt,At,Et=/(\\d|-|\\.)/,Tt=/([^\\-0-9.]+)/g,It=/[0-9.-]+/g,Ft=(Mt=It.source,At=/,\\s*/.source,new RegExp(\"rgba?\\\\(\".concat(Mt).concat(At).concat(Mt).concat(At).concat(Mt,\"(\").concat(At).concat(Mt,\")?\\\\)\"),\"g\")),xt=/^.*\\(/,Ct=/#([0-9]|[a-f]){3,6}/gi,Dt=\"VAL\",qt=function(t,n){return t.map((function(t,e){return\"_\".concat(n,\"_\").concat(e)}))};function Qt(t){return parseInt(t,16)}var Bt=function(t){return\"rgb(\".concat((n=t,3===(n=n.replace(/#/,\"\")).length&&(n=(n=n.split(\"\"))[0]+n[0]+n[1]+n[1]+n[2]+n[2]),[Qt(n.substr(0,2)),Qt(n.substr(2,2)),Qt(n.substr(4,2))]).join(\",\"),\")\");var n},Nt=function(t,n,e){var r=n.match(t),i=n.replace(t,Dt);return r&&r.forEach((function(t){return i=i.replace(Dt,e(t))})),i},Rt=function(t){for(var n in t){var e=t[n];\"string\"==typeof e&&e.match(Ct)&&(t[n]=Nt(Ct,e,Bt))}},zt=function(t){var n=t.match(It),e=n.slice(0,3).map(Math.floor),r=t.match(xt)[0];if(3===n.length)return\"\".concat(r).concat(e.join(\",\"),\")\");if(4===n.length)return\"\".concat(r).concat(e.join(\",\"),\",\").concat(n[3],\")\");throw new Error(\"Invalid rgbChunk: \".concat(t))},Ut=function(t){return t.match(It)},$t=function(t,n){var e={};return n.forEach((function(n){e[n]=t[n],delete t[n]})),e},Lt=function(t,n){return n.map((function(n){return t[n]}))},Vt=function(t,n){return n.forEach((function(n){return t=t.replace(Dt,+n.toFixed(4))})),t},Wt=function(t){for(var n in t._currentState)if(\"string\"==typeof t._currentState[n])return!0;return!1};function Gt(t){var n=t._currentState;[n,t._originalState,t._targetState].forEach(Rt),t._tokenData=function(t){var n,e,r={};for(var i in t){var o=t[i];\"string\"==typeof o&&(r[i]={formatString:(n=o,e=void 0,e=n.match(Tt),e?(1===e.length||n.charAt(0).match(Et))&&e.unshift(\"\"):e=[\"\",\"\"],e.join(Dt)),chunkNames:qt(Ut(o),i)})}return r}(n)}function Ht(t){var n=t._currentState,e=t._originalState,r=t._targetState,i=t._easing,o=t._tokenData;!function(t,n){var e=function(e){var r=n[e].chunkNames,i=t[e];if(\"string\"==typeof i){var o=i.split(\" \"),u=o[o.length-1];r.forEach((function(n,e){return t[n]=o[e]||u}))}else r.forEach((function(n){return t[n]=i}));delete t[e]};for(var r in n)e(r)}(i,o),[n,e,r].forEach((function(t){return function(t,n){var e=function(e){Ut(t[e]).forEach((function(r,i){return t[n[e].chunkNames[i]]=+r})),delete t[e]};for(var r in n)e(r)}(t,o)}))}function Jt(t){var n=t._currentState,e=t._originalState,r=t._targetState,i=t._easing,o=t._tokenData;[n,e,r].forEach((function(t){return function(t,n){for(var e in n){var r=n[e],i=r.chunkNames,o=r.formatString,u=Vt(o,Lt($t(t,i),i));t[e]=Nt(Ft,u,zt)}}(t,o)})),function(t,n){for(var e in n){var r=n[e].chunkNames,i=t[r[0]];t[e]=\"string\"==typeof i?r.map((function(n){var e=t[n];return delete t[n],e})).join(\" \"):i}}(i,o)}function Kt(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function Xt(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?Kt(Object(e),!0).forEach((function(n){Yt(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):Kt(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function Yt(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var Zt=new kt,tn=kt.filters,nn=function(t,n,e,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=Xt({},t),u=Ot(t,r);for(var a in Zt._filters.length=0,Zt.set({}),Zt._currentState=o,Zt._originalState=t,Zt._targetState=n,Zt._easing=u,tn)tn[a].doesApply(Zt)&&Zt._filters.push(tn[a]);Zt._applyFilter(\"tweenCreated\"),Zt._applyFilter(\"beforeTween\");var s=yt(e,o,t,n,1,i,u);return Zt._applyFilter(\"afterTween\"),s};function en(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}function rn(t,n){if(!(t instanceof n))throw new TypeError(\"Cannot call a class as a function\")}function on(t,n){for(var e=0;e<n.length;e++){var r=n[e];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function un(t,n){var e=n.get(t);if(!e)throw new TypeError(\"attempted to get private field on non-instance\");return e.get?e.get.call(t):e.value}var an=new WeakMap,sn=function(){function t(){rn(this,t),an.set(this,{writable:!0,value:[]});for(var n=arguments.length,e=new Array(n),r=0;r<n;r++)e[r]=arguments[r];e.forEach(this.add.bind(this))}var n,e;return n=t,(e=[{key:\"add\",value:function(t){return un(this,an).push(t),t}},{key:\"remove\",value:function(t){var n=un(this,an).indexOf(t);return~n&&un(this,an).splice(n,1),t}},{key:\"empty\",value:function(){return this.tweenables.map(this.remove.bind(this))}},{key:\"isPlaying\",value:function(){return un(this,an).some((function(t){return t.isPlaying()}))}},{key:\"play\",value:function(){return un(this,an).forEach((function(t){return t.tween()})),this}},{key:\"pause\",value:function(){return un(this,an).forEach((function(t){return t.pause()})),this}},{key:\"resume\",value:function(){return un(this,an).forEach((function(t){return t.resume()})),this}},{key:\"stop\",value:function(t){return un(this,an).forEach((function(n){return n.stop(t)})),this}},{key:\"tweenables\",get:function(){return function(t){if(Array.isArray(t))return en(t)}(t=un(this,an))||function(t){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,n){if(t){if(\"string\"==typeof t)return en(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===e&&t.constructor&&(e=t.constructor.name),\"Map\"===e||\"Set\"===e?Array.from(t):\"Arguments\"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?en(t,n):void 0}}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}();var t}},{key:\"promises\",get:function(){return un(this,an).map((function(t){return t.then()}))}}])&&on(n.prototype,e),t}();kt.filters.token=i}},n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{}};return t[r](i,i.exports,e),i.exports}return e.d=function(t,n){for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},e(720)}()}));\n//# sourceMappingURL=shifty.js.map","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise -- used for calculations */\n\n/* eslint-disable unicorn/prefer-query-selector -- aiming at\n  backward-compatibility */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffset\n * @param {boolean} skipStyles\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || Object.prototype.toString.call(img).slice(8, -1) === 'HTMLImageElement' && !('naturalWidth' in img)) {\n    return;\n  }\n\n  var dimensionType = useOffset ? 'offset' : 'natural';\n  var w = img[dimensionType + 'Width'];\n  var h = img[dimensionType + 'Height']; // add ImageBitmap support,can blur texture source\n\n  if (Object.prototype.toString.call(img).slice(8, -1) === 'ImageBitmap') {\n    w = img.width;\n    h = img.height;\n  }\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  if (!skipStyles) {\n    canvas.style.width = w + 'px';\n    canvas.style.height = h + 'px';\n  }\n\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null,\n      stackOut = null,\n      yw = 0,\n      yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (var y = 0; y < height; y++) {\n    stack = stackStart;\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        pa = pixels[yi + 3];\n\n    for (var _i = 0; _i < radiusPlus1; _i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0,\n        aInSum = 0,\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        aOutSum = radiusPlus1 * pa,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb,\n        aSum = sumFactor * pa;\n\n    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {\n      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);\n      var r = pixels[p],\n          g = pixels[p + 1],\n          b = pixels[p + 2],\n          a = pixels[p + 3];\n      var rbs = radiusPlus1 - _i2;\n      rSum += (stack.r = r) * rbs;\n      gSum += (stack.g = g) * rbs;\n      bSum += (stack.b = b) * rbs;\n      aSum += (stack.a = a) * rbs;\n      rInSum += r;\n      gInSum += g;\n      bInSum += b;\n      aInSum += a;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      var paInitial = aSum * mulSum >>> shgSum;\n      pixels[yi + 3] = paInitial;\n\n      if (paInitial !== 0) {\n        var _a2 = 255 / paInitial;\n\n        pixels[yi] = (rSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 1] = (gSum * mulSum >>> shgSum) * _a2;\n        pixels[yi + 2] = (bSum * mulSum >>> shgSum) * _a2;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      var _p = x + radius + 1;\n\n      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[_p];\n      gInSum += stackIn.g = pixels[_p + 1];\n      bInSum += stackIn.b = pixels[_p + 2];\n      aInSum += stackIn.a = pixels[_p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      var _stackOut = stackOut,\n          _r = _stackOut.r,\n          _g = _stackOut.g,\n          _b = _stackOut.b,\n          _a = _stackOut.a;\n      rOutSum += _r;\n      gOutSum += _g;\n      bOutSum += _b;\n      aOutSum += _a;\n      rInSum -= _r;\n      gInSum -= _g;\n      bInSum -= _b;\n      aInSum -= _a;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x = 0; _x < width; _x++) {\n    yi = _x << 2;\n\n    var _pr = pixels[yi],\n        _pg = pixels[yi + 1],\n        _pb = pixels[yi + 2],\n        _pa = pixels[yi + 3],\n        _rOutSum = radiusPlus1 * _pr,\n        _gOutSum = radiusPlus1 * _pg,\n        _bOutSum = radiusPlus1 * _pb,\n        _aOutSum = radiusPlus1 * _pa,\n        _rSum = sumFactor * _pr,\n        _gSum = sumFactor * _pg,\n        _bSum = sumFactor * _pb,\n        _aSum = sumFactor * _pa;\n\n    stack = stackStart;\n\n    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {\n      stack.r = _pr;\n      stack.g = _pg;\n      stack.b = _pb;\n      stack.a = _pa;\n      stack = stack.next;\n    }\n\n    var yp = width;\n    var _gInSum = 0,\n        _bInSum = 0,\n        _aInSum = 0,\n        _rInSum = 0;\n\n    for (var _i4 = 1; _i4 <= radius; _i4++) {\n      yi = yp + _x << 2;\n\n      var _rbs = radiusPlus1 - _i4;\n\n      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;\n      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;\n      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;\n      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;\n      _rInSum += _pr;\n      _gInSum += _pg;\n      _bInSum += _pb;\n      _aInSum += _pa;\n      stack = stack.next;\n\n      if (_i4 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y = 0; _y < height; _y++) {\n      var _p2 = yi << 2;\n\n      pixels[_p2 + 3] = _pa = _aSum * mulSum >>> shgSum;\n\n      if (_pa > 0) {\n        _pa = 255 / _pa;\n        pixels[_p2] = (_rSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 1] = (_gSum * mulSum >>> shgSum) * _pa;\n        pixels[_p2 + 2] = (_bSum * mulSum >>> shgSum) * _pa;\n      } else {\n        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;\n      }\n\n      _rSum -= _rOutSum;\n      _gSum -= _gOutSum;\n      _bSum -= _bOutSum;\n      _aSum -= _aOutSum;\n      _rOutSum -= stackIn.r;\n      _gOutSum -= stackIn.g;\n      _bOutSum -= stackIn.b;\n      _aOutSum -= stackIn.a;\n      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;\n      _rSum += _rInSum += stackIn.r = pixels[_p2];\n      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];\n      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];\n      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];\n      stackIn = stackIn.next;\n      _rOutSum += _pr = stackOut.r;\n      _gOutSum += _pg = stackOut.g;\n      _bOutSum += _pb = stackOut.b;\n      _aOutSum += _pa = stackOut.a;\n      _rInSum -= _pr;\n      _gInSum -= _pg;\n      _bInSum -= _pb;\n      _aInSum -= _pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (var i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n  var p, rbs;\n  var yw = 0,\n      yi = 0;\n\n  for (var y = 0; y < height; y++) {\n    var pr = pixels[yi],\n        pg = pixels[yi + 1],\n        pb = pixels[yi + 2],\n        rOutSum = radiusPlus1 * pr,\n        gOutSum = radiusPlus1 * pg,\n        bOutSum = radiusPlus1 * pb,\n        rSum = sumFactor * pr,\n        gSum = sumFactor * pg,\n        bSum = sumFactor * pb;\n    stack = stackStart;\n\n    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    var rInSum = 0,\n        gInSum = 0,\n        bInSum = 0;\n\n    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {\n      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >>> shgSum;\n      pixels[yi + 1] = gSum * mulSum >>> shgSum;\n      pixels[yi + 2] = bSum * mulSum >>> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (var _x2 = 0; _x2 < width; _x2++) {\n    yi = _x2 << 2;\n\n    var _pr2 = pixels[yi],\n        _pg2 = pixels[yi + 1],\n        _pb2 = pixels[yi + 2],\n        _rOutSum2 = radiusPlus1 * _pr2,\n        _gOutSum2 = radiusPlus1 * _pg2,\n        _bOutSum2 = radiusPlus1 * _pb2,\n        _rSum2 = sumFactor * _pr2,\n        _gSum2 = sumFactor * _pg2,\n        _bSum2 = sumFactor * _pb2;\n\n    stack = stackStart;\n\n    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {\n      stack.r = _pr2;\n      stack.g = _pg2;\n      stack.b = _pb2;\n      stack = stack.next;\n    }\n\n    var _rInSum2 = 0,\n        _gInSum2 = 0,\n        _bInSum2 = 0;\n\n    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {\n      yi = yp + _x2 << 2;\n      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);\n      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;\n      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;\n      _rInSum2 += _pr2;\n      _gInSum2 += _pg2;\n      _bInSum2 += _pb2;\n      stack = stack.next;\n\n      if (_i8 < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = _x2;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (var _y2 = 0; _y2 < height; _y2++) {\n      p = yi << 2;\n      pixels[p] = _rSum2 * mulSum >>> shgSum;\n      pixels[p + 1] = _gSum2 * mulSum >>> shgSum;\n      pixels[p + 2] = _bSum2 * mulSum >>> shgSum;\n      _rSum2 -= _rOutSum2;\n      _gSum2 -= _gOutSum2;\n      _bSum2 -= _bOutSum2;\n      _rOutSum2 -= stackIn.r;\n      _gOutSum2 -= stackIn.g;\n      _bOutSum2 -= stackIn.b;\n      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      _rSum2 += _rInSum2 += stackIn.r = pixels[p];\n      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];\n      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      _rOutSum2 += _pr2 = stackOut.r;\n      _gOutSum2 += _pg2 = stackOut.g;\n      _bOutSum2 += _pb2 = stackOut.b;\n      _rInSum2 -= _pr2;\n      _gInSum2 -= _pg2;\n      _bInSum2 -= _pb2;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./contextmenu.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./contextmenu.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar requestAnimationFrame = require('raf');\nvar RGBColor = require('rgbcolor');\nvar svgPathdata = require('svg-pathdata');\nvar stackblurCanvas = require('stackblur-canvas');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar requestAnimationFrame__default = /*#__PURE__*/_interopDefaultLegacy(requestAnimationFrame);\nvar RGBColor__default = /*#__PURE__*/_interopDefaultLegacy(RGBColor);\n\n/**\n * Options preset for `OffscreenCanvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @returns Preset object.\n */ function offscreen() {\n    let { DOMParser: DOMParserFallback  } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const preset = {\n        window: null,\n        ignoreAnimation: true,\n        ignoreMouse: true,\n        DOMParser: DOMParserFallback,\n        createCanvas (width, height) {\n            return new OffscreenCanvas(width, height);\n        },\n        async createImage (url) {\n            const response = await fetch(url);\n            const blob = await response.blob();\n            const img = await createImageBitmap(blob);\n            return img;\n        }\n    };\n    if (typeof globalThis.DOMParser !== 'undefined' || typeof DOMParserFallback === 'undefined') {\n        Reflect.deleteProperty(preset, 'DOMParser');\n    }\n    return preset;\n}\n\n/**\n * Options preset for `node-canvas`.\n * @param config - Preset requirements.\n * @param config.DOMParser - XML/HTML parser from string into DOM Document.\n * @param config.canvas - `node-canvas` exports.\n * @param config.fetch - WHATWG-compatible `fetch` function.\n * @returns Preset object.\n */ function node(param) {\n    let { DOMParser , canvas , fetch  } = param;\n    return {\n        window: null,\n        ignoreAnimation: true,\n        ignoreMouse: true,\n        DOMParser,\n        fetch,\n        createCanvas: canvas.createCanvas,\n        createImage: canvas.loadImage\n    };\n}\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  offscreen: offscreen,\n  node: node\n});\n\n/**\n * HTML-safe compress white-spaces.\n * @param str - String to compress.\n * @returns String.\n */ function compressSpaces(str) {\n    return str.replace(/(?!\\u3000)\\s+/gm, ' ');\n}\n/**\n * HTML-safe left trim.\n * @param str - String to trim.\n * @returns String.\n */ function trimLeft(str) {\n    return str.replace(/^[\\n \\t]+/, '');\n}\n/**\n * HTML-safe right trim.\n * @param str - String to trim.\n * @returns String.\n */ function trimRight(str) {\n    return str.replace(/[\\n \\t]+$/, '');\n}\n/**\n * String to numbers array.\n * @param str - Numbers string.\n * @returns Numbers array.\n */ function toNumbers(str) {\n    const matches = str.match(/-?(\\d+(?:\\.\\d*(?:[eE][+-]?\\d+)?)?|\\.\\d+)(?=\\D|$)/gm);\n    return matches ? matches.map(parseFloat) : [];\n}\n/**\n * String to matrix value.\n * @param str - Numbers string.\n * @returns Matrix value.\n */ function toMatrixValue(str) {\n    const numbers = toNumbers(str);\n    const matrix = [\n        numbers[0] || 0,\n        numbers[1] || 0,\n        numbers[2] || 0,\n        numbers[3] || 0,\n        numbers[4] || 0,\n        numbers[5] || 0\n    ];\n    return matrix;\n}\n// Microsoft Edge fix\nconst allUppercase = /^[A-Z-]+$/;\n/**\n * Normalize attribute name.\n * @param name - Attribute name.\n * @returns Normalized attribute name.\n */ function normalizeAttributeName(name) {\n    if (allUppercase.test(name)) {\n        return name.toLowerCase();\n    }\n    return name;\n}\n/**\n * Parse external URL.\n * @param url - CSS url string.\n * @returns Parsed URL.\n */ function parseExternalUrl(url) {\n    //                      single quotes [2]\n    //                      v         double quotes [3]\n    //                      v         v         no quotes [4]\n    //                      v         v         v\n    const urlMatch = /url\\(('([^']+)'|\"([^\"]+)\"|([^'\")]+))\\)/.exec(url);\n    if (!urlMatch) {\n        return '';\n    }\n    return urlMatch[2] || urlMatch[3] || urlMatch[4] || '';\n}\n/**\n * Transform floats to integers in rgb colors.\n * @param color - Color to normalize.\n * @returns Normalized color.\n */ function normalizeColor(color) {\n    if (!color.startsWith('rgb')) {\n        return color;\n    }\n    let rgbParts = 3;\n    const normalizedColor = color.replace(/\\d+(\\.\\d+)?/g, (num, isFloat)=>(rgbParts--) && isFloat ? String(Math.round(parseFloat(num))) : num\n    );\n    return normalizedColor;\n}\n\n// slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js\nconst attributeRegex = /(\\[[^\\]]+\\])/g;\nconst idRegex = /(#[^\\s+>~.[:]+)/g;\nconst classRegex = /(\\.[^\\s+>~.[:]+)/g;\nconst pseudoElementRegex = /(::[^\\s+>~.[:]+|:first-line|:first-letter|:before|:after)/gi;\nconst pseudoClassWithBracketsRegex = /(:[\\w-]+\\([^)]*\\))/gi;\nconst pseudoClassRegex = /(:[^\\s+>~.[:]+)/g;\nconst elementRegex = /([^\\s+>~.[:]+)/g;\nfunction findSelectorMatch(selector, regex) {\n    const matches = regex.exec(selector);\n    if (!matches) {\n        return [\n            selector,\n            0\n        ];\n    }\n    return [\n        selector.replace(regex, ' '),\n        matches.length\n    ];\n}\n/**\n * Measure selector specificity.\n * @param selector - Selector to measure.\n * @returns Specificity.\n */ function getSelectorSpecificity(selector) {\n    const specificity = [\n        0,\n        0,\n        0\n    ];\n    let currentSelector = selector.replace(/:not\\(([^)]*)\\)/g, '     $1 ').replace(/{[\\s\\S]*/gm, ' ');\n    let delta = 0;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, attributeRegex);\n    specificity[1] += delta;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, idRegex);\n    specificity[0] += delta;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, classRegex);\n    specificity[1] += delta;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoElementRegex);\n    specificity[2] += delta;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex);\n    specificity[1] += delta;\n    [currentSelector, delta] = findSelectorMatch(currentSelector, pseudoClassRegex);\n    specificity[1] += delta;\n    currentSelector = currentSelector.replace(/[*\\s+>~]/g, ' ').replace(/[#.]/g, ' ');\n    [currentSelector, delta] = findSelectorMatch(currentSelector, elementRegex) // lgtm [js/useless-assignment-to-local]\n    ;\n    specificity[2] += delta;\n    return specificity.join('');\n}\n\nconst PSEUDO_ZERO = 0.00000001;\n/**\n * Vector magnitude.\n * @param v\n * @returns Number result.\n */ function vectorMagnitude(v) {\n    return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\n}\n/**\n * Ratio between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */ function vectorsRatio(u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v));\n}\n/**\n * Angle between two vectors.\n * @param u\n * @param v\n * @returns Number result.\n */ function vectorsAngle(u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v));\n}\nfunction CB1(t) {\n    return t * t * t;\n}\nfunction CB2(t) {\n    return 3 * t * t * (1 - t);\n}\nfunction CB3(t) {\n    return 3 * t * (1 - t) * (1 - t);\n}\nfunction CB4(t) {\n    return (1 - t) * (1 - t) * (1 - t);\n}\nfunction QB1(t) {\n    return t * t;\n}\nfunction QB2(t) {\n    return 2 * t * (1 - t);\n}\nfunction QB3(t) {\n    return (1 - t) * (1 - t);\n}\n\nclass Property {\n    static empty(document) {\n        return new Property(document, 'EMPTY', '');\n    }\n    split() {\n        let separator = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : ' ';\n        const { document , name  } = this;\n        return compressSpaces(this.getString()).trim().split(separator).map((value)=>new Property(document, name, value)\n        );\n    }\n    hasValue(zeroIsValue) {\n        const value = this.value;\n        return value !== null && value !== '' && (zeroIsValue || value !== 0) && typeof value !== 'undefined';\n    }\n    isString(regexp) {\n        const { value  } = this;\n        const result = typeof value === 'string';\n        if (!result || !regexp) {\n            return result;\n        }\n        return regexp.test(value);\n    }\n    isUrlDefinition() {\n        return this.isString(/^url\\(/);\n    }\n    isPixels() {\n        if (!this.hasValue()) {\n            return false;\n        }\n        const asString = this.getString();\n        switch(true){\n            case asString.endsWith('px'):\n            case /^[0-9]+$/.test(asString):\n                return true;\n            default:\n                return false;\n        }\n    }\n    setValue(value) {\n        this.value = value;\n        return this;\n    }\n    getValue(def) {\n        if (typeof def === 'undefined' || this.hasValue()) {\n            return this.value;\n        }\n        return def;\n    }\n    getNumber(def) {\n        if (!this.hasValue()) {\n            if (typeof def === 'undefined') {\n                return 0;\n            }\n            // @ts-expect-error Parse unknown value.\n            return parseFloat(def);\n        }\n        const { value  } = this;\n        // @ts-expect-error Parse unknown value.\n        let n = parseFloat(value);\n        if (this.isString(/%$/)) {\n            n /= 100;\n        }\n        return n;\n    }\n    getString(def) {\n        if (typeof def === 'undefined' || this.hasValue()) {\n            return typeof this.value === 'undefined' ? '' : String(this.value);\n        }\n        return String(def);\n    }\n    getColor(def) {\n        let color = this.getString(def);\n        if (this.isNormalizedColor) {\n            return color;\n        }\n        this.isNormalizedColor = true;\n        color = normalizeColor(color);\n        this.value = color;\n        return color;\n    }\n    getDpi() {\n        return 96 // TODO: compute?\n        ;\n    }\n    getRem() {\n        return this.document.rootEmSize;\n    }\n    getEm() {\n        return this.document.emSize;\n    }\n    getUnits() {\n        return this.getString().replace(/[0-9.-]/g, '');\n    }\n    getPixels(axisOrIsFontSize) {\n        let processPercent = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (!this.hasValue()) {\n            return 0;\n        }\n        const [axis, isFontSize] = typeof axisOrIsFontSize === 'boolean' ? [\n            undefined,\n            axisOrIsFontSize\n        ] : [\n            axisOrIsFontSize\n        ];\n        const { viewPort  } = this.document.screen;\n        switch(true){\n            case this.isString(/vmin$/):\n                return this.getNumber() / 100 * Math.min(viewPort.computeSize('x'), viewPort.computeSize('y'));\n            case this.isString(/vmax$/):\n                return this.getNumber() / 100 * Math.max(viewPort.computeSize('x'), viewPort.computeSize('y'));\n            case this.isString(/vw$/):\n                return this.getNumber() / 100 * viewPort.computeSize('x');\n            case this.isString(/vh$/):\n                return this.getNumber() / 100 * viewPort.computeSize('y');\n            case this.isString(/rem$/):\n                return this.getNumber() * this.getRem();\n            case this.isString(/em$/):\n                return this.getNumber() * this.getEm();\n            case this.isString(/ex$/):\n                return this.getNumber() * this.getEm() / 2;\n            case this.isString(/px$/):\n                return this.getNumber();\n            case this.isString(/pt$/):\n                return this.getNumber() * this.getDpi() * (1 / 72);\n            case this.isString(/pc$/):\n                return this.getNumber() * 15;\n            case this.isString(/cm$/):\n                return this.getNumber() * this.getDpi() / 2.54;\n            case this.isString(/mm$/):\n                return this.getNumber() * this.getDpi() / 25.4;\n            case this.isString(/in$/):\n                return this.getNumber() * this.getDpi();\n            case this.isString(/%$/) && isFontSize:\n                return this.getNumber() * this.getEm();\n            case this.isString(/%$/):\n                return this.getNumber() * viewPort.computeSize(axis);\n            default:\n                {\n                    const n = this.getNumber();\n                    if (processPercent && n < 1) {\n                        return n * viewPort.computeSize(axis);\n                    }\n                    return n;\n                }\n        }\n    }\n    getMilliseconds() {\n        if (!this.hasValue()) {\n            return 0;\n        }\n        if (this.isString(/ms$/)) {\n            return this.getNumber();\n        }\n        return this.getNumber() * 1000;\n    }\n    getRadians() {\n        if (!this.hasValue()) {\n            return 0;\n        }\n        switch(true){\n            case this.isString(/deg$/):\n                return this.getNumber() * (Math.PI / 180);\n            case this.isString(/grad$/):\n                return this.getNumber() * (Math.PI / 200);\n            case this.isString(/rad$/):\n                return this.getNumber();\n            default:\n                return this.getNumber() * (Math.PI / 180);\n        }\n    }\n    getDefinition() {\n        const asString = this.getString();\n        const match = /#([^)'\"]+)/.exec(asString);\n        const name = (match === null || match === void 0 ? void 0 : match[1]) || asString;\n        return this.document.definitions[name];\n    }\n    getFillStyleDefinition(element, opacity) {\n        let def = this.getDefinition();\n        if (!def) {\n            return null;\n        }\n        // gradient\n        if (typeof def.createGradient === 'function' && 'getBoundingBox' in element) {\n            return def.createGradient(this.document.ctx, element, opacity);\n        }\n        // pattern\n        if (typeof def.createPattern === 'function') {\n            if (def.getHrefAttribute().hasValue()) {\n                const patternTransform = def.getAttribute('patternTransform');\n                def = def.getHrefAttribute().getDefinition();\n                if (def && patternTransform.hasValue()) {\n                    def.getAttribute('patternTransform', true).setValue(patternTransform.value);\n                }\n            }\n            if (def) {\n                return def.createPattern(this.document.ctx, element, opacity);\n            }\n        }\n        return null;\n    }\n    getTextBaseline() {\n        if (!this.hasValue()) {\n            return null;\n        }\n        const key = this.getString();\n        return Property.textBaselineMapping[key] || null;\n    }\n    addOpacity(opacity) {\n        let value = this.getColor();\n        const len = value.length;\n        let commas = 0;\n        // Simulate old RGBColor version, which can't parse rgba.\n        for(let i = 0; i < len; i++){\n            if (value[i] === ',') {\n                commas++;\n            }\n            if (commas === 3) {\n                break;\n            }\n        }\n        if (opacity.hasValue() && this.isString() && commas !== 3) {\n            const color = new RGBColor__default[\"default\"](value);\n            if (color.ok) {\n                color.alpha = opacity.getNumber();\n                value = color.toRGBA();\n            }\n        }\n        return new Property(this.document, this.name, value);\n    }\n    constructor(document, name, value){\n        this.document = document;\n        this.name = name;\n        this.value = value;\n        this.isNormalizedColor = false;\n    }\n}\nProperty.textBaselineMapping = {\n    'baseline': 'alphabetic',\n    'before-edge': 'top',\n    'text-before-edge': 'top',\n    'middle': 'middle',\n    'central': 'middle',\n    'after-edge': 'bottom',\n    'text-after-edge': 'bottom',\n    'ideographic': 'ideographic',\n    'alphabetic': 'alphabetic',\n    'hanging': 'hanging',\n    'mathematical': 'alphabetic'\n};\n\nclass ViewPort {\n    clear() {\n        this.viewPorts = [];\n    }\n    setCurrent(width, height) {\n        this.viewPorts.push({\n            width,\n            height\n        });\n    }\n    removeCurrent() {\n        this.viewPorts.pop();\n    }\n    getRoot() {\n        const [root] = this.viewPorts;\n        if (!root) {\n            return getDefault();\n        }\n        return root;\n    }\n    getCurrent() {\n        const { viewPorts  } = this;\n        const current = viewPorts[viewPorts.length - 1];\n        if (!current) {\n            return getDefault();\n        }\n        return current;\n    }\n    get width() {\n        return this.getCurrent().width;\n    }\n    get height() {\n        return this.getCurrent().height;\n    }\n    computeSize(d) {\n        if (typeof d === 'number') {\n            return d;\n        }\n        if (d === 'x') {\n            return this.width;\n        }\n        if (d === 'y') {\n            return this.height;\n        }\n        return Math.sqrt(Math.pow(this.width, 2) + Math.pow(this.height, 2)) / Math.sqrt(2);\n    }\n    constructor(){\n        this.viewPorts = [];\n    }\n}\nViewPort.DEFAULT_VIEWPORT_WIDTH = 800;\nViewPort.DEFAULT_VIEWPORT_HEIGHT = 600;\nfunction getDefault() {\n    return {\n        width: ViewPort.DEFAULT_VIEWPORT_WIDTH,\n        height: ViewPort.DEFAULT_VIEWPORT_HEIGHT\n    };\n}\n\nclass Point {\n    static parse(point) {\n        let defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n        const [x = defaultValue, y = defaultValue] = toNumbers(point);\n        return new Point(x, y);\n    }\n    static parseScale(scale) {\n        let defaultValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        const [x = defaultValue, y = x] = toNumbers(scale);\n        return new Point(x, y);\n    }\n    static parsePath(path) {\n        const points = toNumbers(path);\n        const len = points.length;\n        const pathPoints = [];\n        for(let i = 0; i < len; i += 2){\n            pathPoints.push(new Point(points[i], points[i + 1]));\n        }\n        return pathPoints;\n    }\n    angleTo(point) {\n        return Math.atan2(point.y - this.y, point.x - this.x);\n    }\n    applyTransform(transform) {\n        const { x , y  } = this;\n        const xp = x * transform[0] + y * transform[2] + transform[4];\n        const yp = x * transform[1] + y * transform[3] + transform[5];\n        this.x = xp;\n        this.y = yp;\n    }\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n    }\n}\n\nclass Mouse {\n    isWorking() {\n        return this.working;\n    }\n    start() {\n        if (this.working) {\n            return;\n        }\n        const { screen , onClick , onMouseMove  } = this;\n        const canvas = screen.ctx.canvas;\n        canvas.onclick = onClick;\n        canvas.onmousemove = onMouseMove;\n        this.working = true;\n    }\n    stop() {\n        if (!this.working) {\n            return;\n        }\n        const canvas = this.screen.ctx.canvas;\n        this.working = false;\n        canvas.onclick = null;\n        canvas.onmousemove = null;\n    }\n    hasEvents() {\n        return this.working && this.events.length > 0;\n    }\n    runEvents() {\n        if (!this.working) {\n            return;\n        }\n        const { screen: document , events , eventElements  } = this;\n        const { style  } = document.ctx.canvas;\n        let element;\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (style) {\n            style.cursor = '';\n        }\n        events.forEach((param, i)=>{\n            let { run  } = param;\n            element = eventElements[i];\n            while(element){\n                run(element);\n                element = element.parent;\n            }\n        });\n        // done running, clear\n        this.events = [];\n        this.eventElements = [];\n    }\n    checkPath(element, ctx) {\n        if (!this.working || !ctx) {\n            return;\n        }\n        const { events , eventElements  } = this;\n        events.forEach((param, i)=>{\n            let { x , y  } = param;\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n            if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {\n                eventElements[i] = element;\n            }\n        });\n    }\n    checkBoundingBox(element, boundingBox) {\n        if (!this.working || !boundingBox) {\n            return;\n        }\n        const { events , eventElements  } = this;\n        events.forEach((param, i)=>{\n            let { x , y  } = param;\n            if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {\n                eventElements[i] = element;\n            }\n        });\n    }\n    mapXY(x, y) {\n        const { window , ctx  } = this.screen;\n        const point = new Point(x, y);\n        let element = ctx.canvas;\n        while(element){\n            point.x -= element.offsetLeft;\n            point.y -= element.offsetTop;\n            element = element.offsetParent;\n        }\n        if (window === null || window === void 0 ? void 0 : window.scrollX) {\n            point.x += window.scrollX;\n        }\n        if (window === null || window === void 0 ? void 0 : window.scrollY) {\n            point.y += window.scrollY;\n        }\n        return point;\n    }\n    onClick(event) {\n        const { x , y  } = this.mapXY(event.clientX, event.clientY);\n        this.events.push({\n            type: 'onclick',\n            x,\n            y,\n            run (eventTarget) {\n                if (eventTarget.onClick) {\n                    eventTarget.onClick();\n                }\n            }\n        });\n    }\n    onMouseMove(event) {\n        const { x , y  } = this.mapXY(event.clientX, event.clientY);\n        this.events.push({\n            type: 'onmousemove',\n            x,\n            y,\n            run (eventTarget) {\n                if (eventTarget.onMouseMove) {\n                    eventTarget.onMouseMove();\n                }\n            }\n        });\n    }\n    constructor(screen){\n        this.screen = screen;\n        this.working = false;\n        this.events = [];\n        this.eventElements = [];\n        this.onClick = this.onClick.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n    }\n}\n\nconst defaultWindow = typeof window !== 'undefined' ? window : null;\nconst defaultFetch$1 = typeof fetch !== 'undefined' ? fetch.bind(undefined) // `fetch` depends on context: `someObject.fetch(...)` will throw error.\n : undefined;\nclass Screen {\n    wait(checker) {\n        this.waits.push(checker);\n    }\n    ready() {\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        if (!this.readyPromise) {\n            return Promise.resolve();\n        }\n        return this.readyPromise;\n    }\n    isReady() {\n        if (this.isReadyLock) {\n            return true;\n        }\n        const isReadyLock = this.waits.every((_)=>_()\n        );\n        if (isReadyLock) {\n            this.waits = [];\n            if (this.resolveReady) {\n                this.resolveReady();\n            }\n        }\n        this.isReadyLock = isReadyLock;\n        return isReadyLock;\n    }\n    setDefaults(ctx) {\n        // initial values and defaults\n        ctx.strokeStyle = 'rgba(0,0,0,0)';\n        ctx.lineCap = 'butt';\n        ctx.lineJoin = 'miter';\n        ctx.miterLimit = 4;\n    }\n    setViewBox(param) {\n        let { document , ctx , aspectRatio , width , desiredWidth , height , desiredHeight , minX =0 , minY =0 , refX , refY , clip =false , clipX =0 , clipY =0  } = param;\n        // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n        const cleanAspectRatio = compressSpaces(aspectRatio).replace(/^defer\\s/, '') // ignore defer\n        ;\n        const [aspectRatioAlign, aspectRatioMeetOrSlice] = cleanAspectRatio.split(' ');\n        const align = aspectRatioAlign || 'xMidYMid';\n        const meetOrSlice = aspectRatioMeetOrSlice || 'meet';\n        // calculate scale\n        const scaleX = width / desiredWidth;\n        const scaleY = height / desiredHeight;\n        const scaleMin = Math.min(scaleX, scaleY);\n        const scaleMax = Math.max(scaleX, scaleY);\n        let finalDesiredWidth = desiredWidth;\n        let finalDesiredHeight = desiredHeight;\n        if (meetOrSlice === 'meet') {\n            finalDesiredWidth *= scaleMin;\n            finalDesiredHeight *= scaleMin;\n        }\n        if (meetOrSlice === 'slice') {\n            finalDesiredWidth *= scaleMax;\n            finalDesiredHeight *= scaleMax;\n        }\n        const refXProp = new Property(document, 'refX', refX);\n        const refYProp = new Property(document, 'refY', refY);\n        const hasRefs = refXProp.hasValue() && refYProp.hasValue();\n        if (hasRefs) {\n            ctx.translate(-scaleMin * refXProp.getPixels('x'), -scaleMin * refYProp.getPixels('y'));\n        }\n        if (clip) {\n            const scaledClipX = scaleMin * clipX;\n            const scaledClipY = scaleMin * clipY;\n            ctx.beginPath();\n            ctx.moveTo(scaledClipX, scaledClipY);\n            ctx.lineTo(width, scaledClipY);\n            ctx.lineTo(width, height);\n            ctx.lineTo(scaledClipX, height);\n            ctx.closePath();\n            ctx.clip();\n        }\n        if (!hasRefs) {\n            const isMeetMinY = meetOrSlice === 'meet' && scaleMin === scaleY;\n            const isSliceMaxY = meetOrSlice === 'slice' && scaleMax === scaleY;\n            const isMeetMinX = meetOrSlice === 'meet' && scaleMin === scaleX;\n            const isSliceMaxX = meetOrSlice === 'slice' && scaleMax === scaleX;\n            if (align.startsWith('xMid') && (isMeetMinY || isSliceMaxY)) {\n                ctx.translate(width / 2 - finalDesiredWidth / 2, 0);\n            }\n            if (align.endsWith('YMid') && (isMeetMinX || isSliceMaxX)) {\n                ctx.translate(0, height / 2 - finalDesiredHeight / 2);\n            }\n            if (align.startsWith('xMax') && (isMeetMinY || isSliceMaxY)) {\n                ctx.translate(width - finalDesiredWidth, 0);\n            }\n            if (align.endsWith('YMax') && (isMeetMinX || isSliceMaxX)) {\n                ctx.translate(0, height - finalDesiredHeight);\n            }\n        }\n        // scale\n        switch(true){\n            case align === 'none':\n                ctx.scale(scaleX, scaleY);\n                break;\n            case meetOrSlice === 'meet':\n                ctx.scale(scaleMin, scaleMin);\n                break;\n            case meetOrSlice === 'slice':\n                ctx.scale(scaleMax, scaleMax);\n                break;\n        }\n        // translate\n        ctx.translate(-minX, -minY);\n    }\n    start(element) {\n        let { enableRedraw =false , ignoreMouse =false , ignoreAnimation =false , ignoreDimensions =false , ignoreClear =false , forceRedraw , scaleWidth , scaleHeight , offsetX , offsetY  } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const { mouse  } = this;\n        const frameDuration = 1000 / Screen.FRAMERATE;\n        this.isReadyLock = false;\n        this.frameDuration = frameDuration;\n        this.readyPromise = new Promise((resolve)=>{\n            this.resolveReady = resolve;\n        });\n        if (this.isReady()) {\n            this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n        }\n        if (!enableRedraw) {\n            return;\n        }\n        let now = Date.now();\n        let then = now;\n        let delta = 0;\n        const tick = ()=>{\n            now = Date.now();\n            delta = now - then;\n            if (delta >= frameDuration) {\n                then = now - delta % frameDuration;\n                if (this.shouldUpdate(ignoreAnimation, forceRedraw)) {\n                    this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);\n                    mouse.runEvents();\n                }\n            }\n            this.intervalId = requestAnimationFrame__default[\"default\"](tick);\n        };\n        if (!ignoreMouse) {\n            mouse.start();\n        }\n        this.intervalId = requestAnimationFrame__default[\"default\"](tick);\n    }\n    stop() {\n        if (this.intervalId) {\n            requestAnimationFrame__default[\"default\"].cancel(this.intervalId);\n            this.intervalId = null;\n        }\n        this.mouse.stop();\n    }\n    shouldUpdate(ignoreAnimation, forceRedraw) {\n        // need update from animations?\n        if (!ignoreAnimation) {\n            const { frameDuration  } = this;\n            const shouldUpdate1 = this.animations.reduce((shouldUpdate, animation)=>animation.update(frameDuration) || shouldUpdate\n            , false);\n            if (shouldUpdate1) {\n                return true;\n            }\n        }\n        // need update from redraw?\n        if (typeof forceRedraw === 'function' && forceRedraw()) {\n            return true;\n        }\n        if (!this.isReadyLock && this.isReady()) {\n            return true;\n        }\n        // need update from mouse events?\n        if (this.mouse.hasEvents()) {\n            return true;\n        }\n        return false;\n    }\n    render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY) {\n        const { viewPort , ctx , isFirstRender  } = this;\n        const canvas = ctx.canvas;\n        viewPort.clear();\n        if (canvas.width && canvas.height) {\n            viewPort.setCurrent(canvas.width, canvas.height);\n        }\n        const widthStyle = element.getStyle('width');\n        const heightStyle = element.getStyle('height');\n        if (!ignoreDimensions && (isFirstRender || typeof scaleWidth !== 'number' && typeof scaleHeight !== 'number')) {\n            // set canvas size\n            if (widthStyle.hasValue()) {\n                canvas.width = widthStyle.getPixels('x');\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                if (canvas.style) {\n                    canvas.style.width = \"\".concat(canvas.width, \"px\");\n                }\n            }\n            if (heightStyle.hasValue()) {\n                canvas.height = heightStyle.getPixels('y');\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                if (canvas.style) {\n                    canvas.style.height = \"\".concat(canvas.height, \"px\");\n                }\n            }\n        }\n        let cWidth = canvas.clientWidth || canvas.width;\n        let cHeight = canvas.clientHeight || canvas.height;\n        if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {\n            cWidth = widthStyle.getPixels('x');\n            cHeight = heightStyle.getPixels('y');\n        }\n        viewPort.setCurrent(cWidth, cHeight);\n        if (typeof offsetX === 'number') {\n            element.getAttribute('x', true).setValue(offsetX);\n        }\n        if (typeof offsetY === 'number') {\n            element.getAttribute('y', true).setValue(offsetY);\n        }\n        if (typeof scaleWidth === 'number' || typeof scaleHeight === 'number') {\n            const viewBox = toNumbers(element.getAttribute('viewBox').getString());\n            let xRatio = 0;\n            let yRatio = 0;\n            if (typeof scaleWidth === 'number') {\n                const widthStyle = element.getStyle('width');\n                if (widthStyle.hasValue()) {\n                    xRatio = widthStyle.getPixels('x') / scaleWidth;\n                } else if (viewBox[2] && !isNaN(viewBox[2])) {\n                    xRatio = viewBox[2] / scaleWidth;\n                }\n            }\n            if (typeof scaleHeight === 'number') {\n                const heightStyle = element.getStyle('height');\n                if (heightStyle.hasValue()) {\n                    yRatio = heightStyle.getPixels('y') / scaleHeight;\n                } else if (viewBox[3] && !isNaN(viewBox[3])) {\n                    yRatio = viewBox[3] / scaleHeight;\n                }\n            }\n            if (!xRatio) {\n                xRatio = yRatio;\n            }\n            if (!yRatio) {\n                yRatio = xRatio;\n            }\n            element.getAttribute('width', true).setValue(scaleWidth);\n            element.getAttribute('height', true).setValue(scaleHeight);\n            const transformStyle = element.getStyle('transform', true, true);\n            transformStyle.setValue(\"\".concat(transformStyle.getString(), \" scale(\").concat(1 / xRatio, \", \").concat(1 / yRatio, \")\"));\n        }\n        // clear and render\n        if (!ignoreClear) {\n            ctx.clearRect(0, 0, cWidth, cHeight);\n        }\n        element.render(ctx);\n        if (isFirstRender) {\n            this.isFirstRender = false;\n        }\n    }\n    constructor(ctx, { fetch =defaultFetch$1 , window =defaultWindow  } = {}){\n        this.ctx = ctx;\n        this.viewPort = new ViewPort();\n        this.mouse = new Mouse(this);\n        this.animations = [];\n        this.waits = [];\n        this.frameDuration = 0;\n        this.isReadyLock = false;\n        this.isFirstRender = true;\n        this.intervalId = null;\n        this.window = window;\n        if (!fetch) {\n            throw new Error(\"Can't find 'fetch' in 'globalThis', please provide it via options\");\n        }\n        this.fetch = fetch;\n    }\n}\nScreen.defaultWindow = defaultWindow;\nScreen.defaultFetch = defaultFetch$1;\nScreen.FRAMERATE = 30;\nScreen.MAX_VIRTUAL_PIXELS = 30000;\n\nconst { defaultFetch  } = Screen;\nconst DefaultDOMParser = typeof DOMParser !== 'undefined' ? DOMParser : undefined;\nclass Parser {\n    async parse(resource) {\n        if (resource.startsWith('<')) {\n            return this.parseFromString(resource);\n        }\n        return this.load(resource);\n    }\n    parseFromString(xml) {\n        const parser = new this.DOMParser();\n        try {\n            return this.checkDocument(parser.parseFromString(xml, 'image/svg+xml'));\n        } catch (err) {\n            return this.checkDocument(parser.parseFromString(xml, 'text/xml'));\n        }\n    }\n    checkDocument(document) {\n        const parserError = document.getElementsByTagName('parsererror')[0];\n        if (parserError) {\n            throw new Error(parserError.textContent || 'Unknown parse error');\n        }\n        return document;\n    }\n    async load(url) {\n        const response = await this.fetch(url);\n        const xml = await response.text();\n        return this.parseFromString(xml);\n    }\n    constructor({ fetch =defaultFetch , DOMParser =DefaultDOMParser  } = {}){\n        if (!fetch) {\n            throw new Error(\"Can't find 'fetch' in 'globalThis', please provide it via options\");\n        }\n        if (!DOMParser) {\n            throw new Error(\"Can't find 'DOMParser' in 'globalThis', please provide it via options\");\n        }\n        this.fetch = fetch;\n        this.DOMParser = DOMParser;\n    }\n}\n\nclass Translate {\n    apply(ctx) {\n        const { x , y  } = this.point;\n        ctx.translate(x || 0, y || 0);\n    }\n    unapply(ctx) {\n        const { x , y  } = this.point;\n        ctx.translate(-1 * x || 0, -1 * y || 0);\n    }\n    applyToPoint(point) {\n        const { x , y  } = this.point;\n        point.applyTransform([\n            1,\n            0,\n            0,\n            1,\n            x || 0,\n            y || 0\n        ]);\n    }\n    constructor(_, point){\n        this.type = 'translate';\n        this.point = Point.parse(point);\n    }\n}\n\nclass Rotate {\n    apply(ctx) {\n        const { cx , cy , originX , originY , angle  } = this;\n        const tx = cx + originX.getPixels('x');\n        const ty = cy + originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.rotate(angle.getRadians());\n        ctx.translate(-tx, -ty);\n    }\n    unapply(ctx) {\n        const { cx , cy , originX , originY , angle  } = this;\n        const tx = cx + originX.getPixels('x');\n        const ty = cy + originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.rotate(-1 * angle.getRadians());\n        ctx.translate(-tx, -ty);\n    }\n    applyToPoint(point) {\n        const { cx , cy , angle  } = this;\n        const rad = angle.getRadians();\n        point.applyTransform([\n            1,\n            0,\n            0,\n            1,\n            cx || 0,\n            cy || 0 // this.p.y\n        ]);\n        point.applyTransform([\n            Math.cos(rad),\n            Math.sin(rad),\n            -Math.sin(rad),\n            Math.cos(rad),\n            0,\n            0\n        ]);\n        point.applyTransform([\n            1,\n            0,\n            0,\n            1,\n            -cx || 0,\n            -cy || 0 // -this.p.y\n        ]);\n    }\n    constructor(document, rotate, transformOrigin){\n        this.type = 'rotate';\n        const numbers = toNumbers(rotate);\n        this.angle = new Property(document, 'angle', numbers[0]);\n        this.originX = transformOrigin[0];\n        this.originY = transformOrigin[1];\n        this.cx = numbers[1] || 0;\n        this.cy = numbers[2] || 0;\n    }\n}\n\nclass Scale {\n    apply(ctx) {\n        const { scale: { x , y  } , originX , originY  } = this;\n        const tx = originX.getPixels('x');\n        const ty = originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.scale(x, y || x);\n        ctx.translate(-tx, -ty);\n    }\n    unapply(ctx) {\n        const { scale: { x , y  } , originX , originY  } = this;\n        const tx = originX.getPixels('x');\n        const ty = originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.scale(1 / x, 1 / y || x);\n        ctx.translate(-tx, -ty);\n    }\n    applyToPoint(point) {\n        const { x , y  } = this.scale;\n        point.applyTransform([\n            x || 0,\n            0,\n            0,\n            y || 0,\n            0,\n            0\n        ]);\n    }\n    constructor(_, scale, transformOrigin){\n        this.type = 'scale';\n        const scaleSize = Point.parseScale(scale);\n        // Workaround for node-canvas\n        if (scaleSize.x === 0 || scaleSize.y === 0) {\n            scaleSize.x = PSEUDO_ZERO;\n            scaleSize.y = PSEUDO_ZERO;\n        }\n        this.scale = scaleSize;\n        this.originX = transformOrigin[0];\n        this.originY = transformOrigin[1];\n    }\n}\n\nclass Matrix {\n    apply(ctx) {\n        const { originX , originY , matrix  } = this;\n        const tx = originX.getPixels('x');\n        const ty = originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n        ctx.translate(-tx, -ty);\n    }\n    unapply(ctx) {\n        const { originX , originY , matrix  } = this;\n        const a = matrix[0];\n        const b = matrix[2];\n        const c = matrix[4];\n        const d = matrix[1];\n        const e = matrix[3];\n        const f = matrix[5];\n        const g = 0;\n        const h = 0;\n        const i = 1;\n        const det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g));\n        const tx = originX.getPixels('x');\n        const ty = originY.getPixels('y');\n        ctx.translate(tx, ty);\n        ctx.transform(det * (e * i - f * h), det * (f * g - d * i), det * (c * h - b * i), det * (a * i - c * g), det * (b * f - c * e), det * (c * d - a * f));\n        ctx.translate(-tx, -ty);\n    }\n    applyToPoint(point) {\n        point.applyTransform(this.matrix);\n    }\n    constructor(_, matrix, transformOrigin){\n        this.type = 'matrix';\n        this.matrix = toMatrixValue(matrix);\n        this.originX = transformOrigin[0];\n        this.originY = transformOrigin[1];\n    }\n}\n\nclass Skew extends Matrix {\n    constructor(document, skew, transformOrigin){\n        super(document, skew, transformOrigin);\n        this.type = 'skew';\n        this.angle = new Property(document, 'angle', skew);\n    }\n}\n\nclass SkewX extends Skew {\n    constructor(document, skew, transformOrigin){\n        super(document, skew, transformOrigin);\n        this.type = 'skewX';\n        this.matrix = [\n            1,\n            0,\n            Math.tan(this.angle.getRadians()),\n            1,\n            0,\n            0\n        ];\n    }\n}\n\nclass SkewY extends Skew {\n    constructor(document, skew, transformOrigin){\n        super(document, skew, transformOrigin);\n        this.type = 'skewY';\n        this.matrix = [\n            1,\n            Math.tan(this.angle.getRadians()),\n            0,\n            1,\n            0,\n            0\n        ];\n    }\n}\n\nfunction parseTransforms(transform) {\n    return compressSpaces(transform).trim().replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g, ') ').split(/\\s(?=[a-z])/);\n}\nfunction parseTransform(transform) {\n    const [type = '', value = ''] = transform.split('(');\n    return [\n        type.trim(),\n        value.trim().replace(')', '')\n    ];\n}\nclass Transform {\n    static fromElement(document, element) {\n        const transformStyle = element.getStyle('transform', false, true);\n        if (transformStyle.hasValue()) {\n            const [transformOriginXProperty, transformOriginYProperty = transformOriginXProperty] = element.getStyle('transform-origin', false, true).split();\n            if (transformOriginXProperty && transformOriginYProperty) {\n                const transformOrigin = [\n                    transformOriginXProperty,\n                    transformOriginYProperty\n                ];\n                return new Transform(document, transformStyle.getString(), transformOrigin);\n            }\n        }\n        return null;\n    }\n    apply(ctx) {\n        this.transforms.forEach((transform)=>transform.apply(ctx)\n        );\n    }\n    unapply(ctx) {\n        this.transforms.forEach((transform)=>transform.unapply(ctx)\n        );\n    }\n    // TODO: applyToPoint unused ... remove?\n    applyToPoint(point) {\n        this.transforms.forEach((transform)=>transform.applyToPoint(point)\n        );\n    }\n    constructor(document, transform1, transformOrigin){\n        this.document = document;\n        this.transforms = [];\n        const data = parseTransforms(transform1);\n        data.forEach((transform)=>{\n            if (transform === 'none') {\n                return;\n            }\n            const [type, value] = parseTransform(transform);\n            const TransformType = Transform.transformTypes[type];\n            if (TransformType) {\n                this.transforms.push(new TransformType(this.document, value, transformOrigin));\n            }\n        });\n    }\n}\nTransform.transformTypes = {\n    translate: Translate,\n    rotate: Rotate,\n    scale: Scale,\n    matrix: Matrix,\n    skewX: SkewX,\n    skewY: SkewY\n};\n\nclass Element {\n    getAttribute(name) {\n        let createIfNotExists = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        const attr = this.attributes[name];\n        if (!attr && createIfNotExists) {\n            const attr = new Property(this.document, name, '');\n            this.attributes[name] = attr;\n            return attr;\n        }\n        return attr || Property.empty(this.document);\n    }\n    getHrefAttribute() {\n        let href;\n        for(const key in this.attributes){\n            if (key === 'href' || key.endsWith(':href')) {\n                href = this.attributes[key];\n                break;\n            }\n        }\n        return href || Property.empty(this.document);\n    }\n    getStyle(name) {\n        let createIfNotExists = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false, skipAncestors = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        const style = this.styles[name];\n        if (style) {\n            return style;\n        }\n        const attr = this.getAttribute(name);\n        if (attr.hasValue()) {\n            this.styles[name] = attr // move up to me to cache\n            ;\n            return attr;\n        }\n        if (!skipAncestors) {\n            const { parent  } = this;\n            if (parent) {\n                const parentStyle = parent.getStyle(name);\n                if (parentStyle.hasValue()) {\n                    return parentStyle;\n                }\n            }\n        }\n        if (createIfNotExists) {\n            const style = new Property(this.document, name, '');\n            this.styles[name] = style;\n            return style;\n        }\n        return Property.empty(this.document);\n    }\n    render(ctx) {\n        // don't render display=none\n        // don't render visibility=hidden\n        if (this.getStyle('display').getString() === 'none' || this.getStyle('visibility').getString() === 'hidden') {\n            return;\n        }\n        ctx.save();\n        if (this.getStyle('mask').hasValue()) {\n            const mask = this.getStyle('mask').getDefinition();\n            if (mask) {\n                this.applyEffects(ctx);\n                mask.apply(ctx, this);\n            }\n        } else if (this.getStyle('filter').getValue('none') !== 'none') {\n            const filter = this.getStyle('filter').getDefinition();\n            if (filter) {\n                this.applyEffects(ctx);\n                filter.apply(ctx, this);\n            }\n        } else {\n            this.setContext(ctx);\n            this.renderChildren(ctx);\n            this.clearContext(ctx);\n        }\n        ctx.restore();\n    }\n    setContext(_) {\n    // NO RENDER\n    }\n    applyEffects(ctx) {\n        // transform\n        const transform = Transform.fromElement(this.document, this);\n        if (transform) {\n            transform.apply(ctx);\n        }\n        // clip\n        const clipPathStyleProp = this.getStyle('clip-path', false, true);\n        if (clipPathStyleProp.hasValue()) {\n            const clip = clipPathStyleProp.getDefinition();\n            if (clip) {\n                clip.apply(ctx);\n            }\n        }\n    }\n    clearContext(_) {\n    // NO RENDER\n    }\n    renderChildren(ctx) {\n        this.children.forEach((child)=>{\n            child.render(ctx);\n        });\n    }\n    addChild(childNode) {\n        const child = childNode instanceof Element ? childNode : this.document.createElement(childNode);\n        child.parent = this;\n        if (!Element.ignoreChildTypes.includes(child.type)) {\n            this.children.push(child);\n        }\n    }\n    matchesSelector(selector) {\n        var ref;\n        const { node  } = this;\n        if (typeof node.matches === 'function') {\n            return node.matches(selector);\n        }\n        const styleClasses = (ref = node.getAttribute) === null || ref === void 0 ? void 0 : ref.call(node, 'class');\n        if (!styleClasses || styleClasses === '') {\n            return false;\n        }\n        return styleClasses.split(' ').some((styleClass)=>\".\".concat(styleClass) === selector\n        );\n    }\n    addStylesFromStyleDefinition() {\n        const { styles , stylesSpecificity  } = this.document;\n        let styleProp;\n        for(const selector in styles){\n            if (!selector.startsWith('@') && this.matchesSelector(selector)) {\n                const style = styles[selector];\n                const specificity = stylesSpecificity[selector];\n                if (style) {\n                    for(const name in style){\n                        let existingSpecificity = this.stylesSpecificity[name];\n                        if (typeof existingSpecificity === 'undefined') {\n                            existingSpecificity = '000';\n                        }\n                        if (specificity && specificity >= existingSpecificity) {\n                            styleProp = style[name];\n                            if (styleProp) {\n                                this.styles[name] = styleProp;\n                            }\n                            this.stylesSpecificity[name] = specificity;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    removeStyles(element, ignoreStyles) {\n        const toRestore1 = ignoreStyles.reduce((toRestore, name)=>{\n            const styleProp = element.getStyle(name);\n            if (!styleProp.hasValue()) {\n                return toRestore;\n            }\n            const value = styleProp.getString();\n            styleProp.setValue('');\n            return [\n                ...toRestore,\n                [\n                    name,\n                    value\n                ]\n            ];\n        }, []);\n        return toRestore1;\n    }\n    restoreStyles(element, styles) {\n        styles.forEach((param)=>{\n            let [name, value] = param;\n            element.getStyle(name, true).setValue(value);\n        });\n    }\n    isFirstChild() {\n        var ref;\n        return ((ref = this.parent) === null || ref === void 0 ? void 0 : ref.children.indexOf(this)) === 0;\n    }\n    constructor(document, node, captureTextNodes = false){\n        this.document = document;\n        this.node = node;\n        this.captureTextNodes = captureTextNodes;\n        this.type = '';\n        this.attributes = {};\n        this.styles = {};\n        this.stylesSpecificity = {};\n        this.animationFrozen = false;\n        this.animationFrozenValue = '';\n        this.parent = null;\n        this.children = [];\n        if (!node || node.nodeType !== 1) {\n            return;\n        }\n        // add attributes\n        Array.from(node.attributes).forEach((attribute)=>{\n            const nodeName = normalizeAttributeName(attribute.nodeName);\n            this.attributes[nodeName] = new Property(document, nodeName, attribute.value);\n        });\n        this.addStylesFromStyleDefinition();\n        // add inline styles\n        if (this.getAttribute('style').hasValue()) {\n            const styles = this.getAttribute('style').getString().split(';').map((_)=>_.trim()\n            );\n            styles.forEach((style)=>{\n                if (!style) {\n                    return;\n                }\n                const [name, value] = style.split(':').map((_)=>_.trim()\n                );\n                if (name) {\n                    this.styles[name] = new Property(document, name, value);\n                }\n            });\n        }\n        const { definitions  } = document;\n        const id = this.getAttribute('id');\n        // add id\n        if (id.hasValue()) {\n            if (!definitions[id.getString()]) {\n                definitions[id.getString()] = this;\n            }\n        }\n        Array.from(node.childNodes).forEach((childNode)=>{\n            if (childNode.nodeType === 1) {\n                this.addChild(childNode) // ELEMENT_NODE\n                ;\n            } else if (captureTextNodes && (childNode.nodeType === 3 || childNode.nodeType === 4)) {\n                const textNode = document.createTextNode(childNode);\n                if (textNode.getText().length > 0) {\n                    this.addChild(textNode) // TEXT_NODE\n                    ;\n                }\n            }\n        });\n    }\n}\nElement.ignoreChildTypes = [\n    'title'\n];\n\nclass UnknownElement extends Element {\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n    }\n}\n\nfunction wrapFontFamily(fontFamily) {\n    const trimmed = fontFamily.trim();\n    return /^('|\")/.test(trimmed) ? trimmed : \"\\\"\".concat(trimmed, \"\\\"\");\n}\nfunction prepareFontFamily(fontFamily) {\n    return typeof process === 'undefined' ? fontFamily : fontFamily.trim().split(',').map(wrapFontFamily).join(',');\n}\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style\n * @param fontStyle\n * @returns CSS font style.\n */ function prepareFontStyle(fontStyle) {\n    if (!fontStyle) {\n        return '';\n    }\n    const targetFontStyle = fontStyle.trim().toLowerCase();\n    switch(targetFontStyle){\n        case 'normal':\n        case 'italic':\n        case 'oblique':\n        case 'inherit':\n        case 'initial':\n        case 'unset':\n            return targetFontStyle;\n        default:\n            if (/^oblique\\s+(-|)\\d+deg$/.test(targetFontStyle)) {\n                return targetFontStyle;\n            }\n            return '';\n    }\n}\n/**\n * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n * @param fontWeight\n * @returns CSS font weight.\n */ function prepareFontWeight(fontWeight) {\n    if (!fontWeight) {\n        return '';\n    }\n    const targetFontWeight = fontWeight.trim().toLowerCase();\n    switch(targetFontWeight){\n        case 'normal':\n        case 'bold':\n        case 'lighter':\n        case 'bolder':\n        case 'inherit':\n        case 'initial':\n        case 'unset':\n            return targetFontWeight;\n        default:\n            if (/^[\\d.]+$/.test(targetFontWeight)) {\n                return targetFontWeight;\n            }\n            return '';\n    }\n}\nclass Font {\n    static parse() {\n        let font = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : '', inherit = arguments.length > 1 ? arguments[1] : void 0;\n        let fontStyle = '';\n        let fontVariant = '';\n        let fontWeight = '';\n        let fontSize = '';\n        let fontFamily = '';\n        const parts = compressSpaces(font).trim().split(' ');\n        const set = {\n            fontSize: false,\n            fontStyle: false,\n            fontWeight: false,\n            fontVariant: false\n        };\n        parts.forEach((part)=>{\n            switch(true){\n                case !set.fontStyle && Font.styles.includes(part):\n                    if (part !== 'inherit') {\n                        fontStyle = part;\n                    }\n                    set.fontStyle = true;\n                    break;\n                case !set.fontVariant && Font.variants.includes(part):\n                    if (part !== 'inherit') {\n                        fontVariant = part;\n                    }\n                    set.fontStyle = true;\n                    set.fontVariant = true;\n                    break;\n                case !set.fontWeight && Font.weights.includes(part):\n                    if (part !== 'inherit') {\n                        fontWeight = part;\n                    }\n                    set.fontStyle = true;\n                    set.fontVariant = true;\n                    set.fontWeight = true;\n                    break;\n                case !set.fontSize:\n                    if (part !== 'inherit') {\n                        fontSize = part.split('/')[0] || '';\n                    }\n                    set.fontStyle = true;\n                    set.fontVariant = true;\n                    set.fontWeight = true;\n                    set.fontSize = true;\n                    break;\n                default:\n                    if (part !== 'inherit') {\n                        fontFamily += part;\n                    }\n            }\n        });\n        return new Font(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit);\n    }\n    toString() {\n        return [\n            prepareFontStyle(this.fontStyle),\n            this.fontVariant,\n            prepareFontWeight(this.fontWeight),\n            this.fontSize,\n            // Wrap fontFamily only on nodejs and only for canvas.ctx\n            prepareFontFamily(this.fontFamily)\n        ].join(' ').trim();\n    }\n    constructor(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit){\n        const inheritFont = inherit ? typeof inherit === 'string' ? Font.parse(inherit) : inherit : {};\n        this.fontFamily = fontFamily || inheritFont.fontFamily;\n        this.fontSize = fontSize || inheritFont.fontSize;\n        this.fontStyle = fontStyle || inheritFont.fontStyle;\n        this.fontWeight = fontWeight || inheritFont.fontWeight;\n        this.fontVariant = fontVariant || inheritFont.fontVariant;\n    }\n}\nFont.styles = 'normal|italic|oblique|inherit';\nFont.variants = 'normal|small-caps|inherit';\nFont.weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';\n\nclass BoundingBox {\n    get x() {\n        return this.x1;\n    }\n    get y() {\n        return this.y1;\n    }\n    get width() {\n        return this.x2 - this.x1;\n    }\n    get height() {\n        return this.y2 - this.y1;\n    }\n    addPoint(x, y) {\n        if (typeof x !== 'undefined') {\n            if (isNaN(this.x1) || isNaN(this.x2)) {\n                this.x1 = x;\n                this.x2 = x;\n            }\n            if (x < this.x1) {\n                this.x1 = x;\n            }\n            if (x > this.x2) {\n                this.x2 = x;\n            }\n        }\n        if (typeof y !== 'undefined') {\n            if (isNaN(this.y1) || isNaN(this.y2)) {\n                this.y1 = y;\n                this.y2 = y;\n            }\n            if (y < this.y1) {\n                this.y1 = y;\n            }\n            if (y > this.y2) {\n                this.y2 = y;\n            }\n        }\n    }\n    addX(x) {\n        this.addPoint(x, 0);\n    }\n    addY(y) {\n        this.addPoint(0, y);\n    }\n    addBoundingBox(boundingBox) {\n        if (!boundingBox) {\n            return;\n        }\n        const { x1 , y1 , x2 , y2  } = boundingBox;\n        this.addPoint(x1, y1);\n        this.addPoint(x2, y2);\n    }\n    sumCubic(t, p0, p1, p2, p3) {\n        return Math.pow(1 - t, 3) * p0 + 3 * Math.pow(1 - t, 2) * t * p1 + 3 * (1 - t) * Math.pow(t, 2) * p2 + Math.pow(t, 3) * p3;\n    }\n    bezierCurveAdd(forX, p0, p1, p2, p3) {\n        const b = 6 * p0 - 12 * p1 + 6 * p2;\n        const a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;\n        const c = 3 * p1 - 3 * p0;\n        if (a === 0) {\n            if (b === 0) {\n                return;\n            }\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (forX) {\n                    this.addX(this.sumCubic(t, p0, p1, p2, p3));\n                } else {\n                    this.addY(this.sumCubic(t, p0, p1, p2, p3));\n                }\n            }\n            return;\n        }\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) {\n            return;\n        }\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (forX) {\n                this.addX(this.sumCubic(t1, p0, p1, p2, p3));\n            } else {\n                this.addY(this.sumCubic(t1, p0, p1, p2, p3));\n            }\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (forX) {\n                this.addX(this.sumCubic(t2, p0, p1, p2, p3));\n            } else {\n                this.addY(this.sumCubic(t2, p0, p1, p2, p3));\n            }\n        }\n    }\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p3x, p3y);\n        this.bezierCurveAdd(true, p0x, p1x, p2x, p3x);\n        this.bezierCurveAdd(false, p0y, p1y, p2y, p3y);\n    }\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        const cp1x = p0x + 2 / 3 * (p1x - p0x) // CP1 = QP0 + 2/3 *(QP1-QP0)\n        ;\n        const cp1y = p0y + 2 / 3 * (p1y - p0y) // CP1 = QP0 + 2/3 *(QP1-QP0)\n        ;\n        const cp2x = cp1x + 1 / 3 * (p2x - p0x) // CP2 = CP1 + 1/3 *(QP2-QP0)\n        ;\n        const cp2y = cp1y + 1 / 3 * (p2y - p0y) // CP2 = CP1 + 1/3 *(QP2-QP0)\n        ;\n        this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y);\n    }\n    isPointInBox(x, y) {\n        const { x1 , y1 , x2 , y2  } = this;\n        return x1 <= x && x <= x2 && y1 <= y && y <= y2;\n    }\n    constructor(x1 = Number.NaN, y1 = Number.NaN, x2 = Number.NaN, y2 = Number.NaN){\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n        this.addPoint(x1, y1);\n        this.addPoint(x2, y2);\n    }\n}\n\nclass RenderedElement extends Element {\n    calculateOpacity() {\n        let opacity = 1;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n        let element = this;\n        while(element){\n            const opacityStyle = element.getStyle('opacity', false, true) // no ancestors on style call\n            ;\n            if (opacityStyle.hasValue(true)) {\n                opacity *= opacityStyle.getNumber();\n            }\n            element = element.parent;\n        }\n        return opacity;\n    }\n    setContext(ctx) {\n        let fromMeasure = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        if (!fromMeasure) {\n            // fill\n            const fillStyleProp = this.getStyle('fill');\n            const fillOpacityStyleProp = this.getStyle('fill-opacity');\n            const strokeStyleProp = this.getStyle('stroke');\n            const strokeOpacityProp = this.getStyle('stroke-opacity');\n            if (fillStyleProp.isUrlDefinition()) {\n                const fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp);\n                if (fillStyle) {\n                    ctx.fillStyle = fillStyle;\n                }\n            } else if (fillStyleProp.hasValue()) {\n                if (fillStyleProp.getString() === 'currentColor') {\n                    fillStyleProp.setValue(this.getStyle('color').getColor());\n                }\n                const fillStyle = fillStyleProp.getColor();\n                if (fillStyle !== 'inherit') {\n                    ctx.fillStyle = fillStyle === 'none' ? 'rgba(0,0,0,0)' : fillStyle;\n                }\n            }\n            if (fillOpacityStyleProp.hasValue()) {\n                const fillStyle = new Property(this.document, 'fill', ctx.fillStyle).addOpacity(fillOpacityStyleProp).getColor();\n                ctx.fillStyle = fillStyle;\n            }\n            // stroke\n            if (strokeStyleProp.isUrlDefinition()) {\n                const strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp);\n                if (strokeStyle) {\n                    ctx.strokeStyle = strokeStyle;\n                }\n            } else if (strokeStyleProp.hasValue()) {\n                if (strokeStyleProp.getString() === 'currentColor') {\n                    strokeStyleProp.setValue(this.getStyle('color').getColor());\n                }\n                const strokeStyle = strokeStyleProp.getString();\n                if (strokeStyle !== 'inherit') {\n                    ctx.strokeStyle = strokeStyle === 'none' ? 'rgba(0,0,0,0)' : strokeStyle;\n                }\n            }\n            if (strokeOpacityProp.hasValue()) {\n                const strokeStyle = new Property(this.document, 'stroke', ctx.strokeStyle).addOpacity(strokeOpacityProp).getString();\n                ctx.strokeStyle = strokeStyle;\n            }\n            const strokeWidthStyleProp = this.getStyle('stroke-width');\n            if (strokeWidthStyleProp.hasValue()) {\n                const newLineWidth = strokeWidthStyleProp.getPixels();\n                ctx.lineWidth = !newLineWidth ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)\n                 : newLineWidth;\n            }\n            const strokeLinecapStyleProp = this.getStyle('stroke-linecap');\n            const strokeLinejoinStyleProp = this.getStyle('stroke-linejoin');\n            const strokeMiterlimitProp = this.getStyle('stroke-miterlimit');\n            // NEED TEST\n            // const pointOrderStyleProp = this.getStyle('paint-order');\n            const strokeDasharrayStyleProp = this.getStyle('stroke-dasharray');\n            const strokeDashoffsetProp = this.getStyle('stroke-dashoffset');\n            if (strokeLinecapStyleProp.hasValue()) {\n                ctx.lineCap = strokeLinecapStyleProp.getString();\n            }\n            if (strokeLinejoinStyleProp.hasValue()) {\n                ctx.lineJoin = strokeLinejoinStyleProp.getString();\n            }\n            if (strokeMiterlimitProp.hasValue()) {\n                ctx.miterLimit = strokeMiterlimitProp.getNumber();\n            }\n            // NEED TEST\n            // if (pointOrderStyleProp.hasValue()) {\n            //   // ?\n            //   ctx.paintOrder = pointOrderStyleProp.getValue();\n            // }\n            if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {\n                const gaps = toNumbers(strokeDasharrayStyleProp.getString());\n                if (typeof ctx.setLineDash !== 'undefined') {\n                    ctx.setLineDash(gaps);\n                } else // @ts-expect-error Handle browser prefix.\n                if (typeof ctx.webkitLineDash !== 'undefined') {\n                    // @ts-expect-error Handle browser prefix.\n                    ctx.webkitLineDash = gaps;\n                } else // @ts-expect-error Handle browser prefix.\n                if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {\n                    // @ts-expect-error Handle browser prefix.\n                    ctx.mozDash = gaps;\n                }\n                const offset = strokeDashoffsetProp.getPixels();\n                if (typeof ctx.lineDashOffset !== 'undefined') {\n                    ctx.lineDashOffset = offset;\n                } else // @ts-expect-error Handle browser prefix.\n                if (typeof ctx.webkitLineDashOffset !== 'undefined') {\n                    // @ts-expect-error Handle browser prefix.\n                    ctx.webkitLineDashOffset = offset;\n                } else // @ts-expect-error Handle browser prefix.\n                if (typeof ctx.mozDashOffset !== 'undefined') {\n                    // @ts-expect-error Handle browser prefix.\n                    ctx.mozDashOffset = offset;\n                }\n            }\n        }\n        // font\n        this.modifiedEmSizeStack = false;\n        if (typeof ctx.font !== 'undefined') {\n            const fontStyleProp = this.getStyle('font');\n            const fontStyleStyleProp = this.getStyle('font-style');\n            const fontVariantStyleProp = this.getStyle('font-variant');\n            const fontWeightStyleProp = this.getStyle('font-weight');\n            const fontSizeStyleProp = this.getStyle('font-size');\n            const fontFamilyStyleProp = this.getStyle('font-family');\n            const font = new Font(fontStyleStyleProp.getString(), fontVariantStyleProp.getString(), fontWeightStyleProp.getString(), fontSizeStyleProp.hasValue() ? \"\".concat(fontSizeStyleProp.getPixels(true), \"px\") : '', fontFamilyStyleProp.getString(), Font.parse(fontStyleProp.getString(), ctx.font));\n            fontStyleStyleProp.setValue(font.fontStyle);\n            fontVariantStyleProp.setValue(font.fontVariant);\n            fontWeightStyleProp.setValue(font.fontWeight);\n            fontSizeStyleProp.setValue(font.fontSize);\n            fontFamilyStyleProp.setValue(font.fontFamily);\n            ctx.font = font.toString();\n            if (fontSizeStyleProp.isPixels()) {\n                this.document.emSize = fontSizeStyleProp.getPixels();\n                this.modifiedEmSizeStack = true;\n            }\n        }\n        if (!fromMeasure) {\n            // effects\n            this.applyEffects(ctx);\n            // opacity\n            ctx.globalAlpha = this.calculateOpacity();\n        }\n    }\n    clearContext(ctx) {\n        super.clearContext(ctx);\n        if (this.modifiedEmSizeStack) {\n            this.document.popEmSize();\n        }\n    }\n    constructor(...args){\n        super(...args);\n        this.modifiedEmSizeStack = false;\n    }\n}\n\nclass TextElement extends RenderedElement {\n    setContext(ctx) {\n        let fromMeasure = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        super.setContext(ctx, fromMeasure);\n        const textBaseline = this.getStyle('dominant-baseline').getTextBaseline() || this.getStyle('alignment-baseline').getTextBaseline();\n        if (textBaseline) {\n            ctx.textBaseline = textBaseline;\n        }\n    }\n    initializeCoordinates() {\n        this.x = 0;\n        this.y = 0;\n        this.leafTexts = [];\n        this.textChunkStart = 0;\n        this.minX = Number.POSITIVE_INFINITY;\n        this.maxX = Number.NEGATIVE_INFINITY;\n    }\n    getBoundingBox(ctx) {\n        if (this.type !== 'text') {\n            return this.getTElementBoundingBox(ctx);\n        }\n        // first, calculate child positions\n        this.initializeCoordinates();\n        this.adjustChildCoordinatesRecursive(ctx);\n        let boundingBox = null;\n        // then calculate bounding box\n        this.children.forEach((_, i)=>{\n            const childBoundingBox = this.getChildBoundingBox(ctx, this, this, i);\n            if (!boundingBox) {\n                boundingBox = childBoundingBox;\n            } else {\n                boundingBox.addBoundingBox(childBoundingBox);\n            }\n        });\n        return boundingBox;\n    }\n    getFontSize() {\n        const { document , parent  } = this;\n        const inheritFontSize = Font.parse(document.ctx.font).fontSize;\n        const fontSize = parent.getStyle('font-size').getNumber(inheritFontSize);\n        return fontSize;\n    }\n    getTElementBoundingBox(ctx) {\n        const fontSize = this.getFontSize();\n        return new BoundingBox(this.x, this.y - fontSize, this.x + this.measureText(ctx), this.y);\n    }\n    getGlyph(font, text, i) {\n        const char = text[i];\n        let glyph;\n        if (font.isArabic) {\n            var ref;\n            const len = text.length;\n            const prevChar = text[i - 1];\n            const nextChar = text[i + 1];\n            let arabicForm = 'isolated';\n            if ((i === 0 || prevChar === ' ') && i < len - 1 && nextChar !== ' ') {\n                arabicForm = 'terminal';\n            }\n            if (i > 0 && prevChar !== ' ' && i < len - 1 && nextChar !== ' ') {\n                arabicForm = 'medial';\n            }\n            if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {\n                arabicForm = 'initial';\n            }\n            glyph = ((ref = font.arabicGlyphs[char]) === null || ref === void 0 ? void 0 : ref[arabicForm]) || font.glyphs[char];\n        } else {\n            glyph = font.glyphs[char];\n        }\n        if (!glyph) {\n            glyph = font.missingGlyph;\n        }\n        return glyph;\n    }\n    getText() {\n        return '';\n    }\n    getTextFromNode(node) {\n        const textNode = node || this.node;\n        const childNodes = Array.from(textNode.parentNode.childNodes);\n        const index = childNodes.indexOf(textNode);\n        const lastIndex = childNodes.length - 1;\n        let text = compressSpaces(// textNode.value\n        // || textNode.text\n        textNode.textContent || '');\n        if (index === 0) {\n            text = trimLeft(text);\n        }\n        if (index === lastIndex) {\n            text = trimRight(text);\n        }\n        return text;\n    }\n    renderChildren(ctx) {\n        if (this.type !== 'text') {\n            this.renderTElementChildren(ctx);\n            return;\n        }\n        // first, calculate child positions\n        this.initializeCoordinates();\n        this.adjustChildCoordinatesRecursive(ctx);\n        // then render\n        this.children.forEach((_, i)=>{\n            this.renderChild(ctx, this, this, i);\n        });\n        const { mouse  } = this.document.screen;\n        // Do not calc bounding box if mouse is not working.\n        if (mouse.isWorking()) {\n            mouse.checkBoundingBox(this, this.getBoundingBox(ctx));\n        }\n    }\n    renderTElementChildren(ctx) {\n        const { document , parent  } = this;\n        const renderText = this.getText();\n        const customFont = parent.getStyle('font-family').getDefinition();\n        if (customFont) {\n            const { unitsPerEm  } = customFont.fontFace;\n            const ctxFont = Font.parse(document.ctx.font);\n            const fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize);\n            const fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle);\n            const scale = fontSize / unitsPerEm;\n            const text = customFont.isRTL ? renderText.split('').reverse().join('') : renderText;\n            const dx = toNumbers(parent.getAttribute('dx').getString());\n            const len = text.length;\n            for(let i = 0; i < len; i++){\n                const glyph = this.getGlyph(customFont, text, i);\n                ctx.translate(this.x, this.y);\n                ctx.scale(scale, -scale);\n                const lw = ctx.lineWidth;\n                ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize;\n                if (fontStyle === 'italic') {\n                    ctx.transform(1, 0, 0.4, 1, 0, 0);\n                }\n                glyph.render(ctx);\n                if (fontStyle === 'italic') {\n                    ctx.transform(1, 0, -0.4, 1, 0, 0);\n                }\n                ctx.lineWidth = lw;\n                ctx.scale(1 / scale, -1 / scale);\n                ctx.translate(-this.x, -this.y);\n                this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm;\n                if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n                    this.x += dx[i];\n                }\n            }\n            return;\n        }\n        const { x , y  } = this;\n        // NEED TEST\n        // if (ctx.paintOrder === 'stroke') {\n        //   if (ctx.strokeStyle) {\n        //     ctx.strokeText(renderText, x, y);\n        //   }\n        //   if (ctx.fillStyle) {\n        //     ctx.fillText(renderText, x, y);\n        //   }\n        // } else {\n        if (ctx.fillStyle) {\n            ctx.fillText(renderText, x, y);\n        }\n        if (ctx.strokeStyle) {\n            ctx.strokeText(renderText, x, y);\n        }\n    // }\n    }\n    applyAnchoring() {\n        if (this.textChunkStart >= this.leafTexts.length) {\n            return;\n        }\n        // This is basically the \"Apply anchoring\" part of https://www.w3.org/TR/SVG2/text.html#TextLayoutAlgorithm.\n        // The difference is that we apply the anchoring as soon as a chunk is finished. This saves some extra looping.\n        // Vertical text is not supported.\n        const firstElement = this.leafTexts[this.textChunkStart];\n        const textAnchor = firstElement.getStyle('text-anchor').getString('start');\n        const isRTL = false // we treat RTL like LTR\n        ;\n        let shift = 0;\n        if (textAnchor === 'start' && !isRTL || textAnchor === 'end' && isRTL) {\n            shift = firstElement.x - this.minX;\n        } else if (textAnchor === 'end' && !isRTL || textAnchor === 'start' && isRTL) {\n            shift = firstElement.x - this.maxX;\n        } else {\n            shift = firstElement.x - (this.minX + this.maxX) / 2;\n        }\n        for(let i = this.textChunkStart; i < this.leafTexts.length; i++){\n            this.leafTexts[i].x += shift;\n        }\n        // start new chunk\n        this.minX = Number.POSITIVE_INFINITY;\n        this.maxX = Number.NEGATIVE_INFINITY;\n        this.textChunkStart = this.leafTexts.length;\n    }\n    adjustChildCoordinatesRecursive(ctx) {\n        this.children.forEach((_, i)=>{\n            this.adjustChildCoordinatesRecursiveCore(ctx, this, this, i);\n        });\n        this.applyAnchoring();\n    }\n    adjustChildCoordinatesRecursiveCore(ctx, textParent, parent, i1) {\n        const child = parent.children[i1];\n        if (child.children.length > 0) {\n            child.children.forEach((_, i)=>{\n                textParent.adjustChildCoordinatesRecursiveCore(ctx, textParent, child, i);\n            });\n        } else {\n            // only leafs are relevant\n            this.adjustChildCoordinates(ctx, textParent, parent, i1);\n        }\n    }\n    adjustChildCoordinates(ctx, textParent, parent, i) {\n        const child = parent.children[i];\n        if (typeof child.measureText !== 'function') {\n            return child;\n        }\n        ctx.save();\n        child.setContext(ctx, true);\n        const xAttr = child.getAttribute('x');\n        const yAttr = child.getAttribute('y');\n        const dxAttr = child.getAttribute('dx');\n        const dyAttr = child.getAttribute('dy');\n        const customFont = child.getStyle('font-family').getDefinition();\n        const isRTL = Boolean(customFont === null || customFont === void 0 ? void 0 : customFont.isRTL);\n        if (i === 0) {\n            // First children inherit attributes from parent(s). Positional attributes\n            // are only inherited from a parent to it's first child.\n            if (!xAttr.hasValue()) {\n                xAttr.setValue(child.getInheritedAttribute('x'));\n            }\n            if (!yAttr.hasValue()) {\n                yAttr.setValue(child.getInheritedAttribute('y'));\n            }\n            if (!dxAttr.hasValue()) {\n                dxAttr.setValue(child.getInheritedAttribute('dx'));\n            }\n            if (!dyAttr.hasValue()) {\n                dyAttr.setValue(child.getInheritedAttribute('dy'));\n            }\n        }\n        const width = child.measureText(ctx);\n        if (isRTL) {\n            textParent.x -= width;\n        }\n        if (xAttr.hasValue()) {\n            // an \"x\" attribute marks the start of a new chunk\n            textParent.applyAnchoring();\n            child.x = xAttr.getPixels('x');\n            if (dxAttr.hasValue()) {\n                child.x += dxAttr.getPixels('x');\n            }\n        } else {\n            if (dxAttr.hasValue()) {\n                textParent.x += dxAttr.getPixels('x');\n            }\n            child.x = textParent.x;\n        }\n        textParent.x = child.x;\n        if (!isRTL) {\n            textParent.x += width;\n        }\n        if (yAttr.hasValue()) {\n            child.y = yAttr.getPixels('y');\n            if (dyAttr.hasValue()) {\n                child.y += dyAttr.getPixels('y');\n            }\n        } else {\n            if (dyAttr.hasValue()) {\n                textParent.y += dyAttr.getPixels('y');\n            }\n            child.y = textParent.y;\n        }\n        textParent.y = child.y;\n        // update the current chunk and it's bounds\n        textParent.leafTexts.push(child);\n        textParent.minX = Math.min(textParent.minX, child.x, child.x + width);\n        textParent.maxX = Math.max(textParent.maxX, child.x, child.x + width);\n        child.clearContext(ctx);\n        ctx.restore();\n        return child;\n    }\n    getChildBoundingBox(ctx, textParent, parent, i2) {\n        const child = parent.children[i2];\n        // not a text node?\n        if (typeof child.getBoundingBox !== 'function') {\n            return null;\n        }\n        const boundingBox = child.getBoundingBox(ctx);\n        if (boundingBox) {\n            child.children.forEach((_, i)=>{\n                const childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i);\n                boundingBox.addBoundingBox(childBoundingBox);\n            });\n        }\n        return boundingBox;\n    }\n    renderChild(ctx, textParent, parent, i3) {\n        const child = parent.children[i3];\n        child.render(ctx);\n        child.children.forEach((_, i)=>{\n            textParent.renderChild(ctx, textParent, child, i);\n        });\n    }\n    measureText(ctx) {\n        const { measureCache  } = this;\n        if (~measureCache) {\n            return measureCache;\n        }\n        const renderText = this.getText();\n        const measure = this.measureTargetText(ctx, renderText);\n        this.measureCache = measure;\n        return measure;\n    }\n    measureTargetText(ctx, targetText) {\n        if (!targetText.length) {\n            return 0;\n        }\n        const { parent  } = this;\n        const customFont = parent.getStyle('font-family').getDefinition();\n        if (customFont) {\n            const fontSize = this.getFontSize();\n            const text = customFont.isRTL ? targetText.split('').reverse().join('') : targetText;\n            const dx = toNumbers(parent.getAttribute('dx').getString());\n            const len = text.length;\n            let measure = 0;\n            for(let i = 0; i < len; i++){\n                const glyph = this.getGlyph(customFont, text, i);\n                measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;\n                if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {\n                    measure += dx[i];\n                }\n            }\n            return measure;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        if (!ctx.measureText) {\n            return targetText.length * 10;\n        }\n        ctx.save();\n        this.setContext(ctx, true);\n        const { width: measure  } = ctx.measureText(targetText);\n        this.clearContext(ctx);\n        ctx.restore();\n        return measure;\n    }\n    /**\n   * Inherits positional attributes from {@link TextElement} parent(s). Attributes\n   * are only inherited from a parent to its first child.\n   * @param name - The attribute name.\n   * @returns The attribute value or null.\n   */ getInheritedAttribute(name) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias,consistent-this\n        let current = this;\n        while(current instanceof TextElement && current.isFirstChild() && current.parent){\n            const parentAttr = current.parent.getAttribute(name);\n            if (parentAttr.hasValue(true)) {\n                return parentAttr.getString('0');\n            }\n            current = current.parent;\n        }\n        return null;\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, new.target === TextElement ? true : captureTextNodes);\n        this.type = 'text';\n        this.x = 0;\n        this.y = 0;\n        this.leafTexts = [];\n        this.textChunkStart = 0;\n        this.minX = Number.POSITIVE_INFINITY;\n        this.maxX = Number.NEGATIVE_INFINITY;\n        this.measureCache = -1;\n    }\n}\n\nclass TSpanElement extends TextElement {\n    getText() {\n        return this.text;\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, new.target === TSpanElement ? true : captureTextNodes);\n        this.type = 'tspan';\n        // if this node has children, then they own the text\n        this.text = this.children.length > 0 ? '' : this.getTextFromNode();\n    }\n}\n\nclass TextNode extends TSpanElement {\n    constructor(...args){\n        super(...args);\n        this.type = 'textNode';\n    }\n}\n\nclass PathParser extends svgPathdata.SVGPathData {\n    reset() {\n        this.i = -1;\n        this.command = null;\n        this.previousCommand = null;\n        this.start = new Point(0, 0);\n        this.control = new Point(0, 0);\n        this.current = new Point(0, 0);\n        this.points = [];\n        this.angles = [];\n    }\n    isEnd() {\n        const { i , commands  } = this;\n        return i >= commands.length - 1;\n    }\n    next() {\n        const command = this.commands[++this.i];\n        this.previousCommand = this.command;\n        this.command = command;\n        return command;\n    }\n    getPoint() {\n        let xProp = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 'x', yProp = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'y';\n        const point = new Point(this.command[xProp], this.command[yProp]);\n        return this.makeAbsolute(point);\n    }\n    getAsControlPoint(xProp, yProp) {\n        const point = this.getPoint(xProp, yProp);\n        this.control = point;\n        return point;\n    }\n    getAsCurrentPoint(xProp, yProp) {\n        const point = this.getPoint(xProp, yProp);\n        this.current = point;\n        return point;\n    }\n    getReflectedControlPoint() {\n        const previousCommand = this.previousCommand.type;\n        if (previousCommand !== svgPathdata.SVGPathData.CURVE_TO && previousCommand !== svgPathdata.SVGPathData.SMOOTH_CURVE_TO && previousCommand !== svgPathdata.SVGPathData.QUAD_TO && previousCommand !== svgPathdata.SVGPathData.SMOOTH_QUAD_TO) {\n            return this.current;\n        }\n        // reflect point\n        const { current: { x: cx , y: cy  } , control: { x: ox , y: oy  }  } = this;\n        const point = new Point(2 * cx - ox, 2 * cy - oy);\n        return point;\n    }\n    makeAbsolute(point) {\n        if (this.command.relative) {\n            const { x , y  } = this.current;\n            point.x += x;\n            point.y += y;\n        }\n        return point;\n    }\n    addMarker(point, from, priorTo) {\n        const { points , angles  } = this;\n        // if the last angle isn't filled in because we didn't have this point yet ...\n        if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {\n            angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo);\n        }\n        this.addMarkerAngle(point, from ? from.angleTo(point) : null);\n    }\n    addMarkerAngle(point, angle) {\n        this.points.push(point);\n        this.angles.push(angle);\n    }\n    getMarkerPoints() {\n        return this.points;\n    }\n    getMarkerAngles() {\n        const { angles  } = this;\n        const len = angles.length;\n        for(let i = 0; i < len; i++){\n            if (!angles[i]) {\n                for(let j = i + 1; j < len; j++){\n                    if (angles[j]) {\n                        angles[i] = angles[j];\n                        break;\n                    }\n                }\n            }\n        }\n        return angles;\n    }\n    constructor(path){\n        super(path// Fix spaces after signs.\n        .replace(/([+\\-.])\\s+/gm, '$1')// Remove invalid part.\n        .replace(/[^MmZzLlHhVvCcSsQqTtAae\\d\\s.,+-].*/g, ''));\n        this.control = new Point(0, 0);\n        this.start = new Point(0, 0);\n        this.current = new Point(0, 0);\n        this.command = null;\n        this.commands = this.commands;\n        this.i = -1;\n        this.previousCommand = null;\n        this.points = [];\n        this.angles = [];\n    }\n}\n\nclass PathElement extends RenderedElement {\n    path(ctx) {\n        const { pathParser  } = this;\n        const boundingBox = new BoundingBox();\n        pathParser.reset();\n        if (ctx) {\n            ctx.beginPath();\n        }\n        while(!pathParser.isEnd()){\n            switch(pathParser.next().type){\n                case PathParser.MOVE_TO:\n                    this.pathM(ctx, boundingBox);\n                    break;\n                case PathParser.LINE_TO:\n                    this.pathL(ctx, boundingBox);\n                    break;\n                case PathParser.HORIZ_LINE_TO:\n                    this.pathH(ctx, boundingBox);\n                    break;\n                case PathParser.VERT_LINE_TO:\n                    this.pathV(ctx, boundingBox);\n                    break;\n                case PathParser.CURVE_TO:\n                    this.pathC(ctx, boundingBox);\n                    break;\n                case PathParser.SMOOTH_CURVE_TO:\n                    this.pathS(ctx, boundingBox);\n                    break;\n                case PathParser.QUAD_TO:\n                    this.pathQ(ctx, boundingBox);\n                    break;\n                case PathParser.SMOOTH_QUAD_TO:\n                    this.pathT(ctx, boundingBox);\n                    break;\n                case PathParser.ARC:\n                    this.pathA(ctx, boundingBox);\n                    break;\n                case PathParser.CLOSE_PATH:\n                    this.pathZ(ctx, boundingBox);\n                    break;\n            }\n        }\n        return boundingBox;\n    }\n    getBoundingBox(_ctx) {\n        return this.path();\n    }\n    getMarkers() {\n        const { pathParser  } = this;\n        const points = pathParser.getMarkerPoints();\n        const angles = pathParser.getMarkerAngles();\n        const markers = points.map((point, i)=>[\n                point,\n                angles[i]\n            ]\n        );\n        return markers;\n    }\n    renderChildren(ctx) {\n        this.path(ctx);\n        this.document.screen.mouse.checkPath(this, ctx);\n        const fillRuleStyleProp = this.getStyle('fill-rule');\n        if (ctx.fillStyle !== '') {\n            if (fillRuleStyleProp.getString('inherit') !== 'inherit') {\n                ctx.fill(fillRuleStyleProp.getString());\n            } else {\n                ctx.fill();\n            }\n        }\n        if (ctx.strokeStyle !== '') {\n            if (this.getAttribute('vector-effect').getString() === 'non-scaling-stroke') {\n                ctx.save();\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.stroke();\n                ctx.restore();\n            } else {\n                ctx.stroke();\n            }\n        }\n        const markers = this.getMarkers();\n        if (markers) {\n            const markersLastIndex = markers.length - 1;\n            const markerStartStyleProp = this.getStyle('marker-start');\n            const markerMidStyleProp = this.getStyle('marker-mid');\n            const markerEndStyleProp = this.getStyle('marker-end');\n            if (markerStartStyleProp.isUrlDefinition()) {\n                const marker = markerStartStyleProp.getDefinition();\n                const [point, angle] = markers[0];\n                marker.render(ctx, point, angle);\n            }\n            if (markerMidStyleProp.isUrlDefinition()) {\n                const marker = markerMidStyleProp.getDefinition();\n                for(let i = 1; i < markersLastIndex; i++){\n                    const [point, angle] = markers[i];\n                    marker.render(ctx, point, angle);\n                }\n            }\n            if (markerEndStyleProp.isUrlDefinition()) {\n                const marker = markerEndStyleProp.getDefinition();\n                const [point, angle] = markers[markersLastIndex];\n                marker.render(ctx, point, angle);\n            }\n        }\n    }\n    static pathM(pathParser) {\n        const point = pathParser.getAsCurrentPoint();\n        pathParser.start = pathParser.current;\n        return {\n            point\n        };\n    }\n    pathM(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { point  } = PathElement.pathM(pathParser);\n        const { x , y  } = point;\n        pathParser.addMarker(point);\n        boundingBox.addPoint(x, y);\n        if (ctx) {\n            ctx.moveTo(x, y);\n        }\n    }\n    static pathL(pathParser) {\n        const { current  } = pathParser;\n        const point = pathParser.getAsCurrentPoint();\n        return {\n            current,\n            point\n        };\n    }\n    pathL(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , point  } = PathElement.pathL(pathParser);\n        const { x , y  } = point;\n        pathParser.addMarker(point, current);\n        boundingBox.addPoint(x, y);\n        if (ctx) {\n            ctx.lineTo(x, y);\n        }\n    }\n    static pathH(pathParser) {\n        const { current , command  } = pathParser;\n        const point = new Point((command.relative ? current.x : 0) + command.x, current.y);\n        pathParser.current = point;\n        return {\n            current,\n            point\n        };\n    }\n    pathH(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , point  } = PathElement.pathH(pathParser);\n        const { x , y  } = point;\n        pathParser.addMarker(point, current);\n        boundingBox.addPoint(x, y);\n        if (ctx) {\n            ctx.lineTo(x, y);\n        }\n    }\n    static pathV(pathParser) {\n        const { current , command  } = pathParser;\n        const point = new Point(current.x, (command.relative ? current.y : 0) + command.y);\n        pathParser.current = point;\n        return {\n            current,\n            point\n        };\n    }\n    pathV(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , point  } = PathElement.pathV(pathParser);\n        const { x , y  } = point;\n        pathParser.addMarker(point, current);\n        boundingBox.addPoint(x, y);\n        if (ctx) {\n            ctx.lineTo(x, y);\n        }\n    }\n    static pathC(pathParser) {\n        const { current  } = pathParser;\n        const point = pathParser.getPoint('x1', 'y1');\n        const controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n        const currentPoint = pathParser.getAsCurrentPoint();\n        return {\n            current,\n            point,\n            controlPoint,\n            currentPoint\n        };\n    }\n    pathC(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , point , controlPoint , currentPoint  } = PathElement.pathC(pathParser);\n        pathParser.addMarker(currentPoint, controlPoint, point);\n        boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        if (ctx) {\n            ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        }\n    }\n    static pathS(pathParser) {\n        const { current  } = pathParser;\n        const point = pathParser.getReflectedControlPoint();\n        const controlPoint = pathParser.getAsControlPoint('x2', 'y2');\n        const currentPoint = pathParser.getAsCurrentPoint();\n        return {\n            current,\n            point,\n            controlPoint,\n            currentPoint\n        };\n    }\n    pathS(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , point , controlPoint , currentPoint  } = PathElement.pathS(pathParser);\n        pathParser.addMarker(currentPoint, controlPoint, point);\n        boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        if (ctx) {\n            ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        }\n    }\n    static pathQ(pathParser) {\n        const { current  } = pathParser;\n        const controlPoint = pathParser.getAsControlPoint('x1', 'y1');\n        const currentPoint = pathParser.getAsCurrentPoint();\n        return {\n            current,\n            controlPoint,\n            currentPoint\n        };\n    }\n    pathQ(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , controlPoint , currentPoint  } = PathElement.pathQ(pathParser);\n        pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n        boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        if (ctx) {\n            ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        }\n    }\n    static pathT(pathParser) {\n        const { current  } = pathParser;\n        const controlPoint = pathParser.getReflectedControlPoint();\n        pathParser.control = controlPoint;\n        const currentPoint = pathParser.getAsCurrentPoint();\n        return {\n            current,\n            controlPoint,\n            currentPoint\n        };\n    }\n    pathT(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { current , controlPoint , currentPoint  } = PathElement.pathT(pathParser);\n        pathParser.addMarker(currentPoint, controlPoint, controlPoint);\n        boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        if (ctx) {\n            ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        }\n    }\n    static pathA(pathParser) {\n        const { current , command  } = pathParser;\n        let { rX , rY , xRot , lArcFlag , sweepFlag  } = command;\n        const xAxisRotation = xRot * (Math.PI / 180);\n        const currentPoint = pathParser.getAsCurrentPoint();\n        // Conversion from endpoint to center parameterization\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        // x1', y1'\n        const currp = new Point(Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2 + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2, -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2 + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2);\n        // adjust radii\n        const l = Math.pow(currp.x, 2) / Math.pow(rX, 2) + Math.pow(currp.y, 2) / Math.pow(rY, 2);\n        if (l > 1) {\n            rX *= Math.sqrt(l);\n            rY *= Math.sqrt(l);\n        }\n        // cx', cy'\n        let s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt((Math.pow(rX, 2) * Math.pow(rY, 2) - Math.pow(rX, 2) * Math.pow(currp.y, 2) - Math.pow(rY, 2) * Math.pow(currp.x, 2)) / (Math.pow(rX, 2) * Math.pow(currp.y, 2) + Math.pow(rY, 2) * Math.pow(currp.x, 2)));\n        if (isNaN(s)) {\n            s = 0;\n        }\n        const cpp = new Point(s * rX * currp.y / rY, s * -rY * currp.x / rX);\n        // cx, cy\n        const centp = new Point((current.x + currentPoint.x) / 2 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y, (current.y + currentPoint.y) / 2 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y);\n        // initial angle\n        const a1 = vectorsAngle([\n            1,\n            0\n        ], [\n            (currp.x - cpp.x) / rX,\n            (currp.y - cpp.y) / rY\n        ]) // θ1\n        ;\n        // angle delta\n        const u = [\n            (currp.x - cpp.x) / rX,\n            (currp.y - cpp.y) / rY\n        ];\n        const v = [\n            (-currp.x - cpp.x) / rX,\n            (-currp.y - cpp.y) / rY\n        ];\n        let ad = vectorsAngle(u, v) // Δθ\n        ;\n        if (vectorsRatio(u, v) <= -1) {\n            ad = Math.PI;\n        }\n        if (vectorsRatio(u, v) >= 1) {\n            ad = 0;\n        }\n        return {\n            currentPoint,\n            rX,\n            rY,\n            sweepFlag,\n            xAxisRotation,\n            centp,\n            a1,\n            ad\n        };\n    }\n    pathA(ctx, boundingBox) {\n        const { pathParser  } = this;\n        const { currentPoint , rX , rY , sweepFlag , xAxisRotation , centp , a1 , ad  } = PathElement.pathA(pathParser);\n        // for markers\n        const dir = 1 - sweepFlag ? 1 : -1;\n        const ah = a1 + dir * (ad / 2);\n        const halfWay = new Point(centp.x + rX * Math.cos(ah), centp.y + rY * Math.sin(ah));\n        pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);\n        pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI);\n        boundingBox.addPoint(currentPoint.x, currentPoint.y) // TODO: this is too naive, make it better\n        ;\n        if (ctx && !isNaN(a1) && !isNaN(ad)) {\n            const r = rX > rY ? rX : rY;\n            const sx = rX > rY ? 1 : rX / rY;\n            const sy = rX > rY ? rY / rX : 1;\n            ctx.translate(centp.x, centp.y);\n            ctx.rotate(xAxisRotation);\n            ctx.scale(sx, sy);\n            ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag));\n            ctx.scale(1 / sx, 1 / sy);\n            ctx.rotate(-xAxisRotation);\n            ctx.translate(-centp.x, -centp.y);\n        }\n    }\n    static pathZ(pathParser) {\n        pathParser.current = pathParser.start;\n    }\n    pathZ(ctx, boundingBox) {\n        PathElement.pathZ(this.pathParser);\n        if (ctx) {\n            // only close path if it is not a straight line\n            if (boundingBox.x1 !== boundingBox.x2 && boundingBox.y1 !== boundingBox.y2) {\n                ctx.closePath();\n            }\n        }\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'path';\n        this.pathParser = new PathParser(this.getAttribute('d').getString());\n    }\n}\n\nclass SVGElement extends RenderedElement {\n    setContext(ctx) {\n        var ref;\n        const { document  } = this;\n        const { screen , window  } = document;\n        const canvas = ctx.canvas;\n        screen.setDefaults(ctx);\n        if ('style' in canvas && typeof ctx.font !== 'undefined' && window && typeof window.getComputedStyle !== 'undefined') {\n            ctx.font = window.getComputedStyle(canvas).getPropertyValue('font');\n            const fontSizeProp = new Property(document, 'fontSize', Font.parse(ctx.font).fontSize);\n            if (fontSizeProp.hasValue()) {\n                document.rootEmSize = fontSizeProp.getPixels('y');\n                document.emSize = document.rootEmSize;\n            }\n        }\n        // create new view port\n        if (!this.getAttribute('x').hasValue()) {\n            this.getAttribute('x', true).setValue(0);\n        }\n        if (!this.getAttribute('y').hasValue()) {\n            this.getAttribute('y', true).setValue(0);\n        }\n        let { width , height  } = screen.viewPort;\n        if (!this.getStyle('width').hasValue()) {\n            this.getStyle('width', true).setValue('100%');\n        }\n        if (!this.getStyle('height').hasValue()) {\n            this.getStyle('height', true).setValue('100%');\n        }\n        if (!this.getStyle('color').hasValue()) {\n            this.getStyle('color', true).setValue('black');\n        }\n        const refXAttr = this.getAttribute('refX');\n        const refYAttr = this.getAttribute('refY');\n        const viewBoxAttr = this.getAttribute('viewBox');\n        const viewBox = viewBoxAttr.hasValue() ? toNumbers(viewBoxAttr.getString()) : null;\n        const clip = !this.root && this.getStyle('overflow').getValue('hidden') !== 'visible';\n        let minX = 0;\n        let minY = 0;\n        let clipX = 0;\n        let clipY = 0;\n        if (viewBox) {\n            minX = viewBox[0];\n            minY = viewBox[1];\n        }\n        if (!this.root) {\n            width = this.getStyle('width').getPixels('x');\n            height = this.getStyle('height').getPixels('y');\n            if (this.type === 'marker') {\n                clipX = minX;\n                clipY = minY;\n                minX = 0;\n                minY = 0;\n            }\n        }\n        screen.viewPort.setCurrent(width, height);\n        // Default value of transform-origin is center only for root SVG elements\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform-origin\n        if (this.node // is not temporary SVGElement\n         && (!this.parent || ((ref = this.node.parentNode) === null || ref === void 0 ? void 0 : ref.nodeName) === 'foreignObject') && this.getStyle('transform', false, true).hasValue() && !this.getStyle('transform-origin', false, true).hasValue()) {\n            this.getStyle('transform-origin', true, true).setValue('50% 50%');\n        }\n        super.setContext(ctx);\n        ctx.translate(this.getAttribute('x').getPixels('x'), this.getAttribute('y').getPixels('y'));\n        if (viewBox) {\n            width = viewBox[2];\n            height = viewBox[3];\n        }\n        document.setViewBox({\n            ctx,\n            aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n            width: screen.viewPort.width,\n            desiredWidth: width,\n            height: screen.viewPort.height,\n            desiredHeight: height,\n            minX,\n            minY,\n            refX: refXAttr.getValue(),\n            refY: refYAttr.getValue(),\n            clip,\n            clipX,\n            clipY\n        });\n        if (viewBox) {\n            screen.viewPort.removeCurrent();\n            screen.viewPort.setCurrent(width, height);\n        }\n    }\n    clearContext(ctx) {\n        super.clearContext(ctx);\n        this.document.screen.viewPort.removeCurrent();\n    }\n    /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */ resize(width) {\n        let height = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : width, preserveAspectRatio = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        const widthAttr = this.getAttribute('width', true);\n        const heightAttr = this.getAttribute('height', true);\n        const viewBoxAttr = this.getAttribute('viewBox');\n        const styleAttr = this.getAttribute('style');\n        const originWidth = widthAttr.getNumber(0);\n        const originHeight = heightAttr.getNumber(0);\n        if (preserveAspectRatio) {\n            if (typeof preserveAspectRatio === 'string') {\n                this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio);\n            } else {\n                const preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio');\n                if (preserveAspectRatioAttr.hasValue()) {\n                    preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\\s*(\\S.*\\S)\\s*$/, '$1'));\n                }\n            }\n        }\n        widthAttr.setValue(width);\n        heightAttr.setValue(height);\n        if (!viewBoxAttr.hasValue()) {\n            viewBoxAttr.setValue(\"0 0 \".concat(originWidth || width, \" \").concat(originHeight || height));\n        }\n        if (styleAttr.hasValue()) {\n            const widthStyle = this.getStyle('width');\n            const heightStyle = this.getStyle('height');\n            if (widthStyle.hasValue()) {\n                widthStyle.setValue(\"\".concat(width, \"px\"));\n            }\n            if (heightStyle.hasValue()) {\n                heightStyle.setValue(\"\".concat(height, \"px\"));\n            }\n        }\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'svg';\n        this.root = false;\n    }\n}\n\nclass RectElement extends PathElement {\n    path(ctx) {\n        const x = this.getAttribute('x').getPixels('x');\n        const y = this.getAttribute('y').getPixels('y');\n        const width = this.getStyle('width', false, true).getPixels('x');\n        const height = this.getStyle('height', false, true).getPixels('y');\n        const rxAttr = this.getAttribute('rx');\n        const ryAttr = this.getAttribute('ry');\n        let rx = rxAttr.getPixels('x');\n        let ry = ryAttr.getPixels('y');\n        if (rxAttr.hasValue() && !ryAttr.hasValue()) {\n            ry = rx;\n        }\n        if (ryAttr.hasValue() && !rxAttr.hasValue()) {\n            rx = ry;\n        }\n        rx = Math.min(rx, width / 2);\n        ry = Math.min(ry, height / 2);\n        if (ctx) {\n            const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n            ctx.beginPath() // always start the path so we don't fill prior paths\n            ;\n            if (height > 0 && width > 0) {\n                ctx.moveTo(x + rx, y);\n                ctx.lineTo(x + width - rx, y);\n                ctx.bezierCurveTo(x + width - rx + KAPPA * rx, y, x + width, y + ry - KAPPA * ry, x + width, y + ry);\n                ctx.lineTo(x + width, y + height - ry);\n                ctx.bezierCurveTo(x + width, y + height - ry + KAPPA * ry, x + width - rx + KAPPA * rx, y + height, x + width - rx, y + height);\n                ctx.lineTo(x + rx, y + height);\n                ctx.bezierCurveTo(x + rx - KAPPA * rx, y + height, x, y + height - ry + KAPPA * ry, x, y + height - ry);\n                ctx.lineTo(x, y + ry);\n                ctx.bezierCurveTo(x, y + ry - KAPPA * ry, x + rx - KAPPA * rx, y, x + rx, y);\n                ctx.closePath();\n            }\n        }\n        return new BoundingBox(x, y, x + width, y + height);\n    }\n    getMarkers() {\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'rect';\n    }\n}\n\nclass CircleElement extends PathElement {\n    path(ctx) {\n        const cx = this.getAttribute('cx').getPixels('x');\n        const cy = this.getAttribute('cy').getPixels('y');\n        const r = this.getAttribute('r').getPixels();\n        if (ctx && r > 0) {\n            ctx.beginPath();\n            ctx.arc(cx, cy, r, 0, Math.PI * 2, false);\n            ctx.closePath();\n        }\n        return new BoundingBox(cx - r, cy - r, cx + r, cy + r);\n    }\n    getMarkers() {\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'circle';\n    }\n}\n\nclass EllipseElement extends PathElement {\n    path(ctx) {\n        const KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);\n        const rx = this.getAttribute('rx').getPixels('x');\n        const ry = this.getAttribute('ry').getPixels('y');\n        const cx = this.getAttribute('cx').getPixels('x');\n        const cy = this.getAttribute('cy').getPixels('y');\n        if (ctx && rx > 0 && ry > 0) {\n            ctx.beginPath();\n            ctx.moveTo(cx + rx, cy);\n            ctx.bezierCurveTo(cx + rx, cy + KAPPA * ry, cx + KAPPA * rx, cy + ry, cx, cy + ry);\n            ctx.bezierCurveTo(cx - KAPPA * rx, cy + ry, cx - rx, cy + KAPPA * ry, cx - rx, cy);\n            ctx.bezierCurveTo(cx - rx, cy - KAPPA * ry, cx - KAPPA * rx, cy - ry, cx, cy - ry);\n            ctx.bezierCurveTo(cx + KAPPA * rx, cy - ry, cx + rx, cy - KAPPA * ry, cx + rx, cy);\n            ctx.closePath();\n        }\n        return new BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);\n    }\n    getMarkers() {\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'ellipse';\n    }\n}\n\nclass LineElement extends PathElement {\n    getPoints() {\n        return [\n            new Point(this.getAttribute('x1').getPixels('x'), this.getAttribute('y1').getPixels('y')),\n            new Point(this.getAttribute('x2').getPixels('x'), this.getAttribute('y2').getPixels('y'))\n        ];\n    }\n    path(ctx) {\n        const [{ x: x0 , y: y0  }, { x: x1 , y: y1  }] = this.getPoints();\n        if (ctx) {\n            ctx.beginPath();\n            ctx.moveTo(x0, y0);\n            ctx.lineTo(x1, y1);\n        }\n        return new BoundingBox(x0, y0, x1, y1);\n    }\n    getMarkers() {\n        const [p0, p1] = this.getPoints();\n        const a = p0.angleTo(p1);\n        return [\n            [\n                p0,\n                a\n            ],\n            [\n                p1,\n                a\n            ]\n        ];\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'line';\n    }\n}\n\nclass PolylineElement extends PathElement {\n    path(ctx) {\n        const { points  } = this;\n        const [{ x: x0 , y: y0  }] = points;\n        const boundingBox = new BoundingBox(x0, y0);\n        if (ctx) {\n            ctx.beginPath();\n            ctx.moveTo(x0, y0);\n        }\n        points.forEach((param)=>{\n            let { x , y  } = param;\n            boundingBox.addPoint(x, y);\n            if (ctx) {\n                ctx.lineTo(x, y);\n            }\n        });\n        return boundingBox;\n    }\n    getMarkers() {\n        const { points  } = this;\n        const lastIndex = points.length - 1;\n        const markers = [];\n        points.forEach((point, i)=>{\n            if (i === lastIndex) {\n                return;\n            }\n            markers.push([\n                point,\n                point.angleTo(points[i + 1])\n            ]);\n        });\n        if (markers.length > 0) {\n            markers.push([\n                points[points.length - 1],\n                markers[markers.length - 1][1]\n            ]);\n        }\n        return markers;\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'polyline';\n        this.points = [];\n        this.points = Point.parsePath(this.getAttribute('points').getString());\n    }\n}\n\nclass PolygonElement extends PolylineElement {\n    path(ctx) {\n        const boundingBox = super.path(ctx);\n        const [{ x , y  }] = this.points;\n        if (ctx) {\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n        return boundingBox;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'polygon';\n    }\n}\n\nclass PatternElement extends Element {\n    createPattern(ctx, _, parentOpacityProp) {\n        const width = this.getStyle('width').getPixels('x', true);\n        const height = this.getStyle('height').getPixels('y', true);\n        // render me using a temporary svg element\n        const patternSvg = new SVGElement(this.document, null);\n        patternSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n        patternSvg.attributes.width = new Property(this.document, 'width', \"\".concat(width, \"px\"));\n        patternSvg.attributes.height = new Property(this.document, 'height', \"\".concat(height, \"px\"));\n        patternSvg.attributes.transform = new Property(this.document, 'transform', this.getAttribute('patternTransform').getValue());\n        patternSvg.children = this.children;\n        const patternCanvas = this.document.createCanvas(width, height);\n        const patternCtx = patternCanvas.getContext('2d');\n        const xAttr = this.getAttribute('x');\n        const yAttr = this.getAttribute('y');\n        if (xAttr.hasValue() && yAttr.hasValue()) {\n            patternCtx.translate(xAttr.getPixels('x', true), yAttr.getPixels('y', true));\n        }\n        if (parentOpacityProp.hasValue()) {\n            this.styles['fill-opacity'] = parentOpacityProp;\n        } else {\n            Reflect.deleteProperty(this.styles, 'fill-opacity');\n        }\n        // render 3x3 grid so when we transform there's no white space on edges\n        for(let x = -1; x <= 1; x++){\n            for(let y = -1; y <= 1; y++){\n                patternCtx.save();\n                patternSvg.attributes.x = new Property(this.document, 'x', x * patternCanvas.width);\n                patternSvg.attributes.y = new Property(this.document, 'y', y * patternCanvas.height);\n                patternSvg.render(patternCtx);\n                patternCtx.restore();\n            }\n        }\n        const pattern = ctx.createPattern(patternCanvas, 'repeat');\n        return pattern;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'pattern';\n    }\n}\n\nclass MarkerElement extends Element {\n    render(ctx, point, angle) {\n        if (!point) {\n            return;\n        }\n        const { x , y  } = point;\n        const orient = this.getAttribute('orient').getString('auto');\n        const markerUnits = this.getAttribute('markerUnits').getString('strokeWidth');\n        ctx.translate(x, y);\n        if (orient === 'auto') {\n            ctx.rotate(angle);\n        }\n        if (markerUnits === 'strokeWidth') {\n            ctx.scale(ctx.lineWidth, ctx.lineWidth);\n        }\n        ctx.save();\n        // render me using a temporary svg element\n        const markerSvg = new SVGElement(this.document);\n        markerSvg.type = this.type;\n        markerSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());\n        markerSvg.attributes.refX = new Property(this.document, 'refX', this.getAttribute('refX').getValue());\n        markerSvg.attributes.refY = new Property(this.document, 'refY', this.getAttribute('refY').getValue());\n        markerSvg.attributes.width = new Property(this.document, 'width', this.getAttribute('markerWidth').getValue());\n        markerSvg.attributes.height = new Property(this.document, 'height', this.getAttribute('markerHeight').getValue());\n        markerSvg.attributes.overflow = new Property(this.document, 'overflow', this.getAttribute('overflow').getValue());\n        markerSvg.attributes.fill = new Property(this.document, 'fill', this.getAttribute('fill').getColor('black'));\n        markerSvg.attributes.stroke = new Property(this.document, 'stroke', this.getAttribute('stroke').getValue('none'));\n        markerSvg.children = this.children;\n        markerSvg.render(ctx);\n        ctx.restore();\n        if (markerUnits === 'strokeWidth') {\n            ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth);\n        }\n        if (orient === 'auto') {\n            ctx.rotate(-angle);\n        }\n        ctx.translate(-x, -y);\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'marker';\n    }\n}\n\nclass DefsElement extends Element {\n    render() {\n    // NOOP\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'defs';\n    }\n}\n\nclass GElement extends RenderedElement {\n    getBoundingBox(ctx) {\n        const boundingBox = new BoundingBox();\n        this.children.forEach((child)=>{\n            boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n        });\n        return boundingBox;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'g';\n    }\n}\n\nclass GradientElement extends Element {\n    getGradientUnits() {\n        return this.getAttribute('gradientUnits').getString('objectBoundingBox');\n    }\n    createGradient(ctx, element, parentOpacityProp) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n        let stopsContainer = this;\n        if (this.getHrefAttribute().hasValue()) {\n            stopsContainer = this.getHrefAttribute().getDefinition();\n            this.inheritStopContainer(stopsContainer);\n        }\n        const { stops  } = stopsContainer;\n        const gradient = this.getGradient(ctx, element);\n        if (!gradient) {\n            return this.addParentOpacity(parentOpacityProp, stops[stops.length - 1].color);\n        }\n        stops.forEach((stop)=>{\n            gradient.addColorStop(stop.offset, this.addParentOpacity(parentOpacityProp, stop.color));\n        });\n        if (this.getAttribute('gradientTransform').hasValue()) {\n            // render as transformed pattern on temporary canvas\n            const { document  } = this;\n            const { MAX_VIRTUAL_PIXELS  } = Screen;\n            const { viewPort  } = document.screen;\n            const rootView = viewPort.getRoot();\n            const rect = new RectElement(document);\n            rect.attributes.x = new Property(document, 'x', -MAX_VIRTUAL_PIXELS / 3);\n            rect.attributes.y = new Property(document, 'y', -MAX_VIRTUAL_PIXELS / 3);\n            rect.attributes.width = new Property(document, 'width', MAX_VIRTUAL_PIXELS);\n            rect.attributes.height = new Property(document, 'height', MAX_VIRTUAL_PIXELS);\n            const group = new GElement(document);\n            group.attributes.transform = new Property(document, 'transform', this.getAttribute('gradientTransform').getValue());\n            group.children = [\n                rect\n            ];\n            const patternSvg = new SVGElement(document);\n            patternSvg.attributes.x = new Property(document, 'x', 0);\n            patternSvg.attributes.y = new Property(document, 'y', 0);\n            patternSvg.attributes.width = new Property(document, 'width', rootView.width);\n            patternSvg.attributes.height = new Property(document, 'height', rootView.height);\n            patternSvg.children = [\n                group\n            ];\n            const patternCanvas = document.createCanvas(rootView.width, rootView.height);\n            const patternCtx = patternCanvas.getContext('2d');\n            patternCtx.fillStyle = gradient;\n            patternSvg.render(patternCtx);\n            return patternCtx.createPattern(patternCanvas, 'no-repeat');\n        }\n        return gradient;\n    }\n    inheritStopContainer(stopsContainer) {\n        this.attributesToInherit.forEach((attributeToInherit)=>{\n            if (!this.getAttribute(attributeToInherit).hasValue() && stopsContainer.getAttribute(attributeToInherit).hasValue()) {\n                this.getAttribute(attributeToInherit, true).setValue(stopsContainer.getAttribute(attributeToInherit).getValue());\n            }\n        });\n    }\n    addParentOpacity(parentOpacityProp, color) {\n        if (parentOpacityProp.hasValue()) {\n            const colorProp = new Property(this.document, 'color', color);\n            return colorProp.addOpacity(parentOpacityProp).getColor();\n        }\n        return color;\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.attributesToInherit = [\n            'gradientUnits'\n        ];\n        this.stops = [];\n        const { stops , children  } = this;\n        children.forEach((child)=>{\n            if (child.type === 'stop') {\n                stops.push(child);\n            }\n        });\n    }\n}\n\nclass LinearGradientElement extends GradientElement {\n    getGradient(ctx, element) {\n        const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n        const boundingBox = isBoundingBoxUnits ? element.getBoundingBox(ctx) : null;\n        if (isBoundingBoxUnits && !boundingBox) {\n            return null;\n        }\n        if (!this.getAttribute('x1').hasValue() && !this.getAttribute('y1').hasValue() && !this.getAttribute('x2').hasValue() && !this.getAttribute('y2').hasValue()) {\n            this.getAttribute('x1', true).setValue(0);\n            this.getAttribute('y1', true).setValue(0);\n            this.getAttribute('x2', true).setValue(1);\n            this.getAttribute('y2', true).setValue(0);\n        }\n        const x1 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber() : this.getAttribute('x1').getPixels('x');\n        const y1 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber() : this.getAttribute('y1').getPixels('y');\n        const x2 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber() : this.getAttribute('x2').getPixels('x');\n        const y2 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber() : this.getAttribute('y2').getPixels('y');\n        if (x1 === x2 && y1 === y2) {\n            return null;\n        }\n        return ctx.createLinearGradient(x1, y1, x2, y2);\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'linearGradient';\n        this.attributesToInherit.push('x1', 'y1', 'x2', 'y2');\n    }\n}\n\nclass RadialGradientElement extends GradientElement {\n    getGradient(ctx, element) {\n        const isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';\n        const boundingBox = element.getBoundingBox(ctx);\n        if (isBoundingBoxUnits && !boundingBox) {\n            return null;\n        }\n        if (!this.getAttribute('cx').hasValue()) {\n            this.getAttribute('cx', true).setValue('50%');\n        }\n        if (!this.getAttribute('cy').hasValue()) {\n            this.getAttribute('cy', true).setValue('50%');\n        }\n        if (!this.getAttribute('r').hasValue()) {\n            this.getAttribute('r', true).setValue('50%');\n        }\n        const cx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber() : this.getAttribute('cx').getPixels('x');\n        const cy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber() : this.getAttribute('cy').getPixels('y');\n        let fx = cx;\n        let fy = cy;\n        if (this.getAttribute('fx').hasValue()) {\n            fx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber() : this.getAttribute('fx').getPixels('x');\n        }\n        if (this.getAttribute('fy').hasValue()) {\n            fy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber() : this.getAttribute('fy').getPixels('y');\n        }\n        const r = isBoundingBoxUnits ? (boundingBox.width + boundingBox.height) / 2 * this.getAttribute('r').getNumber() : this.getAttribute('r').getPixels();\n        const fr = this.getAttribute('fr').getPixels();\n        return ctx.createRadialGradient(fx, fy, fr, cx, cy, r);\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'radialGradient';\n        this.attributesToInherit.push('cx', 'cy', 'r', 'fx', 'fy', 'fr');\n    }\n}\n\nclass StopElement extends Element {\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'stop';\n        const offset = Math.max(0, Math.min(1, this.getAttribute('offset').getNumber()));\n        const stopOpacity = this.getStyle('stop-opacity');\n        let stopColor = this.getStyle('stop-color', true);\n        if (stopColor.getString() === '') {\n            stopColor.setValue('#000');\n        }\n        if (stopOpacity.hasValue()) {\n            stopColor = stopColor.addOpacity(stopOpacity);\n        }\n        this.offset = offset;\n        this.color = stopColor.getColor();\n    }\n}\n\nclass AnimateElement extends Element {\n    getProperty() {\n        const attributeType = this.getAttribute('attributeType').getString();\n        const attributeName = this.getAttribute('attributeName').getString();\n        if (attributeType === 'CSS') {\n            return this.parent.getStyle(attributeName, true);\n        }\n        return this.parent.getAttribute(attributeName, true);\n    }\n    calcValue() {\n        const { initialUnits  } = this;\n        const { progress , from , to  } = this.getProgress();\n        // tween value linearly\n        let newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress;\n        if (initialUnits === '%') {\n            newValue *= 100 // numValue() returns 0-1 whereas properties are 0-100\n            ;\n        }\n        return \"\".concat(newValue).concat(initialUnits);\n    }\n    update(delta) {\n        const { parent  } = this;\n        const prop = this.getProperty();\n        // set initial value\n        if (!this.initialValue) {\n            this.initialValue = prop.getString();\n            this.initialUnits = prop.getUnits();\n        }\n        // if we're past the end time\n        if (this.duration > this.maxDuration) {\n            const fill = this.getAttribute('fill').getString('remove');\n            // loop for indefinitely repeating animations\n            if (this.getAttribute('repeatCount').getString() === 'indefinite' || this.getAttribute('repeatDur').getString() === 'indefinite') {\n                this.duration = 0;\n            } else if (fill === 'freeze' && !this.frozen) {\n                this.frozen = true;\n                if (parent && prop) {\n                    parent.animationFrozen = true;\n                    parent.animationFrozenValue = prop.getString();\n                }\n            } else if (fill === 'remove' && !this.removed) {\n                this.removed = true;\n                if (parent && prop) {\n                    prop.setValue(parent.animationFrozen ? parent.animationFrozenValue : this.initialValue);\n                }\n                return true;\n            }\n            return false;\n        }\n        this.duration += delta;\n        // if we're past the begin time\n        let updated = false;\n        if (this.begin < this.duration) {\n            let newValue = this.calcValue() // tween\n            ;\n            const typeAttr = this.getAttribute('type');\n            if (typeAttr.hasValue()) {\n                // for transform, etc.\n                const type = typeAttr.getString();\n                newValue = \"\".concat(type, \"(\").concat(newValue, \")\");\n            }\n            prop.setValue(newValue);\n            updated = true;\n        }\n        return updated;\n    }\n    getProgress() {\n        const { document , values  } = this;\n        let progress = (this.duration - this.begin) / (this.maxDuration - this.begin);\n        let from;\n        let to;\n        if (values.hasValue()) {\n            const p = progress * (values.getValue().length - 1);\n            const lb = Math.floor(p);\n            const ub = Math.ceil(p);\n            let value;\n            value = values.getValue()[lb];\n            from = new Property(document, 'from', value ? parseFloat(value) : 0);\n            value = values.getValue()[ub];\n            to = new Property(document, 'to', value ? parseFloat(value) : 0);\n            progress = (p - lb) / (ub - lb);\n        } else {\n            from = this.from;\n            to = this.to;\n        }\n        return {\n            progress,\n            from,\n            to\n        };\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'animate';\n        this.duration = 0;\n        this.initialUnits = '';\n        this.removed = false;\n        this.frozen = false;\n        document.screen.animations.push(this);\n        this.begin = this.getAttribute('begin').getMilliseconds();\n        this.maxDuration = this.begin + this.getAttribute('dur').getMilliseconds();\n        this.from = this.getAttribute('from');\n        this.to = this.getAttribute('to');\n        this.values = new Property(document, 'values', null);\n        const valuesAttr = this.getAttribute('values');\n        if (valuesAttr.hasValue()) {\n            this.values.setValue(valuesAttr.getString().split(';'));\n        }\n    }\n}\n\nclass AnimateColorElement extends AnimateElement {\n    calcValue() {\n        const { progress , from , to  } = this.getProgress();\n        const colorFrom = new RGBColor__default[\"default\"](from.getColor());\n        const colorTo = new RGBColor__default[\"default\"](to.getColor());\n        if (colorFrom.ok && colorTo.ok) {\n            // tween color linearly\n            const r = colorFrom.r + (colorTo.r - colorFrom.r) * progress;\n            const g = colorFrom.g + (colorTo.g - colorFrom.g) * progress;\n            const b = colorFrom.b + (colorTo.b - colorFrom.b) * progress;\n            // ? alpha\n            return \"rgb(\".concat(Math.floor(r), \", \").concat(Math.floor(g), \", \").concat(Math.floor(b), \")\");\n        }\n        return this.getAttribute('from').getColor();\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'animateColor';\n    }\n}\n\nclass AnimateTransformElement extends AnimateElement {\n    calcValue() {\n        const { progress , from: from1 , to: to1  } = this.getProgress();\n        // tween value linearly\n        const transformFrom = toNumbers(from1.getString());\n        const transformTo = toNumbers(to1.getString());\n        const newValue = transformFrom.map((from, i)=>{\n            const to = transformTo[i];\n            return from + (to - from) * progress;\n        }).join(' ');\n        return newValue;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'animateTransform';\n    }\n}\n\nclass FontFaceElement extends Element {\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'font-face';\n        this.ascent = this.getAttribute('ascent').getNumber();\n        this.descent = this.getAttribute('descent').getNumber();\n        this.unitsPerEm = this.getAttribute('units-per-em').getNumber();\n    }\n}\n\nclass GlyphElement extends PathElement {\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'glyph';\n        this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n        this.unicode = this.getAttribute('unicode').getString();\n        this.arabicForm = this.getAttribute('arabic-form').getString();\n    }\n}\n\nclass MissingGlyphElement extends GlyphElement {\n    constructor(...args){\n        super(...args);\n        this.type = 'missing-glyph';\n        this.horizAdvX = 0;\n    }\n}\n\nclass FontElement extends Element {\n    render() {\n    // NO RENDER\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'font';\n        this.isArabic = false;\n        this.glyphs = {};\n        this.arabicGlyphs = {};\n        this.isRTL = false;\n        this.horizAdvX = this.getAttribute('horiz-adv-x').getNumber();\n        const { definitions  } = document;\n        const { children  } = this;\n        for (const child of children){\n            if (child instanceof FontFaceElement) {\n                this.fontFace = child;\n                const fontFamilyStyle = child.getStyle('font-family');\n                if (fontFamilyStyle.hasValue()) {\n                    definitions[fontFamilyStyle.getString()] = this;\n                }\n            } else if (child instanceof MissingGlyphElement) {\n                this.missingGlyph = child;\n            } else if (child instanceof GlyphElement) {\n                if (child.arabicForm) {\n                    this.isRTL = true;\n                    this.isArabic = true;\n                    const arabicGlyph = this.arabicGlyphs[child.unicode];\n                    if (typeof arabicGlyph === 'undefined') {\n                        this.arabicGlyphs[child.unicode] = {\n                            [child.arabicForm]: child\n                        };\n                    } else {\n                        arabicGlyph[child.arabicForm] = child;\n                    }\n                } else {\n                    this.glyphs[child.unicode] = child;\n                }\n            }\n        }\n    }\n}\n\nclass TRefElement extends TextElement {\n    getText() {\n        const element = this.getHrefAttribute().getDefinition();\n        if (element) {\n            const firstChild = element.children[0];\n            if (firstChild) {\n                return firstChild.getText();\n            }\n        }\n        return '';\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'tref';\n    }\n}\n\nclass AElement extends TextElement {\n    getText() {\n        return this.text;\n    }\n    renderChildren(ctx) {\n        if (this.hasText) {\n            // render as text element\n            super.renderChildren(ctx);\n            const { document , x , y  } = this;\n            const { mouse  } = document.screen;\n            const fontSize = new Property(document, 'fontSize', Font.parse(document.ctx.font).fontSize);\n            // Do not calc bounding box if mouse is not working.\n            if (mouse.isWorking()) {\n                mouse.checkBoundingBox(this, new BoundingBox(x, y - fontSize.getPixels('y'), x + this.measureText(ctx), y));\n            }\n        } else if (this.children.length > 0) {\n            // render as temporary group\n            const g = new GElement(this.document);\n            g.children = this.children;\n            g.parent = this;\n            g.render(ctx);\n        }\n    }\n    onClick() {\n        const { window  } = this.document;\n        if (window) {\n            window.open(this.getHrefAttribute().getString());\n        }\n    }\n    onMouseMove() {\n        const ctx = this.document.ctx;\n        ctx.canvas.style.cursor = 'pointer';\n    }\n    constructor(document, node1, captureTextNodes){\n        super(document, node1, captureTextNodes);\n        this.type = 'a';\n        const { childNodes  } = node1;\n        const firstChild = childNodes[0];\n        const hasText = childNodes.length > 0 && Array.from(childNodes).every((node)=>node.nodeType === 3\n        );\n        this.hasText = hasText;\n        this.text = hasText ? this.getTextFromNode(firstChild) : '';\n    }\n}\n\nclass TextPathElement extends TextElement {\n    getText() {\n        return this.text;\n    }\n    path(ctx) {\n        const { dataArray  } = this;\n        if (ctx) {\n            ctx.beginPath();\n        }\n        dataArray.forEach((param)=>{\n            let { type , points  } = param;\n            switch(type){\n                case PathParser.LINE_TO:\n                    if (ctx) {\n                        ctx.lineTo(points[0], points[1]);\n                    }\n                    break;\n                case PathParser.MOVE_TO:\n                    if (ctx) {\n                        ctx.moveTo(points[0], points[1]);\n                    }\n                    break;\n                case PathParser.CURVE_TO:\n                    if (ctx) {\n                        ctx.bezierCurveTo(points[0], points[1], points[2], points[3], points[4], points[5]);\n                    }\n                    break;\n                case PathParser.QUAD_TO:\n                    if (ctx) {\n                        ctx.quadraticCurveTo(points[0], points[1], points[2], points[3]);\n                    }\n                    break;\n                case PathParser.ARC:\n                    {\n                        const [cx, cy, rx, ry, theta, dTheta, psi, fs] = points;\n                        const r = rx > ry ? rx : ry;\n                        const scaleX = rx > ry ? 1 : rx / ry;\n                        const scaleY = rx > ry ? ry / rx : 1;\n                        if (ctx) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs));\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        break;\n                    }\n                case PathParser.CLOSE_PATH:\n                    if (ctx) {\n                        ctx.closePath();\n                    }\n                    break;\n            }\n        });\n    }\n    renderChildren(ctx) {\n        this.setTextData(ctx);\n        ctx.save();\n        const textDecoration = this.parent.getStyle('text-decoration').getString();\n        const fontSize = this.getFontSize();\n        const { glyphInfo  } = this;\n        const fill = ctx.fillStyle;\n        if (textDecoration === 'underline') {\n            ctx.beginPath();\n        }\n        glyphInfo.forEach((glyph, i)=>{\n            const { p0 , p1 , rotation , text: partialText  } = glyph;\n            ctx.save();\n            ctx.translate(p0.x, p0.y);\n            ctx.rotate(rotation);\n            if (ctx.fillStyle) {\n                ctx.fillText(partialText, 0, 0);\n            }\n            if (ctx.strokeStyle) {\n                ctx.strokeText(partialText, 0, 0);\n            }\n            ctx.restore();\n            if (textDecoration === 'underline') {\n                if (i === 0) {\n                    ctx.moveTo(p0.x, p0.y + fontSize / 8);\n                }\n                ctx.lineTo(p1.x, p1.y + fontSize / 5);\n            }\n        // // To assist with debugging visually, uncomment following\n        //\n        // ctx.beginPath();\n        // if (i % 2)\n        //   ctx.strokeStyle = 'red';\n        // else\n        //   ctx.strokeStyle = 'green';\n        // ctx.moveTo(p0.x, p0.y);\n        // ctx.lineTo(p1.x, p1.y);\n        // ctx.stroke();\n        // ctx.closePath();\n        });\n        if (textDecoration === 'underline') {\n            ctx.lineWidth = fontSize / 20;\n            ctx.strokeStyle = fill;\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n    getLetterSpacingAt() {\n        let idx = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;\n        return this.letterSpacingCache[idx] || 0;\n    }\n    findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, inputOffset, dy, c, charI) {\n        let offset = inputOffset;\n        let glyphWidth = this.measureText(ctx, c);\n        if (c === ' ' && anchor === 'justify' && textFullWidth < fullPathWidth) {\n            glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n        }\n        if (charI > -1) {\n            offset += this.getLetterSpacingAt(charI);\n        }\n        const splineStep = this.textHeight / 20;\n        const p0 = this.getEquidistantPointOnPath(offset, splineStep, 0);\n        const p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0);\n        const segment = {\n            p0,\n            p1\n        };\n        const rotation = p0 && p1 ? Math.atan2(p1.y - p0.y, p1.x - p0.x) : 0;\n        if (dy) {\n            const dyX = Math.cos(Math.PI / 2 + rotation) * dy;\n            const dyY = Math.cos(-rotation) * dy;\n            segment.p0 = {\n                ...p0,\n                x: p0.x + dyX,\n                y: p0.y + dyY\n            };\n            segment.p1 = {\n                ...p1,\n                x: p1.x + dyX,\n                y: p1.y + dyY\n            };\n        }\n        offset += glyphWidth;\n        return {\n            offset,\n            segment,\n            rotation\n        };\n    }\n    measureText(ctx, text) {\n        const { measuresCache  } = this;\n        const targetText = text || this.getText();\n        if (measuresCache.has(targetText)) {\n            return measuresCache.get(targetText);\n        }\n        const measure = this.measureTargetText(ctx, targetText);\n        measuresCache.set(targetText, measure);\n        return measure;\n    }\n    // This method supposes what all custom fonts already loaded.\n    // If some font will be loaded after this method call, <textPath> will not be rendered correctly.\n    // You need to call this method manually to update glyphs cache.\n    setTextData(ctx) {\n        if (this.glyphInfo) {\n            return;\n        }\n        const renderText = this.getText();\n        const chars = renderText.split('');\n        const spacesNumber = renderText.split(' ').length - 1;\n        const dx = this.parent.getAttribute('dx').split().map((_)=>_.getPixels('x')\n        );\n        const dy = this.parent.getAttribute('dy').getPixels('y');\n        const anchor = this.parent.getStyle('text-anchor').getString('start');\n        const thisSpacing = this.getStyle('letter-spacing');\n        const parentSpacing = this.parent.getStyle('letter-spacing');\n        let letterSpacing = 0;\n        if (!thisSpacing.hasValue() || thisSpacing.getValue() === 'inherit') {\n            letterSpacing = parentSpacing.getPixels();\n        } else if (thisSpacing.hasValue()) {\n            if (thisSpacing.getValue() !== 'initial' && thisSpacing.getValue() !== 'unset') {\n                letterSpacing = thisSpacing.getPixels();\n            }\n        }\n        // fill letter-spacing cache\n        const letterSpacingCache = [];\n        const textLen = renderText.length;\n        this.letterSpacingCache = letterSpacingCache;\n        for(let i1 = 0; i1 < textLen; i1++){\n            letterSpacingCache.push(typeof dx[i1] !== 'undefined' ? dx[i1] : letterSpacing);\n        }\n        const dxSum = letterSpacingCache.reduce((acc, cur, i)=>i === 0 ? 0 : acc + cur || 0\n        , 0);\n        const textWidth = this.measureText(ctx);\n        const textFullWidth = Math.max(textWidth + dxSum, 0);\n        this.textWidth = textWidth;\n        this.textHeight = this.getFontSize();\n        this.glyphInfo = [];\n        const fullPathWidth = this.getPathLength();\n        const startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth;\n        let offset = 0;\n        if (anchor === 'middle' || anchor === 'center') {\n            offset = -textFullWidth / 2;\n        }\n        if (anchor === 'end' || anchor === 'right') {\n            offset = -textFullWidth;\n        }\n        offset += startOffset;\n        chars.forEach((char, i)=>{\n            // Find such segment what distance between p0 and p1 is approx. width of glyph\n            const { offset: nextOffset , segment , rotation  } = this.findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, offset, dy, char, i);\n            offset = nextOffset;\n            if (!segment.p0 || !segment.p1) {\n                return;\n            }\n            // const width = this.getLineLength(\n            //   segment.p0.x,\n            //   segment.p0.y,\n            //   segment.p1.x,\n            //   segment.p1.y\n            // );\n            // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.\n            // Can foresee having a rough pair table built in that the developer can override as needed.\n            // Or use \"dx\" attribute of the <text> node as a naive replacement\n            // const kern = 0;\n            // placeholder for future implementation\n            // const midpoint = this.getPointOnLine(\n            //   kern + width / 2.0,\n            //   segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y\n            // );\n            this.glyphInfo.push({\n                // transposeX: midpoint.x,\n                // transposeY: midpoint.y,\n                text: chars[i],\n                p0: segment.p0,\n                p1: segment.p1,\n                rotation\n            });\n        });\n    }\n    parsePathData(path) {\n        this.pathLength = -1 // reset path length\n        ;\n        if (!path) {\n            return [];\n        }\n        const pathCommands = [];\n        const { pathParser  } = path;\n        pathParser.reset();\n        // convert l, H, h, V, and v to L\n        while(!pathParser.isEnd()){\n            const { current  } = pathParser;\n            const startX = current ? current.x : 0;\n            const startY = current ? current.y : 0;\n            const command = pathParser.next();\n            let nextCommandType = command.type;\n            let points = [];\n            switch(command.type){\n                case PathParser.MOVE_TO:\n                    this.pathM(pathParser, points);\n                    break;\n                case PathParser.LINE_TO:\n                    nextCommandType = this.pathL(pathParser, points);\n                    break;\n                case PathParser.HORIZ_LINE_TO:\n                    nextCommandType = this.pathH(pathParser, points);\n                    break;\n                case PathParser.VERT_LINE_TO:\n                    nextCommandType = this.pathV(pathParser, points);\n                    break;\n                case PathParser.CURVE_TO:\n                    this.pathC(pathParser, points);\n                    break;\n                case PathParser.SMOOTH_CURVE_TO:\n                    nextCommandType = this.pathS(pathParser, points);\n                    break;\n                case PathParser.QUAD_TO:\n                    this.pathQ(pathParser, points);\n                    break;\n                case PathParser.SMOOTH_QUAD_TO:\n                    nextCommandType = this.pathT(pathParser, points);\n                    break;\n                case PathParser.ARC:\n                    points = this.pathA(pathParser);\n                    break;\n                case PathParser.CLOSE_PATH:\n                    PathElement.pathZ(pathParser);\n                    break;\n            }\n            if (command.type !== PathParser.CLOSE_PATH) {\n                pathCommands.push({\n                    type: nextCommandType,\n                    points,\n                    start: {\n                        x: startX,\n                        y: startY\n                    },\n                    pathLength: this.calcLength(startX, startY, nextCommandType, points)\n                });\n            } else {\n                pathCommands.push({\n                    type: PathParser.CLOSE_PATH,\n                    points: [],\n                    pathLength: 0\n                });\n            }\n        }\n        return pathCommands;\n    }\n    pathM(pathParser, points) {\n        const { x , y  } = PathElement.pathM(pathParser).point;\n        points.push(x, y);\n    }\n    pathL(pathParser, points) {\n        const { x , y  } = PathElement.pathL(pathParser).point;\n        points.push(x, y);\n        return PathParser.LINE_TO;\n    }\n    pathH(pathParser, points) {\n        const { x , y  } = PathElement.pathH(pathParser).point;\n        points.push(x, y);\n        return PathParser.LINE_TO;\n    }\n    pathV(pathParser, points) {\n        const { x , y  } = PathElement.pathV(pathParser).point;\n        points.push(x, y);\n        return PathParser.LINE_TO;\n    }\n    pathC(pathParser, points) {\n        const { point , controlPoint , currentPoint  } = PathElement.pathC(pathParser);\n        points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n    pathS(pathParser, points) {\n        const { point , controlPoint , currentPoint  } = PathElement.pathS(pathParser);\n        points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        return PathParser.CURVE_TO;\n    }\n    pathQ(pathParser, points) {\n        const { controlPoint , currentPoint  } = PathElement.pathQ(pathParser);\n        points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n    }\n    pathT(pathParser, points) {\n        const { controlPoint , currentPoint  } = PathElement.pathT(pathParser);\n        points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);\n        return PathParser.QUAD_TO;\n    }\n    pathA(pathParser) {\n        let { rX , rY , sweepFlag , xAxisRotation , centp , a1 , ad  } = PathElement.pathA(pathParser);\n        if (sweepFlag === 0 && ad > 0) {\n            ad -= 2 * Math.PI;\n        }\n        if (sweepFlag === 1 && ad < 0) {\n            ad += 2 * Math.PI;\n        }\n        return [\n            centp.x,\n            centp.y,\n            rX,\n            rY,\n            a1,\n            ad,\n            xAxisRotation,\n            sweepFlag\n        ];\n    }\n    calcLength(x, y, commandType, points) {\n        let len = 0;\n        let p1 = null;\n        let p2 = null;\n        let t = 0;\n        switch(commandType){\n            case PathParser.LINE_TO:\n                return this.getLineLength(x, y, points[0], points[1]);\n            case PathParser.CURVE_TO:\n                // Approximates by breaking curve into 100 line segments\n                len = 0;\n                p1 = this.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                for(t = 0.01; t <= 1; t += 0.01){\n                    p2 = this.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);\n                    len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case PathParser.QUAD_TO:\n                // Approximates by breaking curve into 100 line segments\n                len = 0;\n                p1 = this.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);\n                for(t = 0.01; t <= 1; t += 0.01){\n                    p2 = this.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);\n                    len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    p1 = p2;\n                }\n                return len;\n            case PathParser.ARC:\n                {\n                    // Approximates by breaking curve into line segments\n                    len = 0;\n                    const start = points[4];\n                    // 4 = theta\n                    const dTheta = points[5];\n                    // 5 = dTheta\n                    const end = points[4] + dTheta;\n                    let inc = Math.PI / 180;\n                    // 1 degree resolution\n                    if (Math.abs(start - end) < inc) {\n                        inc = Math.abs(start - end);\n                    }\n                    // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n                    p1 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);\n                    if (dTheta < 0) {\n                        for(t = start - inc; t > end; t -= inc){\n                            p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                            p1 = p2;\n                        }\n                    } else {\n                        for(t = start + inc; t < end; t += inc){\n                            p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);\n                            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                            p1 = p2;\n                        }\n                    }\n                    p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);\n                    len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);\n                    return len;\n                }\n        }\n        return 0;\n    }\n    getPointOnLine(dist, p1x, p1y, p2x, p2y) {\n        let fromX = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : p1x, fromY = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : p1y;\n        const m = (p2y - p1y) / (p2x - p1x + PSEUDO_ZERO);\n        let run = Math.sqrt(dist * dist / (1 + m * m));\n        if (p2x < p1x) {\n            run *= -1;\n        }\n        let rise = m * run;\n        let pt = null;\n        if (p2x === p1x) {\n            pt = {\n                x: fromX,\n                y: fromY + rise\n            };\n        } else if ((fromY - p1y) / (fromX - p1x + PSEUDO_ZERO) === m) {\n            pt = {\n                x: fromX + run,\n                y: fromY + rise\n            };\n        } else {\n            let ix = 0;\n            let iy = 0;\n            const len = this.getLineLength(p1x, p1y, p2x, p2y);\n            if (len < PSEUDO_ZERO) {\n                return null;\n            }\n            let u = (fromX - p1x) * (p2x - p1x) + (fromY - p1y) * (p2y - p1y);\n            u /= len * len;\n            ix = p1x + u * (p2x - p1x);\n            iy = p1y + u * (p2y - p1y);\n            const pRise = this.getLineLength(fromX, fromY, ix, iy);\n            const pRun = Math.sqrt(dist * dist - pRise * pRise);\n            run = Math.sqrt(pRun * pRun / (1 + m * m));\n            if (p2x < p1x) {\n                run *= -1;\n            }\n            rise = m * run;\n            pt = {\n                x: ix + run,\n                y: iy + rise\n            };\n        }\n        return pt;\n    }\n    getPointOnPath(distance) {\n        const fullLen = this.getPathLength();\n        let cumulativePathLength = 0;\n        let p = null;\n        if (distance < -0.00005 || distance - 0.00005 > fullLen) {\n            return null;\n        }\n        const { dataArray  } = this;\n        for (const command of dataArray){\n            if (command && (command.pathLength < 0.00005 || cumulativePathLength + command.pathLength + 0.00005 < distance)) {\n                cumulativePathLength += command.pathLength;\n                continue;\n            }\n            const delta = distance - cumulativePathLength;\n            let currentT = 0;\n            switch(command.type){\n                case PathParser.LINE_TO:\n                    p = this.getPointOnLine(delta, command.start.x, command.start.y, command.points[0], command.points[1], command.start.x, command.start.y);\n                    break;\n                case PathParser.ARC:\n                    {\n                        const start = command.points[4];\n                        // 4 = theta\n                        const dTheta = command.points[5];\n                        // 5 = dTheta\n                        const end = command.points[4] + dTheta;\n                        currentT = start + delta / command.pathLength * dTheta;\n                        if (dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {\n                            break;\n                        }\n                        p = this.getPointOnEllipticalArc(command.points[0], command.points[1], command.points[2], command.points[3], currentT, command.points[6]);\n                        break;\n                    }\n                case PathParser.CURVE_TO:\n                    currentT = delta / command.pathLength;\n                    if (currentT > 1) {\n                        currentT = 1;\n                    }\n                    p = this.getPointOnCubicBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3], command.points[4], command.points[5]);\n                    break;\n                case PathParser.QUAD_TO:\n                    currentT = delta / command.pathLength;\n                    if (currentT > 1) {\n                        currentT = 1;\n                    }\n                    p = this.getPointOnQuadraticBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3]);\n                    break;\n            }\n            if (p) {\n                return p;\n            }\n            break;\n        }\n        return null;\n    }\n    getLineLength(x1, y1, x2, y2) {\n        return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    getPathLength() {\n        if (this.pathLength === -1) {\n            this.pathLength = this.dataArray.reduce((length, command)=>command.pathLength > 0 ? length + command.pathLength : length\n            , 0);\n        }\n        return this.pathLength;\n    }\n    getPointOnCubicBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y, p4x, p4y) {\n        const x = p4x * CB1(pct) + p3x * CB2(pct) + p2x * CB3(pct) + p1x * CB4(pct);\n        const y = p4y * CB1(pct) + p3y * CB2(pct) + p2y * CB3(pct) + p1y * CB4(pct);\n        return {\n            x,\n            y\n        };\n    }\n    getPointOnQuadraticBezier(pct, p1x, p1y, p2x, p2y, p3x, p3y) {\n        const x = p3x * QB1(pct) + p2x * QB2(pct) + p1x * QB3(pct);\n        const y = p3y * QB1(pct) + p2y * QB2(pct) + p1y * QB3(pct);\n        return {\n            x,\n            y\n        };\n    }\n    getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {\n        const cosPsi = Math.cos(psi);\n        const sinPsi = Math.sin(psi);\n        const pt = {\n            x: rx * Math.cos(theta),\n            y: ry * Math.sin(theta)\n        };\n        return {\n            x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n            y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n        };\n    }\n    // TODO need some optimisations. possibly build cache only for curved segments?\n    buildEquidistantCache(inputStep, inputPrecision) {\n        const fullLen = this.getPathLength();\n        const precision = inputPrecision || 0.25 // accuracy vs performance\n        ;\n        const step = inputStep || fullLen / 100;\n        if (!this.equidistantCache || this.equidistantCache.step !== step || this.equidistantCache.precision !== precision) {\n            // Prepare cache\n            this.equidistantCache = {\n                step,\n                precision,\n                points: []\n            };\n            // Calculate points\n            let s = 0;\n            for(let l = 0; l <= fullLen; l += precision){\n                const p0 = this.getPointOnPath(l);\n                const p1 = this.getPointOnPath(l + precision);\n                if (!p0 || !p1) {\n                    continue;\n                }\n                s += this.getLineLength(p0.x, p0.y, p1.x, p1.y);\n                if (s >= step) {\n                    this.equidistantCache.points.push({\n                        x: p0.x,\n                        y: p0.y,\n                        distance: l\n                    });\n                    s -= step;\n                }\n            }\n        }\n    }\n    getEquidistantPointOnPath(targetDistance, step, precision) {\n        this.buildEquidistantCache(step, precision);\n        if (targetDistance < 0 || targetDistance - this.getPathLength() > 0.00005) {\n            return null;\n        }\n        const idx = Math.round(targetDistance / this.getPathLength() * (this.equidistantCache.points.length - 1));\n        return this.equidistantCache.points[idx] || null;\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'textPath';\n        this.textWidth = 0;\n        this.textHeight = 0;\n        this.pathLength = -1;\n        this.glyphInfo = null;\n        this.letterSpacingCache = [];\n        this.measuresCache = new Map([\n            [\n                '',\n                0\n            ]\n        ]);\n        const pathElement = this.getHrefAttribute().getDefinition();\n        this.text = this.getTextFromNode();\n        this.dataArray = this.parsePathData(pathElement);\n    }\n}\n\n// groups: 1: mime-type (+ charset), 2: mime-type (w/o charset), 3: charset, 4: base64?, 5: body\nconst dataUriRegex = /^\\s*data:(([^/,;]+\\/[^/,;]+)(?:;([^,;=]+=[^,;=]+))?)?(?:;(base64))?,(.*)$/i;\nclass ImageElement extends RenderedElement {\n    async loadImage(href) {\n        try {\n            const image = await this.document.createImage(href);\n            this.image = image;\n        } catch (err) {\n            console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n        }\n        this.loaded = true;\n    }\n    async loadSvg(href) {\n        const match = dataUriRegex.exec(href);\n        if (match) {\n            const data = match[5];\n            if (data) {\n                if (match[4] === 'base64') {\n                    this.image = atob(data);\n                } else {\n                    this.image = decodeURIComponent(data);\n                }\n            }\n        } else {\n            try {\n                const response = await this.document.fetch(href);\n                const svg = await response.text();\n                this.image = svg;\n            } catch (err) {\n                console.error(\"Error while loading image \\\"\".concat(href, \"\\\":\"), err);\n            }\n        }\n        this.loaded = true;\n    }\n    renderChildren(ctx) {\n        const { document , image , loaded  } = this;\n        const x = this.getAttribute('x').getPixels('x');\n        const y = this.getAttribute('y').getPixels('y');\n        const width = this.getStyle('width').getPixels('x');\n        const height = this.getStyle('height').getPixels('y');\n        if (!loaded || !image || !width || !height) {\n            return;\n        }\n        ctx.save();\n        ctx.translate(x, y);\n        if (typeof image === 'string') {\n            const subDocument = document.canvg.forkString(ctx, image, {\n                ignoreMouse: true,\n                ignoreAnimation: true,\n                ignoreDimensions: true,\n                ignoreClear: true,\n                offsetX: 0,\n                offsetY: 0,\n                scaleWidth: width,\n                scaleHeight: height\n            });\n            const { documentElement  } = subDocument.document;\n            if (documentElement) {\n                documentElement.parent = this;\n            }\n            void subDocument.render();\n        } else {\n            document.setViewBox({\n                ctx,\n                aspectRatio: this.getAttribute('preserveAspectRatio').getString(),\n                width,\n                desiredWidth: image.width,\n                height,\n                desiredHeight: image.height\n            });\n            if (this.loaded) {\n                if (!('complete' in image) || image.complete) {\n                    ctx.drawImage(image, 0, 0);\n                }\n            }\n        }\n        ctx.restore();\n    }\n    getBoundingBox() {\n        const x = this.getAttribute('x').getPixels('x');\n        const y = this.getAttribute('y').getPixels('y');\n        const width = this.getStyle('width').getPixels('x');\n        const height = this.getStyle('height').getPixels('y');\n        return new BoundingBox(x, y, x + width, y + height);\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'image';\n        this.loaded = false;\n        const href = this.getHrefAttribute().getString();\n        if (!href) {\n            return;\n        }\n        const isSvg = href.endsWith('.svg') || /^\\s*data:image\\/svg\\+xml/i.test(href);\n        document.images.push(this);\n        if (!isSvg) {\n            void this.loadImage(href);\n        } else {\n            void this.loadSvg(href);\n        }\n    }\n}\n\nclass SymbolElement extends RenderedElement {\n    render(_) {\n    // NO RENDER\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'symbol';\n    }\n}\n\nclass SVGFontLoader {\n    async load(fontFamily, url) {\n        try {\n            const { document  } = this;\n            const svgDocument = await document.canvg.parser.load(url);\n            const fonts = svgDocument.getElementsByTagName('font');\n            Array.from(fonts).forEach((fontNode)=>{\n                const font = document.createElement(fontNode);\n                document.definitions[fontFamily] = font;\n            });\n        } catch (err) {\n            console.error(\"Error while loading font \\\"\".concat(url, \"\\\":\"), err);\n        }\n        this.loaded = true;\n    }\n    constructor(document){\n        this.document = document;\n        this.loaded = false;\n        document.fonts.push(this);\n    }\n}\n\nclass StyleElement extends Element {\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'style';\n        const css = compressSpaces(Array.from(node.childNodes)// NEED TEST\n        .map((_)=>_.textContent\n        ).join('').replace(/(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(^[\\s]*\\/\\/.*)/gm, '') // remove comments\n        .replace(/@import.*;/g, '') // remove imports\n        );\n        const cssDefs = css.split('}');\n        cssDefs.forEach((_1)=>{\n            const def = _1.trim();\n            if (!def) {\n                return;\n            }\n            const cssParts = def.split('{');\n            const cssClasses = cssParts[0].split(',');\n            const cssProps = cssParts[1].split(';');\n            cssClasses.forEach((_)=>{\n                const cssClass = _.trim();\n                if (!cssClass) {\n                    return;\n                }\n                const props = document.styles[cssClass] || {};\n                cssProps.forEach((cssProp)=>{\n                    const prop = cssProp.indexOf(':');\n                    const name = cssProp.substr(0, prop).trim();\n                    const value = cssProp.substr(prop + 1, cssProp.length - prop).trim();\n                    if (name && value) {\n                        props[name] = new Property(document, name, value);\n                    }\n                });\n                document.styles[cssClass] = props;\n                document.stylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);\n                if (cssClass === '@font-face') {\n                    const fontFamily = props['font-family'].getString().replace(/\"|'/g, '');\n                    const srcs = props.src.getString().split(',');\n                    srcs.forEach((src)=>{\n                        if (src.indexOf('format(\"svg\")') > 0) {\n                            const url = parseExternalUrl(src);\n                            if (url) {\n                                void new SVGFontLoader(document).load(fontFamily, url);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\nStyleElement.parseExternalUrl = parseExternalUrl;\n\nclass UseElement extends RenderedElement {\n    setContext(ctx) {\n        super.setContext(ctx);\n        const xAttr = this.getAttribute('x');\n        const yAttr = this.getAttribute('y');\n        if (xAttr.hasValue()) {\n            ctx.translate(xAttr.getPixels('x'), 0);\n        }\n        if (yAttr.hasValue()) {\n            ctx.translate(0, yAttr.getPixels('y'));\n        }\n    }\n    path(ctx) {\n        const { element  } = this;\n        if (element) {\n            element.path(ctx);\n        }\n    }\n    renderChildren(ctx) {\n        const { document , element  } = this;\n        if (element) {\n            let tempSvg = element;\n            if (element.type === 'symbol') {\n                // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)\n                tempSvg = new SVGElement(document);\n                tempSvg.attributes.viewBox = new Property(document, 'viewBox', element.getAttribute('viewBox').getString());\n                tempSvg.attributes.preserveAspectRatio = new Property(document, 'preserveAspectRatio', element.getAttribute('preserveAspectRatio').getString());\n                tempSvg.attributes.overflow = new Property(document, 'overflow', element.getAttribute('overflow').getString());\n                tempSvg.children = element.children;\n                // element is still the parent of the children\n                element.styles.opacity = new Property(document, 'opacity', this.calculateOpacity());\n            }\n            if (tempSvg.type === 'svg') {\n                const widthStyle = this.getStyle('width', false, true);\n                const heightStyle = this.getStyle('height', false, true);\n                // if symbol or svg, inherit width/height from me\n                if (widthStyle.hasValue()) {\n                    tempSvg.attributes.width = new Property(document, 'width', widthStyle.getString());\n                }\n                if (heightStyle.hasValue()) {\n                    tempSvg.attributes.height = new Property(document, 'height', heightStyle.getString());\n                }\n            }\n            const oldParent = tempSvg.parent;\n            tempSvg.parent = this;\n            tempSvg.render(ctx);\n            tempSvg.parent = oldParent;\n        }\n    }\n    getBoundingBox(ctx) {\n        const { element  } = this;\n        if (element) {\n            return element.getBoundingBox(ctx);\n        }\n        return null;\n    }\n    elementTransform() {\n        const { document , element  } = this;\n        if (!element) {\n            return null;\n        }\n        return Transform.fromElement(document, element);\n    }\n    get element() {\n        if (!this.cachedElement) {\n            this.cachedElement = this.getHrefAttribute().getDefinition();\n        }\n        return this.cachedElement;\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'use';\n    }\n}\n\nfunction imGet(img, x, y, width, _height, rgba) {\n    return img[y * width * 4 + x * 4 + rgba];\n}\nfunction imSet(img, x, y, width, _height, rgba, val) {\n    img[y * width * 4 + x * 4 + rgba] = val;\n}\nfunction m(matrix, i, v) {\n    const mi = matrix[i];\n    return mi * v;\n}\nfunction c(a, m1, m2, m3) {\n    return m1 + Math.cos(a) * m2 + Math.sin(a) * m3;\n}\nclass FeColorMatrixElement extends Element {\n    apply(ctx, _x, _y, width, height) {\n        // assuming x==0 && y==0 for now\n        const { includeOpacity , matrix  } = this;\n        const srcData = ctx.getImageData(0, 0, width, height);\n        for(let y = 0; y < height; y++){\n            for(let x = 0; x < width; x++){\n                const r = imGet(srcData.data, x, y, width, height, 0);\n                const g = imGet(srcData.data, x, y, width, height, 1);\n                const b = imGet(srcData.data, x, y, width, height, 2);\n                const a = imGet(srcData.data, x, y, width, height, 3);\n                let nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1);\n                let ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1);\n                let nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1);\n                let na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1);\n                if (includeOpacity) {\n                    nr = 0;\n                    ng = 0;\n                    nb = 0;\n                    na *= a / 255;\n                }\n                imSet(srcData.data, x, y, width, height, 0, nr);\n                imSet(srcData.data, x, y, width, height, 1, ng);\n                imSet(srcData.data, x, y, width, height, 2, nb);\n                imSet(srcData.data, x, y, width, height, 3, na);\n            }\n        }\n        ctx.clearRect(0, 0, width, height);\n        ctx.putImageData(srcData, 0, 0);\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'feColorMatrix';\n        let matrix = toNumbers(this.getAttribute('values').getString());\n        switch(this.getAttribute('type').getString('matrix')){\n            case 'saturate':\n                {\n                    const s = matrix[0];\n                    /* eslint-disable array-element-newline */ matrix = [\n                        0.213 + 0.787 * s,\n                        0.715 - 0.715 * s,\n                        0.072 - 0.072 * s,\n                        0,\n                        0,\n                        0.213 - 0.213 * s,\n                        0.715 + 0.285 * s,\n                        0.072 - 0.072 * s,\n                        0,\n                        0,\n                        0.213 - 0.213 * s,\n                        0.715 - 0.715 * s,\n                        0.072 + 0.928 * s,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        1,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        1\n                    ];\n                    break;\n                }\n            case 'hueRotate':\n                {\n                    const a = matrix[0] * Math.PI / 180;\n                    /* eslint-disable array-element-newline */ matrix = [\n                        c(a, 0.213, 0.787, -0.213),\n                        c(a, 0.715, -0.715, -0.715),\n                        c(a, 0.072, -0.072, 0.928),\n                        0,\n                        0,\n                        c(a, 0.213, -0.213, 0.143),\n                        c(a, 0.715, 0.285, 0.14),\n                        c(a, 0.072, -0.072, -0.283),\n                        0,\n                        0,\n                        c(a, 0.213, -0.213, -0.787),\n                        c(a, 0.715, -0.715, 0.715),\n                        c(a, 0.072, 0.928, 0.072),\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        1,\n                        0,\n                        0,\n                        0,\n                        0,\n                        0,\n                        1\n                    ];\n                    break;\n                }\n            case 'luminanceToAlpha':\n                /* eslint-disable array-element-newline */ matrix = [\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0.2125,\n                    0.7154,\n                    0.0721,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    0,\n                    1\n                ];\n                break;\n        }\n        this.matrix = matrix;\n        this.includeOpacity = this.getAttribute('includeOpacity').hasValue();\n    }\n}\n\nclass MaskElement extends Element {\n    apply(ctx, element) {\n        const { document  } = this;\n        // render as temp svg\n        let x = this.getAttribute('x').getPixels('x');\n        let y = this.getAttribute('y').getPixels('y');\n        let width = this.getStyle('width').getPixels('x');\n        let height = this.getStyle('height').getPixels('y');\n        if (!width && !height) {\n            const boundingBox = new BoundingBox();\n            this.children.forEach((child)=>{\n                boundingBox.addBoundingBox(child.getBoundingBox(ctx));\n            });\n            x = Math.floor(boundingBox.x1);\n            y = Math.floor(boundingBox.y1);\n            width = Math.floor(boundingBox.width);\n            height = Math.floor(boundingBox.height);\n        }\n        const ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles);\n        const maskCanvas = document.createCanvas(x + width, y + height);\n        const maskCtx = maskCanvas.getContext('2d');\n        document.screen.setDefaults(maskCtx);\n        this.renderChildren(maskCtx);\n        // convert mask to alpha with a fake node\n        // TODO: refactor out apply from feColorMatrix\n        new FeColorMatrixElement(document, {\n            nodeType: 1,\n            childNodes: [],\n            attributes: [\n                {\n                    nodeName: 'type',\n                    value: 'luminanceToAlpha'\n                },\n                {\n                    nodeName: 'includeOpacity',\n                    value: 'true'\n                }\n            ]\n        }).apply(maskCtx, 0, 0, x + width, y + height);\n        const tmpCanvas = document.createCanvas(x + width, y + height);\n        const tmpCtx = tmpCanvas.getContext('2d');\n        document.screen.setDefaults(tmpCtx);\n        element.render(tmpCtx);\n        tmpCtx.globalCompositeOperation = 'destination-in';\n        tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas, 'no-repeat');\n        tmpCtx.fillRect(0, 0, x + width, y + height);\n        ctx.fillStyle = tmpCtx.createPattern(tmpCanvas, 'no-repeat');\n        ctx.fillRect(0, 0, x + width, y + height);\n        // reassign mask\n        this.restoreStyles(element, ignoredStyles);\n    }\n    render(_) {\n    // NO RENDER\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'mask';\n    }\n}\nMaskElement.ignoreStyles = [\n    'mask',\n    'transform',\n    'clip-path'\n];\n\nconst noop = ()=>{\n// NOOP\n};\nclass ClipPathElement extends Element {\n    apply(ctx) {\n        const { document  } = this;\n        const contextProto = Reflect.getPrototypeOf(ctx);\n        const { beginPath , closePath  } = ctx;\n        if (contextProto) {\n            contextProto.beginPath = noop;\n            contextProto.closePath = noop;\n        }\n        Reflect.apply(beginPath, ctx, []);\n        this.children.forEach((child)=>{\n            if (!('path' in child)) {\n                return;\n            }\n            let transform = 'elementTransform' in child ? child.elementTransform() : null // handle <use />\n            ;\n            if (!transform) {\n                transform = Transform.fromElement(document, child);\n            }\n            if (transform) {\n                transform.apply(ctx);\n            }\n            child.path(ctx);\n            if (contextProto) {\n                contextProto.closePath = closePath;\n            }\n            if (transform) {\n                transform.unapply(ctx);\n            }\n        });\n        Reflect.apply(closePath, ctx, []);\n        ctx.clip();\n        if (contextProto) {\n            contextProto.beginPath = beginPath;\n            contextProto.closePath = closePath;\n        }\n    }\n    render(_) {\n    // NO RENDER\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'clipPath';\n    }\n}\n\nclass FilterElement extends Element {\n    apply(ctx, element) {\n        // render as temp svg\n        const { document , children  } = this;\n        const boundingBox = 'getBoundingBox' in element ? element.getBoundingBox(ctx) : null;\n        if (!boundingBox) {\n            return;\n        }\n        let px = 0;\n        let py = 0;\n        children.forEach((child)=>{\n            const efd = child.extraFilterDistance || 0;\n            px = Math.max(px, efd);\n            py = Math.max(py, efd);\n        });\n        const width = Math.floor(boundingBox.width);\n        const height = Math.floor(boundingBox.height);\n        const tmpCanvasWidth = width + 2 * px;\n        const tmpCanvasHeight = height + 2 * py;\n        if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {\n            return;\n        }\n        const x = Math.floor(boundingBox.x);\n        const y = Math.floor(boundingBox.y);\n        const ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles);\n        const tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight);\n        const tmpCtx = tmpCanvas.getContext('2d');\n        document.screen.setDefaults(tmpCtx);\n        tmpCtx.translate(-x + px, -y + py);\n        element.render(tmpCtx);\n        // apply filters\n        children.forEach((child)=>{\n            if (typeof child.apply === 'function') {\n                child.apply(tmpCtx, 0, 0, tmpCanvasWidth, tmpCanvasHeight);\n            }\n        });\n        // render on me\n        ctx.drawImage(tmpCanvas, 0, 0, tmpCanvasWidth, tmpCanvasHeight, x - px, y - py, tmpCanvasWidth, tmpCanvasHeight);\n        this.restoreStyles(element, ignoredStyles);\n    }\n    render(_) {\n    // NO RENDER\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'filter';\n    }\n}\nFilterElement.ignoreStyles = [\n    'filter',\n    'transform',\n    'clip-path'\n];\n\nclass FeDropShadowElement extends Element {\n    apply(_, _x, _y, _width, _height) {\n    // TODO: implement\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'feDropShadow';\n        this.addStylesFromStyleDefinition();\n    }\n}\n\nclass FeMorphologyElement extends Element {\n    apply(_, _x, _y, _width, _height) {\n    // TODO: implement\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'feMorphology';\n    }\n}\n\nclass FeCompositeElement extends Element {\n    apply(_, _x, _y, _width, _height) {\n    // TODO: implement\n    }\n    constructor(...args){\n        super(...args);\n        this.type = 'feComposite';\n    }\n}\n\nclass FeGaussianBlurElement extends Element {\n    apply(ctx, x, y, width, height) {\n        const { document , blurRadius  } = this;\n        const body = document.window ? document.window.document.body : null;\n        const canvas = ctx.canvas;\n        // StackBlur requires canvas be on document\n        canvas.id = document.getUniqueId();\n        if (body) {\n            canvas.style.display = 'none';\n            body.appendChild(canvas);\n        }\n        stackblurCanvas.canvasRGBA(canvas, x, y, width, height, blurRadius);\n        if (body) {\n            body.removeChild(canvas);\n        }\n    }\n    constructor(document, node, captureTextNodes){\n        super(document, node, captureTextNodes);\n        this.type = 'feGaussianBlur';\n        this.blurRadius = Math.floor(this.getAttribute('stdDeviation').getNumber());\n        this.extraFilterDistance = this.blurRadius;\n    }\n}\n\nclass TitleElement extends Element {\n    constructor(...args){\n        super(...args);\n        this.type = 'title';\n    }\n}\n\nclass DescElement extends Element {\n    constructor(...args){\n        super(...args);\n        this.type = 'desc';\n    }\n}\n\nconst elements = {\n    'svg': SVGElement,\n    'rect': RectElement,\n    'circle': CircleElement,\n    'ellipse': EllipseElement,\n    'line': LineElement,\n    'polyline': PolylineElement,\n    'polygon': PolygonElement,\n    'path': PathElement,\n    'pattern': PatternElement,\n    'marker': MarkerElement,\n    'defs': DefsElement,\n    'linearGradient': LinearGradientElement,\n    'radialGradient': RadialGradientElement,\n    'stop': StopElement,\n    'animate': AnimateElement,\n    'animateColor': AnimateColorElement,\n    'animateTransform': AnimateTransformElement,\n    'font': FontElement,\n    'font-face': FontFaceElement,\n    'missing-glyph': MissingGlyphElement,\n    'glyph': GlyphElement,\n    'text': TextElement,\n    'tspan': TSpanElement,\n    'tref': TRefElement,\n    'a': AElement,\n    'textPath': TextPathElement,\n    'image': ImageElement,\n    'g': GElement,\n    'symbol': SymbolElement,\n    'style': StyleElement,\n    'use': UseElement,\n    'mask': MaskElement,\n    'clipPath': ClipPathElement,\n    'filter': FilterElement,\n    'feDropShadow': FeDropShadowElement,\n    'feMorphology': FeMorphologyElement,\n    'feComposite': FeCompositeElement,\n    'feColorMatrix': FeColorMatrixElement,\n    'feGaussianBlur': FeGaussianBlurElement,\n    'title': TitleElement,\n    'desc': DescElement\n};\n\nfunction createCanvas(width, height) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nasync function createImage(src) {\n    let anonymousCrossOrigin = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    const image = document.createElement('img');\n    if (anonymousCrossOrigin) {\n        image.crossOrigin = 'Anonymous';\n    }\n    return new Promise((resolve, reject)=>{\n        image.onload = ()=>{\n            resolve(image);\n        };\n        image.onerror = (_event, _source, _lineno, _colno, error)=>{\n            reject(error);\n        };\n        image.src = src;\n    });\n}\nconst DEFAULT_EM_SIZE = 12;\nclass Document {\n    bindCreateImage(createImage1, anonymousCrossOrigin) {\n        if (typeof anonymousCrossOrigin === 'boolean') {\n            return (source, forceAnonymousCrossOrigin)=>createImage1(source, typeof forceAnonymousCrossOrigin === 'boolean' ? forceAnonymousCrossOrigin : anonymousCrossOrigin)\n            ;\n        }\n        return createImage1;\n    }\n    get window() {\n        return this.screen.window;\n    }\n    get fetch() {\n        return this.screen.fetch;\n    }\n    get ctx() {\n        return this.screen.ctx;\n    }\n    get emSize() {\n        const { emSizeStack  } = this;\n        return emSizeStack[emSizeStack.length - 1] || DEFAULT_EM_SIZE;\n    }\n    set emSize(value) {\n        const { emSizeStack  } = this;\n        emSizeStack.push(value);\n    }\n    popEmSize() {\n        const { emSizeStack  } = this;\n        emSizeStack.pop();\n    }\n    getUniqueId() {\n        return \"canvg\".concat(++this.uniqueId);\n    }\n    isImagesLoaded() {\n        return this.images.every((_)=>_.loaded\n        );\n    }\n    isFontsLoaded() {\n        return this.fonts.every((_)=>_.loaded\n        );\n    }\n    createDocumentElement(document) {\n        const documentElement = this.createElement(document.documentElement);\n        documentElement.root = true;\n        documentElement.addStylesFromStyleDefinition();\n        this.documentElement = documentElement;\n        return documentElement;\n    }\n    createElement(node) {\n        const elementType = node.nodeName.replace(/^[^:]+:/, '');\n        const ElementType = Document.elementTypes[elementType];\n        if (ElementType) {\n            return new ElementType(this, node);\n        }\n        return new UnknownElement(this, node);\n    }\n    createTextNode(node) {\n        return new TextNode(this, node);\n    }\n    setViewBox(config) {\n        this.screen.setViewBox({\n            document: this,\n            ...config\n        });\n    }\n    constructor(canvg, { rootEmSize =DEFAULT_EM_SIZE , emSize =DEFAULT_EM_SIZE , createCanvas: createCanvas1 = Document.createCanvas , createImage: createImage2 = Document.createImage , anonymousCrossOrigin  } = {}){\n        this.canvg = canvg;\n        this.definitions = {};\n        this.styles = {};\n        this.stylesSpecificity = {};\n        this.images = [];\n        this.fonts = [];\n        this.emSizeStack = [];\n        this.uniqueId = 0;\n        this.screen = canvg.screen;\n        this.rootEmSize = rootEmSize;\n        this.emSize = emSize;\n        this.createCanvas = createCanvas1;\n        this.createImage = this.bindCreateImage(createImage2, anonymousCrossOrigin);\n        this.screen.wait(()=>this.isImagesLoaded()\n        );\n        this.screen.wait(()=>this.isFontsLoaded()\n        );\n    }\n}\nDocument.createCanvas = createCanvas;\nDocument.createImage = createImage;\nDocument.elementTypes = elements;\n\n/**\n * SVG renderer on canvas.\n */ class Canvg {\n    /**\n   * Create Canvg instance from SVG source string or URL.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */ static async from(ctx, svg) {\n        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const parser = new Parser(options);\n        const svgDocument = await parser.parse(svg);\n        return new Canvg(ctx, svgDocument, options);\n    }\n    /**\n   * Create Canvg instance from SVG source string.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */ static fromString(ctx, svg) {\n        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const parser = new Parser(options);\n        const svgDocument = parser.parseFromString(svg);\n        return new Canvg(ctx, svgDocument, options);\n    }\n    /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string or URL.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */ fork(ctx, svg) {\n        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        return Canvg.from(ctx, svg, {\n            ...this.options,\n            ...options\n        });\n    }\n    /**\n   * Create new Canvg instance with inherited options.\n   * @param ctx - Rendering context.\n   * @param svg - SVG source string.\n   * @param options - Rendering options.\n   * @returns Canvg instance.\n   */ forkString(ctx, svg) {\n        let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        return Canvg.fromString(ctx, svg, {\n            ...this.options,\n            ...options\n        });\n    }\n    /**\n   * Document is ready promise.\n   * @returns Ready promise.\n   */ ready() {\n        return this.screen.ready();\n    }\n    /**\n   * Document is ready value.\n   * @returns Is ready or not.\n   */ isReady() {\n        return this.screen.isReady();\n    }\n    /**\n   * Render only first frame, ignoring animations and mouse.\n   * @param options - Rendering options.\n   */ async render() {\n        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        this.start({\n            enableRedraw: true,\n            ignoreAnimation: true,\n            ignoreMouse: true,\n            ...options\n        });\n        await this.ready();\n        this.stop();\n    }\n    /**\n   * Start rendering.\n   * @param options - Render options.\n   */ start() {\n        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const { documentElement , screen , options: baseOptions  } = this;\n        screen.start(documentElement, {\n            enableRedraw: true,\n            ...baseOptions,\n            ...options\n        });\n    }\n    /**\n   * Stop rendering.\n   */ stop() {\n        this.screen.stop();\n    }\n    /**\n   * Resize SVG to fit in given size.\n   * @param width\n   * @param height\n   * @param preserveAspectRatio\n   */ resize(width) {\n        let height = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : width, preserveAspectRatio = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n        this.documentElement.resize(width, height, preserveAspectRatio);\n    }\n    /**\n   * Main constructor.\n   * @param ctx - Rendering context.\n   * @param svg - SVG Document.\n   * @param options - Rendering options.\n   */ constructor(ctx, svg, options = {}){\n        this.parser = new Parser(options);\n        this.screen = new Screen(ctx, options);\n        this.options = options;\n        const document = new Document(this, options);\n        const documentElement = document.createDocumentElement(svg);\n        this.document = document;\n        this.documentElement = documentElement;\n    }\n}\n\nexports.AElement = AElement;\nexports.AnimateColorElement = AnimateColorElement;\nexports.AnimateElement = AnimateElement;\nexports.AnimateTransformElement = AnimateTransformElement;\nexports.BoundingBox = BoundingBox;\nexports.CB1 = CB1;\nexports.CB2 = CB2;\nexports.CB3 = CB3;\nexports.CB4 = CB4;\nexports.Canvg = Canvg;\nexports.CircleElement = CircleElement;\nexports.ClipPathElement = ClipPathElement;\nexports.DefsElement = DefsElement;\nexports.DescElement = DescElement;\nexports.Document = Document;\nexports.Element = Element;\nexports.EllipseElement = EllipseElement;\nexports.FeColorMatrixElement = FeColorMatrixElement;\nexports.FeCompositeElement = FeCompositeElement;\nexports.FeDropShadowElement = FeDropShadowElement;\nexports.FeGaussianBlurElement = FeGaussianBlurElement;\nexports.FeMorphologyElement = FeMorphologyElement;\nexports.FilterElement = FilterElement;\nexports.Font = Font;\nexports.FontElement = FontElement;\nexports.FontFaceElement = FontFaceElement;\nexports.GElement = GElement;\nexports.GlyphElement = GlyphElement;\nexports.GradientElement = GradientElement;\nexports.ImageElement = ImageElement;\nexports.LineElement = LineElement;\nexports.LinearGradientElement = LinearGradientElement;\nexports.MarkerElement = MarkerElement;\nexports.MaskElement = MaskElement;\nexports.Matrix = Matrix;\nexports.MissingGlyphElement = MissingGlyphElement;\nexports.Mouse = Mouse;\nexports.PSEUDO_ZERO = PSEUDO_ZERO;\nexports.Parser = Parser;\nexports.PathElement = PathElement;\nexports.PathParser = PathParser;\nexports.PatternElement = PatternElement;\nexports.Point = Point;\nexports.PolygonElement = PolygonElement;\nexports.PolylineElement = PolylineElement;\nexports.Property = Property;\nexports.QB1 = QB1;\nexports.QB2 = QB2;\nexports.QB3 = QB3;\nexports.RadialGradientElement = RadialGradientElement;\nexports.RectElement = RectElement;\nexports.RenderedElement = RenderedElement;\nexports.Rotate = Rotate;\nexports.SVGElement = SVGElement;\nexports.SVGFontLoader = SVGFontLoader;\nexports.Scale = Scale;\nexports.Screen = Screen;\nexports.Skew = Skew;\nexports.SkewX = SkewX;\nexports.SkewY = SkewY;\nexports.StopElement = StopElement;\nexports.StyleElement = StyleElement;\nexports.SymbolElement = SymbolElement;\nexports.TRefElement = TRefElement;\nexports.TSpanElement = TSpanElement;\nexports.TextElement = TextElement;\nexports.TextPathElement = TextPathElement;\nexports.TitleElement = TitleElement;\nexports.Transform = Transform;\nexports.Translate = Translate;\nexports.UnknownElement = UnknownElement;\nexports.UseElement = UseElement;\nexports.ViewPort = ViewPort;\nexports.compressSpaces = compressSpaces;\nexports.elements = elements;\nexports.getSelectorSpecificity = getSelectorSpecificity;\nexports.normalizeAttributeName = normalizeAttributeName;\nexports.normalizeColor = normalizeColor;\nexports.parseExternalUrl = parseExternalUrl;\nexports.presets = index;\nexports.toMatrixValue = toMatrixValue;\nexports.toNumbers = toNumbers;\nexports.trimLeft = trimLeft;\nexports.trimRight = trimRight;\nexports.vectorMagnitude = vectorMagnitude;\nexports.vectorsAngle = vectorsAngle;\nexports.vectorsRatio = vectorsRatio;\n//# sourceMappingURL=index.cjs.map\n","!function(t,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):r((t=\"undefined\"!=typeof globalThis?globalThis:t||self).svgpathdata={})}(this,(function(t){\"use strict\";\n/*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])})(t,e)};function e(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Class extends value \"+String(e)+\" is not a constructor or null\");function a(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(a.prototype=e.prototype,new a)}var a=\" \";function i(t){var r=\"\";Array.isArray(t)||(t=[t]);for(var e=0;e<t.length;e++){var i=t[e];if(i.type===N.CLOSE_PATH)r+=\"z\";else if(i.type===N.HORIZ_LINE_TO)r+=(i.relative?\"h\":\"H\")+i.x;else if(i.type===N.VERT_LINE_TO)r+=(i.relative?\"v\":\"V\")+i.y;else if(i.type===N.MOVE_TO)r+=(i.relative?\"m\":\"M\")+i.x+a+i.y;else if(i.type===N.LINE_TO)r+=(i.relative?\"l\":\"L\")+i.x+a+i.y;else if(i.type===N.CURVE_TO)r+=(i.relative?\"c\":\"C\")+i.x1+a+i.y1+a+i.x2+a+i.y2+a+i.x+a+i.y;else if(i.type===N.SMOOTH_CURVE_TO)r+=(i.relative?\"s\":\"S\")+i.x2+a+i.y2+a+i.x+a+i.y;else if(i.type===N.QUAD_TO)r+=(i.relative?\"q\":\"Q\")+i.x1+a+i.y1+a+i.x+a+i.y;else if(i.type===N.SMOOTH_QUAD_TO)r+=(i.relative?\"t\":\"T\")+i.x+a+i.y;else{if(i.type!==N.ARC)throw new Error('Unexpected command type \"'+i.type+'\" at index '+e+\".\");r+=(i.relative?\"a\":\"A\")+i.rX+a+i.rY+a+i.xRot+a+ +i.lArcFlag+a+ +i.sweepFlag+a+i.x+a+i.y}}return r}function n(t,r){var e=t[0],a=t[1];return[e*Math.cos(r)-a*Math.sin(r),e*Math.sin(r)+a*Math.cos(r)]}function o(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];for(var e=0;e<t.length;e++)if(\"number\"!=typeof t[e])throw new Error(\"assertNumbers arguments[\"+e+\"] is not a number. \"+typeof t[e]+\" == typeof \"+t[e]);return!0}var s=Math.PI;function u(t,r,e){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var a=t.rX,i=t.rY,o=t.x,u=t.y;a=Math.abs(t.rX),i=Math.abs(t.rY);var h=n([(r-o)/2,(e-u)/2],-t.xRot/180*s),c=h[0],m=h[1],y=Math.pow(c,2)/Math.pow(a,2)+Math.pow(m,2)/Math.pow(i,2);1<y&&(a*=Math.sqrt(y),i*=Math.sqrt(y)),t.rX=a,t.rY=i;var p=Math.pow(a,2)*Math.pow(m,2)+Math.pow(i,2)*Math.pow(c,2),f=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(a,2)*Math.pow(i,2)-p)/p)),T=a*m/i*f,O=-i*c/a*f,l=n([T,O],t.xRot/180*s);t.cX=l[0]+(r+o)/2,t.cY=l[1]+(e+u)/2,t.phi1=Math.atan2((m-O)/i,(c-T)/a),t.phi2=Math.atan2((-m-O)/i,(-c-T)/a),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*s),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*s),t.phi1*=180/s,t.phi2*=180/s}function h(t,r,e){o(t,r,e);var a=t*t+r*r-e*e;if(0>a)return[];if(0===a)return[[t*e/(t*t+r*r),r*e/(t*t+r*r)]];var i=Math.sqrt(a);return[[(t*e+r*i)/(t*t+r*r),(r*e-t*i)/(t*t+r*r)],[(t*e-r*i)/(t*t+r*r),(r*e+t*i)/(t*t+r*r)]]}var c=Math.PI/180;function m(t,r,e){return(1-e)*t+e*r}function y(t,r,e,a){return t+Math.cos(a/180*s)*r+Math.sin(a/180*s)*e}function p(t,r,e,a){var i=1e-6,n=r-t,o=e-r,s=3*n+3*(a-e)-6*o,u=6*(o-n),h=3*n;return Math.abs(s)<i?[-h/u]:function(t,r,e){void 0===e&&(e=1e-6);var a=t*t/4-r;if(a<-e)return[];if(a<=e)return[-t/2];var i=Math.sqrt(a);return[-t/2-i,-t/2+i]}(u/s,h/s,i)}function f(t,r,e,a,i){var n=1-i;return t*(n*n*n)+r*(3*n*n*i)+e*(3*n*i*i)+a*(i*i*i)}t.SVGPathDataTransformer=void 0,function(t){function r(){return i((function(t,r,e){return t.relative&&(void 0!==t.x1&&(t.x1+=r),void 0!==t.y1&&(t.y1+=e),void 0!==t.x2&&(t.x2+=r),void 0!==t.y2&&(t.y2+=e),void 0!==t.x&&(t.x+=r),void 0!==t.y&&(t.y+=e),t.relative=!1),t}))}function e(){var t=NaN,r=NaN,e=NaN,a=NaN;return i((function(i,n,o){return i.type&N.SMOOTH_CURVE_TO&&(i.type=N.CURVE_TO,t=isNaN(t)?n:t,r=isNaN(r)?o:r,i.x1=i.relative?n-t:2*n-t,i.y1=i.relative?o-r:2*o-r),i.type&N.CURVE_TO?(t=i.relative?n+i.x2:i.x2,r=i.relative?o+i.y2:i.y2):(t=NaN,r=NaN),i.type&N.SMOOTH_QUAD_TO&&(i.type=N.QUAD_TO,e=isNaN(e)?n:e,a=isNaN(a)?o:a,i.x1=i.relative?n-e:2*n-e,i.y1=i.relative?o-a:2*o-a),i.type&N.QUAD_TO?(e=i.relative?n+i.x1:i.x1,a=i.relative?o+i.y1:i.y1):(e=NaN,a=NaN),i}))}function a(){var t=NaN,r=NaN;return i((function(e,a,i){if(e.type&N.SMOOTH_QUAD_TO&&(e.type=N.QUAD_TO,t=isNaN(t)?a:t,r=isNaN(r)?i:r,e.x1=e.relative?a-t:2*a-t,e.y1=e.relative?i-r:2*i-r),e.type&N.QUAD_TO){t=e.relative?a+e.x1:e.x1,r=e.relative?i+e.y1:e.y1;var n=e.x1,o=e.y1;e.type=N.CURVE_TO,e.x1=((e.relative?0:a)+2*n)/3,e.y1=((e.relative?0:i)+2*o)/3,e.x2=(e.x+2*n)/3,e.y2=(e.y+2*o)/3}else t=NaN,r=NaN;return e}))}function i(t){var r=0,e=0,a=NaN,i=NaN;return function(n){if(isNaN(a)&&!(n.type&N.MOVE_TO))throw new Error(\"path must start with moveto\");var o=t(n,r,e,a,i);return n.type&N.CLOSE_PATH&&(r=a,e=i),void 0!==n.x&&(r=n.relative?r+n.x:n.x),void 0!==n.y&&(e=n.relative?e+n.y:n.y),n.type&N.MOVE_TO&&(a=r,i=e),o}}function s(t,r,e,a,n,s){return o(t,r,e,a,n,s),i((function(i,o,u,h){var c=i.x1,m=i.x2,y=i.relative&&!isNaN(h),p=void 0!==i.x?i.x:y?0:o,f=void 0!==i.y?i.y:y?0:u;function T(t){return t*t}i.type&N.HORIZ_LINE_TO&&0!==r&&(i.type=N.LINE_TO,i.y=i.relative?0:u),i.type&N.VERT_LINE_TO&&0!==e&&(i.type=N.LINE_TO,i.x=i.relative?0:o),void 0!==i.x&&(i.x=i.x*t+f*e+(y?0:n)),void 0!==i.y&&(i.y=p*r+i.y*a+(y?0:s)),void 0!==i.x1&&(i.x1=i.x1*t+i.y1*e+(y?0:n)),void 0!==i.y1&&(i.y1=c*r+i.y1*a+(y?0:s)),void 0!==i.x2&&(i.x2=i.x2*t+i.y2*e+(y?0:n)),void 0!==i.y2&&(i.y2=m*r+i.y2*a+(y?0:s));var O=t*a-r*e;if(void 0!==i.xRot&&(1!==t||0!==r||0!==e||1!==a))if(0===O)delete i.rX,delete i.rY,delete i.xRot,delete i.lArcFlag,delete i.sweepFlag,i.type=N.LINE_TO;else{var l=i.xRot*Math.PI/180,v=Math.sin(l),_=Math.cos(l),d=1/T(i.rX),x=1/T(i.rY),A=T(_)*d+T(v)*x,E=2*v*_*(d-x),C=T(v)*d+T(_)*x,M=A*a*a-E*r*a+C*r*r,R=E*(t*a+r*e)-2*(A*e*a+C*t*r),S=A*e*e-E*t*e+C*t*t,g=(Math.atan2(R,M-S)+Math.PI)%Math.PI/2,I=Math.sin(g),V=Math.cos(g);i.rX=Math.abs(O)/Math.sqrt(M*T(V)+R*I*V+S*T(I)),i.rY=Math.abs(O)/Math.sqrt(M*T(I)-R*I*V+S*T(V)),i.xRot=180*g/Math.PI}return void 0!==i.sweepFlag&&0>O&&(i.sweepFlag=+!i.sweepFlag),i}))}function T(){return function(t){var r={};for(var e in t)r[e]=t[e];return r}}t.ROUND=function(t){function r(r){return Math.round(r*t)/t}return void 0===t&&(t=1e13),o(t),function(t){return void 0!==t.x1&&(t.x1=r(t.x1)),void 0!==t.y1&&(t.y1=r(t.y1)),void 0!==t.x2&&(t.x2=r(t.x2)),void 0!==t.y2&&(t.y2=r(t.y2)),void 0!==t.x&&(t.x=r(t.x)),void 0!==t.y&&(t.y=r(t.y)),void 0!==t.rX&&(t.rX=r(t.rX)),void 0!==t.rY&&(t.rY=r(t.rY)),t}},t.TO_ABS=r,t.TO_REL=function(){return i((function(t,r,e){return t.relative||(void 0!==t.x1&&(t.x1-=r),void 0!==t.y1&&(t.y1-=e),void 0!==t.x2&&(t.x2-=r),void 0!==t.y2&&(t.y2-=e),void 0!==t.x&&(t.x-=r),void 0!==t.y&&(t.y-=e),t.relative=!0),t}))},t.NORMALIZE_HVZ=function(t,r,e){return void 0===t&&(t=!0),void 0===r&&(r=!0),void 0===e&&(e=!0),i((function(a,i,n,o,s){if(isNaN(o)&&!(a.type&N.MOVE_TO))throw new Error(\"path must start with moveto\");return r&&a.type&N.HORIZ_LINE_TO&&(a.type=N.LINE_TO,a.y=a.relative?0:n),e&&a.type&N.VERT_LINE_TO&&(a.type=N.LINE_TO,a.x=a.relative?0:i),t&&a.type&N.CLOSE_PATH&&(a.type=N.LINE_TO,a.x=a.relative?o-i:o,a.y=a.relative?s-n:s),a.type&N.ARC&&(0===a.rX||0===a.rY)&&(a.type=N.LINE_TO,delete a.rX,delete a.rY,delete a.xRot,delete a.lArcFlag,delete a.sweepFlag),a}))},t.NORMALIZE_ST=e,t.QT_TO_C=a,t.INFO=i,t.SANITIZE=function(t){void 0===t&&(t=0),o(t);var r=NaN,e=NaN,a=NaN,n=NaN;return i((function(i,o,s,u,h){var c=Math.abs,m=!1,y=0,p=0;if(i.type&N.SMOOTH_CURVE_TO&&(y=isNaN(r)?0:o-r,p=isNaN(e)?0:s-e),i.type&(N.CURVE_TO|N.SMOOTH_CURVE_TO)?(r=i.relative?o+i.x2:i.x2,e=i.relative?s+i.y2:i.y2):(r=NaN,e=NaN),i.type&N.SMOOTH_QUAD_TO?(a=isNaN(a)?o:2*o-a,n=isNaN(n)?s:2*s-n):i.type&N.QUAD_TO?(a=i.relative?o+i.x1:i.x1,n=i.relative?s+i.y1:i.y2):(a=NaN,n=NaN),i.type&N.LINE_COMMANDS||i.type&N.ARC&&(0===i.rX||0===i.rY||!i.lArcFlag)||i.type&N.CURVE_TO||i.type&N.SMOOTH_CURVE_TO||i.type&N.QUAD_TO||i.type&N.SMOOTH_QUAD_TO){var f=void 0===i.x?0:i.relative?i.x:i.x-o,T=void 0===i.y?0:i.relative?i.y:i.y-s;y=isNaN(a)?void 0===i.x1?y:i.relative?i.x:i.x1-o:a-o,p=isNaN(n)?void 0===i.y1?p:i.relative?i.y:i.y1-s:n-s;var O=void 0===i.x2?0:i.relative?i.x:i.x2-o,l=void 0===i.y2?0:i.relative?i.y:i.y2-s;c(f)<=t&&c(T)<=t&&c(y)<=t&&c(p)<=t&&c(O)<=t&&c(l)<=t&&(m=!0)}return i.type&N.CLOSE_PATH&&c(o-u)<=t&&c(s-h)<=t&&(m=!0),m?[]:i}))},t.MATRIX=s,t.ROTATE=function(t,r,e){void 0===r&&(r=0),void 0===e&&(e=0),o(t,r,e);var a=Math.sin(t),i=Math.cos(t);return s(i,a,-a,i,r-r*i+e*a,e-r*a-e*i)},t.TRANSLATE=function(t,r){return void 0===r&&(r=0),o(t,r),s(1,0,0,1,t,r)},t.SCALE=function(t,r){return void 0===r&&(r=t),o(t,r),s(t,0,0,r,0,0)},t.SKEW_X=function(t){return o(t),s(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return o(t),s(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),s(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),s(1,0,0,-1,0,t)},t.A_TO_C=function(){return i((function(t,r,e){return N.ARC===t.type?function(t,r,e){var a,i,o,s;t.cX||u(t,r,e);for(var h=Math.min(t.phi1,t.phi2),y=Math.max(t.phi1,t.phi2)-h,p=Math.ceil(y/90),f=new Array(p),T=r,O=e,l=0;l<p;l++){var v=m(t.phi1,t.phi2,l/p),_=m(t.phi1,t.phi2,(l+1)/p),d=_-v,x=4/3*Math.tan(d*c/4),A=[Math.cos(v*c)-x*Math.sin(v*c),Math.sin(v*c)+x*Math.cos(v*c)],E=A[0],C=A[1],M=[Math.cos(_*c),Math.sin(_*c)],R=M[0],S=M[1],g=[R+x*Math.sin(_*c),S-x*Math.cos(_*c)],I=g[0],V=g[1];f[l]={relative:t.relative,type:N.CURVE_TO};var D=function(r,e){var a=n([r*t.rX,e*t.rY],t.xRot),i=a[0],o=a[1];return[t.cX+i,t.cY+o]};a=D(E,C),f[l].x1=a[0],f[l].y1=a[1],i=D(I,V),f[l].x2=i[0],f[l].y2=i[1],o=D(R,S),f[l].x=o[0],f[l].y=o[1],t.relative&&(f[l].x1-=T,f[l].y1-=O,f[l].x2-=T,f[l].y2-=O,f[l].x-=T,f[l].y-=O),T=(s=[f[l].x,f[l].y])[0],O=s[1]}return f}(t,t.relative?0:r,t.relative?0:e):t}))},t.ANNOTATE_ARCS=function(){return i((function(t,r,e){return t.relative&&(r=0,e=0),N.ARC===t.type&&u(t,r,e),t}))},t.CLONE=T,t.CALCULATE_BOUNDS=function(){var t=function(t){var r={};for(var e in t)r[e]=t[e];return r},n=r(),o=a(),s=e(),c=i((function(r,e,a){var i=s(o(n(t(r))));function m(t){t>c.maxX&&(c.maxX=t),t<c.minX&&(c.minX=t)}function T(t){t>c.maxY&&(c.maxY=t),t<c.minY&&(c.minY=t)}if(i.type&N.DRAWING_COMMANDS&&(m(e),T(a)),i.type&N.HORIZ_LINE_TO&&m(i.x),i.type&N.VERT_LINE_TO&&T(i.y),i.type&N.LINE_TO&&(m(i.x),T(i.y)),i.type&N.CURVE_TO){m(i.x),T(i.y);for(var O=0,l=p(e,i.x1,i.x2,i.x);O<l.length;O++){0<(H=l[O])&&1>H&&m(f(e,i.x1,i.x2,i.x,H))}for(var v=0,_=p(a,i.y1,i.y2,i.y);v<_.length;v++){0<(H=_[v])&&1>H&&T(f(a,i.y1,i.y2,i.y,H))}}if(i.type&N.ARC){m(i.x),T(i.y),u(i,e,a);for(var d=i.xRot/180*Math.PI,x=Math.cos(d)*i.rX,A=Math.sin(d)*i.rX,E=-Math.sin(d)*i.rY,C=Math.cos(d)*i.rY,M=i.phi1<i.phi2?[i.phi1,i.phi2]:-180>i.phi2?[i.phi2+360,i.phi1+360]:[i.phi2,i.phi1],R=M[0],S=M[1],g=function(t){var r=t[0],e=t[1],a=180*Math.atan2(e,r)/Math.PI;return a<R?a+360:a},I=0,V=h(E,-x,0).map(g);I<V.length;I++){(H=V[I])>R&&H<S&&m(y(i.cX,x,E,H))}for(var D=0,L=h(C,-A,0).map(g);D<L.length;D++){var H;(H=L[D])>R&&H<S&&T(y(i.cY,A,C,H))}}return r}));return c.minX=1/0,c.maxX=-1/0,c.minY=1/0,c.maxY=-1/0,c}}(t.SVGPathDataTransformer||(t.SVGPathDataTransformer={}));var T,O=function(){function r(){}return r.prototype.round=function(r){return this.transform(t.SVGPathDataTransformer.ROUND(r))},r.prototype.toAbs=function(){return this.transform(t.SVGPathDataTransformer.TO_ABS())},r.prototype.toRel=function(){return this.transform(t.SVGPathDataTransformer.TO_REL())},r.prototype.normalizeHVZ=function(r,e,a){return this.transform(t.SVGPathDataTransformer.NORMALIZE_HVZ(r,e,a))},r.prototype.normalizeST=function(){return this.transform(t.SVGPathDataTransformer.NORMALIZE_ST())},r.prototype.qtToC=function(){return this.transform(t.SVGPathDataTransformer.QT_TO_C())},r.prototype.aToC=function(){return this.transform(t.SVGPathDataTransformer.A_TO_C())},r.prototype.sanitize=function(r){return this.transform(t.SVGPathDataTransformer.SANITIZE(r))},r.prototype.translate=function(r,e){return this.transform(t.SVGPathDataTransformer.TRANSLATE(r,e))},r.prototype.scale=function(r,e){return this.transform(t.SVGPathDataTransformer.SCALE(r,e))},r.prototype.rotate=function(r,e,a){return this.transform(t.SVGPathDataTransformer.ROTATE(r,e,a))},r.prototype.matrix=function(r,e,a,i,n,o){return this.transform(t.SVGPathDataTransformer.MATRIX(r,e,a,i,n,o))},r.prototype.skewX=function(r){return this.transform(t.SVGPathDataTransformer.SKEW_X(r))},r.prototype.skewY=function(r){return this.transform(t.SVGPathDataTransformer.SKEW_Y(r))},r.prototype.xSymmetry=function(r){return this.transform(t.SVGPathDataTransformer.X_AXIS_SYMMETRY(r))},r.prototype.ySymmetry=function(r){return this.transform(t.SVGPathDataTransformer.Y_AXIS_SYMMETRY(r))},r.prototype.annotateArcs=function(){return this.transform(t.SVGPathDataTransformer.ANNOTATE_ARCS())},r}(),l=function(t){return\" \"===t||\"\\t\"===t||\"\\r\"===t||\"\\n\"===t},v=function(t){return\"0\".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<=\"9\".charCodeAt(0)},_=function(t){function r(){var r=t.call(this)||this;return r.curNumber=\"\",r.curCommandType=-1,r.curCommandRelative=!1,r.canParseCommandOrComma=!0,r.curNumberHasExp=!1,r.curNumberHasExpDigits=!1,r.curNumberHasDecimal=!1,r.curArgs=[],r}return e(r,t),r.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(\" \",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError(\"Unterminated command at the path end.\");return t},r.prototype.parse=function(t,r){var e=this;void 0===r&&(r=[]);for(var a=function(t){r.push(t),e.curArgs.length=0,e.canParseCommandOrComma=!0},i=0;i<t.length;i++){var n=t[i],o=!(this.curCommandType!==N.ARC||3!==this.curArgs.length&&4!==this.curArgs.length||1!==this.curNumber.length||\"0\"!==this.curNumber&&\"1\"!==this.curNumber),s=v(n)&&(\"0\"===this.curNumber&&\"0\"===n||o);if(!v(n)||s)if(\"e\"!==n&&\"E\"!==n)if(\"-\"!==n&&\"+\"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if(\".\"!==n||this.curNumberHasExp||this.curNumberHasDecimal||o){if(this.curNumber&&-1!==this.curCommandType){var u=Number(this.curNumber);if(isNaN(u))throw new SyntaxError(\"Invalid number ending at \"+i);if(this.curCommandType===N.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>u)throw new SyntaxError('Expected positive number, got \"'+u+'\" at index \"'+i+'\"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&\"0\"!==this.curNumber&&\"1\"!==this.curNumber)throw new SyntaxError('Expected a flag, got \"'+this.curNumber+'\" at index \"'+i+'\"');this.curArgs.push(u),this.curArgs.length===d[this.curCommandType]&&(N.HORIZ_LINE_TO===this.curCommandType?a({type:N.HORIZ_LINE_TO,relative:this.curCommandRelative,x:u}):N.VERT_LINE_TO===this.curCommandType?a({type:N.VERT_LINE_TO,relative:this.curCommandRelative,y:u}):this.curCommandType===N.MOVE_TO||this.curCommandType===N.LINE_TO||this.curCommandType===N.SMOOTH_QUAD_TO?(a({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),N.MOVE_TO===this.curCommandType&&(this.curCommandType=N.LINE_TO)):this.curCommandType===N.CURVE_TO?a({type:N.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===N.SMOOTH_CURVE_TO?a({type:N.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===N.QUAD_TO?a({type:N.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===N.ARC&&a({type:N.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber=\"\",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!l(n))if(\",\"===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if(\"+\"!==n&&\"-\"!==n&&\".\"!==n)if(s)this.curNumber=n,this.curNumberHasDecimal=!1;else{if(0!==this.curArgs.length)throw new SyntaxError(\"Unterminated command at index \"+i+\".\");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character \"'+n+'\" at index '+i+\". Command cannot follow comma\");if(this.canParseCommandOrComma=!1,\"z\"!==n&&\"Z\"!==n)if(\"h\"===n||\"H\"===n)this.curCommandType=N.HORIZ_LINE_TO,this.curCommandRelative=\"h\"===n;else if(\"v\"===n||\"V\"===n)this.curCommandType=N.VERT_LINE_TO,this.curCommandRelative=\"v\"===n;else if(\"m\"===n||\"M\"===n)this.curCommandType=N.MOVE_TO,this.curCommandRelative=\"m\"===n;else if(\"l\"===n||\"L\"===n)this.curCommandType=N.LINE_TO,this.curCommandRelative=\"l\"===n;else if(\"c\"===n||\"C\"===n)this.curCommandType=N.CURVE_TO,this.curCommandRelative=\"c\"===n;else if(\"s\"===n||\"S\"===n)this.curCommandType=N.SMOOTH_CURVE_TO,this.curCommandRelative=\"s\"===n;else if(\"q\"===n||\"Q\"===n)this.curCommandType=N.QUAD_TO,this.curCommandRelative=\"q\"===n;else if(\"t\"===n||\"T\"===n)this.curCommandType=N.SMOOTH_QUAD_TO,this.curCommandRelative=\"t\"===n;else{if(\"a\"!==n&&\"A\"!==n)throw new SyntaxError('Unexpected character \"'+n+'\" at index '+i+\".\");this.curCommandType=N.ARC,this.curCommandRelative=\"a\"===n}else r.push({type:N.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal=\".\"===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0;else this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp}return r},r.prototype.transform=function(t){return Object.create(this,{parse:{value:function(r,e){void 0===e&&(e=[]);for(var a=0,i=Object.getPrototypeOf(this).parse.call(this,r);a<i.length;a++){var n=i[a],o=t(n);Array.isArray(o)?e.push.apply(e,o):e.push(o)}return e}}})},r}(O),N=function(r){function a(t){var e=r.call(this)||this;return e.commands=\"string\"==typeof t?a.parse(t):t,e}return e(a,r),a.prototype.encode=function(){return a.encode(this.commands)},a.prototype.getBounds=function(){var r=t.SVGPathDataTransformer.CALCULATE_BOUNDS();return this.transform(r),r},a.prototype.transform=function(t){for(var r=[],e=0,a=this.commands;e<a.length;e++){var i=t(a[e]);Array.isArray(i)?r.push.apply(r,i):r.push(i)}return this.commands=r,this},a.encode=function(t){return i(t)},a.parse=function(t){var r=new _,e=[];return r.parse(t,e),r.finish(e),e},a.CLOSE_PATH=1,a.MOVE_TO=2,a.HORIZ_LINE_TO=4,a.VERT_LINE_TO=8,a.LINE_TO=16,a.CURVE_TO=32,a.SMOOTH_CURVE_TO=64,a.QUAD_TO=128,a.SMOOTH_QUAD_TO=256,a.ARC=512,a.LINE_COMMANDS=a.LINE_TO|a.HORIZ_LINE_TO|a.VERT_LINE_TO,a.DRAWING_COMMANDS=a.HORIZ_LINE_TO|a.VERT_LINE_TO|a.LINE_TO|a.CURVE_TO|a.SMOOTH_CURVE_TO|a.QUAD_TO|a.SMOOTH_QUAD_TO|a.ARC,a}(O),d=((T={})[N.MOVE_TO]=2,T[N.LINE_TO]=2,T[N.HORIZ_LINE_TO]=1,T[N.VERT_LINE_TO]=1,T[N.CLOSE_PATH]=0,T[N.QUAD_TO]=4,T[N.SMOOTH_QUAD_TO]=2,T[N.CURVE_TO]=6,T[N.SMOOTH_CURVE_TO]=4,T[N.ARC]=7,T);t.COMMAND_ARG_COUNTS=d,t.SVGPathData=N,t.SVGPathDataParser=_,t.encodeSVGPath=i,Object.defineProperty(t,\"__esModule\",{value:!0})}));\n//# sourceMappingURL=SVGPathData.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n"],"names":["root","factory","exports","module","define","amd","self","require","obj","_packages","__esModule","default","draw2d","Canvas","Class","extend","NAME","init","canvasId","width","height","_this","this","setScrollArea","document","body","html","$","css","isNaN","parseFloat","initialWidth","getWidth","initialHeight","getHeight","parseInt","droppable","accept","over","event","ui","onDragEnter","draggable","out","onDragLeave","drop","_getEvent","helperPos","helper","position","pos","fromDocumentToCanvasCoordinate","clientX","clientY","onDrop","getX","left","getY","top","shiftKey","ctrlKey","appendTo","stack","zIndex","drag","onDrag","stop","e","start","addClass","paper","Raphael","canvas","style","zoomPolicy","zoomFactor","selection","Selection","currentDropTarget","currentHoverFigure","regionDragDropConstraint","policy","figure","RegionEditPolicy","eventSubscriptions","editPolicy","util","ArrayList","figures","lines","commonPorts","resizeHandles","commandStack","command","CommandStack","linesToRepaintAfterDragDrop","lineIntersections","installEditPolicy","WheelZoomPolicy","DefaultKeyboardPolicy","BoundingboxSelectionPolicy","DropInterceptorPolicy","connection","ComposedConnectionCreatePolicy","DragConnectionCreatePolicy","ClickConnectionCreatePolicy","addEventListener","isPostChangeEvent","calculateConnectionIntersection","each","i","line","svgPathString","repaint","mouseDown","mouseDownX","mouseDownY","mouseDragDiffX","mouseDragDiffY","bind","onMouseUp","x","y","hover","getBestFigure","onMouseLeave","fireEvent","onMouseEnter","exc","console","log","onMouseMove","hoverFigure","diffXAbs","diffYAbs","onMouseDrag","which","preventDefault","onMouseDown","stopPropagation","onRightMouseDown","on","onDoubleClick","onClick","originalEvent","delta","type","wheelDelta","detail","onMouseWheel","keyupCallback","target","is","KeyboardPolicy","onKeyUp","keyCode","keydownCallback","onKeyDown","destroy","clear","unbind","remove","clone","markSaveLocation","hideDecoration","showDecoration","getLines","getSize","l1","removeElementAt","ii","l2","partInter","intersection","add","other","SelectionPolicy","getSelection","getAll","unselect","grep","p","stay","onUninstall","ZoomPolicy","ConnectionCreatePolicy","uninstallEditPolicy","onInstall","removed","name","getDropInterceptorPolicies","setZoom","animated","getZoom","getDimension","geo","Rectangle","setDimension","dim","widths","getFigures","map","f","getAbsoluteX","heights","getAbsoluteY","Math","max","asArray","w","h","setSize","Point","getScrollLeft","getScrollTop","fromCanvasToDocumentCoordinate","getHtmlContainer","touches","length","changedTouches","elementSelector","scrollArea","getScrollArea","scrollLeft","scrollTop","setScrollLeft","setScrollTop","scrollTo","offset","getCanvas","shape","basic","Line","setPosition","setCanvas","getShapeElement","dx","dy","PolyLine","contains","Connection","disconnect","getLine","id","count","get","getId","getFigure","getIntersection","result","entry","j","justTouching","snapToHelper","orig","SnapToEditPolicy","snap","registerPort","port","unregisterPort","getAllPorts","getCommandStack","getPrimarySelection","getPrimary","setCurrentSelection","object","addSelection","select","blacklist","whitelist","Array","isArray","testFigure","isInList","list","len","considering","isInBlacklist","item","isInWhitelist","checkRecursive","children","c","isVisible","hitTest","figureResult","childResult","lineResult","getBestLine","array","node","index","filter","sort","a","b","lineToIgnore","Figure","inArray","draggedDomNode","droppedDomNode","relX","relY","onContextMenu","returnValue","args","subscribers","callback","events","split","push","off","eventOrFunction","Configuration","version","i18n","move","assignShape","groupShapes","ungroupShapes","deleteShape","moveShape","moveLine","addShape","moveVertex","moveVertices","deleteVertex","resizeShape","rotateShape","collection","addVertex","changeAttributes","connectPorts","menu","deleteSegment","addSegment","dialog","filenamePrompt","createResizeHandle","owner","ResizeHandle","createConnection","sourcePort","targetPort","dropTarget","createInputPort","relatedFigure","InputPort","createOutputPort","OutputPort","createHybridPort","HybridPort","attr","setter","getter","oldPoint","sourceDecorator","targetDecorator","sourceDecoratorNode","targetDecoratorNode","isMoving","moveListener","setStartPoint","setEndPoint","_super","color","stroke","radius","setSourceDecorator","setTargetDecorator","source","setSource","setTarget","getSourceDecorator","getTargetDecorator","getSource","getTarget","connections","onDisconnect","fireSourcePortRouteEvent","fireTargetPortRouteEvent","reconnect","onConnect","routingRequired","isResizeable","isDraggable","child","locator","layout","ConnectionLocator","decorator","setParent","calculatePath","routingHints","z1","getZOrder","z2","toBack","attributes","repaintBlocked","paint","getVertices","first","transform","getStartAngle","opacity","alpha","getColor","lineColor","hex","forEach","setAttribute","cssClass","end","last","getEndAngle","hash","postProcess","postProcessCache","router","dx2","dy2","updateVertices","DragDropEditPolicy","moved","toFront","insertAfter","getStartPoint","refPoint","getStartPosition","getConnectionAnchorLocation","getConnectionAnchorReferencePoint","getEndPoint","getEndPosition","getPeerPort","sharingPorts","notiCanvas","lineSegments","p1","p2","SplineConnectionRouter","sqrt","angle","PI","asin","abs","getConnections","conn","createCommand","request","getPolicy","CommandType","MOVE","CommandMoveVertices","MOVE_BASEPOINT","CommandReconnect","getPersistentAttributes","memento","parentNode","getParent","getName","decoration","setPersistentAttributes","Function","_interopRequireDefault","_JSONUtil","_UUID","_extend","MIN_TIMER_INTERVAL","setterWhitelist","setId","setX","setY","setWidth","setHeight","boundingBox","setBoundingBox","minWidth","setMinWidth","minHeight","setMinHeight","setCssClass","userData","setUserData","setDraggable","resizeable","setResizeable","selectable","setSelectable","setRotationAngle","setAlpha","glow","setGlow","visible","setVisible","keepAspectRatio","setKeepAspectRatio","getterWhitelist","getRotationAngle","getUserData","isSelectable","getAlpha","UUID","create","cachedZOrder","isResizeHandle","deleteable","canSnapToHelper","snapToGridAnchor","timerId","timerInterval","parent","composite","rotationAngle","replace","RegExp","getMinWidth","getMinHeight","isInDragDrop","ox","oy","lastAppliedAttributes","selectionHandles","panningDelegate","relocateChildrenEventCallback","relocate","defaultSelectionAdapter","selectionAdapter","RectangleSelectionFeedbackPolicy","value","isPlainObject","key","substring","jsonUtil","set","func","param","undefined","call","data","Object","assign","keys","k","pick","var_keys","arguments","prototype","slice","asPrimarySelection","onSelect","onUnselect","setSelectionAdapter","adapter","getSelectionAdapter","isSelected","newId","getCssClass","trim","removeAttribute","hasCssClass","className","test","addCssClass","removeCssClass","newClass","indexOf","toggleCssClass","stopTimer","startTimer","milliSeconds","window","setInterval","onTimer","clearInterval","StrongComposite","getTopLevelShapeElement","insertElementAt","handle","insertBefore","SelectionFeedbackPolicy","__proto__","removedPolicy","debug","warn","getChildren","resetChildren","createShapeElement","hide","visibleDuration","fadeOut","show","fadeIn","flatDiff","getOwnPropertyNames","applyTransformation","flag","getHandleBBox","onDragStart","bbox","translate","getAbsolutePosition","scale","getBestChild","canStartDrag","newPos","adjustPosition","getCanSnapToHelper","onPanning","onPanningEnd","onDragEnd","execute","delegateTarget","draggedFigure","delegate","onCatch","droppedFigure","percent","min","duration","getKeepAspectRatio","from","setCanSnapToHelper","getSnapToGridAnchor","setSnapToGridAnchor","point","getAbsoluteBounds","oldPos","getPosition","old","newDim","adjustDimension","rect","getBoundingBox","getOuterBoundingBox","parentBB","childBB","merge","iX","iY","corona","isMemberDraggable","isMemberSelectable","isStrechable","isDeleteable","setDeleteable","containedFigure","getRoot","setComposite","getComposite","_inEvent","context","___originalCallback","figureToIgnore","CommandMove","DELETE","CommandDelete","RESIZE","CommandResize","cloneMetaData","excludeChildren","initialId","HeadlessCanvas","Port","InputPortLocator","maxFanIn","Number","MAX_SAFE_INTEGER","setMaxFanIn","getMaxFanIn","CONNECT","CommandConnect","OutputPortLocator","Circle","DEFAULT_BORDER_COLOR","Color","lighterBgColor","coronaWidth","bgColor","diameter","setCoronaWidth","semanticGroup","setSemanticGroup","getCoronaWidth","getSemanticGroup","useGradient","preferredConnectionDirection","emitter","connectionAnchor","anchor","ConnectionAnchor","maxFanOut","IntrusivePortsFeedbackPolicy","portSelectionAdapter","setMaxFanOut","getMaxFanOut","group","setConnectionAnchor","setOwner","referencePoint","inquiringConnection","getLocation","getReferencePoint","getConnectionDirection","peerPort","getDirection","setConnectionDirection","direction","setLocator","getLocator","setBackgroundColor","lighter","setValue","onPortValueChanged","getValue","cx","cy","rx","ry","cursor","fill","rgba","join","_oldstroke","getStroke","setStroke","setName","iX2","iY2","Corona","setDiameter","d","CommandMovePort","ports","setColor","zoomCallback","origWidth","origHeight","origRadius","origStroke","blockEvent","setType","getOwner","getType","commandMove","commandResize","getSnapToDirection","SnapToHelper","NORTH_WEST","NORTH","NORTH_EAST","EAST","SOUTH_EAST","SOUTH","SOUTH_WEST","WEST","NSEW","updateCursor","oldX","oldY","diffX","diffY","objPosX","objPosY","objWidth","objHeight","newX","newY","corrPos","isTouchDevice","offset2","bgGradient","darker","supportsSnapToHelper","ctrl","SVGFigure","SetFigure","svg","setSVG","getSVG","createSet","importSVG","svgNodes","newSVGNodes","oldSVG","rawSVG","svgDOM","_dimensionReadFromJSON","findStyle","element","tagName","substr","nodeName","nodeValue","exec","$1","$2","r","circle","ellipse","path","x1","y1","x2","y2","points","polygon","image","childNodes","firstChild","nodeType","subShape","text","subAttr","getBBox","nextSibling","error","alert","primary","all","setPrimary","checkDescendant","figureToCheck","isEmpty","expand","addRecursive","addAll","getAssignedFigures","reverse","originalWidth","originalHeight","scaleX","scaleY","strokeScale","applyAlpha","s","before","rs","getPorts","bb","VectorFigure","Node","dasharray","strokeBeforeGlow","glowIsActive","setDashArray","setRadius","getDashArray","getRadius","getBackgroundColor","dashPattern","Command","label","getLabel","canExecute","cancel","undo","redo","CommandAdd","CommandAddVertex","newPoint","removeVertexAt","insertVertexAt","CommandAssignFigure","assignedConnections","isNode","oldBoundingBox","assignFigure","oldComposite","unassignFigure","stickFigures","CommandAttr","newAttributes","oldAttributes","CommandBoundingBox","newBoundingBox","equals","CommandCollection","commandLabel","commands","labels","unique","canExec","cmd","setConnection","getConnection","optionalCallback","removedParentEntry","indexOfChild","CommandDeleteGroup","batchDelete","CommandUngroup","CommandGroup","Group","setStartPosition","CommandMoveConnection","setTranslation","CommandMoveLine","CommandMoveVertex","setIndex","origPoint","updatePosition","setVertex","oldVertices","newVertices","setVertices","con","oldSourcePort","oldTargetPort","setNewPorts","newSourcePort","newTargetPort","CommandRemoveVertex","CommandReplaceVertices","originalVertices","oldWidth","oldHeight","newWidth","newHeight","CommandRotate","oldAngle","newAngle","rotate","portRelayoutRequired","undostack","redostack","maxundo","transactionCommand","eventListeners","setUndoLimit","notifyListeners","POST_EXECUTE","PRE_EXECUTE","startTransaction","isInTransaction","commitTransaction","pop","PRE_UNDO","POST_UNDO","PRE_REDO","POST_REDO","getRedoLabel","getUndoLabel","canRedo","canUndo","listener","CommandStackEventListener","stackChanged","removeEventListener","state","action","CommandStackEvent","size","POST_INIT","POST_MASK","PRE_MASK","details","getStack","getCommand","getDetails","isPreChangeEvent","MOVE_VERTEX","MOVE_VERTICES","MOVE_GHOST_VERTEX","RESET","ROTATE","ArrowDecorator","Decorator","st","backgroundColor","BarDecorator","CircleDecorator","_Color","DiamondDecorator","inverseLerp","X1","Y1","X2","Y2","px","py","nenner","zaehler","pointProjection","minx","maxx","miny","maxy","U","pow","distance","projlenSq","dotprod","lenSq","bx","by","bw","bh","setBoundary","adjustBoundary","PositionConstants","getDistance","translated","factor","scaled","getScaled","subtract","that","dot","cross","lerp","t","Ray","isHorizontal","similarity","otherRay","getAveraged","resize","dw","dh","setBounds","getLeft","getRight","getTop","getBottom","getTopLeft","getTopCenter","getTopRight","getCenterLeft","getCenterRight","getBottomLeft","getBottomCenter","getCenter","getBottomRight","moveInside","newRect","pointOrRectangle","cw","ch","ow","oh","oct","determineOctant","r2","HISTERESE","current","DIRECTION_UP","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_DOWN","o","isInside","intersects","x11","y11","x12","y12","x21","y21","x22","y22","intersectionWithLine","v","toJSON","Util","insetPoint","distanceFromStart","vx","vy","localDistance","_default","io","Reader","unmarshal","Writer","marshal","resultCallback","formatXml","xml","formatted","reg","pad","indent","match","padding","json","JSON","parse","createFigureFromElement","createFigureFromType","val","getPort","base64Content","Base64","encode","stringify","canvg","png","cropBoundingBox","canvasState","origPos","outerHTML","zoom","XMLSerializer","serializeToString","find","canvasDomNode","append","fullSizeCanvas","ignoreMouse","ignoreAnimation","renderCallback","sourceX","sourceY","sourceWidth","sourceHeight","croppedCanvas","createElement","getContext","drawImage","dataUrl","toDataURL","base64Image","img","CenterEdgeConnectionAnchor","ref","dir","center","getBox","ChopboxConnectionAnchor","reference","FanConnectionAnchor","separation","ray","xSeparation","ySeparation","intersections","reduce","previous","p0","ShortesPathConnectionAnchor","Oval","CircuitConnectionRouter","ManhattanConnectionRouter","setBridgeRadius","setVertexRadius","abortRoutingOnFirstVertexNode","LineSelectionFeedbackPolicy","vertexNodes","vertexRadius","setJunctionRadius","bridgeRadius","bridge_LR","bridge_RL","route","fromPt","fromDir","toPt","toDir","_route","intersectionsASC","intersectionsDESC","intersectionForCalc","ps","oldP","bridgeWidth","bridgeCode","lastVertexNode","interP","hit","otherZ","vertexNode","exclude","ConnectionRouter","_paint","inset","adjust","toFixed","lastP","canRemoveVertexAt","canRemoveSegmentAt","verticesSet","DirectRouter","invalidate","addPoint","FanConnectionRouter","routeCollision","midPoint","bendPoint","InteractiveManhattanConnectionRouter","OrthogonalSelectionFeedbackPolicy","_routingMetaData","routedByUserInteraction","halfRoute","MINDIST","vertexCount","vertex","startMoved","endMoved","segmentCount","tmpConn","vertices","draggedSegment","getVertex","getSegments","lp0","lp1","routingMetaData","ManhattanBridgedConnectionRouter","BRIDGE_HORIZONTAL_LR","BRIDGE_HORIZONTAL_RL","floor","TOL","TOLxTOL","TOGGLE_DIST","UP","RIGHT","DOWN","LEFT","xDiff","yDiff","ROUTER_RECTS","MazeConnectionRouter","useSpline","useSimplify","useSimplifyValue","useDebug","useShift","portOutletOffset","finder","PF","JumpPointFinder","allowDiagonal","dontCrossCorners","shift","oldToPt","oldFromPt","getAdjustedPoint","grid","generateNoGoGrid","findPath","isWalkableAt","svgPathBefore","adjustPath","pt","spline","CubicSpline","splinePoints","generate","simplify","oneShift2","canvasWidth","canvasHeight","Grid","box","r_orig","b_orig","setWalkableAt","adjustment","getSquareDistance","getSquareSegmentDistance","simplifyRadialDistance","sqTolerance","prevPoint","newPoints","simplifyDouglasPeucker","maxSqDist","sqDist","markers","Uint8Array","firstStack","lastStack","tolerance","highestQuality","MuteableManhattanConnectionRouter","rowsUsed","colsUsed","constraints","reservedInfo","startPoint","endPoint","average","startNormal","getStartDirection","endNormal","getEndDirection","positions","horizontal","isCycle","next","trial","findFirstFigureAtStraightLine","EMPTY_LIST","getExcludingFigures","processPositions","getColumnNear","n","proximity","reserveColumn","getRowNear","reserveRow","removeReservedLines","prev","rInfo","reservedRows","reservedCols","column","info","row","getConstraint","setConstraint","constraint","excluding","col","getMidpoint","RubberbandRouter","thickness","uv","uv2","strength","second","third","start90","start270","first90","first270","second90","second270","third90","third270","end90","end270","SketchConnectionRouter","VertexRouter","VertexSelectionFeedbackPolicy","startAnchor","endAnchor","BottomLocator","Locator","targetBoundingBox","CenterLocator","DraggableLocator","PortLocator","dividerFactor","thisNAME","portIndex","applyConsiderRotation","LeftLocator","margin","ManhattanMidpointLocator","segmentIndex","ParallelMidpointLocator","setDistance","nx","ny","radian","rotAnchor","rotCenterOfLabel","xm","ym","cos","sin","PolylineMidpointLocator","halfW","halfH","rotAngle","m","matrix","ratio","RightLocator","SmartDraggableLocator","boundedCorners","dist","xOffset","yOffset","calcBoundingCorner","i_parent","i_child","parentVertices","childVertices","TopLocator","XYAbsPortLocator","XYRelPortLocator","mesh","ExplodeLayouter","MeshLayouter","MIN_MARGIN","figureToAdd","changes","dis","currentOctChanges","ProposedMeshChange","r1","uid","Date","autoResize","defaults","onResize","onBeforeResize","onAfterResize","animate","complete","extraSpace","maxHeight","maxWidth","config","resizableFilterSelector","AutoResizer","el","toLowerCase","previousScrollTop","overflowY","apply","cloneCSSProperties","cloneCSSValues","overflow","fn","check","proxy","setTimeout","createClone","removeAttr","whiteSpace","immediate","injectClone","prevValue","cloneWidth","currentWidth","removeData","cloneContainer","jQuery","support","htmlMenuitem","htmlCommand","eventSelectstart","documentElement","widget","_cleanData","cleanData","elems","elem","triggerHandler","$currentTrigger","initialized","$win","counter","namespaces","menus","types","selector","trigger","autoHide","delay","reposition","determinePosition","$menu","my","at","of","collision","outerHeight","outerWidth","opt","bottom","right","positionSubmenu","animation","noop","items","hoveract","timer","pageX","pageY","abortevent","stopImmediatePropagation","contextmenu","$this","hasClass","build","built","isEmptyObject","Error","$trigger","op","click","Event","mousedown","button","mouseup","mouseenter","$related","relatedTarget","$document","closest","mousemove","mouseleave","clearTimeout","layerClick","$window","triggerAction","elementFromPoint","$layer","has","one","contextMenu","keyStop","isInput","$selected","blur","prop","$parent","itemdata","String","fromCharCode","toUpperCase","accesskeys","$node","prevItem","$s","$children","$prev","$round","itemMouseleave","itemMouseenter","$input","focus","nextItem","$next","focusInput","contextMenuRoot","blurInput","menuMouseenter","hovering","menuMouseleave","itemClick","contextMenuKey","isFunction","callbacks","hasOwnProperty","update","inputClick","hideMenu","force","focusItem","siblings","blurItem","removeClass","$t","zin","$tt","zindex","layer","$label","accesskey","ak","aks","splitAccesskey","_name","hasTypes","inputs","selected","prependTo","radio","options","icon","nested","display","ceil","andSelf","$item","disabled","fixedPosition","inputLabel","menuChildren","operation","$context","_hasContext","ns","$visibleMenu","fromMenu","setInputValues","getInputValues","dimetric","arrow","note","diagram","flowchart","analog","pert","navigator","platform","EditPolicy","host","SingleSelectionPolicy","isInsideMode","rect1","rect2","intersectsMode","decision","boundingBoxFigure1","boundingBoxFigure2","canDrawBoundingBox","oldSelection","setDecisionMode","useIntersectionMode","currentSelection","mouseMovedDuringMouseDown","canDragStart","delegated","mouseDraggingElement","mouseDownElement","draggingLineCommand","draggingLine","fakeDragX","fakeDragY","handleRect","dash","LineResizeHandle","selectionRect","CanvasPolicy","mouseX","mouseY","createMonochromGif","gif","red","green","blue","bit","byte_","writeBit","chunklen","CoronaDecorationPolicy","DecorationPolicy","startDragX","startDragY","diameterToBeFullVisible","diameterToBeVisible","sumDiameter","setDiameterToBeVisible","setDiameterToBeFullVisible","getDiameterToBeVisible","getDiameterToBeFullVisible","__origAlpha","updatePorts","connectInquirer","connectIntent","Hub","inputConnections","outputConnections","ExtendedKeyboardPolicy","FadeoutDecorationPolicy","DEFAULT_FADEOUT_DURATION","DEFAULT_ALPHA_DECREMENT","alphaDec","hidePortsCounter","portDragging","duringHide","GhostMoveSelectionPolicy","ghostRectangle1","ghostRectangle2","sel","resetPorts","_newPos","draggingElement","redrawConnection","inter","PanningSelectionPolicy","area","ReadOnlySelectionPolicy","ShowChessboardEditPolicy","GRID_COLOR","GRID_WIDTH","oldBg","setGrid","onZoomCallback","emitterFigure","zoomData","gridColor","background","backgroundSize","backgroundPosition","ShowDimetricGridEditPolicy","shapes","setGridColor","props","angle26","atan","angle153","cos30","sin30","cos150","sin150","setStart","setFinish","ShowDotEditPolicy","DOT_COLOR","DOT_RADIUS","DOT_DISTANCE","dotDistance","dotRadius","dotColor","ShowGridEditPolicy","DEFAULTS","gridWidth","gridStroke","SnapToCenterEditPolicy","SNAP_THRESHOLD","FADEOUT_DURATION","centers","horizontalGuideLines","verticalGuideLines","hideHorizontalGuides","hideVerticalGuides","modifiedPos","originalPos","allowXChanges","allowYChanges","inputCenter","snapHorizontal","snapped","showHorizontalGuides","diff","vertical","snapVertical","showVerticalGuides","populateCenters","candidates","snappedPoint","causedFigure","fast","SnapToDimetricGridEditPolicy","snapPoint","g","CENTER_H","CENTER_V","NORTH_SOUTH","EAST_WEST","setLineColor","getLineColor","SnapToGeometryEditPolicy","rows","cols","vline","hline","hideVerticalLine","hideHorizontalLine","snapDirections","edge","showVerticalLine","showHorizontalLine","inputBounds","snapRectangle","bounds","resultBounds","topLeft","bottomRight","snapOrientation","inputPoint","resultPoint","populateRowsAndCols","rightCorrection","getCorrectionFor","leftCorrection","bottomCorrection","topCorrection","location","entries","side","resultMag","magnitude","removeAll","causedBox","causedCenter","fromY","maxLength","yLength","snappedBox","fromX","xLength","SnapToGridEditPolicy","showGrid","renderer","SnapToInBetweenEditPolicy","populateBounds","intersectionPoint","leftIntersections","leftInputPoint","causedBBox","rightIntersections","rightInputPoint","snappedRect","leftSide","rightSide","topIntersections","topInputPoint","bottomIntersections","bottomInputPoint","topSide","bottomSide","snapTopLeft","snapTopRight","snapBottomRight","SnapToVerticesEditPolicy","VertexResizeHandle","correction","vertexResizeHandle","diffx","diffy","SNAP","snappedPos","_shifty","debouncedZoomedCallback","_debounce","__wheelZoom","newZoom","client","_zoom","scrollWidth","centerY","centerX","Tweenable","tween","to","easing","step","params","finish","setViewBox","coordsAfter","wait","timeout","callNow","later","z","viewBoxWidth","viewBoxHeight","port1","beeline","pulse","tempConnection","ripple","setEndPosition","setRouter","policies","_arg","anim","circle1","circle2","anim1","repeat","Infinity","anim2","currentTarget","de","ct","PortFeedbackPolicy","onHoverLeave","onHoverEnter","OrthogonalConnectionCreatePolicy","getRouter","beforeVertex","lastVertex","portPos","lastSegmentDir","orthogonal","xDist","AntSelectionFeedbackPolicy","isPrimarySelection","_updateBeeLine","projection","center1","center2","BigRectangleSelectionFeedbackPolicy","BusSelectionFeedbackPolicy","r4","r6","r8","xPos","yPos","FigureEditPolicy","moveCallback","originalAlpha","GlowSelectionFeedbackPolicy","HBusSelectionFeedbackPolicy","HorizontalEditPolicy","RaftSelectionFeedbackPolicy","RaftResizeHandle","dashArray","r3","r5","r7","constRect","diffW","diffH","ResizeSelectionFeedbackPolicy","RoundRectangleSelectionFeedbackPolicy","SlimSelectionFeedbackPolicy","VBusSelectionFeedbackPolicy","GhostVertexResizeHandle","VerticalEditPolicy","WidthSelectionFeedbackPolicy","LineStartResizeHandle","LineEndResizeHandle","p_m1","p3","resizeWidthHalf","resizeHeightHalf","removeSegment","splitSegment","newSegLength","np1","np2","np3","np4","segment","hitSegment","startHandle","endHandle","ElasticStrapFeedbackPolicy","connectionLine","hoverFiger","tweenable","growFactor","allPorts","__beforeInflate","dispose","OpAmp","MyInputPortLocator","calcY","inputLocator","createPort","ResistorBridge","MyOutputPortLocator","outputLocator","ResistorVertical","VoltageSupplyHorizontal","VoltageSupplyVertical","CalligrapherArrowDownLeft","CalligrapherArrowLeft","Arc","startAngle","endAngle","a1","a2","w2","h2","getDiameter","setCenter","Diamond","Polygon","resetVertices","precursorIndex","maxOpacity","Image","setPath","getPath","src","Label","FONT_FALLBACK","cachedWidth","cachedHeight","cachedMinWidth","cachedMinHeight","fontSize","fontColor","fontFamily","outlineStroke","outlineColor","textAlign","bold","editor","setText","installEditor","setOutlineStroke","setOutlineColor","setFontFamily","setFontSize","setFontColor","setPadding","setBold","getText","getOutlineStroke","getOutlineColor","getFontFamily","getFontSize","getFontColor","getPadding","isBold","lastAppliedLabelRotation","lastAppliedTextAttributes","clearCache","lattr","calculateTextAttr","attrDiff","ts","getTextAlign","setTextAlign","font","polySides","oddNodes","pi","pj","DEFAULT_COLOR","isGlowing","outlineVisible","dasharrayOffset","animateDirection","glowColor","glowStrokeSize","startX","setStartX","startY","setStartY","endX","setEndX","endY","setEndY","setCorona","setGlowStrokeSize","setAnmiate","setAnimateDirection","setDasharrayOffset","getCorona","getGlowStrokeSize","getAnmiate","getAnimateDirection","getDasharrayOffset","isFaked","setGlowColor","getGlowColor","getAnimate","setAnimate","_lineColor","_stroke","minX","minY","getStartX","getStartY","getEndX","getEndY","getLength","getAngle","percentage","segments1","segments2","s1","s2","b1","b2","ua_t","ub_t","u_b","ua","ub","getRelatedPort","getOppositePort","objPos","getIndex","origin","mDir","mDiff","t_a","t_b","removedPoint","lastDist","lastValidLength","maxX","maxY","begin","modStart","modEnd","updateBoundingBox","fracWidth","fracHeight","thisX","thisY","rot","pattern","Text","cachedWrappedAttr","wrappedTextAttr","longestWord","arg1","arg2","svgText","words","abc","letterWidth","l","LINE_COLOR","isDead","getEnclosingAngle","trans","acos","Composite","assignedFigures","Jailhouse","Raft","WeakComposite","aboardFigures","getAboardFigures","dontApplyToChildren","aboardedFigures","recalculate","raftBoundingBox","getNextComposite","figureToTest","nextComposite","dontMoveChildren","Diagram","cache","setData","getData","Pie","COLORS","TWO_PI","d2","sum","_sum","pie","offsetAngle","seg","drawSegment","polarPath","theta","rotation","resolution","Sparkline","pathString","prev_pt","idx","toCoords","Document","amplitude","calcPath","w4","Acw","Icon","Alarm","Anonymous","Apple","Apps","ArrowDown","ArrowLeft","ArrowLeft2","ArrowRight","ArrowRight2","ArrowUp","Aumade","BarChart","BioHazard","Book","Bookmark","Books","Bubble","Bug","Calendar","Cart","Ccw","Chat","Check","Chrome","Clip","Clock","Cloud","Cloud2","CloudDown","CloudUp","Cloudy","Code","CodeTalk","CommandLine","Connect","Contract","Crop","Cross","Cube","Customer","Db","Detour","Disconnect","DockBottom","DockLeft","DockRight","DockTop","Download","Dry","Employee","End","Ethernet","Exchange","Expand","Export","Fave","Feed","Ff","Firefox","Flag","Flickr","Folder","Font","Fork","ForkAlt","FullCube","Future","GRaphael","Gear","Gear2","GitHub","GitHubAlt","Glasses","Globe","GlobeAlt","GlobeAlt2","Hail","Hammer","HammerAndScrewDriver","HangUp","Help","History","Home","IMac","offsetY","offsetX","Icons","Ie","Ie9","Import","InkScape","Ipad","Iphone","JQuery","Jigsaw","Key","Lab","Lamp","Lamp_alt","Landing","Landscape1","Landscape2","LineChart","Link","LinkedIn","Linux","List","Location","Lock","Locked","Magic","Magnet","Mail","Man","Merge","Mic","MicMute","Minus","NewWindow","No","NoMagnet","NodeJs","Notebook","Noview","Opera","Package","Page","Page2","Pallete","Palm","Paper","Parent","Pc","Pen","Pensil","People","Phone","Photo","Picker","Picture","PieChart","Plane","Plugin","Plus","Power","Ppt","Printer","Quote","Rain","ReflectH","ReflectV","Refresh","Resize2","Rotate","Ruler","Run","Rw","Safari","ScrewDriver","Search","Sencha","Settings","SettingsAlt","Shuffle","Skull","Skype","SlideShare","Smile","Smile2","Snow","Split","Star","Star2","Star2Off","Star3","Star3Off","StarOff","Start","Sticker","Stop","StopWatch","Sun","Svg","TShirt","Tag","TakeOff","Talke","Talkq","Thunder","Trash","Twitter","TwitterBird","Umbrella","Undo","Unlock","Usb","User","Users","Video","View","Vim","Volume0","Volume1","Volume2","Volume3","Warning","WheelChair","Windows","Woman","Wrench","Wrench2","Wrench3","ZoomIn","ZoomOut","FlexGridLayout","Layout","cellLocator","gridDef","layoutRequired","_layout","cell","__cellConstraint","valign","align","debugLines","def_cols","def_rows","min_height","min_width","minGridWidth","minGridHeight","hResizeable","vResizeable","resizeListener","columns","cellWidthFromDef","cellConstraint","rowspan","colspan","paintDebugGrid","eHeight","cHeight","cellHeight","_getGridWidth","_getGridHeight","gridHeight","cellWidth","cellX","cellY","posX","posY","newLine","def","HorizontalLayout","gap","setGap","getGap","markup","StackLayout","visibleLayer","setVisibleLayer","getVisibleLayer","_recursiveWidth","_recursiveHeight","TableLayout","DUMMY_CELL","__cell","getCellLayout","widthOffset","layoutInfos","setCellPadding","calculateLayout","getCellPadding","removeRow","removedRow","splice","addRow","figuresToAdd","columnCount","missingColumns","setCellVerticalAlign","getCellVerticalAlign","setCellAlign","getCellAlign","layouts","rowCount","newLayoutInfos","layoutWidths","layoutHeights","VerticalLayout","Between","Fulcrum","_orig_hitTest","setConnectionDirStrategy","HorizontalBus","BACKGROUND_COLOR","setLabel","_port","CONNECTION_DIR_STRATEGY","getHybridPort","strategy","dirStrategy","inputPorts","outputPorts","hybridPorts","persistPorts","cachedPorts","setPersistPorts","getPersistPorts","__initialVisibilityState","recursive","getInputPorts","getOutputPorts","excludePorts","clonePort","addPort","portName","getInputPort","portNameOrIndex","getOutputPort","removePort","newPort","c_size","oldCanvas","layoutPorts","relatedPort","locatorAttr","VerticalBus","labelString","mustAdjustTheAngel","PostIt","Activity","mementoValues","darkerBgColor","earlyStartLabel","createLabel","durationLabel","LabelEditor","onCommit","setDuration","earlyEndLabel","activityLabel","LabelInplaceEditor","inputPort","getActivity","anyValue","outputPort","lateStartLabel","stackLabel","lateEndLabel","getEarlyStart","lateFinish","setLateFinish","getEarlyEnd","latestEarlyEnd","parentActivity","lateStart","txt","innerCircle","State","Slider","Widget","DEFAULT_COLOR_THUMB","DEFAULT_COLOR_BG","currentValue","slideBoundingBox","panning","thumbGrow","thumb","onValueChange","panningX","panningY","grow","sliderWidth","figurePos","sliderPos","thumbX","configuration","onCancel","onStart","newText","prompt","commitCallback","commit","objs","avoidDuplicates","concat","elements","includes","deep","newVector","overwriteElementAt","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","encodeByteArray","input","opt_webSafe","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","stringToByteArray","decode","charToByteMap","charAt","byte4","str","charCodeAt","hashString","hex2rgb","getHTMLStyle","getRed","getGreen","getBlue","getIdealTextColor","temp_elem","appendChild","getComputedStyle","removeChild","int2hex","round","fraction","fadeTo","pc","callback_func","callback_force","aps","log_level","log_methods","pass_methods","logs","method","level","log_arr","exec_callback","is_level","firebug","setLevel","setCallback","parentKey","pathList","grandParent","grandParentKey","addObj","constructor","paths","propertyIsEnumerable","obj1","obj2","v1","v2","ensureDefault","attribute","ontouchmove","pointString","poly","random","toString","extended","global","BezierSpline","Spline","controlPoints","parts","cp","blend","CatmullRomSpline","___CSS_LOADER_EXPORT___","cssWithMappingToString","content","needLayer","modules","media","dedupe","supports","alreadyImportedModules","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","sourceMapping","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","process","hr","uptime","getTime","vendors","suffix","raf","caf","queue","frameDuration","_now","cancelled","polyfill","requestAnimationFrame","cancelAnimationFrame","color_string","ok","simple_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","color_defs","re","example","bits","processor","channels","toRGB","toRGBA","toHex","getHelpXML","examples","sc","list_item","list_color","RGBColor","example_div","cssText","createTextNode","list_item_value","execScript","attachEvent","eval","Scene","sn","kt","interpolate","nn","processTweens","dt","setBezierFunction","shouldScheduleUpdate","bt","Pt","unsetBezierFunction","L","bounce","D","bouncePast","q","easeFrom","B","easeFromTo","Q","easeInBack","A","easeInCirc","easeInCubic","easeInExpo","easeInOutBack","T","easeInOutCirc","P","easeInOutCubic","easeInOutExpo","S","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","u","easeInQuart","easeInQuint","easeInSine","easeOutBack","E","easeOutBounce","M","easeOutCirc","easeOutCubic","easeOutExpo","O","easeOutQuad","easeOutQuart","easeOutQuint","_","easeOutSine","easeTo","N","elastic","I","linear","swingFrom","swingFromTo","F","swingTo","C","afterTween","Jt","beforeTween","Ht","doesApply","Wt","tweenCreated","Gt","R","displayName","formulas","V","TypeError","W","enumerable","configurable","writable","defineProperty","G","Symbol","iterator","H","J","K","getOwnPropertySymbols","getOwnPropertyDescriptor","X","Y","getOwnPropertyDescriptors","defineProperties","Z","tt","nt","et","rt","it","ot","ut","ft","webkitRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","mozCancelRequestAnimationFrame","mozRequestAnimationFrame","lt","ht","vt","yt","_t","_timestamp","_currentState","_delay","_duration","_targetState","_hasEnded","_filters","_render","_data","_applyFilter","_originalState","_easing","_next","mt","gt","wt","Ot","St","_previous","jt","Promise","toStringTag","_config","_resolve","_reject","_start","_promiseCtor","setConfig","_isPlaying","_pausedAtTime","_resume","promise","render","attachment","_scheduleId","filters","_promise","then","catch","finally","setScheduleFunction","Mt","At","Et","Tt","It","Ft","xt","Ct","Dt","qt","Qt","Bt","Nt","Rt","zt","Ut","Lt","Vt","_tokenData","formatString","unshift","chunkNames","Kt","Xt","Yt","Zt","tn","en","rn","un","an","WeakMap","tweenables","some","isPlaying","pause","resume","token","globalThis","_typeof","mulTable","shgTable","processImage","blurAlphaChannel","useOffset","skipStyles","getElementById","dimensionType","clearRect","naturalWidth","naturalHeight","processCanvasRGBA","processCanvasRGB","getImageDataFromCanvas","topX","topY","getImageData","imageData","processImageDataRGBA","putImageData","stackEnd","pixels","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stackIn","stackOut","yw","yi","mulSum","shgSum","pr","pg","pb","pa","_i","rInSum","gInSum","bInSum","aInSum","rOutSum","gOutSum","bOutSum","aOutSum","rSum","gSum","bSum","aSum","_i2","rbs","paInitial","_a2","_p","_stackOut","_r","_g","_b","_a","_x","_pr","_pg","_pb","_pa","_rOutSum","_gOutSum","_bOutSum","_aOutSum","_rSum","_gSum","_bSum","_aSum","_i3","yp","_gInSum","_bInSum","_aInSum","_rInSum","_i4","_rbs","_y","_p2","processImageDataRGB","_i5","_i6","_x2","_pr2","_pg2","_pb2","_rOutSum2","_gOutSum2","_bOutSum2","_rSum2","_gSum2","_bSum2","_i7","_rInSum2","_gInSum2","_bInSum2","_i8","_y2","instance","Constructor","_classCallCheck","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","indexByIdentifier","sourceMap","references","updater","addElementStyle","byIndex","api","newObj","lastIdentifiers","newList","newLastIdentifiers","_index","memo","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","styleElement","nonce","removeStyleElement","styleSheet","svgPathdata","stackblurCanvas","_interopDefaultLegacy","requestAnimationFrame__default","RGBColor__default","freeze","offscreen","DOMParser","DOMParserFallback","preset","createCanvas","OffscreenCanvas","createImage","url","response","fetch","blob","createImageBitmap","Reflect","deleteProperty","loadImage","compressSpaces","trimLeft","trimRight","toNumbers","matches","toMatrixValue","numbers","allUppercase","normalizeAttributeName","parseExternalUrl","urlMatch","normalizeColor","startsWith","rgbParts","num","isFloat","attributeRegex","idRegex","classRegex","pseudoElementRegex","pseudoClassWithBracketsRegex","pseudoClassRegex","elementRegex","findSelectorMatch","regex","getSelectorSpecificity","specificity","currentSelector","PSEUDO_ZERO","vectorMagnitude","vectorsRatio","vectorsAngle","CB1","CB2","CB3","CB4","QB1","QB2","QB3","Property","empty","separator","getString","hasValue","zeroIsValue","isString","regexp","isUrlDefinition","isPixels","asString","endsWith","getNumber","isNormalizedColor","getDpi","getRem","rootEmSize","getEm","emSize","getUnits","getPixels","axisOrIsFontSize","processPercent","axis","isFontSize","viewPort","screen","computeSize","getMilliseconds","getRadians","getDefinition","definitions","getFillStyleDefinition","createGradient","ctx","createPattern","getHrefAttribute","patternTransform","getAttribute","getTextBaseline","textBaselineMapping","addOpacity","commas","ViewPort","viewPorts","setCurrent","removeCurrent","getDefault","getCurrent","DEFAULT_VIEWPORT_WIDTH","DEFAULT_VIEWPORT_HEIGHT","defaultValue","parseScale","parsePath","pathPoints","angleTo","atan2","applyTransform","xp","Mouse","isWorking","working","onclick","onmousemove","hasEvents","runEvents","eventElements","run","checkPath","isPointInPath","checkBoundingBox","isPointInBox","mapXY","offsetLeft","offsetTop","offsetParent","scrollX","scrollY","eventTarget","defaultWindow","defaultFetch$1","Screen","checker","waits","ready","readyPromise","resolve","isReady","isReadyLock","every","resolveReady","setDefaults","strokeStyle","lineCap","lineJoin","miterLimit","aspectRatio","desiredWidth","desiredHeight","refX","refY","clip","clipX","clipY","cleanAspectRatio","aspectRatioAlign","aspectRatioMeetOrSlice","meetOrSlice","scaleMin","scaleMax","finalDesiredWidth","finalDesiredHeight","refXProp","refYProp","hasRefs","scaledClipX","scaledClipY","beginPath","moveTo","lineTo","closePath","isMeetMinY","isSliceMaxY","isMeetMinX","isSliceMaxX","enableRedraw","ignoreDimensions","ignoreClear","forceRedraw","scaleWidth","scaleHeight","mouse","FRAMERATE","tick","shouldUpdate","intervalId","animations","isFirstRender","widthStyle","getStyle","heightStyle","cWidth","clientWidth","clientHeight","viewBox","xRatio","yRatio","transformStyle","defaultFetch","MAX_VIRTUAL_PIXELS","DefaultDOMParser","Parser","resource","parseFromString","load","parser","checkDocument","err","parserError","getElementsByTagName","textContent","Translate","unapply","applyToPoint","originX","originY","tx","ty","rad","transformOrigin","Scale","scaleSize","Matrix","det","Skew","skew","super","SkewX","SkewY","Transform","fromElement","transformOriginXProperty","transformOriginYProperty","transforms","transform1","parseTransform","TransformType","transformTypes","skewX","skewY","Element","createIfNotExists","href","skipAncestors","styles","parentStyle","save","mask","applyEffects","setContext","renderChildren","clearContext","restore","clipPathStyleProp","addChild","childNode","ignoreChildTypes","matchesSelector","styleClasses","styleClass","addStylesFromStyleDefinition","stylesSpecificity","styleProp","existingSpecificity","removeStyles","ignoreStyles","toRestore","restoreStyles","isFirstChild","captureTextNodes","animationFrozen","animationFrozenValue","textNode","UnknownElement","wrapFontFamily","trimmed","prepareFontStyle","fontStyle","targetFontStyle","prepareFontWeight","fontWeight","targetFontWeight","inherit","fontVariant","part","variants","weights","inheritFont","BoundingBox","addX","addY","addBoundingBox","sumCubic","bezierCurveAdd","forX","b2ac","t1","t2","addBezierCurve","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","addQuadraticCurve","cp1x","cp1y","cp2x","cp2y","NaN","RenderedElement","calculateOpacity","opacityStyle","fromMeasure","fillStyleProp","fillOpacityStyleProp","strokeStyleProp","strokeOpacityProp","fillStyle","strokeWidthStyleProp","newLineWidth","lineWidth","strokeLinecapStyleProp","strokeLinejoinStyleProp","strokeMiterlimitProp","strokeDasharrayStyleProp","strokeDashoffsetProp","gaps","setLineDash","webkitLineDash","mozDash","lineDashOffset","webkitLineDashOffset","mozDashOffset","modifiedEmSizeStack","fontStyleProp","fontStyleStyleProp","fontVariantStyleProp","fontWeightStyleProp","fontSizeStyleProp","fontFamilyStyleProp","globalAlpha","popEmSize","TextElement","textBaseline","initializeCoordinates","leafTexts","textChunkStart","POSITIVE_INFINITY","NEGATIVE_INFINITY","getTElementBoundingBox","adjustChildCoordinatesRecursive","childBoundingBox","getChildBoundingBox","inheritFontSize","measureText","getGlyph","char","glyph","isArabic","prevChar","nextChar","arabicForm","arabicGlyphs","glyphs","missingGlyph","getTextFromNode","lastIndex","renderTElementChildren","renderChild","renderText","customFont","unitsPerEm","fontFace","ctxFont","isRTL","lw","horizAdvX","fillText","strokeText","applyAnchoring","firstElement","textAnchor","adjustChildCoordinatesRecursiveCore","textParent","i1","adjustChildCoordinates","xAttr","yAttr","dxAttr","dyAttr","Boolean","getInheritedAttribute","i2","i3","measureCache","measure","measureTargetText","targetText","parentAttr","TSpanElement","TextNode","PathParser","SVGPathData","reset","previousCommand","control","angles","isEnd","getPoint","xProp","yProp","makeAbsolute","getAsControlPoint","getAsCurrentPoint","getReflectedControlPoint","CURVE_TO","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","relative","addMarker","priorTo","addMarkerAngle","getMarkerPoints","getMarkerAngles","PathElement","pathParser","MOVE_TO","pathM","LINE_TO","pathL","HORIZ_LINE_TO","pathH","VERT_LINE_TO","pathV","pathC","pathS","pathQ","pathT","ARC","pathA","CLOSE_PATH","pathZ","_ctx","getMarkers","fillRuleStyleProp","setTransform","markersLastIndex","markerStartStyleProp","markerMidStyleProp","markerEndStyleProp","marker","controlPoint","currentPoint","bezierCurveTo","quadraticCurveTo","rX","rY","xRot","lArcFlag","sweepFlag","xAxisRotation","currp","cpp","centp","ad","ah","halfWay","sx","sy","arc","SVGElement","getPropertyValue","fontSizeProp","refXAttr","refYAttr","viewBoxAttr","preserveAspectRatio","widthAttr","heightAttr","styleAttr","originWidth","originHeight","preserveAspectRatioAttr","RectElement","rxAttr","ryAttr","KAPPA","CircleElement","EllipseElement","LineElement","getPoints","x0","y0","PolylineElement","PolygonElement","PatternElement","parentOpacityProp","patternSvg","patternCanvas","patternCtx","MarkerElement","orient","markerUnits","markerSvg","DefsElement","GElement","GradientElement","getGradientUnits","stopsContainer","inheritStopContainer","stops","gradient","getGradient","addParentOpacity","addColorStop","rootView","attributesToInherit","attributeToInherit","LinearGradientElement","isBoundingBoxUnits","createLinearGradient","RadialGradientElement","fx","fy","fr","createRadialGradient","StopElement","stopOpacity","stopColor","AnimateElement","getProperty","attributeType","attributeName","calcValue","initialUnits","progress","getProgress","newValue","initialValue","maxDuration","frozen","updated","typeAttr","values","lb","valuesAttr","AnimateColorElement","colorFrom","colorTo","AnimateTransformElement","from1","to1","transformFrom","transformTo","FontFaceElement","ascent","descent","GlyphElement","unicode","MissingGlyphElement","FontElement","fontFamilyStyle","arabicGlyph","TRefElement","AElement","hasText","open","node1","TextPathElement","dataArray","dTheta","psi","fs","setTextData","textDecoration","glyphInfo","partialText","getLetterSpacingAt","letterSpacingCache","findSegmentToFitChar","textFullWidth","fullPathWidth","spacesNumber","inputOffset","charI","glyphWidth","splineStep","textHeight","getEquidistantPointOnPath","dyX","dyY","measuresCache","chars","thisSpacing","parentSpacing","letterSpacing","textLen","dxSum","acc","cur","textWidth","getPathLength","startOffset","nextOffset","parsePathData","pathLength","pathCommands","nextCommandType","calcLength","commandType","getLineLength","getPointOnCubicBezier","getPointOnQuadraticBezier","inc","getPointOnEllipticalArc","getPointOnLine","rise","ix","iy","pRise","pRun","getPointOnPath","fullLen","cumulativePathLength","currentT","pct","p4x","p4y","cosPsi","sinPsi","buildEquidistantCache","inputStep","inputPrecision","precision","equidistantCache","targetDistance","Map","pathElement","dataUriRegex","ImageElement","loaded","loadSvg","atob","decodeURIComponent","subDocument","forkString","isSvg","images","SymbolElement","SVGFontLoader","fonts","fontNode","StyleElement","_1","cssParts","cssClasses","cssProps","cssProp","UseElement","tempSvg","oldParent","elementTransform","cachedElement","imGet","_height","imSet","m1","m2","m3","FeColorMatrixElement","includeOpacity","srcData","nr","ng","nb","na","MaskElement","ignoredStyles","maskCanvas","maskCtx","tmpCanvas","tmpCtx","globalCompositeOperation","fillRect","ClipPathElement","contextProto","getPrototypeOf","FilterElement","efd","extraFilterDistance","tmpCanvasWidth","tmpCanvasHeight","FeDropShadowElement","_width","FeMorphologyElement","FeCompositeElement","FeGaussianBlurElement","blurRadius","getUniqueId","canvasRGBA","TitleElement","DescElement","bindCreateImage","createImage1","anonymousCrossOrigin","forceAnonymousCrossOrigin","emSizeStack","uniqueId","isImagesLoaded","isFontsLoaded","createDocumentElement","elementType","ElementType","elementTypes","createCanvas1","createImage2","async","crossOrigin","reject","onload","onerror","_event","_source","_lineno","_colno","Canvg","svgDocument","fromString","fork","baseOptions","presets","setPrototypeOf","cX","cY","phi1","phi2","SVGPathDataTransformer","ROUND","TO_ABS","TO_REL","NORMALIZE_HVZ","NORMALIZE_ST","QT_TO_C","INFO","SANITIZE","LINE_COMMANDS","MATRIX","TRANSLATE","SCALE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","A_TO_C","ANNOTATE_ARCS","CLONE","CALCULATE_BOUNDS","DRAWING_COMMANDS","toAbs","toRel","normalizeHVZ","normalizeST","qtToC","aToC","sanitize","xSymmetry","ySymmetry","annotateArcs","curNumber","curCommandType","curCommandRelative","canParseCommandOrComma","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","curArgs","SyntaxError","getBounds","COMMAND_ARG_COUNTS","SVGPathDataParser","encodeSVGPath","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","nc"],"sourceRoot":""}